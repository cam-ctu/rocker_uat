
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-dotdotdot.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future:::testme("dotdotdot")
Test ‘dotdotdot’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future/testme/test-dotdotdot.R’

> library(future)
[08:07:34.378] Option 'future.startup.script': TRUE
[08:07:34.378] Future startup scripts considered: ‘.future.R’, ‘~/.future.R’
[08:07:34.378] Future startup scripts found: <none>

> library(listenv)

> for (cores in 1:availCores) {
+     message(sprintf("Testing with %d cores ...", cores))
+     options(mc.cores = cores)
+     message("*** Global a ..." ... [TRUNCATED] 
Testing with 1 cores ...
*** Global argument '...' ...
- plan('sequential') ...
[08:07:34.414] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.414] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:34.414] | : all.equal() for FutureStrategyList ...
[08:07:34.415] | : . New stack:
[08:07:34.415] | : . List of 1
[08:07:34.415] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.415] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.415] | : .   ..- attr(*, "init")= logi TRUE
[08:07:34.415] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.415] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.415] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.415] | : .   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.415] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.419] | : . Old stack:
[08:07:34.419] | : . List of 1
[08:07:34.419] | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.419] | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.419] | : .   ..- attr(*, "init")= logi TRUE
[08:07:34.419] | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.419] | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.419] | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.419] | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:34.419] | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.422] | : . Not identical
[08:07:34.422] | : . all.equal() for future ...
[08:07:34.422] | : . ' List of 2
[08:07:34.422] | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.422] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.422] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:34.422] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.422] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.422] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.422] | : . '   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.422] | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.422] | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.422] | : . '   ..- attr(*, "init")= logi TRUE
[08:07:34.422] | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.422] | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.422] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.422] | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:34.426] | : . all.equal() for future ... done
[08:07:34.426] | : all.equal() for FutureStrategyList ... done
[08:07:34.426] | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.426] | : List of future strategies:
[08:07:34.426] | : 1. sequential:
[08:07:34.426] | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.426] | :    - tweaked: FALSE
[08:07:34.426] | :    - call: plan(sequential)
[08:07:34.427] | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:34.427] plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
** Sum function 'A' with plan('sequential') ...
function (x, ...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, ...)
    }
    y
}
<bytecode: 0x563a59bffc88>
Arguments '...' exists: TRUE
[08:07:34.428] future(..., label = NULL) ...
[08:07:34.428] | lazy: FALSE
[08:07:34.428] | stdout: TRUE
[08:07:34.429] | conditions: [n=1] ‘condition’
[08:07:34.429] | gc: FALSE
[08:07:34.429] | earlySignal: FALSE
[08:07:34.429] | getGlobalsAndPackages() ...
[08:07:34.429] | : Searching for globals ...
[08:07:34.443] | : . globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[08:07:34.443] | : Searching for globals ... done
[08:07:34.443] | : Resolving globals: FALSE
[08:07:34.443] | : Tweak future expression to call with '...' arguments ...
[08:07:34.444] | : . {
[08:07:34.444] | : .     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:34.444] | : .     "# expression in do.call(), because function called uses '...'  "
[08:07:34.444] | : .     "# as a global variable                                         "
[08:07:34.444] | : .     do.call(function(...) {
[08:07:34.444] | : .         sum(x, ...)
[08:07:34.444] | : .     }, args = future.call.arguments)
[08:07:34.444] | : . }
[08:07:34.444] | : Tweak future expression to call with '...' arguments ... done
[08:07:34.444] | : Search for packages associated with the globals ...
[08:07:34.444] | : . Packages associated with globals: [1] ‘base’
[08:07:34.445] | : . Packages: [1] ‘base’
[08:07:34.445] | : Search for packages associated with the globals ... done
[08:07:34.445] | : Packages after dropping 'base': [0] 
[08:07:34.445] | : globals: [2] ‘x’, ‘future.call.arguments’
[08:07:34.445] | : packages: [0] 
[08:07:34.445] | getGlobalsAndPackages() ... done
[08:07:34.446] | run() for ‘Future’ (<unnamed-1>) ...
[08:07:34.446] | : state: ‘created’
[08:07:34.446] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.446] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:34.446] | : . ' function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.446] | : . '  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.446] | : . '  - attr(*, "init")= logi TRUE
[08:07:34.446] | : . '  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.446] | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.446] | : . '  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.446] | : . '  - attr(*, "call")= language plan(sequential)
[08:07:34.448] | : . ' init: TRUE
[08:07:34.449] | : . ' makeFutureBackend(<sequential>) ...
[08:07:34.449] | : . ' , Backend function: <‘NULL’>
[08:07:34.449] | : . ' , Evaluator tweak arguments: [n=0]
[08:07:34.449] | : . ' ,  list()
[08:07:34.449] | : . ' , Evaluator formal arguments: [n=2]
[08:07:34.449] | : . ' ,  list()
[08:07:34.449] | : . ' , Backend factory arguments: [n=2]
[08:07:34.450] | : . ' , Dotted pair list of 2
[08:07:34.450] | : . ' ,  $ gc         : logi FALSE
[08:07:34.450] | : . ' ,  $ earlySignal: logi FALSE
[08:07:34.451] | : . ' , Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:34.451] | : . ' makeFutureBackend(<sequential>) ... done
[08:07:34.451] | : . plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:34.451] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.451] | : Using SequentialFutureBackend ...
[08:07:34.451] | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:34.451] | : . Launching futures ...
[08:07:34.452] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:34.452] | : . ' , getFutureData() ...
[08:07:34.452] | : . ' , ; getFutureCore() ...
[08:07:34.452] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:07:34.452] | : . ' , ; getFutureCore() ... done
[08:07:34.452] | : . ' , ; getFutureCapture() ...
[08:07:34.452] | : . ' , ; getFutureCapture() ... done
[08:07:34.453] | : . ' , ; getFutureContext() ...
[08:07:34.453] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.453] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:07:34.453] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.453] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:07:34.453] | : . ' , ; getFutureContext() ... done
[08:07:34.453] | : . ' , getFutureData() ... done
[08:07:34.456] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.456] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:34.456] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.456] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.456] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.457] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:07:34.457] | : . ' , ; ` | New stack:
[08:07:34.457] | : . ' , ; ` | List of 1
[08:07:34.457] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.457] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.457] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:07:34.457] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.457] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.457] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.457] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.457] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.459] | : . ' , ; ` | Old stack:
[08:07:34.459] | : . ' , ; ` | List of 1
[08:07:34.459] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.459] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.459] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:07:34.459] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.459] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.459] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.459] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:07:34.459] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.459] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.459] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.459] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.462] | : . ' , ; ` | Not identical
[08:07:34.463] | : . ' , ; ` | all.equal() for future ...
[08:07:34.463] | : . ' , ; ` | : List of 2
[08:07:34.463] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.463] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.463] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.463] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:34.463] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.463] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.463] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.469] | : . ' , ; ` | all.equal() for future ... done
[08:07:34.469] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:07:34.470] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.470] | : . ' , ; ` List of future strategies:
[08:07:34.470] | : . ' , ; ` 1. sequential:
[08:07:34.470] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.470] | : . ' , ; `    - tweaked: FALSE
[08:07:34.470] | : . ' , ; `    - call: plan(sequential)
[08:07:34.470] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.470] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.471] | : . ' , assign_globals() ...
[08:07:34.471] | : . ' , List of 2
[08:07:34.471] | : . ' ,  $ x                    : int [1:2] 1 2
[08:07:34.471] | : . ' ,  $ future.call.arguments:List of 1
[08:07:34.471] | : . ' ,   ..$ : num 3
[08:07:34.471] | : . ' ,   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:34.471] | : . ' ,  - attr(*, "where")=List of 2
[08:07:34.471] | : . ' ,   ..$ x                    :<environment: 0x563a5b27d050> 
[08:07:34.471] | : . ' ,   ..$ future.call.arguments:<environment: 0x563a5b27d050> 
[08:07:34.471] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:34.471] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:07:34.471] | : . ' ,  - attr(*, "total_size")= num NA
[08:07:34.471] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:07:34.475] | : . ' , - copied ‘x’ to environment
[08:07:34.475] | : . ' , - copied ‘future.call.arguments’ to environment
[08:07:34.475] | : . ' , assign_globals() ... done
[08:07:34.477] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.477] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.477] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.477] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:07:34.478] | : . ' , ; ` | : New stack:
[08:07:34.478] | : . ' , ; ` | : List of 1
[08:07:34.478] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.478] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.478] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:34.478] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.478] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.478] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.478] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:34.478] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.478] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.478] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.478] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.481] | : . ' , ; ` | : Old stack:
[08:07:34.481] | : . ' , ; ` | : List of 1
[08:07:34.481] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.481] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.481] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:34.481] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.481] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.481] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.481] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:34.481] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.481] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.481] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.481] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.484] | : . ' , ; ` | : Identical
[08:07:34.484] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:07:34.484] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.484] | : . ' , ; ` | List of future strategies:
[08:07:34.484] | : . ' , ; ` | 1. sequential:
[08:07:34.484] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.484] | : . ' , ; ` |    - tweaked: FALSE
[08:07:34.484] | : . ' , ; ` |    - call: plan(sequential)
[08:07:34.485] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.485] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.486] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.489] | : . ' , SequentialFuture started (and completed)
[08:07:34.489] | : . ' , signalConditions() ...
[08:07:34.489] | : . ' , ; include = ‘immediateCondition’
[08:07:34.489] | : . ' , ; exclude = 
[08:07:34.489] | : . ' , ; resignal = FALSE
[08:07:34.489] | : . ' , ; Number of conditions: 6
[08:07:34.490] | : . ' , ;  int 6
[08:07:34.490] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.490] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.490] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.490] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.490] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.490] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.491] | : . ' , signalConditions() ... done
[08:07:34.491] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:34.491] | : . Launching futures ... done
[08:07:34.491] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:34.491] | : Using SequentialFutureBackend ... done
[08:07:34.491] | run() for ‘Future’ (<unnamed-1>) ... done
[08:07:34.491] future(..., label = NULL) ... done
[08:07:34.492] value() for SequentialFuture (<unnamed-1>) ...
[08:07:34.492] | signalConditions() ...
[08:07:34.492] | : include = ‘immediateCondition’
[08:07:34.492] | : exclude = 
[08:07:34.492] | : resignal = FALSE
[08:07:34.492] | : Number of conditions: 6
[08:07:34.492] | :  int 6
[08:07:34.493] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.493] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.493] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.493] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.493] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.493] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.493] | signalConditions() ... done
[08:07:34.493] | relay stdout ...
[08:07:34.494] | relay stdout ... done
[08:07:34.494] | check for misuse ...
[08:07:34.494] | check for misuse ... done
[08:07:34.494] | relay conditions ...
[08:07:34.494] | : Future state: ‘finished’
[08:07:34.494] | : signalConditions() ...
[08:07:34.494] | : . include = ‘condition’
[08:07:34.494] | : . exclude = ‘immediateCondition’
[08:07:34.494] | : . resignal = TRUE
[08:07:34.494] | : . Number of conditions: 6
[08:07:34.495] | : .  int 6
[08:07:34.495] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.495] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.455] | : . ' , attachPackages() ...
[08:07:34.495] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.495] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.455] | : . ' , ; packages: [n=1] ‘future’
[08:07:34.495] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.496] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.455] | : . ' , attachPackages() ... done
[08:07:34.496] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.496] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.455] | : . ' , attachPackages() ...
[08:07:34.496] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.496] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.455] | : . ' , ; packages: [n=0] 
[08:07:34.496] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.496] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.455] | : . ' , attachPackages() ... done
[08:07:34.496] | : signalConditions() ... done
[08:07:34.496] | relay conditions ... done
[08:07:34.497] value() for SequentialFuture (<unnamed-1>) ... done
[1] 6
** Sum function 'B' with plan('sequential') ...
function (x, ...) 
{
    sumt <- function(x) {
        message("Arguments '...' exists: ", exists("...", inherits = TRUE))
        y %<-% {
            sum(x, ...)
        }
        y
    }
    sumt(x)
}
<bytecode: 0x563a58dc9f88>
Arguments '...' exists: TRUE
[08:07:34.497] future(..., label = NULL) ...
[08:07:34.497] | lazy: FALSE
[08:07:34.497] | stdout: TRUE
[08:07:34.497] | conditions: [n=1] ‘condition’
[08:07:34.497] | gc: FALSE
[08:07:34.497] | earlySignal: FALSE
[08:07:34.498] | getGlobalsAndPackages() ...
[08:07:34.498] | : Searching for globals ...
[08:07:34.503] | : . globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[08:07:34.503] | : Searching for globals ... done
[08:07:34.503] | : Resolving globals: FALSE
[08:07:34.504] | : Tweak future expression to call with '...' arguments ...
[08:07:34.504] | : . {
[08:07:34.504] | : .     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:34.504] | : .     "# expression in do.call(), because function called uses '...'  "
[08:07:34.504] | : .     "# as a global variable                                         "
[08:07:34.504] | : .     do.call(function(...) {
[08:07:34.504] | : .         sum(x, ...)
[08:07:34.504] | : .     }, args = future.call.arguments)
[08:07:34.504] | : . }
[08:07:34.504] | : Tweak future expression to call with '...' arguments ... done
[08:07:34.504] | : Search for packages associated with the globals ...
[08:07:34.504] | : . Packages associated with globals: [1] ‘base’
[08:07:34.504] | : . Packages: [1] ‘base’
[08:07:34.505] | : Search for packages associated with the globals ... done
[08:07:34.505] | : Packages after dropping 'base': [0] 
[08:07:34.505] | : globals: [2] ‘x’, ‘future.call.arguments’
[08:07:34.505] | : packages: [0] 
[08:07:34.505] | getGlobalsAndPackages() ... done
[08:07:34.506] | run() for ‘Future’ (<unnamed-2>) ...
[08:07:34.506] | : state: ‘created’
[08:07:34.506] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.507] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.507] | : Using SequentialFutureBackend ...
[08:07:34.507] | : . Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:07:34.507] | : . Launching futures ...
[08:07:34.507] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:34.507] | : . ' , getFutureData() ...
[08:07:34.507] | : . ' , ; getFutureCore() ...
[08:07:34.507] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:07:34.507] | : . ' , ; getFutureCore() ... done
[08:07:34.508] | : . ' , ; getFutureCapture() ...
[08:07:34.508] | : . ' , ; getFutureCapture() ... done
[08:07:34.508] | : . ' , ; getFutureContext() ...
[08:07:34.508] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.508] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:07:34.508] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.508] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:07:34.508] | : . ' , ; getFutureContext() ... done
[08:07:34.508] | : . ' , getFutureData() ... done
[08:07:34.510] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.510] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:34.510] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.510] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.510] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.510] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:07:34.511] | : . ' , ; ` | New stack:
[08:07:34.511] | : . ' , ; ` | List of 1
[08:07:34.511] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.511] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.511] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:07:34.511] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.511] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.511] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.511] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.511] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.513] | : . ' , ; ` | Old stack:
[08:07:34.513] | : . ' , ; ` | List of 1
[08:07:34.513] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.513] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.513] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:07:34.513] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.513] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.513] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.513] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:07:34.513] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.513] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.513] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.513] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.516] | : . ' , ; ` | Not identical
[08:07:34.516] | : . ' , ; ` | all.equal() for future ...
[08:07:34.516] | : . ' , ; ` | : List of 2
[08:07:34.516] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.516] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.516] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.516] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:34.516] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.516] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.516] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.521] | : . ' , ; ` | all.equal() for future ... done
[08:07:34.521] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:07:34.522] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.522] | : . ' , ; ` List of future strategies:
[08:07:34.522] | : . ' , ; ` 1. sequential:
[08:07:34.522] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.522] | : . ' , ; `    - tweaked: FALSE
[08:07:34.522] | : . ' , ; `    - call: plan(sequential)
[08:07:34.522] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.522] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.522] | : . ' , assign_globals() ...
[08:07:34.522] | : . ' , List of 2
[08:07:34.522] | : . ' ,  $ x                    : int [1:2] 1 2
[08:07:34.522] | : . ' ,  $ future.call.arguments:List of 1
[08:07:34.522] | : . ' ,   ..$ : num 3
[08:07:34.522] | : . ' ,   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:34.522] | : . ' ,  - attr(*, "where")=List of 2
[08:07:34.522] | : . ' ,   ..$ x                    :<environment: 0x563a5abe1f60> 
[08:07:34.522] | : . ' ,   ..$ future.call.arguments:<environment: 0x563a5abe20b0> 
[08:07:34.522] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:34.522] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:07:34.522] | : . ' ,  - attr(*, "total_size")= num NA
[08:07:34.522] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:07:34.527] | : . ' , - copied ‘x’ to environment
[08:07:34.527] | : . ' , - copied ‘future.call.arguments’ to environment
[08:07:34.527] | : . ' , assign_globals() ... done
[08:07:34.528] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.529] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.529] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.529] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:07:34.529] | : . ' , ; ` | : New stack:
[08:07:34.529] | : . ' , ; ` | : List of 1
[08:07:34.529] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.529] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.529] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:34.529] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.529] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.529] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.529] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:34.529] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.529] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.529] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.529] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.532] | : . ' , ; ` | : Old stack:
[08:07:34.532] | : . ' , ; ` | : List of 1
[08:07:34.532] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.532] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.532] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:34.532] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.532] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.532] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.532] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:34.532] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.532] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.532] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.532] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.535] | : . ' , ; ` | : Identical
[08:07:34.535] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:07:34.535] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.535] | : . ' , ; ` | List of future strategies:
[08:07:34.535] | : . ' , ; ` | 1. sequential:
[08:07:34.535] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.535] | : . ' , ; ` |    - tweaked: FALSE
[08:07:34.535] | : . ' , ; ` |    - call: plan(sequential)
[08:07:34.536] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.536] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.536] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.536] | : . ' , SequentialFuture started (and completed)
[08:07:34.536] | : . ' , signalConditions() ...
[08:07:34.537] | : . ' , ; include = ‘immediateCondition’
[08:07:34.537] | : . ' , ; exclude = 
[08:07:34.537] | : . ' , ; resignal = FALSE
[08:07:34.537] | : . ' , ; Number of conditions: 6
[08:07:34.537] | : . ' , ;  int 6
[08:07:34.537] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.537] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.538] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.538] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.538] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.538] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.538] | : . ' , signalConditions() ... done
[08:07:34.538] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:34.538] | : . Launching futures ... done
[08:07:34.538] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:34.538] | : Using SequentialFutureBackend ... done
[08:07:34.538] | run() for ‘Future’ (<unnamed-2>) ... done
[08:07:34.539] future(..., label = NULL) ... done
[08:07:34.539] value() for SequentialFuture (<unnamed-2>) ...
[08:07:34.539] | signalConditions() ...
[08:07:34.539] | : include = ‘immediateCondition’
[08:07:34.539] | : exclude = 
[08:07:34.539] | : resignal = FALSE
[08:07:34.539] | : Number of conditions: 6
[08:07:34.539] | :  int 6
[08:07:34.540] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.540] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.540] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.540] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.540] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.540] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.540] | signalConditions() ... done
[08:07:34.540] | relay stdout ...
[08:07:34.540] | relay stdout ... done
[08:07:34.541] | check for misuse ...
[08:07:34.541] | check for misuse ... done
[08:07:34.541] | relay conditions ...
[08:07:34.541] | : Future state: ‘finished’
[08:07:34.541] | : signalConditions() ...
[08:07:34.541] | : . include = ‘condition’
[08:07:34.541] | : . exclude = ‘immediateCondition’
[08:07:34.541] | : . resignal = TRUE
[08:07:34.541] | : . Number of conditions: 6
[08:07:34.541] | : .  int 6
[08:07:34.542] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.542] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.509] | : . ' , attachPackages() ...
[08:07:34.542] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.542] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.509] | : . ' , ; packages: [n=1] ‘future’
[08:07:34.542] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.542] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.509] | : . ' , attachPackages() ... done
[08:07:34.543] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.543] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.509] | : . ' , attachPackages() ...
[08:07:34.543] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.543] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.509] | : . ' , ; packages: [n=0] 
[08:07:34.543] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.543] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.509] | : . ' , attachPackages() ... done
[08:07:34.543] | : signalConditions() ... done
[08:07:34.543] | relay conditions ... done
[08:07:34.543] value() for SequentialFuture (<unnamed-2>) ... done
[1] 6
** Sum function 'C' with plan('sequential') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y)
    }
    y
}
<bytecode: 0x563a5a91b218>
Arguments '...' exists: FALSE
[08:07:34.545] future(..., label = NULL) ...
[08:07:34.545] | lazy: FALSE
[08:07:34.545] | stdout: TRUE
[08:07:34.545] | conditions: [n=1] ‘condition’
[08:07:34.545] | gc: FALSE
[08:07:34.545] | earlySignal: FALSE
[08:07:34.545] | getGlobalsAndPackages() ...
[08:07:34.545] | : Searching for globals ...
[08:07:34.551] | : . globals found: [4] ‘{’, ‘sum’, ‘x’, ‘y’
[08:07:34.551] | : Searching for globals ... done
[08:07:34.551] | : Resolving globals: FALSE
[08:07:34.551] | : Search for packages associated with the globals ...
[08:07:34.551] | : . Packages associated with globals: [1] ‘base’
[08:07:34.551] | : . Packages: [1] ‘base’
[08:07:34.552] | : Search for packages associated with the globals ... done
[08:07:34.552] | : Packages after dropping 'base': [0] 
[08:07:34.552] | : globals: [2] ‘x’, ‘y’
[08:07:34.552] | : packages: [0] 
[08:07:34.552] | getGlobalsAndPackages() ... done
[08:07:34.552] | run() for ‘Future’ (<unnamed-3>) ...
[08:07:34.552] | : state: ‘created’
[08:07:34.552] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.552] | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.553] | : Using SequentialFutureBackend ...
[08:07:34.553] | : . Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:07:34.553] | : . Launching futures ...
[08:07:34.553] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:34.553] | : . ' , getFutureData() ...
[08:07:34.553] | : . ' , ; getFutureCore() ...
[08:07:34.553] | : . ' , ; ` Packages needed by the future expression (n = 0): <none>
[08:07:34.553] | : . ' , ; getFutureCore() ... done
[08:07:34.553] | : . ' , ; getFutureCapture() ...
[08:07:34.554] | : . ' , ; getFutureCapture() ... done
[08:07:34.554] | : . ' , ; getFutureContext() ...
[08:07:34.554] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.554] | : . ' , ; ` | Getting stack without first backend: [n=0] 
[08:07:34.554] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.554] | : . ' , ; ` Packages needed by future backend (n = 0): <none>
[08:07:34.554] | : . ' , ; getFutureContext() ... done
[08:07:34.554] | : . ' , getFutureData() ... done
[08:07:34.555] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.556] | : . ' , ; Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:34.556] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.556] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.556] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.556] | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:07:34.556] | : . ' , ; ` | New stack:
[08:07:34.556] | : . ' , ; ` | List of 1
[08:07:34.556] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.556] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.556] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:07:34.556] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.556] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.556] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.556] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.556] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.559] | : . ' , ; ` | Old stack:
[08:07:34.559] | : . ' , ; ` | List of 1
[08:07:34.559] | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.559] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.559] | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:07:34.559] | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.559] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.559] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.559] | : . ' , ; ` |   ..- attr(*, "call")= language plan(sequential)
[08:07:34.559] | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.559] | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.559] | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.559] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.562] | : . ' , ; ` | Not identical
[08:07:34.562] | : . ' , ; ` | all.equal() for future ...
[08:07:34.562] | : . ' , ; ` | : List of 2
[08:07:34.562] | : . ' , ; ` | :  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.562] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.562] | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.562] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:34.562] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.562] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.562] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.568] | : . ' , ; ` | all.equal() for future ... done
[08:07:34.568] | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:07:34.568] | : . ' , ; ` plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.568] | : . ' , ; ` List of future strategies:
[08:07:34.568] | : . ' , ; ` 1. sequential:
[08:07:34.568] | : . ' , ; `    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.568] | : . ' , ; `    - tweaked: FALSE
[08:07:34.568] | : . ' , ; `    - call: plan(sequential)
[08:07:34.569] | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.569] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.569] | : . ' , assign_globals() ...
[08:07:34.569] | : . ' , List of 2
[08:07:34.569] | : . ' ,  $ x: int [1:2] 1 2
[08:07:34.569] | : . ' ,  $ y: num 3
[08:07:34.569] | : . ' ,  - attr(*, "where")=List of 2
[08:07:34.569] | : . ' ,   ..$ x:<environment: 0x563a5ba4bb80> 
[08:07:34.569] | : . ' ,   ..$ y:<environment: 0x563a5ba4bb80> 
[08:07:34.569] | : . ' ,  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:34.569] | : . ' ,  - attr(*, "resolved")= logi FALSE
[08:07:34.569] | : . ' ,  - attr(*, "total_size")= num NA
[08:07:34.569] | : . ' ,  - attr(*, "already-done")= logi TRUE
[08:07:34.572] | : . ' , - copied ‘x’ to environment
[08:07:34.572] | : . ' , - copied ‘y’ to environment
[08:07:34.572] | : . ' , assign_globals() ... done
[08:07:34.574] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.574] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.574] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.574] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:07:34.574] | : . ' , ; ` | : New stack:
[08:07:34.574] | : . ' , ; ` | : List of 1
[08:07:34.574] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.574] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.574] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:34.574] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.574] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.574] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.574] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:34.574] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.574] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.574] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.574] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.577] | : . ' , ; ` | : Old stack:
[08:07:34.578] | : . ' , ; ` | : List of 1
[08:07:34.578] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.578] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.578] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:34.578] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.578] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.578] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.578] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:34.578] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.578] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.578] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.578] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.581] | : . ' , ; ` | : Identical
[08:07:34.581] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:07:34.582] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.582] | : . ' , ; ` | List of future strategies:
[08:07:34.582] | : . ' , ; ` | 1. sequential:
[08:07:34.582] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.582] | : . ' , ; ` |    - tweaked: FALSE
[08:07:34.582] | : . ' , ; ` |    - call: plan(sequential)
[08:07:34.582] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.582] | : . ' , ; plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.582] | : . ' , plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.583] | : . ' , SequentialFuture started (and completed)
[08:07:34.583] | : . ' , signalConditions() ...
[08:07:34.583] | : . ' , ; include = ‘immediateCondition’
[08:07:34.583] | : . ' , ; exclude = 
[08:07:34.583] | : . ' , ; resignal = FALSE
[08:07:34.583] | : . ' , ; Number of conditions: 6
[08:07:34.583] | : . ' , ;  int 6
[08:07:34.584] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.584] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.584] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.584] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.584] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.584] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.584] | : . ' , signalConditions() ... done
[08:07:34.584] | : . ' launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:34.584] | : . Launching futures ... done
[08:07:34.585] | : . Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:34.585] | : Using SequentialFutureBackend ... done
[08:07:34.585] | run() for ‘Future’ (<unnamed-3>) ... done
[08:07:34.585] future(..., label = NULL) ... done
[08:07:34.585] value() for SequentialFuture (<unnamed-3>) ...
[08:07:34.585] | signalConditions() ...
[08:07:34.585] | : include = ‘immediateCondition’
[08:07:34.585] | : exclude = 
[08:07:34.585] | : resignal = FALSE
[08:07:34.586] | : Number of conditions: 6
[08:07:34.586] | :  int 6
[08:07:34.586] | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.586] | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.586] | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.586] | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.586] | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.586] | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.587] | signalConditions() ... done
[08:07:34.587] | relay stdout ...
[08:07:34.587] | relay stdout ... done
[08:07:34.587] | check for misuse ...
[08:07:34.587] | check for misuse ... done
[08:07:34.587] | relay conditions ...
[08:07:34.587] | : Future state: ‘finished’
[08:07:34.587] | : signalConditions() ...
[08:07:34.587] | : . include = ‘condition’
[08:07:34.587] | : . exclude = ‘immediateCondition’
[08:07:34.588] | : . resignal = TRUE
[08:07:34.588] | : . Number of conditions: 6
[08:07:34.588] | : .  int 6
[08:07:34.588] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.588] | : . Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.554] | : . ' , attachPackages() ...
[08:07:34.588] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.588] | : . Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.555] | : . ' , ; packages: [n=1] ‘future’
[08:07:34.589] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.589] | : . Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.555] | : . ' , attachPackages() ... done
[08:07:34.589] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.589] | : . Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.555] | : . ' , attachPackages() ...
[08:07:34.589] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.589] | : . Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.555] | : . ' , ; packages: [n=0] 
[08:07:34.589] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.589] | : . Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.555] | : . ' , attachPackages() ... done
[08:07:34.589] | : signalConditions() ... done
[08:07:34.590] | relay conditions ... done
[08:07:34.590] value() for SequentialFuture (<unnamed-3>) ... done
[1] 6
** Sum function 'D' with plan('sequential') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y, ...)
    }
    y
}
<bytecode: 0x563a5ab8a2d0>
Arguments '...' exists: FALSE
[08:07:34.590] future(..., label = NULL) ...
[08:07:34.590] | lazy: FALSE
[08:07:34.590] | stdout: TRUE
[08:07:34.590] | conditions: [n=1] ‘condition’
[08:07:34.590] | gc: FALSE
[08:07:34.591] | earlySignal: FALSE
[08:07:34.591] | getGlobalsAndPackages() ...
[08:07:34.591] | : Searching for globals ...
[08:07:34.597] | : . globals found: [5] ‘{’, ‘sum’, ‘x’, ‘y’, ‘...’
[08:07:34.597] | : Searching for globals ... done
[08:07:34.597] | : Resolving globals: FALSE
[08:07:34.597] | : Tweak future expression to call with '...' arguments ...
[08:07:34.597] | : . Search for packages associated with the globals ...
[08:07:34.598] | : . ' Packages associated with globals: [1] ‘base’
[08:07:34.598] | : . ' Packages: [1] ‘base’
[08:07:34.598] | : . Search for packages associated with the globals ... done
[08:07:34.598] | : . Packages after dropping 'base': [0] 
[08:07:34.598] | : . globals: [2] ‘x’, ‘y’
[08:07:34.598] | : . packages: [0] 
[08:07:34.598] | : Tweak future expression to call with '...' arguments ... done
[08:07:34.599] | : run() for ‘Future’ (<unnamed-4>) ...
[08:07:34.599] | : . state: ‘created’
[08:07:34.599] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.599] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.600] | : . Using SequentialFutureBackend ...
[08:07:34.600] | : . ' Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:07:34.600] | : . ' Launching futures ...
[08:07:34.600] | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:34.600] | : . ' , ; getFutureData() ...
[08:07:34.601] | : . ' , ; ` getFutureCore() ...
[08:07:34.601] | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:34.601] | : . ' , ; ` getFutureCore() ... done
[08:07:34.601] | : . ' , ; ` getFutureCapture() ...
[08:07:34.601] | : . ' , ; ` getFutureCapture() ... done
[08:07:34.601] | : . ' , ; ` getFutureContext() ...
[08:07:34.601] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.601] | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:34.601] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.601] | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:34.602] | : . ' , ; ` getFutureContext() ... done
[08:07:34.602] | : . ' , ; getFutureData() ... done
[08:07:34.603] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.603] | : . ' , ; ` Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:34.603] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.603] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.603] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.604] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:07:34.604] | : . ' , ; ` | : New stack:
[08:07:34.604] | : . ' , ; ` | : List of 1
[08:07:34.604] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.604] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.604] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:34.604] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.604] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.604] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.604] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.604] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.606] | : . ' , ; ` | : Old stack:
[08:07:34.606] | : . ' , ; ` | : List of 1
[08:07:34.606] | : . ' , ; ` | :  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.606] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.606] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:34.606] | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.606] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.606] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.606] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(sequential)
[08:07:34.606] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.606] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.606] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.606] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.609] | : . ' , ; ` | : Not identical
[08:07:34.610] | : . ' , ; ` | : all.equal() for future ...
[08:07:34.610] | : . ' , ; ` | : . List of 2
[08:07:34.610] | : . ' , ; ` | : .  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.610] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.610] | : . ' , ; ` | : .  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.610] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:34.610] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.610] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.610] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.615] | : . ' , ; ` | : all.equal() for future ... done
[08:07:34.615] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:07:34.615] | : . ' , ; ` | plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.615] | : . ' , ; ` | List of future strategies:
[08:07:34.615] | : . ' , ; ` | 1. sequential:
[08:07:34.615] | : . ' , ; ` |    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.615] | : . ' , ; ` |    - tweaked: FALSE
[08:07:34.615] | : . ' , ; ` |    - call: plan(sequential)
[08:07:34.615] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.615] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.616] | : . ' , ; assign_globals() ...
[08:07:34.616] | : . ' , ; List of 2
[08:07:34.616] | : . ' , ;  $ x: int [1:2] 1 2
[08:07:34.616] | : . ' , ;  $ y: num 3
[08:07:34.616] | : . ' , ;  - attr(*, "where")=List of 2
[08:07:34.616] | : . ' , ;   ..$ x:<environment: 0x563a5aa34880> 
[08:07:34.616] | : . ' , ;   ..$ y:<environment: 0x563a5aa34880> 
[08:07:34.616] | : . ' , ;  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:34.616] | : . ' , ;  - attr(*, "resolved")= logi FALSE
[08:07:34.616] | : . ' , ;  - attr(*, "total_size")= num NA
[08:07:34.616] | : . ' , ;  - attr(*, "already-done")= logi TRUE
[08:07:34.619] | : . ' , ; - copied ‘x’ to environment
[08:07:34.620] | : . ' , ; - copied ‘y’ to environment
[08:07:34.620] | : . ' , ; assign_globals() ... done
[08:07:34.621] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.622] | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.622] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.622] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:34.622] | : . ' , ; ` | : . New stack:
[08:07:34.622] | : . ' , ; ` | : . List of 1
[08:07:34.622] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.622] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.622] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:34.622] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.622] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.622] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.622] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:34.622] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.622] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.622] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.622] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.625] | : . ' , ; ` | : . Old stack:
[08:07:34.625] | : . ' , ; ` | : . List of 1
[08:07:34.625] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.625] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.625] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:34.625] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.625] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.625] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.625] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:34.625] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.625] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.625] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.625] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.628] | : . ' , ; ` | : . Identical
[08:07:34.628] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:34.629] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.629] | : . ' , ; ` | : List of future strategies:
[08:07:34.629] | : . ' , ; ` | : 1. sequential:
[08:07:34.629] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.629] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:34.629] | : . ' , ; ` | :    - call: plan(sequential)
[08:07:34.629] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.629] | : . ' , ; ` plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.629] | : . ' , ; plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.629] | : . ' , ; SequentialFuture started (and completed)
[08:07:34.630] | : . ' , ; signalConditions() ...
[08:07:34.630] | : . ' , ; ` include = ‘immediateCondition’
[08:07:34.630] | : . ' , ; ` exclude = 
[08:07:34.630] | : . ' , ; ` resignal = FALSE
[08:07:34.630] | : . ' , ; ` Number of conditions: 7
[08:07:34.630] | : . ' , ; `  int 7
[08:07:34.631] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.631] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.631] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.631] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.631] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.631] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.631] | : . ' , ; ` Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:34.631] | : . ' , ; signalConditions() ... done
[08:07:34.631] | : . ' , launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:34.631] | : . ' Launching futures ... done
[08:07:34.632] | : . ' Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:34.632] | : . Using SequentialFutureBackend ... done
[08:07:34.632] | : run() for ‘Future’ (<unnamed-4>) ... done
[08:07:34.632] | getGlobalsAndPackages() ... done
[08:07:34.632] | value() for SequentialFuture (<unnamed-4>) ...
[08:07:34.632] | : signalConditions() ...
[08:07:34.632] | : . include = ‘immediateCondition’
[08:07:34.632] | : . exclude = 
[08:07:34.632] | : . resignal = FALSE
[08:07:34.632] | : . Number of conditions: 7
[08:07:34.633] | : .  int 7
[08:07:34.633] | : . Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.633] | : . Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.633] | : . Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.633] | : . Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.633] | : . Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.633] | : . Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.634] | : . Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:34.634] | : signalConditions() ... done
[08:07:34.634] | : relay stdout ...
[08:07:34.634] | : relay stdout ... done
[08:07:34.634] | : check for misuse ...
[08:07:34.634] | : check for misuse ... done
[08:07:34.634] | : relay conditions ...
[08:07:34.634] | : . Future state: ‘finished’
[08:07:34.634] | : . signalConditions() ...
[08:07:34.634] | : . ' include = ‘condition’
[08:07:34.635] | : . ' exclude = ‘immediateCondition’
[08:07:34.635] | : . ' resignal = TRUE
[08:07:34.635] | : . ' Number of conditions: 7
[08:07:34.635] | : . '  int 7
[08:07:34.635] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.635] | : . ' Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.602] | : . ' , ; attachPackages() ...
[08:07:34.635] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.636] | : . ' Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.602] | : . ' , ; ` packages: [n=1] ‘future’
[08:07:34.636] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.636] | : . ' Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.602] | : . ' , ; attachPackages() ... done
[08:07:34.636] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.636] | : . ' Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.602] | : . ' , ; attachPackages() ...
[08:07:34.636] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.636] | : . ' Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.602] | : . ' , ; ` packages: [n=0] 
[08:07:34.636] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.636] | : . ' Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.603] | : . ' , ; attachPackages() ... done
[08:07:34.637] | : . ' Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:34.637] | : . ' Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:07:34.638] | : . signalConditions() ... done
[08:07:34.638] | : relay conditions ... done
Error in eval(quote({ : '...' used in an incorrect context
[1] "Error in eval(quote({ : '...' used in an incorrect context\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in eval(quote({    {        sum(x, y, ...)    }}), new.env()): '...' used in an incorrect context>
** Sum function 'E' with plan('sequential') ...
function (...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    globals <- globals::globalsByName("...", envir = environment())
    f <- future({
        fcn <- function() sum(...)
        fcn()
    }, envir = parent.frame(), globals = globals)
    y <- value(f)
    y
}
<bytecode: 0x563a5b3e4e20>
Arguments '...' exists: TRUE
[08:07:34.638] | : future(..., label = NULL) ...
[08:07:34.639] | : . lazy: FALSE
[08:07:34.639] | : . stdout: TRUE
[08:07:34.639] | : . conditions: [n=1] ‘condition’
[08:07:34.639] | : . gc: FALSE
[08:07:34.639] | : . earlySignal: FALSE
[08:07:34.639] | : . getGlobalsAndPackages() ...
[08:07:34.639] | : . ' globals passed as-is: [1] ‘...’
[08:07:34.639] | : . ' Resolving globals: FALSE
[08:07:34.639] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:34.639] | : . ' , {
[08:07:34.639] | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:34.639] | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:34.639] | : . ' ,     "# as a global variable                                         "
[08:07:34.639] | : . ' ,     do.call(function(...) {
[08:07:34.639] | : . ' ,         fcn <- function() sum(...)
[08:07:34.639] | : . ' ,         fcn()
[08:07:34.639] | : . ' ,     }, args = future.call.arguments)
[08:07:34.639] | : . ' , }
[08:07:34.640] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:34.640] | : . ' Search for packages associated with the globals ...
[08:07:34.640] | : . ' , Packages associated with globals: [0] 
[08:07:34.640] | : . ' , Packages: [0] 
[08:07:34.640] | : . ' Search for packages associated with the globals ... done
[08:07:34.640] | : . ' Packages after dropping 'base': [0] 
[08:07:34.640] | : . ' globals: [1] ‘future.call.arguments’
[08:07:34.641] | : . ' packages: [0] 
[08:07:34.641] | : . getGlobalsAndPackages() ... done
[08:07:34.641] | : . run() for ‘Future’ (<unnamed-5>) ...
[08:07:34.641] | : . ' state: ‘created’
[08:07:34.641] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.641] | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.641] | : . ' Using SequentialFutureBackend ...
[08:07:34.641] | : . ' , Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:07:34.642] | : . ' , Launching futures ...
[08:07:34.642] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:34.642] | : . ' , ; ` getFutureData() ...
[08:07:34.642] | : . ' , ; ` | getFutureCore() ...
[08:07:34.642] | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:34.642] | : . ' , ; ` | getFutureCore() ... done
[08:07:34.642] | : . ' , ; ` | getFutureCapture() ...
[08:07:34.642] | : . ' , ; ` | getFutureCapture() ... done
[08:07:34.642] | : . ' , ; ` | getFutureContext() ...
[08:07:34.643] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.643] | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:34.643] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.643] | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:34.643] | : . ' , ; ` | getFutureContext() ... done
[08:07:34.643] | : . ' , ; ` getFutureData() ... done
[08:07:34.644] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.644] | : . ' , ; ` | Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:34.645] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.645] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.645] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.645] | : . ' , ; ` | : all.equal() for FutureStrategyList ...
[08:07:34.645] | : . ' , ; ` | : . New stack:
[08:07:34.645] | : . ' , ; ` | : . List of 1
[08:07:34.645] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.645] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.645] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:34.645] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.645] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.645] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.645] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.645] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.648] | : . ' , ; ` | : . Old stack:
[08:07:34.648] | : . ' , ; ` | : . List of 1
[08:07:34.648] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.648] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.648] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:34.648] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.648] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.648] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.648] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(sequential)
[08:07:34.648] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.648] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.648] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.648] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.651] | : . ' , ; ` | : . Not identical
[08:07:34.651] | : . ' , ; ` | : . all.equal() for future ...
[08:07:34.651] | : . ' , ; ` | : . ' List of 2
[08:07:34.651] | : . ' , ; ` | : . '  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.651] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.651] | : . ' , ; ` | : . '  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.651] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:34.651] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.651] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.651] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.657] | : . ' , ; ` | : . all.equal() for future ... done
[08:07:34.657] | : . ' , ; ` | : all.equal() for FutureStrategyList ... done
[08:07:34.657] | : . ' , ; ` | : plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.657] | : . ' , ; ` | : List of future strategies:
[08:07:34.657] | : . ' , ; ` | : 1. sequential:
[08:07:34.657] | : . ' , ; ` | :    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.657] | : . ' , ; ` | :    - tweaked: FALSE
[08:07:34.657] | : . ' , ; ` | :    - call: plan(sequential)
[08:07:34.658] | : . ' , ; ` | plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.658] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.658] | : . ' , ; ` assign_globals() ...
[08:07:34.658] | : . ' , ; ` List of 1
[08:07:34.658] | : . ' , ; `  $ future.call.arguments:List of 2
[08:07:34.658] | : . ' , ; `   ..$ : int [1:2] 1 2
[08:07:34.658] | : . ' , ; `   ..$ : num 3
[08:07:34.658] | : . ' , ; `   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:34.658] | : . ' , ; `  - attr(*, "where")=List of 1
[08:07:34.658] | : . ' , ; `   ..$ future.call.arguments:<environment: 0x563a5a644478> 
[08:07:34.658] | : . ' , ; `  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:34.658] | : . ' , ; `  - attr(*, "resolved")= logi FALSE
[08:07:34.658] | : . ' , ; `  - attr(*, "total_size")= num NA
[08:07:34.658] | : . ' , ; `  - attr(*, "already-done")= logi TRUE
[08:07:34.661] | : . ' , ; ` - copied ‘future.call.arguments’ to environment
[08:07:34.662] | : . ' , ; ` assign_globals() ... done
[08:07:34.663] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.663] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.663] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.663] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:34.664] | : . ' , ; ` | : . ' New stack:
[08:07:34.664] | : . ' , ; ` | : . ' List of 1
[08:07:34.664] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.664] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.664] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:34.664] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.664] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.664] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.664] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:34.664] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.664] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.664] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.664] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.667] | : . ' , ; ` | : . ' Old stack:
[08:07:34.667] | : . ' , ; ` | : . ' List of 1
[08:07:34.667] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.667] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.667] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:34.667] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.667] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.667] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.667] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:34.667] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.667] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.667] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.667] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.670] | : . ' , ; ` | : . ' Identical
[08:07:34.670] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:34.670] | : . ' , ; ` | : . plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.670] | : . ' , ; ` | : . List of future strategies:
[08:07:34.670] | : . ' , ; ` | : . 1. sequential:
[08:07:34.670] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.670] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:34.670] | : . ' , ; ` | : .    - call: plan(sequential)
[08:07:34.671] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.671] | : . ' , ; ` | plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.671] | : . ' , ; ` plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.671] | : . ' , ; ` SequentialFuture started (and completed)
[08:07:34.671] | : . ' , ; ` signalConditions() ...
[08:07:34.671] | : . ' , ; ` | include = ‘immediateCondition’
[08:07:34.671] | : . ' , ; ` | exclude = 
[08:07:34.671] | : . ' , ; ` | resignal = FALSE
[08:07:34.672] | : . ' , ; ` | Number of conditions: 6
[08:07:34.672] | : . ' , ; ` |  int 6
[08:07:34.672] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.672] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.672] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.672] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.672] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.673] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.673] | : . ' , ; ` signalConditions() ... done
[08:07:34.673] | : . ' , ; launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:34.673] | : . ' , Launching futures ... done
[08:07:34.673] | : . ' , Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:34.673] | : . ' Using SequentialFutureBackend ... done
[08:07:34.673] | : . run() for ‘Future’ (<unnamed-5>) ... done
[08:07:34.673] | : future(..., label = NULL) ... done
[08:07:34.673] | : value() for SequentialFuture (<unnamed-5>) ...
[08:07:34.674] | : . signalConditions() ...
[08:07:34.674] | : . ' include = ‘immediateCondition’
[08:07:34.674] | : . ' exclude = 
[08:07:34.674] | : . ' resignal = FALSE
[08:07:34.674] | : . ' Number of conditions: 6
[08:07:34.674] | : . '  int 6
[08:07:34.674] | : . ' Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.674] | : . ' Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.675] | : . ' Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.676] | : . ' Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.676] | : . ' Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.676] | : . ' Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.676] | : . signalConditions() ... done
[08:07:34.676] | : . relay stdout ...
[08:07:34.676] | : . relay stdout ... done
[08:07:34.676] | : . check for misuse ...
[08:07:34.676] | : . check for misuse ... done
[08:07:34.676] | : . relay conditions ...
[08:07:34.677] | : . ' Future state: ‘finished’
[08:07:34.677] | : . ' signalConditions() ...
[08:07:34.677] | : . ' , include = ‘condition’
[08:07:34.677] | : . ' , exclude = ‘immediateCondition’
[08:07:34.677] | : . ' , resignal = TRUE
[08:07:34.677] | : . ' , Number of conditions: 6
[08:07:34.677] | : . ' ,  int 6
[08:07:34.678] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.678] | : . ' , Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.643] | : . ' , ; ` attachPackages() ...
[08:07:34.678] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.678] | : . ' , Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.643] | : . ' , ; ` | packages: [n=1] ‘future’
[08:07:34.678] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.678] | : . ' , Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.644] | : . ' , ; ` attachPackages() ... done
[08:07:34.678] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.678] | : . ' , Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.644] | : . ' , ; ` attachPackages() ...
[08:07:34.678] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.679] | : . ' , Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.644] | : . ' , ; ` | packages: [n=0] 
[08:07:34.679] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.679] | : . ' , Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.644] | : . ' , ; ` attachPackages() ... done
[08:07:34.679] | : . ' signalConditions() ... done
[08:07:34.679] | : . relay conditions ... done
[08:07:34.679] | : value() for SequentialFuture (<unnamed-5>) ... done
[1] 6
** Sum function 'F' with plan('sequential') ...
function (x, y) 
{
    message("Using '...' in a formula")
    fcn <- function(x, y) {
        z = ~list(...)
        sum(x, y)
    }
    f <- future(fcn(x, y))
    y <- value(f)
    y
}
<bytecode: 0x563a5b674508>
Using '...' in a formula
[08:07:34.679] | : future(..., label = NULL) ...
[08:07:34.680] | : . lazy: FALSE
[08:07:34.680] | : . stdout: TRUE
[08:07:34.680] | : . conditions: [n=1] ‘condition’
[08:07:34.680] | : . gc: FALSE
[08:07:34.680] | : . earlySignal: FALSE
[08:07:34.680] | : . getGlobalsAndPackages() ...
[08:07:34.680] | : . ' Searching for globals ...
[08:07:34.692] | : . ' , globals found: [9] ‘fcn’, ‘x’, ‘y’, ‘{’, ‘=’, ‘~’, ‘list’, ‘...’, ‘sum’
[08:07:34.692] | : . ' Searching for globals ... done
[08:07:34.692] | : . ' Resolving globals: FALSE
[08:07:34.693] | : . ' Tweak future expression to call with '...' arguments ...
[08:07:34.693] | : . ' , Search for packages associated with the globals ...
[08:07:34.693] | : . ' , ; Packages associated with globals: [1] ‘base’
[08:07:34.693] | : . ' , ; Packages: [1] ‘base’
[08:07:34.693] | : . ' , Search for packages associated with the globals ... done
[08:07:34.694] | : . ' , Packages after dropping 'base': [0] 
[08:07:34.694] | : . ' , globals: [3] ‘fcn’, ‘x’, ‘y’
[08:07:34.694] | : . ' , packages: [0] 
[08:07:34.694] | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:34.694] | : . ' run() for ‘Future’ (<unnamed-6>) ...
[08:07:34.694] | : . ' , state: ‘created’
[08:07:34.694] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.694] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.695] | : . ' , Using SequentialFutureBackend ...
[08:07:34.695] | : . ' , ; Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:07:34.695] | : . ' , ; Launching futures ...
[08:07:34.695] | : . ' , ; ` launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ...
[08:07:34.695] | : . ' , ; ` | getFutureData() ...
[08:07:34.695] | : . ' , ; ` | : getFutureCore() ...
[08:07:34.695] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:34.695] | : . ' , ; ` | : getFutureCore() ... done
[08:07:34.695] | : . ' , ; ` | : getFutureCapture() ...
[08:07:34.695] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:34.696] | : . ' , ; ` | : getFutureContext() ...
[08:07:34.696] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.696] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:34.696] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.696] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:34.696] | : . ' , ; ` | : getFutureContext() ... done
[08:07:34.696] | : . ' , ; ` | getFutureData() ... done
[08:07:34.698] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.698] | : . ' , ; ` | : Getting full stack: [n=1] ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:34.698] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.698] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.698] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.698] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:34.698] | : . ' , ; ` | : . ' New stack:
[08:07:34.698] | : . ' , ; ` | : . ' List of 1
[08:07:34.698] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.698] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.698] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:34.698] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.698] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.698] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.698] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.698] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.701] | : . ' , ; ` | : . ' Old stack:
[08:07:34.701] | : . ' , ; ` | : . ' List of 1
[08:07:34.701] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.701] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.701] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:34.701] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.701] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.701] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.701] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(sequential)
[08:07:34.701] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.701] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.701] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.701] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.704] | : . ' , ; ` | : . ' Not identical
[08:07:34.704] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:34.704] | : . ' , ; ` | : . ' , List of 2
[08:07:34.704] | : . ' , ; ` | : . ' ,  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.704] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.704] | : . ' , ; ` | : . ' ,  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.704] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:07:34.704] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.704] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.704] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.709] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:34.709] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:34.710] | : . ' , ; ` | : . plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.710] | : . ' , ; ` | : . List of future strategies:
[08:07:34.710] | : . ' , ; ` | : . 1. sequential:
[08:07:34.710] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.710] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:34.710] | : . ' , ; ` | : .    - call: plan(sequential)
[08:07:34.711] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.711] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.711] | : . ' , ; ` | assign_globals() ...
[08:07:34.711] | : . ' , ; ` | List of 3
[08:07:34.711] | : . ' , ; ` |  $ fcn:function (x, y)  
[08:07:34.711] | : . ' , ; ` |  $ x  : int [1:2] 1 2
[08:07:34.711] | : . ' , ; ` |  $ y  : num 3
[08:07:34.711] | : . ' , ; ` |  - attr(*, "where")=List of 3
[08:07:34.711] | : . ' , ; ` |   ..$ fcn:<environment: 0x563a58e446b8> 
[08:07:34.711] | : . ' , ; ` |   ..$ x  :<environment: 0x563a58e446b8> 
[08:07:34.711] | : . ' , ; ` |   ..$ y  :<environment: 0x563a58e446b8> 
[08:07:34.711] | : . ' , ; ` |  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:34.711] | : . ' , ; ` |  - attr(*, "resolved")= logi FALSE
[08:07:34.711] | : . ' , ; ` |  - attr(*, "total_size")= num NA
[08:07:34.711] | : . ' , ; ` |  - attr(*, "already-done")= logi TRUE
[08:07:34.715] | : . ' , ; ` | - copied ‘fcn’ to environment
[08:07:34.715] | : . ' , ; ` | - copied ‘x’ to environment
[08:07:34.715] | : . ' , ; ` | - copied ‘y’ to environment
[08:07:34.715] | : . ' , ; ` | assign_globals() ... done
[08:07:34.717] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.717] | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.717] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.717] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:07:34.717] | : . ' , ; ` | : . ' , New stack:
[08:07:34.717] | : . ' , ; ` | : . ' , List of 1
[08:07:34.717] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.717] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.717] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:34.717] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.717] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.717] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.717] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:07:34.717] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.717] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.717] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.717] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.720] | : . ' , ; ` | : . ' , Old stack:
[08:07:34.720] | : . ' , ; ` | : . ' , List of 1
[08:07:34.720] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.720] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.720] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:34.720] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.720] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.720] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.720] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(sequential)
[08:07:34.720] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.720] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.720] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.720] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.723] | : . ' , ; ` | : . ' , Identical
[08:07:34.723] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:07:34.723] | : . ' , ; ` | : . ' plan(): Skip setting new future backend stack because it is the same as the current one:
[08:07:34.724] | : . ' , ; ` | : . ' List of future strategies:
[08:07:34.724] | : . ' , ; ` | : . ' 1. sequential:
[08:07:34.724] | : . ' , ; ` | : . '    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.724] | : . ' , ; ` | : . '    - tweaked: FALSE
[08:07:34.724] | : . ' , ; ` | : . '    - call: plan(sequential)
[08:07:34.724] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.724] | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.724] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.724] | : . ' , ; ` | SequentialFuture started (and completed)
[08:07:34.725] | : . ' , ; ` | signalConditions() ...
[08:07:34.725] | : . ' , ; ` | : include = ‘immediateCondition’
[08:07:34.725] | : . ' , ; ` | : exclude = 
[08:07:34.725] | : . ' , ; ` | : resignal = FALSE
[08:07:34.725] | : . ' , ; ` | : Number of conditions: 6
[08:07:34.725] | : . ' , ; ` | :  int 6
[08:07:34.725] | : . ' , ; ` | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.726] | : . ' , ; ` | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.726] | : . ' , ; ` | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.726] | : . ' , ; ` | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.726] | : . ' , ; ` | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.726] | : . ' , ; ` | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.726] | : . ' , ; ` | signalConditions() ... done
[08:07:34.726] | : . ' , ; ` launchFuture() for ‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’ ... done
[08:07:34.726] | : . ' , ; Launching futures ... done
[08:07:34.726] | : . ' , ; Future launched: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’
[08:07:34.727] | : . ' , Using SequentialFutureBackend ... done
[08:07:34.727] | : . ' run() for ‘Future’ (<unnamed-6>) ... done
[08:07:34.727] | : . getGlobalsAndPackages() ... done
[08:07:34.727] | : . value() for SequentialFuture (<unnamed-6>) ...
[08:07:34.727] | : . ' signalConditions() ...
[08:07:34.727] | : . ' , include = ‘immediateCondition’
[08:07:34.727] | : . ' , exclude = 
[08:07:34.727] | : . ' , resignal = FALSE
[08:07:34.727] | : . ' , Number of conditions: 6
[08:07:34.727] | : . ' ,  int 6
[08:07:34.729] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.729] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.729] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.729] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.729] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.729] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.729] | : . ' signalConditions() ... done
[08:07:34.729] | : . ' relay stdout ...
[08:07:34.729] | : . ' relay stdout ... done
[08:07:34.730] | : . ' check for misuse ...
[08:07:34.730] | : . ' check for misuse ... done
[08:07:34.730] | : . ' relay conditions ...
[08:07:34.730] | : . ' , Future state: ‘finished’
[08:07:34.730] | : . ' , signalConditions() ...
[08:07:34.730] | : . ' , ; include = ‘condition’
[08:07:34.730] | : . ' , ; exclude = ‘immediateCondition’
[08:07:34.730] | : . ' , ; resignal = TRUE
[08:07:34.730] | : . ' , ; Number of conditions: 6
[08:07:34.730] | : . ' , ;  int 6
[08:07:34.731] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.731] | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.697] | : . ' , ; ` | attachPackages() ...
[08:07:34.731] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.731] | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.697] | : . ' , ; ` | : packages: [n=1] ‘future’
[08:07:34.731] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.731] | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.697] | : . ' , ; ` | attachPackages() ... done
[08:07:34.732] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.732] | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.697] | : . ' , ; ` | attachPackages() ...
[08:07:34.732] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.732] | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.697] | : . ' , ; ` | : packages: [n=0] 
[08:07:34.732] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.732] | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.697] | : . ' , ; ` | attachPackages() ... done
[08:07:34.732] | : . ' , signalConditions() ... done
[08:07:34.732] | : . ' relay conditions ... done
[08:07:34.732] | : . value() for SequentialFuture (<unnamed-6>) ... done
[1] 6
Testing with 1 cores ... DONE
Testing with 2 cores ...
*** Global argument '...' ...
- plan('multicore') ...
[08:07:34.733] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.733] | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:34.733] | : . ' , all.equal() for FutureStrategyList ...
[08:07:34.733] | : . ' , ; New stack:
[08:07:34.733] | : . ' , ; List of 1
[08:07:34.733] | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.733] | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.733] | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.733] | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:07:34.733] | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.733] | : . ' , ;     ...)  
[08:07:34.733] | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.733] | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.733] | : . ' , ;   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.733] | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.736] | : . ' , ; Old stack:
[08:07:34.736] | : . ' , ; List of 1
[08:07:34.736] | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.736] | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.736] | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:34.736] | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.736] | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.736] | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.736] | : . ' , ;   ..- attr(*, "call")= language plan(sequential)
[08:07:34.736] | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.736] | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.736] | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.736] | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.739] | : . ' , ; Not identical
[08:07:34.739] | : . ' , ; all.equal() for future ...
[08:07:34.739] | : . ' , ; ` List of 2
[08:07:34.739] | : . ' , ; `  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.739] | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.739] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.739] | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:07:34.739] | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.739] | : . ' , ; `     ...)  
[08:07:34.739] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.739] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.739] | : . ' , ; `   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.739] | : . ' , ; `  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.739] | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.739] | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:07:34.739] | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.739] | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.739] | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.739] | : . ' , ; `   ..- attr(*, "call")= language plan(sequential)
[08:07:34.739] | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aae2240> 
[08:07:34.739] | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.739] | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.744] | : . ' , ; ` Formals differ
[08:07:34.744] | : . ' , ; all.equal() for future ... done
[08:07:34.744] | : . ' , ; Future strategies differ at level 1
[08:07:34.744] | : . ' , all.equal() for FutureStrategyList ... done
[08:07:34.744] | : . ' , plan(): Setting new future backend stack:
[08:07:34.744] | : . ' , List of future strategies:
[08:07:34.744] | : . ' , 1. multicore:
[08:07:34.744] | : . ' ,    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:34.744] | : . ' ,    - tweaked: FALSE
[08:07:34.744] | : . ' ,    - call: plan(strategy, substitute = FALSE)
[08:07:34.745] | : . ' , List of 1
[08:07:34.745] | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.745] | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.745] | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.745] | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:07:34.745] | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.745] | : . ' ,     ...)  
[08:07:34.745] | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.745] | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.745] | : . ' ,   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.745] | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.773] | : . ' , plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:34.773] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.774] | : . ' , ; ` Getting current ("next") strategy: ‘FutureStrategy’, ‘sequential’, ‘uniprocess’, ‘future’, ‘function’
[08:07:34.774] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.774] | : . ' , ; Legacy shutdown of cluster workers ...
[08:07:34.774] | : . ' , ; ` Stopping existing cluster ...
[08:07:34.774] | : . ' , ; ` | No pre-existing cluster. Skipping
[08:07:34.774] | : . ' , ; ` Stopping existing cluster ... done
[08:07:34.774] | : . ' , ; Legacy shutdown of cluster workers ... done
[08:07:34.774] | : . ' , plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:34.775] | : . ' , plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:34.775] | : . ' , ; function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.775] | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.775] | : . ' , ;  - attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.775] | : . ' , ;  - attr(*, "init")= logi TRUE
[08:07:34.775] | : . ' , ;  - attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.775] | : . ' , ;     ...)  
[08:07:34.775] | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.775] | : . ' , ;  - attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.775] | : . ' , ;  - attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.777] | : . ' , ; init: TRUE
[08:07:34.777] | : . ' , ; makeFutureBackend(<multicore>) ...
[08:07:34.777] | : . ' , ; ` Backend function: <‘NULL’>
[08:07:34.777] | : . ' , ; ` Evaluator tweak arguments: [n=0]
[08:07:34.777] | : . ' , ; `  list()
[08:07:34.777] | : . ' , ; ` Evaluator formal arguments: [n=3]
[08:07:34.777] | : . ' , ; `  list()
[08:07:34.778] | : . ' , ; ` Backend factory arguments: [n=3]
[08:07:34.778] | : . ' , ; ` Dotted pair list of 3
[08:07:34.778] | : . ' , ; `  $ workers    : language availableCores(constraints = "multicore")
[08:07:34.778] | : . ' , ; `  $ gc         : logi FALSE
[08:07:34.778] | : . ' , ; `  $ earlySignal: logi FALSE
[08:07:34.781] | : . ' , ; ` Backend: <‘MulticoreFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:34.781] | : . ' , ; makeFutureBackend(<multicore>) ... done
[08:07:34.781] | : . ' , plan(): plan_init() of ‘multicore’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:34.781] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.781] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.781] | : . ' , plan(): nbrOfWorkers() = 2
[08:07:34.782] | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
[08:07:34.782] | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
** Sum function 'A' with plan('multicore') ...
function (x, ...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, ...)
    }
    y
}
<bytecode: 0x563a59bffc88>
Arguments '...' exists: TRUE
[08:07:34.782] | : . future(..., label = NULL) ...
[08:07:34.782] | : . ' lazy: FALSE
[08:07:34.782] | : . ' stdout: TRUE
[08:07:34.782] | : . ' conditions: [n=1] ‘condition’
[08:07:34.782] | : . ' gc: FALSE
[08:07:34.783] | : . ' earlySignal: FALSE
[08:07:34.783] | : . ' getGlobalsAndPackages() ...
[08:07:34.783] | : . ' , Searching for globals ...
[08:07:34.789] | : . ' , ; globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[08:07:34.789] | : . ' , Searching for globals ... done
[08:07:34.789] | : . ' , Resolving globals: FALSE
[08:07:34.789] | : . ' , Tweak future expression to call with '...' arguments ...
[08:07:34.789] | : . ' , ; {
[08:07:34.789] | : . ' , ;     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:34.789] | : . ' , ;     "# expression in do.call(), because function called uses '...'  "
[08:07:34.789] | : . ' , ;     "# as a global variable                                         "
[08:07:34.789] | : . ' , ;     do.call(function(...) {
[08:07:34.789] | : . ' , ;         sum(x, ...)
[08:07:34.789] | : . ' , ;     }, args = future.call.arguments)
[08:07:34.789] | : . ' , ; }
[08:07:34.789] | : . ' , Tweak future expression to call with '...' arguments ... done
[08:07:34.789] | : . ' , Search for packages associated with the globals ...
[08:07:34.790] | : . ' , ; Packages associated with globals: [1] ‘base’
[08:07:34.790] | : . ' , ; Packages: [1] ‘base’
[08:07:34.790] | : . ' , Search for packages associated with the globals ... done
[08:07:34.790] | : . ' , Packages after dropping 'base': [0] 
[08:07:34.790] | : . ' , globals: [2] ‘x’, ‘future.call.arguments’
[08:07:34.790] | : . ' , packages: [0] 
[08:07:34.791] | : . ' getGlobalsAndPackages() ... done
[08:07:34.791] | : . ' run() for ‘Future’ (<unnamed-7>) ...
[08:07:34.791] | : . ' , state: ‘created’
[08:07:34.791] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.791] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.791] | : . ' , Using MulticoreFutureBackend ...
[08:07:34.791] | : . ' , ; Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:34.792] | : . ' , ; Launching futures ...
[08:07:34.793] | : . ' , ; ` launchFuture() for MulticoreFutureBackend ...
[08:07:34.793] | : . ' , ; ` | getFutureData() ...
[08:07:34.793] | : . ' , ; ` | : getFutureCore() ...
[08:07:34.793] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:34.793] | : . ' , ; ` | : getFutureCore() ... done
[08:07:34.793] | : . ' , ; ` | : getFutureCapture() ...
[08:07:34.793] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:34.793] | : . ' , ; ` | : getFutureContext() ...
[08:07:34.794] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.794] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:34.794] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.794] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:34.794] | : . ' , ; ` | : getFutureContext() ... done
[08:07:34.795] | : . ' , ; ` | getFutureData() ... done
[08:07:34.795] | : . ' , ; ` | requestCore(..., workers = 2) ...
[08:07:34.795] | : . ' , ; ` | requestCore(..., workers = 2) ... done
[08:07:34.798] | : . ' , ; ` | MulticoreFuture started
[08:07:34.799] | : . ' , ; ` launchFuture() for MulticoreFutureBackend ... done
[08:07:34.799] | : . ' , ; Launching futures ... done
[08:07:34.799] | : . ' , ; Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:34.799] | : . ' , Using MulticoreFutureBackend ... done
[08:07:34.800] | : . ' run() for ‘Future’ (<unnamed-7>) ... done
[08:07:34.800] | : . future(..., label = NULL) ... done
[08:07:34.801] | : . value() for MulticoreFuture (<unnamed-7>) ...
[08:07:34.802] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.802] | : . ' , ; ` | : Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:34.802] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.803] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.803] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.803] | : . ' result() for MulticoreFuture ...
[08:07:34.803] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:34.804] | : . ' , ; ` | : . ' New stack:
[08:07:34.804] | : . ' , ; ` | : . ' List of 1
[08:07:34.804] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.804] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.804] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:34.804] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.804] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.804] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.804] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.804] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.809] | : . ' , ; ` | : . ' Old stack:
[08:07:34.809] | : . ' , ; ` | : . ' List of 1
[08:07:34.809] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.809] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.809] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.809] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:34.809] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.809] | : . ' , ; ` | : . '     ...)  
[08:07:34.809] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.809] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.809] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.809] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:34.809] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.809] | : . ' , ; ` | : . '     ...)  
[08:07:34.809] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.809] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.815] | : . ' , ; ` | : . ' Not identical
[08:07:34.815] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:34.816] | : . ' , ; ` | : . ' , List of 2
[08:07:34.816] | : . ' , ; ` | : . ' ,  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.816] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.816] | : . ' , ; ` | : . ' ,  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.816] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.816] | : . ' , ; ` | : . ' ,     ...)  
[08:07:34.816] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.816] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:34.816] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.816] | : . ' , ; ` | : . ' ,     ...)  
[08:07:34.816] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.824] | : . ' , ; ` | : . ' , Formals differ
[08:07:34.824] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:34.824] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:34.824] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:34.825] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:34.825] | : . ' , ; ` | : . List of future strategies:
[08:07:34.825] | : . ' , ; ` | : . 1. sequential:
[08:07:34.825] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.825] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:34.825] | : . ' , ; ` | : .    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.825] | : . ' , ; ` | : . List of 1
[08:07:34.825] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.825] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.825] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:34.825] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.825] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.825] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.825] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.825] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.829] | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:34.829] | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:34.829] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.830] | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:34.830] | : . ' , ; ` | : . ' , function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.830] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.830] | : . ' , ; ` | : . ' ,  - attr(*, "init")= logi TRUE
[08:07:34.830] | : . ' , ; ` | : . ' ,  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.830] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.830] | : . ' , ; ` | : . ' ,  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.830] | : . ' , ; ` | : . ' ,  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.835] | : . ' , ; ` | : . ' , init: TRUE
[08:07:34.835] | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ...
[08:07:34.835] | : . ' , ; ` | : . ' , ; Backend function: <‘NULL’>
[08:07:34.835] | : . ' , ; ` | : . ' , ; Evaluator tweak arguments: [n=0]
[08:07:34.836] | : . ' , ; ` | : . ' , ;  list()
[08:07:34.836] | : . ' , ; ` | : . ' , ; Evaluator formal arguments: [n=2]
[08:07:34.836] | : . ' , ; ` | : . ' , ;  list()
[08:07:34.836] | : . ' , ; ` | : . ' , ; Backend factory arguments: [n=2]
[08:07:34.836] | : . ' , ; ` | : . ' , ; Dotted pair list of 2
[08:07:34.836] | : . ' , ; ` | : . ' , ;  $ gc         : logi FALSE
[08:07:34.836] | : . ' , ; ` | : . ' , ;  $ earlySignal: logi FALSE
[08:07:34.838] | : . ' , ; ` | : . ' , ; Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:34.838] | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ... done
[08:07:34.838] | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:34.838] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.838] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 1
[08:07:34.838] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.838] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.838] | : . ' , ; ` | assign_globals() ...
[08:07:34.839] | : . ' , ; ` | List of 2
[08:07:34.839] | : . ' , ; ` |  $ x                    : int [1:2] 1 2
[08:07:34.839] | : . ' , ; ` |  $ future.call.arguments:List of 1
[08:07:34.839] | : . ' , ; ` |   ..$ : num 3
[08:07:34.839] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:34.839] | : . ' , ; ` |  - attr(*, "where")=List of 2
[08:07:34.839] | : . ' , ; ` |   ..$ x                    :<environment: 0x563a5aab19a8> 
[08:07:34.839] | : . ' , ; ` |   ..$ future.call.arguments:<environment: 0x563a5aab19a8> 
[08:07:34.839] | : . ' , ; ` |  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:34.839] | : . ' , ; ` |  - attr(*, "resolved")= logi FALSE
[08:07:34.839] | : . ' , ; ` |  - attr(*, "total_size")= num NA
[08:07:34.839] | : . ' , ; ` |  - attr(*, "already-done")= logi TRUE
[08:07:34.842] | : . ' , ; ` | - copied ‘x’ to environment
[08:07:34.843] | : . ' , ; ` | - copied ‘future.call.arguments’ to environment
[08:07:34.843] | : . ' , ; ` | assign_globals() ... done
[08:07:34.845] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.845] | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.845] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.845] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:07:34.845] | : . ' , ; ` | : . ' , New stack:
[08:07:34.845] | : . ' , ; ` | : . ' , List of 1
[08:07:34.845] | : . ' , ; ` | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.845] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.845] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.845] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:34.845] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.845] | : . ' , ; ` | : . ' ,     ...)  
[08:07:34.845] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.845] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.845] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.845] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:34.845] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.845] | : . ' , ; ` | : . ' ,     ...)  
[08:07:34.845] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.845] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.849] | : . ' , ; ` | : . ' , Old stack:
[08:07:34.849] | : . ' , ; ` | : . ' , List of 1
[08:07:34.849] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.849] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.849] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:34.849] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.849] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.849] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.849] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.849] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a597134e0> 
[08:07:34.849] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.849] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.849] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.852] | : . ' , ; ` | : . ' , Not identical
[08:07:34.852] | : . ' , ; ` | : . ' , all.equal() for future ...
[08:07:34.852] | : . ' , ; ` | : . ' , ; List of 2
[08:07:34.852] | : . ' , ; ` | : . ' , ;  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.852] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.852] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:34.852] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:34.852] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.852] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:34.852] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.852] | : . ' , ; ` | : . ' , ;  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.852] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.852] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a597134e0> 
[08:07:34.852] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.852] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.859] | : . ' , ; ` | : . ' , ; Formals differ
[08:07:34.859] | : . ' , ; ` | : . ' , all.equal() for future ... done
[08:07:34.859] | : . ' , ; ` | : . ' , Future strategies differ at level 1
[08:07:34.859] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:07:34.859] | : . ' , ; ` | : . ' plan(): Setting new future backend stack:
[08:07:34.860] | : . ' , ; ` | : . ' List of future strategies:
[08:07:34.860] | : . ' , ; ` | : . ' 1. multicore:
[08:07:34.860] | : . ' , ; ` | : . '    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:34.860] | : . ' , ; ` | : . '    - tweaked: FALSE
[08:07:34.860] | : . ' , ; ` | : . '    - call: plan(strategy, substitute = FALSE)
[08:07:34.860] | : . ' , ; ` | : . ' List of 1
[08:07:34.860] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.860] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.860] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.860] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:34.860] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.860] | : . ' , ; ` | : . '     ...)  
[08:07:34.860] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.860] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.860] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.860] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:34.860] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.860] | : . ' , ; ` | : . '     ...)  
[08:07:34.860] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.860] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.863] | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:34.863] | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:34.863] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.863] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.864] | : . ' , ; ` | : . ' plan(): nbrOfWorkers() = 2
[08:07:34.864] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.864] | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.864] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.865] | : . ' , readImmediateCondition() ...
[08:07:34.865] | : . ' , ; Path: ‘/tmp/RtmpCGAMSK/.future/immediateConditions’
[08:07:34.866] | : . ' , ; Number of RDS files: 0
[08:07:34.866] | : . ' , ; Returned conditions set:
[08:07:34.866] | : . ' , ;  list()
[08:07:34.866] | : . ' , readImmediateCondition() ... done
[08:07:34.867] | : . ' , result() for MulticoreFuture ...
[08:07:34.867] | : . ' , result() for MulticoreFuture ... done
[08:07:34.867] | : . ' , signalConditions() ...
[08:07:34.867] | : . ' , ; include = ‘immediateCondition’
[08:07:34.867] | : . ' , ; exclude = 
[08:07:34.868] | : . ' , ; resignal = FALSE
[08:07:34.868] | : . ' , ; Number of conditions: 6
[08:07:34.868] | : . ' , ;  int 6
[08:07:34.868] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.869] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.869] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.869] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.869] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.869] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.869] | : . ' , signalConditions() ... done
[08:07:34.870] | : . ' result() for MulticoreFuture ... done
[08:07:34.870] | : . ' result() for MulticoreFuture ...
[08:07:34.870] | : . ' result() for MulticoreFuture ... done
[08:07:34.870] | : . ' signalConditions() ...
[08:07:34.870] | : . ' , include = ‘immediateCondition’
[08:07:34.870] | : . ' , exclude = 
[08:07:34.870] | : . ' , resignal = FALSE
[08:07:34.871] | : . ' , Number of conditions: 6
[08:07:34.871] | : . ' ,  int 6
[08:07:34.871] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.871] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.871] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.872] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.872] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.872] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.872] | : . ' signalConditions() ... done
[08:07:34.872] | : . ' relay stdout ...
[08:07:34.872] | : . ' relay stdout ... done
[08:07:34.872] | : . ' check for misuse ...
[08:07:34.873] | : . ' check for misuse ... done
[08:07:34.873] | : . ' relay conditions ...
[08:07:34.873] | : . ' , Future state: ‘finished’
[08:07:34.873] | : . ' , result() for MulticoreFuture ...
[08:07:34.873] | : . ' , result() for MulticoreFuture ... done
[08:07:34.873] | : . ' , signalConditions() ...
[08:07:34.873] | : . ' , ; include = ‘condition’
[08:07:34.873] | : . ' , ; exclude = ‘immediateCondition’
[08:07:34.874] | : . ' , ; resignal = TRUE
[08:07:34.874] | : . ' , ; Number of conditions: 6
[08:07:34.874] | : . ' , ;  int 6
[08:07:34.874] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.874] | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.799] | : . ' , ; ` | attachPackages() ...
[08:07:34.875] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.875] | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.799] | : . ' , ; ` | : packages: [n=1] ‘future’
[08:07:34.875] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.875] | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.800] | : . ' , ; ` | attachPackages() ... done
[08:07:34.875] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.875] | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.800] | : . ' , ; ` | attachPackages() ...
[08:07:34.876] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.876] | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.800] | : . ' , ; ` | : packages: [n=0] 
[08:07:34.876] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.876] | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.801] | : . ' , ; ` | attachPackages() ... done
[08:07:34.876] | : . ' , signalConditions() ... done
[08:07:34.876] | : . ' relay conditions ... done
[08:07:34.876] | : . value() for MulticoreFuture (<unnamed-7>) ... done
[1] 6
** Sum function 'B' with plan('multicore') ...
function (x, ...) 
{
    sumt <- function(x) {
        message("Arguments '...' exists: ", exists("...", inherits = TRUE))
        y %<-% {
            sum(x, ...)
        }
        y
    }
    sumt(x)
}
<bytecode: 0x563a58dc9f88>
Arguments '...' exists: TRUE
[08:07:34.877] | : . future(..., label = NULL) ...
[08:07:34.877] | : . ' lazy: FALSE
[08:07:34.877] | : . ' stdout: TRUE
[08:07:34.878] | : . ' conditions: [n=1] ‘condition’
[08:07:34.878] | : . ' gc: FALSE
[08:07:34.878] | : . ' earlySignal: FALSE
[08:07:34.878] | : . ' getGlobalsAndPackages() ...
[08:07:34.878] | : . ' , Searching for globals ...
[08:07:34.886] | : . ' , ; globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[08:07:34.886] | : . ' , Searching for globals ... done
[08:07:34.886] | : . ' , Resolving globals: FALSE
[08:07:34.888] | : . ' , Tweak future expression to call with '...' arguments ...
[08:07:34.888] | : . ' , ; {
[08:07:34.888] | : . ' , ;     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:34.888] | : . ' , ;     "# expression in do.call(), because function called uses '...'  "
[08:07:34.888] | : . ' , ;     "# as a global variable                                         "
[08:07:34.888] | : . ' , ;     do.call(function(...) {
[08:07:34.888] | : . ' , ;         sum(x, ...)
[08:07:34.888] | : . ' , ;     }, args = future.call.arguments)
[08:07:34.888] | : . ' , ; }
[08:07:34.889] | : . ' , Tweak future expression to call with '...' arguments ... done
[08:07:34.889] | : . ' , Search for packages associated with the globals ...
[08:07:34.889] | : . ' , ; Packages associated with globals: [1] ‘base’
[08:07:34.889] | : . ' , ; Packages: [1] ‘base’
[08:07:34.890] | : . ' , Search for packages associated with the globals ... done
[08:07:34.890] | : . ' , Packages after dropping 'base': [0] 
[08:07:34.890] | : . ' , globals: [2] ‘x’, ‘future.call.arguments’
[08:07:34.890] | : . ' , packages: [0] 
[08:07:34.890] | : . ' getGlobalsAndPackages() ... done
[08:07:34.891] | : . ' run() for ‘Future’ (<unnamed-8>) ...
[08:07:34.891] | : . ' , state: ‘created’
[08:07:34.891] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.891] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.891] | : . ' , Using MulticoreFutureBackend ...
[08:07:34.891] | : . ' , ; Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:07:34.891] | : . ' , ; Launching futures ...
[08:07:34.891] | : . ' , ; ` launchFuture() for MulticoreFutureBackend ...
[08:07:34.892] | : . ' , ; ` | getFutureData() ...
[08:07:34.892] | : . ' , ; ` | : getFutureCore() ...
[08:07:34.892] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:34.892] | : . ' , ; ` | : getFutureCore() ... done
[08:07:34.892] | : . ' , ; ` | : getFutureCapture() ...
[08:07:34.892] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:34.892] | : . ' , ; ` | : getFutureContext() ...
[08:07:34.892] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.893] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:34.893] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.893] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:34.893] | : . ' , ; ` | : getFutureContext() ... done
[08:07:34.893] | : . ' , ; ` | getFutureData() ... done
[08:07:34.893] | : . ' , ; ` | requestCore(..., workers = 2) ...
[08:07:34.893] | : . ' , ; ` | requestCore(..., workers = 2) ... done
[08:07:34.895] | : . ' , ; ` | MulticoreFuture started
[08:07:34.896] | : . ' , ; ` launchFuture() for MulticoreFutureBackend ... done
[08:07:34.896] | : . ' , ; Launching futures ... done
[08:07:34.896] | : . ' , ; Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:34.897] | : . ' , Using MulticoreFutureBackend ... done
[08:07:34.897] | : . ' run() for ‘Future’ (<unnamed-8>) ... done
[08:07:34.897] | : . future(..., label = NULL) ... done
[08:07:34.897] | : . value() for MulticoreFuture (<unnamed-8>) ...
[08:07:34.898] | : . ' result() for MulticoreFuture ...
[08:07:34.899] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.899] | : . ' , ; ` | : Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:34.899] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.900] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.900] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.900] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:34.901] | : . ' , ; ` | : . ' New stack:
[08:07:34.901] | : . ' , ; ` | : . ' List of 1
[08:07:34.901] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.901] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.901] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:34.901] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.901] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.901] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.901] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.901] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.906] | : . ' , ; ` | : . ' Old stack:
[08:07:34.906] | : . ' , ; ` | : . ' List of 1
[08:07:34.906] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.906] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.906] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.906] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:34.906] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.906] | : . ' , ; ` | : . '     ...)  
[08:07:34.906] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.906] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.906] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.906] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:34.906] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.906] | : . ' , ; ` | : . '     ...)  
[08:07:34.906] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.906] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.911] | : . ' , ; ` | : . ' Not identical
[08:07:34.911] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:34.912] | : . ' , ; ` | : . ' , List of 2
[08:07:34.912] | : . ' , ; ` | : . ' ,  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.912] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.912] | : . ' , ; ` | : . ' ,  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.912] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.912] | : . ' , ; ` | : . ' ,     ...)  
[08:07:34.912] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.912] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:34.912] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.912] | : . ' , ; ` | : . ' ,     ...)  
[08:07:34.912] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.919] | : . ' , ; ` | : . ' , Formals differ
[08:07:34.920] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:34.920] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:34.920] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:34.920] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:34.920] | : . ' , ; ` | : . List of future strategies:
[08:07:34.920] | : . ' , ; ` | : . 1. sequential:
[08:07:34.920] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:34.920] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:34.920] | : . ' , ; ` | : .    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.921] | : . ' , ; ` | : . List of 1
[08:07:34.921] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.921] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.921] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:34.921] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.921] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.921] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.921] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.921] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.928] | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:34.928] | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:34.928] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.928] | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:34.928] | : . ' , ; ` | : . ' , function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.928] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.928] | : . ' , ; ` | : . ' ,  - attr(*, "init")= logi TRUE
[08:07:34.928] | : . ' , ; ` | : . ' ,  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.928] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.928] | : . ' , ; ` | : . ' ,  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.928] | : . ' , ; ` | : . ' ,  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.931] | : . ' , ; ` | : . ' , init: TRUE
[08:07:34.932] | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ...
[08:07:34.932] | : . ' , ; ` | : . ' , ; Backend function: <‘NULL’>
[08:07:34.932] | : . ' , ; ` | : . ' , ; Evaluator tweak arguments: [n=0]
[08:07:34.932] | : . ' , ; ` | : . ' , ;  list()
[08:07:34.932] | : . ' , ; ` | : . ' , ; Evaluator formal arguments: [n=2]
[08:07:34.932] | : . ' , ; ` | : . ' , ;  list()
[08:07:34.933] | : . ' , ; ` | : . ' , ; Backend factory arguments: [n=2]
[08:07:34.933] | : . ' , ; ` | : . ' , ; Dotted pair list of 2
[08:07:34.933] | : . ' , ; ` | : . ' , ;  $ gc         : logi FALSE
[08:07:34.933] | : . ' , ; ` | : . ' , ;  $ earlySignal: logi FALSE
[08:07:34.934] | : . ' , ; ` | : . ' , ; Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:34.934] | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ... done
[08:07:34.934] | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:34.934] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.934] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 1
[08:07:34.934] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.934] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.935] | : . ' , ; ` | assign_globals() ...
[08:07:34.935] | : . ' , ; ` | List of 2
[08:07:34.935] | : . ' , ; ` |  $ x                    : int [1:2] 1 2
[08:07:34.935] | : . ' , ; ` |  $ future.call.arguments:List of 1
[08:07:34.935] | : . ' , ; ` |   ..$ : num 3
[08:07:34.935] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:34.935] | : . ' , ; ` |  - attr(*, "where")=List of 2
[08:07:34.935] | : . ' , ; ` |   ..$ x                    :<environment: 0x563a5ace44e8> 
[08:07:34.935] | : . ' , ; ` |   ..$ future.call.arguments:<environment: 0x563a5ace4638> 
[08:07:34.935] | : . ' , ; ` |  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:34.935] | : . ' , ; ` |  - attr(*, "resolved")= logi FALSE
[08:07:34.935] | : . ' , ; ` |  - attr(*, "total_size")= num NA
[08:07:34.935] | : . ' , ; ` |  - attr(*, "already-done")= logi TRUE
[08:07:34.938] | : . ' , ; ` | - copied ‘x’ to environment
[08:07:34.939] | : . ' , ; ` | - copied ‘future.call.arguments’ to environment
[08:07:34.939] | : . ' , ; ` | assign_globals() ... done
[08:07:34.941] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.941] | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.941] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.941] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:07:34.941] | : . ' , ; ` | : . ' , New stack:
[08:07:34.941] | : . ' , ; ` | : . ' , List of 1
[08:07:34.941] | : . ' , ; ` | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.941] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.941] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.941] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:34.941] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.941] | : . ' , ; ` | : . ' ,     ...)  
[08:07:34.941] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.941] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.941] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.941] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:34.941] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.941] | : . ' , ; ` | : . ' ,     ...)  
[08:07:34.941] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.941] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.945] | : . ' , ; ` | : . ' , Old stack:
[08:07:34.945] | : . ' , ; ` | : . ' , List of 1
[08:07:34.945] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.945] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.945] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:34.945] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.945] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.945] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.945] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.945] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a8e75d0> 
[08:07:34.945] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.945] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.945] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.949] | : . ' , ; ` | : . ' , Not identical
[08:07:34.949] | : . ' , ; ` | : . ' , all.equal() for future ...
[08:07:34.949] | : . ' , ; ` | : . ' , ; List of 2
[08:07:34.949] | : . ' , ; ` | : . ' , ;  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.949] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.949] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:34.949] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:34.949] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.949] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:34.949] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.949] | : . ' , ; ` | : . ' , ;  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.949] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.949] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a8e75d0> 
[08:07:34.949] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.949] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.955] | : . ' , ; ` | : . ' , ; Formals differ
[08:07:34.955] | : . ' , ; ` | : . ' , all.equal() for future ... done
[08:07:34.955] | : . ' , ; ` | : . ' , Future strategies differ at level 1
[08:07:34.955] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:07:34.955] | : . ' , ; ` | : . ' plan(): Setting new future backend stack:
[08:07:34.955] | : . ' , ; ` | : . ' List of future strategies:
[08:07:34.955] | : . ' , ; ` | : . ' 1. multicore:
[08:07:34.955] | : . ' , ; ` | : . '    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:34.955] | : . ' , ; ` | : . '    - tweaked: FALSE
[08:07:34.955] | : . ' , ; ` | : . '    - call: plan(strategy, substitute = FALSE)
[08:07:34.956] | : . ' , ; ` | : . ' List of 1
[08:07:34.956] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:34.956] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:34.956] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:34.956] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:34.956] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.956] | : . ' , ; ` | : . '     ...)  
[08:07:34.956] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.956] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.956] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:34.956] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:34.956] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:34.956] | : . ' , ; ` | : . '     ...)  
[08:07:34.956] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:34.956] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:34.959] | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:34.959] | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:34.959] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.959] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.960] | : . ' , ; ` | : . ' plan(): nbrOfWorkers() = 2
[08:07:34.960] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:34.960] | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.960] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:34.960] | : . ' , readImmediateCondition() ...
[08:07:34.961] | : . ' , ; Path: ‘/tmp/RtmpCGAMSK/.future/immediateConditions’
[08:07:34.961] | : . ' , ; Number of RDS files: 0
[08:07:34.961] | : . ' , ; Returned conditions set:
[08:07:34.961] | : . ' , ;  list()
[08:07:34.962] | : . ' , readImmediateCondition() ... done
[08:07:34.962] | : . ' , result() for MulticoreFuture ...
[08:07:34.963] | : . ' , result() for MulticoreFuture ... done
[08:07:34.963] | : . ' , signalConditions() ...
[08:07:34.963] | : . ' , ; include = ‘immediateCondition’
[08:07:34.963] | : . ' , ; exclude = 
[08:07:34.963] | : . ' , ; resignal = FALSE
[08:07:34.963] | : . ' , ; Number of conditions: 6
[08:07:34.963] | : . ' , ;  int 6
[08:07:34.964] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.964] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.964] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.964] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.965] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.965] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.965] | : . ' , signalConditions() ... done
[08:07:34.965] | : . ' result() for MulticoreFuture ... done
[08:07:34.965] | : . ' result() for MulticoreFuture ...
[08:07:34.965] | : . ' result() for MulticoreFuture ... done
[08:07:34.966] | : . ' signalConditions() ...
[08:07:34.966] | : . ' , include = ‘immediateCondition’
[08:07:34.966] | : . ' , exclude = 
[08:07:34.966] | : . ' , resignal = FALSE
[08:07:34.966] | : . ' , Number of conditions: 6
[08:07:34.966] | : . ' ,  int 6
[08:07:34.967] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.967] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.967] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.967] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.967] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.967] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.968] | : . ' signalConditions() ... done
[08:07:34.968] | : . ' relay stdout ...
[08:07:34.968] | : . ' relay stdout ... done
[08:07:34.968] | : . ' check for misuse ...
[08:07:34.968] | : . ' check for misuse ... done
[08:07:34.968] | : . ' relay conditions ...
[08:07:34.968] | : . ' , Future state: ‘finished’
[08:07:34.968] | : . ' , result() for MulticoreFuture ...
[08:07:34.969] | : . ' , result() for MulticoreFuture ... done
[08:07:34.969] | : . ' , signalConditions() ...
[08:07:34.969] | : . ' , ; include = ‘condition’
[08:07:34.969] | : . ' , ; exclude = ‘immediateCondition’
[08:07:34.969] | : . ' , ; resignal = TRUE
[08:07:34.969] | : . ' , ; Number of conditions: 6
[08:07:34.969] | : . ' , ;  int 6
[08:07:34.970] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.970] | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.896] | : . ' , ; ` | attachPackages() ...
[08:07:34.970] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.970] | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.897] | : . ' , ; ` | : packages: [n=1] ‘future’
[08:07:34.971] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.971] | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.897] | : . ' , ; ` | attachPackages() ... done
[08:07:34.971] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.971] | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.897] | : . ' , ; ` | attachPackages() ...
[08:07:34.971] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.971] | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.898] | : . ' , ; ` | : packages: [n=0] 
[08:07:34.971] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:34.972] | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.898] | : . ' , ; ` | attachPackages() ... done
[08:07:34.972] | : . ' , signalConditions() ... done
[08:07:34.972] | : . ' relay conditions ... done
[08:07:34.972] | : . value() for MulticoreFuture (<unnamed-8>) ... done
[1] 6
** Sum function 'C' with plan('multicore') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y)
    }
    y
}
<bytecode: 0x563a5a91b218>
Arguments '...' exists: FALSE
[08:07:34.973] | : . future(..., label = NULL) ...
[08:07:34.973] | : . ' lazy: FALSE
[08:07:34.973] | : . ' stdout: TRUE
[08:07:34.973] | : . ' conditions: [n=1] ‘condition’
[08:07:34.973] | : . ' gc: FALSE
[08:07:34.973] | : . ' earlySignal: FALSE
[08:07:34.974] | : . ' getGlobalsAndPackages() ...
[08:07:34.974] | : . ' , Searching for globals ...
[08:07:34.983] | : . ' , ; globals found: [4] ‘{’, ‘sum’, ‘x’, ‘y’
[08:07:34.983] | : . ' , Searching for globals ... done
[08:07:34.984] | : . ' , Resolving globals: FALSE
[08:07:34.984] | : . ' , Search for packages associated with the globals ...
[08:07:34.984] | : . ' , ; Packages associated with globals: [1] ‘base’
[08:07:34.984] | : . ' , ; Packages: [1] ‘base’
[08:07:34.984] | : . ' , Search for packages associated with the globals ... done
[08:07:34.985] | : . ' , Packages after dropping 'base': [0] 
[08:07:34.985] | : . ' , globals: [2] ‘x’, ‘y’
[08:07:34.985] | : . ' , packages: [0] 
[08:07:34.985] | : . ' getGlobalsAndPackages() ... done
[08:07:34.985] | : . ' run() for ‘Future’ (<unnamed-9>) ...
[08:07:34.986] | : . ' , state: ‘created’
[08:07:34.986] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.986] | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.986] | : . ' , Using MulticoreFutureBackend ...
[08:07:34.986] | : . ' , ; Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:07:34.986] | : . ' , ; Launching futures ...
[08:07:34.986] | : . ' , ; ` launchFuture() for MulticoreFutureBackend ...
[08:07:34.987] | : . ' , ; ` | getFutureData() ...
[08:07:34.987] | : . ' , ; ` | : getFutureCore() ...
[08:07:34.987] | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:34.987] | : . ' , ; ` | : getFutureCore() ... done
[08:07:34.987] | : . ' , ; ` | : getFutureCapture() ...
[08:07:34.987] | : . ' , ; ` | : getFutureCapture() ... done
[08:07:34.987] | : . ' , ; ` | : getFutureContext() ...
[08:07:34.987] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.987] | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:34.988] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.988] | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:34.988] | : . ' , ; ` | : getFutureContext() ... done
[08:07:34.988] | : . ' , ; ` | getFutureData() ... done
[08:07:34.988] | : . ' , ; ` | requestCore(..., workers = 2) ...
[08:07:34.988] | : . ' , ; ` | requestCore(..., workers = 2) ... done
[08:07:34.990] | : . ' , ; ` | MulticoreFuture started
[08:07:34.991] | : . ' , ; ` launchFuture() for MulticoreFutureBackend ... done
[08:07:34.991] | : . ' , ; Launching futures ... done
[08:07:34.991] | : . ' , ; Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:34.992] | : . ' , Using MulticoreFutureBackend ... done
[08:07:34.992] | : . ' run() for ‘Future’ (<unnamed-9>) ... done
[08:07:34.993] | : . future(..., label = NULL) ... done
[08:07:34.993] | : . value() for MulticoreFuture (<unnamed-9>) ...
[08:07:34.993] | : . ' result() for MulticoreFuture ...
[08:07:34.994] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:34.994] | : . ' , ; ` | : Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:34.995] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:34.995] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:34.995] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:34.996] | : . ' , ; ` | : . all.equal() for FutureStrategyList ...
[08:07:34.996] | : . ' , ; ` | : . ' New stack:
[08:07:34.996] | : . ' , ; ` | : . ' List of 1
[08:07:34.996] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:34.996] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:34.996] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:34.996] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:34.996] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.996] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:34.996] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:34.996] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.001] | : . ' , ; ` | : . ' Old stack:
[08:07:35.001] | : . ' , ; ` | : . ' List of 1
[08:07:35.001] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.001] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.001] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.001] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:35.001] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.001] | : . ' , ; ` | : . '     ...)  
[08:07:35.001] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.001] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.001] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.001] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.001] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.001] | : . ' , ; ` | : . '     ...)  
[08:07:35.001] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.001] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.006] | : . ' , ; ` | : . ' Not identical
[08:07:35.007] | : . ' , ; ` | : . ' all.equal() for future ...
[08:07:35.007] | : . ' , ; ` | : . ' , List of 2
[08:07:35.007] | : . ' , ; ` | : . ' ,  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.007] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.007] | : . ' , ; ` | : . ' ,  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.007] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.007] | : . ' , ; ` | : . ' ,     ...)  
[08:07:35.007] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.007] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.007] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.007] | : . ' , ; ` | : . ' ,     ...)  
[08:07:35.007] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.018] | : . ' , ; ` | : . ' , Formals differ
[08:07:35.018] | : . ' , ; ` | : . ' all.equal() for future ... done
[08:07:35.018] | : . ' , ; ` | : . ' Future strategies differ at level 1
[08:07:35.018] | : . ' , ; ` | : . all.equal() for FutureStrategyList ... done
[08:07:35.019] | : . ' , ; ` | : . plan(): Setting new future backend stack:
[08:07:35.019] | : . ' , ; ` | : . List of future strategies:
[08:07:35.019] | : . ' , ; ` | : . 1. sequential:
[08:07:35.019] | : . ' , ; ` | : .    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:35.019] | : . ' , ; ` | : .    - tweaked: FALSE
[08:07:35.019] | : . ' , ; ` | : .    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.020] | : . ' , ; ` | : . List of 1
[08:07:35.020] | : . ' , ; ` | : .  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.020] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.020] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:35.020] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.020] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.020] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.020] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.020] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.024] | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:35.024] | : . ' , ; ` | : . plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:35.024] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.024] | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:35.025] | : . ' , ; ` | : . ' , function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.025] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.025] | : . ' , ; ` | : . ' ,  - attr(*, "init")= logi TRUE
[08:07:35.025] | : . ' , ; ` | : . ' ,  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.025] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.025] | : . ' , ; ` | : . ' ,  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.025] | : . ' , ; ` | : . ' ,  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.027] | : . ' , ; ` | : . ' , init: TRUE
[08:07:35.027] | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ...
[08:07:35.027] | : . ' , ; ` | : . ' , ; Backend function: <‘NULL’>
[08:07:35.027] | : . ' , ; ` | : . ' , ; Evaluator tweak arguments: [n=0]
[08:07:35.027] | : . ' , ; ` | : . ' , ;  list()
[08:07:35.028] | : . ' , ; ` | : . ' , ; Evaluator formal arguments: [n=2]
[08:07:35.028] | : . ' , ; ` | : . ' , ;  list()
[08:07:35.028] | : . ' , ; ` | : . ' , ; Backend factory arguments: [n=2]
[08:07:35.028] | : . ' , ; ` | : . ' , ; Dotted pair list of 2
[08:07:35.028] | : . ' , ; ` | : . ' , ;  $ gc         : logi FALSE
[08:07:35.028] | : . ' , ; ` | : . ' , ;  $ earlySignal: logi FALSE
[08:07:35.029] | : . ' , ; ` | : . ' , ; Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:35.029] | : . ' , ; ` | : . ' , makeFutureBackend(<sequential>) ... done
[08:07:35.030] | : . ' , ; ` | : . ' plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:35.030] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.030] | : . ' , ; ` | : . plan(): nbrOfWorkers() = 1
[08:07:35.030] | : . ' , ; ` | : plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:35.030] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.030] | : . ' , ; ` | assign_globals() ...
[08:07:35.030] | : . ' , ; ` | List of 2
[08:07:35.030] | : . ' , ; ` |  $ x: int [1:2] 1 2
[08:07:35.030] | : . ' , ; ` |  $ y: num 3
[08:07:35.030] | : . ' , ; ` |  - attr(*, "where")=List of 2
[08:07:35.030] | : . ' , ; ` |   ..$ x:<environment: 0x563a5b2ec4b0> 
[08:07:35.030] | : . ' , ; ` |   ..$ y:<environment: 0x563a5b2ec4b0> 
[08:07:35.030] | : . ' , ; ` |  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:35.030] | : . ' , ; ` |  - attr(*, "resolved")= logi FALSE
[08:07:35.030] | : . ' , ; ` |  - attr(*, "total_size")= num NA
[08:07:35.030] | : . ' , ; ` |  - attr(*, "already-done")= logi TRUE
[08:07:35.034] | : . ' , ; ` | - copied ‘x’ to environment
[08:07:35.034] | : . ' , ; ` | - copied ‘y’ to environment
[08:07:35.034] | : . ' , ; ` | assign_globals() ... done
[08:07:35.036] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.036] | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.036] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:35.036] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:07:35.037] | : . ' , ; ` | : . ' , New stack:
[08:07:35.037] | : . ' , ; ` | : . ' , List of 1
[08:07:35.037] | : . ' , ; ` | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.037] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.037] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.037] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:35.037] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.037] | : . ' , ; ` | : . ' ,     ...)  
[08:07:35.037] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.037] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.037] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.037] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.037] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.037] | : . ' , ; ` | : . ' ,     ...)  
[08:07:35.037] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.037] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.040] | : . ' , ; ` | : . ' , Old stack:
[08:07:35.041] | : . ' , ; ` | : . ' , List of 1
[08:07:35.041] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.041] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.041] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:35.041] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.041] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.041] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.041] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.041] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aa89110> 
[08:07:35.041] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.041] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.041] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.044] | : . ' , ; ` | : . ' , Not identical
[08:07:35.045] | : . ' , ; ` | : . ' , all.equal() for future ...
[08:07:35.045] | : . ' , ; ` | : . ' , ; List of 2
[08:07:35.045] | : . ' , ; ` | : . ' , ;  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.045] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.045] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:35.045] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.045] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.045] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:35.045] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.045] | : . ' , ; ` | : . ' , ;  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.045] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.045] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aa89110> 
[08:07:35.045] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.045] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.050] | : . ' , ; ` | : . ' , ; Formals differ
[08:07:35.050] | : . ' , ; ` | : . ' , all.equal() for future ... done
[08:07:35.051] | : . ' , ; ` | : . ' , Future strategies differ at level 1
[08:07:35.051] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:07:35.051] | : . ' , ; ` | : . ' plan(): Setting new future backend stack:
[08:07:35.051] | : . ' , ; ` | : . ' List of future strategies:
[08:07:35.051] | : . ' , ; ` | : . ' 1. multicore:
[08:07:35.051] | : . ' , ; ` | : . '    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:35.051] | : . ' , ; ` | : . '    - tweaked: FALSE
[08:07:35.051] | : . ' , ; ` | : . '    - call: plan(strategy, substitute = FALSE)
[08:07:35.051] | : . ' , ; ` | : . ' List of 1
[08:07:35.051] | : . ' , ; ` | : . '  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.051] | : . ' , ; ` | : . '     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.051] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.051] | : . ' , ; ` | : . '   ..- attr(*, "init")= chr "done"
[08:07:35.051] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.051] | : . ' , ; ` | : . '     ...)  
[08:07:35.051] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.051] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.051] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.051] | : . ' , ; ` | : . '   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.051] | : . ' , ; ` | : . '   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.051] | : . ' , ; ` | : . '     ...)  
[08:07:35.051] | : . ' , ; ` | : . '   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.051] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.054] | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:35.054] | : . ' , ; ` | : . ' plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:35.055] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.055] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.055] | : . ' , ; ` | : . ' plan(): nbrOfWorkers() = 2
[08:07:35.055] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:35.055] | : . ' , ; ` | : plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.055] | : . ' , ; ` | plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.056] | : . ' , readImmediateCondition() ...
[08:07:35.056] | : . ' , ; Path: ‘/tmp/RtmpCGAMSK/.future/immediateConditions’
[08:07:35.056] | : . ' , ; Number of RDS files: 0
[08:07:35.057] | : . ' , ; Returned conditions set:
[08:07:35.057] | : . ' , ;  list()
[08:07:35.057] | : . ' , readImmediateCondition() ... done
[08:07:35.058] | : . ' , result() for MulticoreFuture ...
[08:07:35.058] | : . ' , result() for MulticoreFuture ... done
[08:07:35.058] | : . ' , signalConditions() ...
[08:07:35.058] | : . ' , ; include = ‘immediateCondition’
[08:07:35.058] | : . ' , ; exclude = 
[08:07:35.058] | : . ' , ; resignal = FALSE
[08:07:35.059] | : . ' , ; Number of conditions: 6
[08:07:35.059] | : . ' , ;  int 6
[08:07:35.059] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.059] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.060] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.060] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.060] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.060] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.060] | : . ' , signalConditions() ... done
[08:07:35.060] | : . ' result() for MulticoreFuture ... done
[08:07:35.061] | : . ' result() for MulticoreFuture ...
[08:07:35.061] | : . ' result() for MulticoreFuture ... done
[08:07:35.061] | : . ' signalConditions() ...
[08:07:35.061] | : . ' , include = ‘immediateCondition’
[08:07:35.061] | : . ' , exclude = 
[08:07:35.061] | : . ' , resignal = FALSE
[08:07:35.061] | : . ' , Number of conditions: 6
[08:07:35.062] | : . ' ,  int 6
[08:07:35.062] | : . ' , Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.062] | : . ' , Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.062] | : . ' , Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.063] | : . ' , Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.063] | : . ' , Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.063] | : . ' , Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.063] | : . ' signalConditions() ... done
[08:07:35.063] | : . ' relay stdout ...
[08:07:35.063] | : . ' relay stdout ... done
[08:07:35.063] | : . ' check for misuse ...
[08:07:35.064] | : . ' check for misuse ... done
[08:07:35.064] | : . ' relay conditions ...
[08:07:35.064] | : . ' , Future state: ‘finished’
[08:07:35.064] | : . ' , result() for MulticoreFuture ...
[08:07:35.064] | : . ' , result() for MulticoreFuture ... done
[08:07:35.064] | : . ' , signalConditions() ...
[08:07:35.064] | : . ' , ; include = ‘condition’
[08:07:35.064] | : . ' , ; exclude = ‘immediateCondition’
[08:07:35.065] | : . ' , ; resignal = TRUE
[08:07:35.065] | : . ' , ; Number of conditions: 6
[08:07:35.065] | : . ' , ;  int 6
[08:07:35.065] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.065] | : . ' , ; Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.991] | : . ' , ; ` | attachPackages() ...
[08:07:35.066] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.066] | : . ' , ; Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.992] | : . ' , ; ` | : packages: [n=1] ‘future’
[08:07:35.066] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.066] | : . ' , ; Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.992] | : . ' , ; ` | attachPackages() ... done
[08:07:35.066] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.066] | : . ' , ; Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.992] | : . ' , ; ` | attachPackages() ...
[08:07:35.067] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.067] | : . ' , ; Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.993] | : . ' , ; ` | : packages: [n=0] 
[08:07:35.067] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.067] | : . ' , ; Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:34.993] | : . ' , ; ` | attachPackages() ... done
[08:07:35.067] | : . ' , signalConditions() ... done
[08:07:35.067] | : . ' relay conditions ... done
[08:07:35.068] | : . value() for MulticoreFuture (<unnamed-9>) ... done
[1] 6
** Sum function 'D' with plan('multicore') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y, ...)
    }
    y
}
<bytecode: 0x563a5ab8a2d0>
Arguments '...' exists: FALSE
[08:07:35.068] | : . future(..., label = NULL) ...
[08:07:35.068] | : . ' lazy: FALSE
[08:07:35.068] | : . ' stdout: TRUE
[08:07:35.069] | : . ' conditions: [n=1] ‘condition’
[08:07:35.069] | : . ' gc: FALSE
[08:07:35.069] | : . ' earlySignal: FALSE
[08:07:35.069] | : . ' getGlobalsAndPackages() ...
[08:07:35.069] | : . ' , Searching for globals ...
[08:07:35.080] | : . ' , ; globals found: [5] ‘{’, ‘sum’, ‘x’, ‘y’, ‘...’
[08:07:35.080] | : . ' , Searching for globals ... done
[08:07:35.080] | : . ' , Resolving globals: FALSE
[08:07:35.081] | : . ' , Tweak future expression to call with '...' arguments ...
[08:07:35.081] | : . ' , ; Search for packages associated with the globals ...
[08:07:35.081] | : . ' , ; ` Packages associated with globals: [1] ‘base’
[08:07:35.081] | : . ' , ; ` Packages: [1] ‘base’
[08:07:35.082] | : . ' , ; Search for packages associated with the globals ... done
[08:07:35.082] | : . ' , ; Packages after dropping 'base': [0] 
[08:07:35.082] | : . ' , ; globals: [2] ‘x’, ‘y’
[08:07:35.082] | : . ' , ; packages: [0] 
[08:07:35.082] | : . ' , Tweak future expression to call with '...' arguments ... done
[08:07:35.082] | : . ' , run() for ‘Future’ (<unnamed-10>) ...
[08:07:35.082] | : . ' , ; state: ‘created’
[08:07:35.083] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.083] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.083] | : . ' , ; Using MulticoreFutureBackend ...
[08:07:35.083] | : . ' , ; ` Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:07:35.083] | : . ' , ; ` Launching futures ...
[08:07:35.083] | : . ' , ; ` | launchFuture() for MulticoreFutureBackend ...
[08:07:35.083] | : . ' , ; ` | : getFutureData() ...
[08:07:35.083] | : . ' , ; ` | : . getFutureCore() ...
[08:07:35.084] | : . ' , ; ` | : . ' Packages needed by the future expression (n = 0): <none>
[08:07:35.084] | : . ' , ; ` | : . getFutureCore() ... done
[08:07:35.084] | : . ' , ; ` | : . getFutureCapture() ...
[08:07:35.084] | : . ' , ; ` | : . getFutureCapture() ... done
[08:07:35.084] | : . ' , ; ` | : . getFutureContext() ...
[08:07:35.084] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.084] | : . ' , ; ` | : . ' , Getting stack without first backend: [n=0] 
[08:07:35.084] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.084] | : . ' , ; ` | : . ' Packages needed by future backend (n = 0): <none>
[08:07:35.085] | : . ' , ; ` | : . getFutureContext() ... done
[08:07:35.085] | : . ' , ; ` | : getFutureData() ... done
[08:07:35.085] | : . ' , ; ` | : requestCore(..., workers = 2) ...
[08:07:35.085] | : . ' , ; ` | : requestCore(..., workers = 2) ... done
[08:07:35.087] | : . ' , ; ` | : MulticoreFuture started
[08:07:35.087] | : . ' , ; ` | launchFuture() for MulticoreFutureBackend ... done
[08:07:35.088] | : . ' , ; ` Launching futures ... done
[08:07:35.088] | : . ' , ; ` Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:35.088] | : . ' , ; Using MulticoreFutureBackend ... done
[08:07:35.088] | : . ' , run() for ‘Future’ (<unnamed-10>) ... done
[08:07:35.089] | : . ' getGlobalsAndPackages() ... done
[08:07:35.089] | : . ' value() for MulticoreFuture (<unnamed-10>) ...
[08:07:35.089] | : . ' , result() for MulticoreFuture ...
[08:07:35.091] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.091] | : . ' , ; ` | : . Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:35.091] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.092] | : . ' , ; ` | : plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.092] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:35.092] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ...
[08:07:35.092] | : . ' , ; ` | : . ' , New stack:
[08:07:35.093] | : . ' , ; ` | : . ' , List of 1
[08:07:35.093] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.093] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.093] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:07:35.093] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.093] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.093] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.093] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.093] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.097] | : . ' , ; ` | : . ' , Old stack:
[08:07:35.097] | : . ' , ; ` | : . ' , List of 1
[08:07:35.097] | : . ' , ; ` | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.097] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.097] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.097] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:35.097] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.097] | : . ' , ; ` | : . ' ,     ...)  
[08:07:35.097] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.097] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.097] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.097] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.097] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.097] | : . ' , ; ` | : . ' ,     ...)  
[08:07:35.097] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.097] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.103] | : . ' , ; ` | : . ' , Not identical
[08:07:35.103] | : . ' , ; ` | : . ' , all.equal() for future ...
[08:07:35.103] | : . ' , ; ` | : . ' , ; List of 2
[08:07:35.103] | : . ' , ; ` | : . ' , ;  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.103] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.103] | : . ' , ; ` | : . ' , ;  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.103] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.103] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:35.103] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.103] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.103] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.103] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:35.103] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.115] | : . ' , ; ` | : . ' , ; Formals differ
[08:07:35.116] | : . ' , ; ` | : . ' , all.equal() for future ... done
[08:07:35.116] | : . ' , ; ` | : . ' , Future strategies differ at level 1
[08:07:35.116] | : . ' , ; ` | : . ' all.equal() for FutureStrategyList ... done
[08:07:35.116] | : . ' , ; ` | : . ' plan(): Setting new future backend stack:
[08:07:35.116] | : . ' , ; ` | : . ' List of future strategies:
[08:07:35.116] | : . ' , ; ` | : . ' 1. sequential:
[08:07:35.116] | : . ' , ; ` | : . '    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:35.116] | : . ' , ; ` | : . '    - tweaked: FALSE
[08:07:35.116] | : . ' , ; ` | : . '    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.117] | : . ' , ; ` | : . ' List of 1
[08:07:35.117] | : . ' , ; ` | : . '  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.117] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.117] | : . ' , ; ` | : . '   ..- attr(*, "init")= logi TRUE
[08:07:35.117] | : . ' , ; ` | : . '   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.117] | : . ' , ; ` | : . '   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.117] | : . ' , ; ` | : . '   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.117] | : . ' , ; ` | : . '   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.117] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.120] | : . ' , ; ` | : . ' plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:35.120] | : . ' , ; ` | : . ' plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:35.121] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.121] | : . ' , ; ` | : . ' , plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:35.121] | : . ' , ; ` | : . ' , ; function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.121] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.121] | : . ' , ; ` | : . ' , ;  - attr(*, "init")= logi TRUE
[08:07:35.121] | : . ' , ; ` | : . ' , ;  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.121] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.121] | : . ' , ; ` | : . ' , ;  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.121] | : . ' , ; ` | : . ' , ;  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.123] | : . ' , ; ` | : . ' , ; init: TRUE
[08:07:35.123] | : . ' , ; ` | : . ' , ; makeFutureBackend(<sequential>) ...
[08:07:35.123] | : . ' , ; ` | : . ' , ; ` Backend function: <‘NULL’>
[08:07:35.124] | : . ' , ; ` | : . ' , ; ` Evaluator tweak arguments: [n=0]
[08:07:35.124] | : . ' , ; ` | : . ' , ; `  list()
[08:07:35.124] | : . ' , ; ` | : . ' , ; ` Evaluator formal arguments: [n=2]
[08:07:35.124] | : . ' , ; ` | : . ' , ; `  list()
[08:07:35.124] | : . ' , ; ` | : . ' , ; ` Backend factory arguments: [n=2]
[08:07:35.125] | : . ' , ; ` | : . ' , ; ` Dotted pair list of 2
[08:07:35.125] | : . ' , ; ` | : . ' , ; `  $ gc         : logi FALSE
[08:07:35.125] | : . ' , ; ` | : . ' , ; `  $ earlySignal: logi FALSE
[08:07:35.126] | : . ' , ; ` | : . ' , ; ` Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:35.126] | : . ' , ; ` | : . ' , ; makeFutureBackend(<sequential>) ... done
[08:07:35.126] | : . ' , ; ` | : . ' , plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:35.126] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.126] | : . ' , ; ` | : . ' plan(): nbrOfWorkers() = 1
[08:07:35.126] | : . ' , ; ` | : . plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:35.126] | : . ' , ; ` | : plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.127] | : . ' , ; ` | : assign_globals() ...
[08:07:35.127] | : . ' , ; ` | : List of 2
[08:07:35.127] | : . ' , ; ` | :  $ x: int [1:2] 1 2
[08:07:35.127] | : . ' , ; ` | :  $ y: num 3
[08:07:35.127] | : . ' , ; ` | :  - attr(*, "where")=List of 2
[08:07:35.127] | : . ' , ; ` | :   ..$ x:<environment: 0x563a5b51d3b8> 
[08:07:35.127] | : . ' , ; ` | :   ..$ y:<environment: 0x563a5b51d3b8> 
[08:07:35.127] | : . ' , ; ` | :  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:35.127] | : . ' , ; ` | :  - attr(*, "resolved")= logi FALSE
[08:07:35.127] | : . ' , ; ` | :  - attr(*, "total_size")= num NA
[08:07:35.127] | : . ' , ; ` | :  - attr(*, "already-done")= logi TRUE
[08:07:35.130] | : . ' , ; ` | : - copied ‘x’ to environment
[08:07:35.130] | : . ' , ; ` | : - copied ‘y’ to environment
[08:07:35.130] | : . ' , ; ` | : assign_globals() ... done
[08:07:35.133] | : . ' , ; ` | : plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.133] | : . ' , ; ` | : . plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.133] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:35.133] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:07:35.133] | : . ' , ; ` | : . ' , ; New stack:
[08:07:35.134] | : . ' , ; ` | : . ' , ; List of 1
[08:07:35.134] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.134] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.134] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.134] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:35.134] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.134] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:35.134] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.134] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.134] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.134] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.134] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.134] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:35.134] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.134] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.138] | : . ' , ; ` | : . ' , ; Old stack:
[08:07:35.138] | : . ' , ; ` | : . ' , ; List of 1
[08:07:35.138] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.138] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.138] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:35.138] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.138] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.138] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.138] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.138] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5ae963f8> 
[08:07:35.138] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.138] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.138] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.141] | : . ' , ; ` | : . ' , ; Not identical
[08:07:35.141] | : . ' , ; ` | : . ' , ; all.equal() for future ...
[08:07:35.141] | : . ' , ; ` | : . ' , ; ` List of 2
[08:07:35.141] | : . ' , ; ` | : . ' , ; `  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.141] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.141] | : . ' , ; ` | : . ' , ; `     ...)  
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.141] | : . ' , ; ` | : . ' , ; `     ...)  
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.141] | : . ' , ; ` | : . ' , ; `  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5ae963f8> 
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.141] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.147] | : . ' , ; ` | : . ' , ; ` Formals differ
[08:07:35.147] | : . ' , ; ` | : . ' , ; all.equal() for future ... done
[08:07:35.147] | : . ' , ; ` | : . ' , ; Future strategies differ at level 1
[08:07:35.147] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:07:35.147] | : . ' , ; ` | : . ' , plan(): Setting new future backend stack:
[08:07:35.148] | : . ' , ; ` | : . ' , List of future strategies:
[08:07:35.148] | : . ' , ; ` | : . ' , 1. multicore:
[08:07:35.148] | : . ' , ; ` | : . ' ,    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:35.148] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:07:35.148] | : . ' , ; ` | : . ' ,    - call: plan(strategy, substitute = FALSE)
[08:07:35.148] | : . ' , ; ` | : . ' , List of 1
[08:07:35.148] | : . ' , ; ` | : . ' ,  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.148] | : . ' , ; ` | : . ' ,     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.148] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.148] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= chr "done"
[08:07:35.148] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.148] | : . ' , ; ` | : . ' ,     ...)  
[08:07:35.148] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.148] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.148] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.148] | : . ' , ; ` | : . ' ,   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.148] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.148] | : . ' , ; ` | : . ' ,     ...)  
[08:07:35.148] | : . ' , ; ` | : . ' ,   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.148] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.151] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:35.151] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:35.151] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.151] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.152] | : . ' , ; ` | : . ' , plan(): nbrOfWorkers() = 2
[08:07:35.152] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:35.152] | : . ' , ; ` | : . plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.152] | : . ' , ; ` | : plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.153] | : . ' , ; readImmediateCondition() ...
[08:07:35.153] | : . ' , ; ` Path: ‘/tmp/RtmpCGAMSK/.future/immediateConditions’
[08:07:35.153] | : . ' , ; ` Number of RDS files: 0
[08:07:35.153] | : . ' , ; ` Returned conditions set:
[08:07:35.154] | : . ' , ; `  list()
[08:07:35.154] | : . ' , ; readImmediateCondition() ... done
[08:07:35.155] | : . ' , ; result() for MulticoreFuture ...
[08:07:35.155] | : . ' , ; result() for MulticoreFuture ... done
[08:07:35.155] | : . ' , ; signalConditions() ...
[08:07:35.155] | : . ' , ; ` include = ‘immediateCondition’
[08:07:35.155] | : . ' , ; ` exclude = 
[08:07:35.155] | : . ' , ; ` resignal = FALSE
[08:07:35.155] | : . ' , ; ` Number of conditions: 7
[08:07:35.156] | : . ' , ; `  int 7
[08:07:35.156] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.156] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.157] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.157] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.157] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.157] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.157] | : . ' , ; ` Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:35.157] | : . ' , ; signalConditions() ... done
[08:07:35.157] | : . ' , result() for MulticoreFuture ... done
[08:07:35.158] | : . ' , result() for MulticoreFuture ...
[08:07:35.158] | : . ' , result() for MulticoreFuture ... done
[08:07:35.158] | : . ' , signalConditions() ...
[08:07:35.158] | : . ' , ; include = ‘immediateCondition’
[08:07:35.158] | : . ' , ; exclude = 
[08:07:35.158] | : . ' , ; resignal = FALSE
[08:07:35.158] | : . ' , ; Number of conditions: 7
[08:07:35.159] | : . ' , ;  int 7
[08:07:35.159] | : . ' , ; Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.159] | : . ' , ; Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.159] | : . ' , ; Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.159] | : . ' , ; Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.160] | : . ' , ; Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.160] | : . ' , ; Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.160] | : . ' , ; Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:35.160] | : . ' , signalConditions() ... done
[08:07:35.160] | : . ' , relay stdout ...
[08:07:35.160] | : . ' , relay stdout ... done
[08:07:35.160] | : . ' , check for misuse ...
[08:07:35.161] | : . ' , check for misuse ... done
[08:07:35.161] | : . ' , relay conditions ...
[08:07:35.161] | : . ' , ; Future state: ‘finished’
[08:07:35.161] | : . ' , ; result() for MulticoreFuture ...
[08:07:35.161] | : . ' , ; result() for MulticoreFuture ... done
[08:07:35.161] | : . ' , ; signalConditions() ...
[08:07:35.161] | : . ' , ; ` include = ‘condition’
[08:07:35.162] | : . ' , ; ` exclude = ‘immediateCondition’
[08:07:35.162] | : . ' , ; ` resignal = TRUE
[08:07:35.162] | : . ' , ; ` Number of conditions: 7
[08:07:35.162] | : . ' , ; `  int 7
[08:07:35.162] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.163] | : . ' , ; ` Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.088] | : . ' , ; ` | : attachPackages() ...
[08:07:35.163] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.163] | : . ' , ; ` Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.089] | : . ' , ; ` | : . packages: [n=1] ‘future’
[08:07:35.163] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.163] | : . ' , ; ` Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.089] | : . ' , ; ` | : attachPackages() ... done
[08:07:35.163] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.163] | : . ' , ; ` Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.089] | : . ' , ; ` | : attachPackages() ...
[08:07:35.164] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.164] | : . ' , ; ` Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.089] | : . ' , ; ` | : . packages: [n=0] 
[08:07:35.164] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.164] | : . ' , ; ` Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.090] | : . ' , ; ` | : attachPackages() ... done
[08:07:35.164] | : . ' , ; ` Condition #7 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:35.164] | : . ' , ; ` Condition #7: ‘simpleError’, ‘error’, ‘condition’
[08:07:35.165] | : . ' , ; signalConditions() ... done
[08:07:35.165] | : . ' , relay conditions ... done
Error in eval(quote({ : '...' used in an incorrect context
[1] "Error in eval(quote({ : '...' used in an incorrect context\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in eval(quote({    {        sum(x, y, ...)    }}), new.env()): '...' used in an incorrect context>
** Sum function 'E' with plan('multicore') ...
function (...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    globals <- globals::globalsByName("...", envir = environment())
    f <- future({
        fcn <- function() sum(...)
        fcn()
    }, envir = parent.frame(), globals = globals)
    y <- value(f)
    y
}
<bytecode: 0x563a5b3e4e20>
Arguments '...' exists: TRUE
[08:07:35.167] | : . ' , future(..., label = NULL) ...
[08:07:35.168] | : . ' , ; lazy: FALSE
[08:07:35.168] | : . ' , ; stdout: TRUE
[08:07:35.168] | : . ' , ; conditions: [n=1] ‘condition’
[08:07:35.168] | : . ' , ; gc: FALSE
[08:07:35.168] | : . ' , ; earlySignal: FALSE
[08:07:35.169] | : . ' , ; getGlobalsAndPackages() ...
[08:07:35.169] | : . ' , ; ` globals passed as-is: [1] ‘...’
[08:07:35.169] | : . ' , ; ` Resolving globals: FALSE
[08:07:35.169] | : . ' , ; ` Tweak future expression to call with '...' arguments ...
[08:07:35.170] | : . ' , ; ` | {
[08:07:35.170] | : . ' , ; ` |     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:35.170] | : . ' , ; ` |     "# expression in do.call(), because function called uses '...'  "
[08:07:35.170] | : . ' , ; ` |     "# as a global variable                                         "
[08:07:35.170] | : . ' , ; ` |     do.call(function(...) {
[08:07:35.170] | : . ' , ; ` |         fcn <- function() sum(...)
[08:07:35.170] | : . ' , ; ` |         fcn()
[08:07:35.170] | : . ' , ; ` |     }, args = future.call.arguments)
[08:07:35.170] | : . ' , ; ` | }
[08:07:35.170] | : . ' , ; ` Tweak future expression to call with '...' arguments ... done
[08:07:35.170] | : . ' , ; ` Search for packages associated with the globals ...
[08:07:35.170] | : . ' , ; ` | Packages associated with globals: [0] 
[08:07:35.171] | : . ' , ; ` | Packages: [0] 
[08:07:35.171] | : . ' , ; ` Search for packages associated with the globals ... done
[08:07:35.171] | : . ' , ; ` Packages after dropping 'base': [0] 
[08:07:35.171] | : . ' , ; ` globals: [1] ‘future.call.arguments’
[08:07:35.171] | : . ' , ; ` packages: [0] 
[08:07:35.171] | : . ' , ; getGlobalsAndPackages() ... done
[08:07:35.172] | : . ' , ; run() for ‘Future’ (<unnamed-11>) ...
[08:07:35.172] | : . ' , ; ` state: ‘created’
[08:07:35.172] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.172] | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.172] | : . ' , ; ` Using MulticoreFutureBackend ...
[08:07:35.173] | : . ' , ; ` | Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:07:35.173] | : . ' , ; ` | Launching futures ...
[08:07:35.173] | : . ' , ; ` | : launchFuture() for MulticoreFutureBackend ...
[08:07:35.173] | : . ' , ; ` | : . getFutureData() ...
[08:07:35.173] | : . ' , ; ` | : . ' getFutureCore() ...
[08:07:35.173] | : . ' , ; ` | : . ' , Packages needed by the future expression (n = 0): <none>
[08:07:35.173] | : . ' , ; ` | : . ' getFutureCore() ... done
[08:07:35.174] | : . ' , ; ` | : . ' getFutureCapture() ...
[08:07:35.174] | : . ' , ; ` | : . ' getFutureCapture() ... done
[08:07:35.174] | : . ' , ; ` | : . ' getFutureContext() ...
[08:07:35.174] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.174] | : . ' , ; ` | : . ' , ; Getting stack without first backend: [n=0] 
[08:07:35.174] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.174] | : . ' , ; ` | : . ' , Packages needed by future backend (n = 0): <none>
[08:07:35.175] | : . ' , ; ` | : . ' getFutureContext() ... done
[08:07:35.175] | : . ' , ; ` | : . getFutureData() ... done
[08:07:35.175] | : . ' , ; ` | : . requestCore(..., workers = 2) ...
[08:07:35.175] | : . ' , ; ` | : . requestCore(..., workers = 2) ... done
[08:07:35.177] | : . ' , ; ` | : . MulticoreFuture started
[08:07:35.178] | : . ' , ; ` | : launchFuture() for MulticoreFutureBackend ... done
[08:07:35.178] | : . ' , ; ` | Launching futures ... done
[08:07:35.178] | : . ' , ; ` | Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:35.178] | : . ' , ; ` Using MulticoreFutureBackend ... done
[08:07:35.179] | : . ' , ; run() for ‘Future’ (<unnamed-11>) ... done
[08:07:35.179] | : . ' , future(..., label = NULL) ... done
[08:07:35.179] | : . ' , value() for MulticoreFuture (<unnamed-11>) ...
[08:07:35.179] | : . ' , ; result() for MulticoreFuture ...
[08:07:35.181] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.181] | : . ' , ; ` | : . ' Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:35.181] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.182] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.182] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:35.182] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ...
[08:07:35.183] | : . ' , ; ` | : . ' , ; New stack:
[08:07:35.183] | : . ' , ; ` | : . ' , ; List of 1
[08:07:35.183] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.183] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.183] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:07:35.183] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.183] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.183] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.183] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.183] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.188] | : . ' , ; ` | : . ' , ; Old stack:
[08:07:35.188] | : . ' , ; ` | : . ' , ; List of 1
[08:07:35.188] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.188] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.188] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.188] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:35.188] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.188] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:35.188] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.188] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.188] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.188] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.188] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.188] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:35.188] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.188] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.193] | : . ' , ; ` | : . ' , ; Not identical
[08:07:35.194] | : . ' , ; ` | : . ' , ; all.equal() for future ...
[08:07:35.194] | : . ' , ; ` | : . ' , ; ` List of 2
[08:07:35.194] | : . ' , ; ` | : . ' , ; `  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.194] | : . ' , ; ` | : . ' , ; `  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.194] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.194] | : . ' , ; ` | : . ' , ; `     ...)  
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.194] | : . ' , ; ` | : . ' , ; `     ...)  
[08:07:35.194] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.204] | : . ' , ; ` | : . ' , ; ` Formals differ
[08:07:35.204] | : . ' , ; ` | : . ' , ; all.equal() for future ... done
[08:07:35.205] | : . ' , ; ` | : . ' , ; Future strategies differ at level 1
[08:07:35.205] | : . ' , ; ` | : . ' , all.equal() for FutureStrategyList ... done
[08:07:35.205] | : . ' , ; ` | : . ' , plan(): Setting new future backend stack:
[08:07:35.205] | : . ' , ; ` | : . ' , List of future strategies:
[08:07:35.205] | : . ' , ; ` | : . ' , 1. sequential:
[08:07:35.205] | : . ' , ; ` | : . ' ,    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:35.205] | : . ' , ; ` | : . ' ,    - tweaked: FALSE
[08:07:35.205] | : . ' , ; ` | : . ' ,    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.206] | : . ' , ; ` | : . ' , List of 1
[08:07:35.206] | : . ' , ; ` | : . ' ,  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.206] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.206] | : . ' , ; ` | : . ' ,   ..- attr(*, "init")= logi TRUE
[08:07:35.206] | : . ' , ; ` | : . ' ,   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.206] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.206] | : . ' , ; ` | : . ' ,   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.206] | : . ' , ; ` | : . ' ,   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.206] | : . ' , ; ` | : . ' ,  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.211] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:35.211] | : . ' , ; ` | : . ' , plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:35.211] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.211] | : . ' , ; ` | : . ' , ; plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:35.211] | : . ' , ; ` | : . ' , ; ` function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.211] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.211] | : . ' , ; ` | : . ' , ; `  - attr(*, "init")= logi TRUE
[08:07:35.211] | : . ' , ; ` | : . ' , ; `  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.211] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.211] | : . ' , ; ` | : . ' , ; `  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.211] | : . ' , ; ` | : . ' , ; `  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.214] | : . ' , ; ` | : . ' , ; ` init: TRUE
[08:07:35.214] | : . ' , ; ` | : . ' , ; ` makeFutureBackend(<sequential>) ...
[08:07:35.214] | : . ' , ; ` | : . ' , ; ` | Backend function: <‘NULL’>
[08:07:35.214] | : . ' , ; ` | : . ' , ; ` | Evaluator tweak arguments: [n=0]
[08:07:35.214] | : . ' , ; ` | : . ' , ; ` |  list()
[08:07:35.214] | : . ' , ; ` | : . ' , ; ` | Evaluator formal arguments: [n=2]
[08:07:35.215] | : . ' , ; ` | : . ' , ; ` |  list()
[08:07:35.215] | : . ' , ; ` | : . ' , ; ` | Backend factory arguments: [n=2]
[08:07:35.215] | : . ' , ; ` | : . ' , ; ` | Dotted pair list of 2
[08:07:35.215] | : . ' , ; ` | : . ' , ; ` |  $ gc         : logi FALSE
[08:07:35.215] | : . ' , ; ` | : . ' , ; ` |  $ earlySignal: logi FALSE
[08:07:35.216] | : . ' , ; ` | : . ' , ; ` | Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:35.216] | : . ' , ; ` | : . ' , ; ` makeFutureBackend(<sequential>) ... done
[08:07:35.216] | : . ' , ; ` | : . ' , ; plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:35.216] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.217] | : . ' , ; ` | : . ' , plan(): nbrOfWorkers() = 1
[08:07:35.217] | : . ' , ; ` | : . ' plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:35.217] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.217] | : . ' , ; ` | : . assign_globals() ...
[08:07:35.217] | : . ' , ; ` | : . List of 1
[08:07:35.217] | : . ' , ; ` | : .  $ future.call.arguments:List of 2
[08:07:35.217] | : . ' , ; ` | : .   ..$ : int [1:2] 1 2
[08:07:35.217] | : . ' , ; ` | : .   ..$ : num 3
[08:07:35.217] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[08:07:35.217] | : . ' , ; ` | : .  - attr(*, "where")=List of 1
[08:07:35.217] | : . ' , ; ` | : .   ..$ future.call.arguments:<environment: 0x563a5ab57728> 
[08:07:35.217] | : . ' , ; ` | : .  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:35.217] | : . ' , ; ` | : .  - attr(*, "resolved")= logi FALSE
[08:07:35.217] | : . ' , ; ` | : .  - attr(*, "total_size")= num NA
[08:07:35.217] | : . ' , ; ` | : .  - attr(*, "already-done")= logi TRUE
[08:07:35.221] | : . ' , ; ` | : . - copied ‘future.call.arguments’ to environment
[08:07:35.221] | : . ' , ; ` | : . assign_globals() ... done
[08:07:35.223] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.223] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.223] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:35.223] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:07:35.223] | : . ' , ; ` | : . ' , ; ` New stack:
[08:07:35.224] | : . ' , ; ` | : . ' , ; ` List of 1
[08:07:35.224] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.224] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.224] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.224] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:07:35.224] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.224] | : . ' , ; ` | : . ' , ; `     ...)  
[08:07:35.224] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.224] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.224] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.224] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.224] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.224] | : . ' , ; ` | : . ' , ; `     ...)  
[08:07:35.224] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.224] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.227] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:07:35.227] | : . ' , ; ` | : . ' , ; ` List of 1
[08:07:35.227] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.227] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.227] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:07:35.227] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.227] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.227] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.227] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.227] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aa0cbf0> 
[08:07:35.227] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.227] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.227] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` Not identical
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` all.equal() for future ...
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` | List of 2
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5aa0cbf0> 
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.231] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.237] | : . ' , ; ` | : . ' , ; ` | Formals differ
[08:07:35.237] | : . ' , ; ` | : . ' , ; ` all.equal() for future ... done
[08:07:35.237] | : . ' , ; ` | : . ' , ; ` Future strategies differ at level 1
[08:07:35.237] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:07:35.237] | : . ' , ; ` | : . ' , ; plan(): Setting new future backend stack:
[08:07:35.237] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:07:35.237] | : . ' , ; ` | : . ' , ; 1. multicore:
[08:07:35.237] | : . ' , ; ` | : . ' , ;    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:35.237] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:07:35.237] | : . ' , ; ` | : . ' , ;    - call: plan(strategy, substitute = FALSE)
[08:07:35.238] | : . ' , ; ` | : . ' , ; List of 1
[08:07:35.238] | : . ' , ; ` | : . ' , ;  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.238] | : . ' , ; ` | : . ' , ;     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.238] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.238] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= chr "done"
[08:07:35.238] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.238] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:35.238] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.238] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.238] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.238] | : . ' , ; ` | : . ' , ;   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.238] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.238] | : . ' , ; ` | : . ' , ;     ...)  
[08:07:35.238] | : . ' , ; ` | : . ' , ;   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.238] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.241] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:35.241] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:35.241] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.241] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.241] | : . ' , ; ` | : . ' , ; plan(): nbrOfWorkers() = 2
[08:07:35.242] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:35.242] | : . ' , ; ` | : . ' plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.242] | : . ' , ; ` | : . plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.242] | : . ' , ; ` readImmediateCondition() ...
[08:07:35.243] | : . ' , ; ` | Path: ‘/tmp/RtmpCGAMSK/.future/immediateConditions’
[08:07:35.243] | : . ' , ; ` | Number of RDS files: 0
[08:07:35.243] | : . ' , ; ` | Returned conditions set:
[08:07:35.243] | : . ' , ; ` |  list()
[08:07:35.244] | : . ' , ; ` readImmediateCondition() ... done
[08:07:35.244] | : . ' , ; ` result() for MulticoreFuture ...
[08:07:35.244] | : . ' , ; ` result() for MulticoreFuture ... done
[08:07:35.245] | : . ' , ; ` signalConditions() ...
[08:07:35.245] | : . ' , ; ` | include = ‘immediateCondition’
[08:07:35.245] | : . ' , ; ` | exclude = 
[08:07:35.245] | : . ' , ; ` | resignal = FALSE
[08:07:35.245] | : . ' , ; ` | Number of conditions: 6
[08:07:35.245] | : . ' , ; ` |  int 6
[08:07:35.246] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.246] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.246] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.246] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.247] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.247] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.247] | : . ' , ; ` signalConditions() ... done
[08:07:35.247] | : . ' , ; result() for MulticoreFuture ... done
[08:07:35.247] | : . ' , ; result() for MulticoreFuture ...
[08:07:35.247] | : . ' , ; result() for MulticoreFuture ... done
[08:07:35.247] | : . ' , ; signalConditions() ...
[08:07:35.248] | : . ' , ; ` include = ‘immediateCondition’
[08:07:35.248] | : . ' , ; ` exclude = 
[08:07:35.248] | : . ' , ; ` resignal = FALSE
[08:07:35.248] | : . ' , ; ` Number of conditions: 6
[08:07:35.248] | : . ' , ; `  int 6
[08:07:35.249] | : . ' , ; ` Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.249] | : . ' , ; ` Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.249] | : . ' , ; ` Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.249] | : . ' , ; ` Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.249] | : . ' , ; ` Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.249] | : . ' , ; ` Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.250] | : . ' , ; signalConditions() ... done
[08:07:35.250] | : . ' , ; relay stdout ...
[08:07:35.250] | : . ' , ; relay stdout ... done
[08:07:35.250] | : . ' , ; check for misuse ...
[08:07:35.250] | : . ' , ; check for misuse ... done
[08:07:35.250] | : . ' , ; relay conditions ...
[08:07:35.250] | : . ' , ; ` Future state: ‘finished’
[08:07:35.251] | : . ' , ; ` result() for MulticoreFuture ...
[08:07:35.251] | : . ' , ; ` result() for MulticoreFuture ... done
[08:07:35.251] | : . ' , ; ` signalConditions() ...
[08:07:35.251] | : . ' , ; ` | include = ‘condition’
[08:07:35.251] | : . ' , ; ` | exclude = ‘immediateCondition’
[08:07:35.251] | : . ' , ; ` | resignal = TRUE
[08:07:35.251] | : . ' , ; ` | Number of conditions: 6
[08:07:35.251] | : . ' , ; ` |  int 6
[08:07:35.252] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.252] | : . ' , ; ` | Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.178] | : . ' , ; ` | : . attachPackages() ...
[08:07:35.252] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.252] | : . ' , ; ` | Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.179] | : . ' , ; ` | : . ' packages: [n=1] ‘future’
[08:07:35.253] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.253] | : . ' , ; ` | Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.179] | : . ' , ; ` | : . attachPackages() ... done
[08:07:35.253] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.253] | : . ' , ; ` | Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.179] | : . ' , ; ` | : . attachPackages() ...
[08:07:35.253] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.253] | : . ' , ; ` | Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.179] | : . ' , ; ` | : . ' packages: [n=0] 
[08:07:35.254] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.254] | : . ' , ; ` | Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.180] | : . ' , ; ` | : . attachPackages() ... done
[08:07:35.254] | : . ' , ; ` signalConditions() ... done
[08:07:35.254] | : . ' , ; relay conditions ... done
[08:07:35.254] | : . ' , value() for MulticoreFuture (<unnamed-11>) ... done
[1] 6
** Sum function 'F' with plan('multicore') ...
function (x, y) 
{
    message("Using '...' in a formula")
    fcn <- function(x, y) {
        z = ~list(...)
        sum(x, y)
    }
    f <- future(fcn(x, y))
    y <- value(f)
    y
}
<bytecode: 0x563a5b674508>
Using '...' in a formula
[08:07:35.255] | : . ' , future(..., label = NULL) ...
[08:07:35.255] | : . ' , ; lazy: FALSE
[08:07:35.255] | : . ' , ; stdout: TRUE
[08:07:35.255] | : . ' , ; conditions: [n=1] ‘condition’
[08:07:35.255] | : . ' , ; gc: FALSE
[08:07:35.255] | : . ' , ; earlySignal: FALSE
[08:07:35.255] | : . ' , ; getGlobalsAndPackages() ...
[08:07:35.256] | : . ' , ; ` Searching for globals ...
[08:07:35.272] | : . ' , ; ` | globals found: [9] ‘fcn’, ‘x’, ‘y’, ‘{’, ‘=’, ‘~’, ‘list’, ‘...’, ‘sum’
[08:07:35.272] | : . ' , ; ` Searching for globals ... done
[08:07:35.272] | : . ' , ; ` Resolving globals: FALSE
[08:07:35.272] | : . ' , ; ` Tweak future expression to call with '...' arguments ...
[08:07:35.272] | : . ' , ; ` | Search for packages associated with the globals ...
[08:07:35.273] | : . ' , ; ` | : Packages associated with globals: [1] ‘base’
[08:07:35.273] | : . ' , ; ` | : Packages: [1] ‘base’
[08:07:35.273] | : . ' , ; ` | Search for packages associated with the globals ... done
[08:07:35.273] | : . ' , ; ` | Packages after dropping 'base': [0] 
[08:07:35.273] | : . ' , ; ` | globals: [3] ‘fcn’, ‘x’, ‘y’
[08:07:35.274] | : . ' , ; ` | packages: [0] 
[08:07:35.274] | : . ' , ; ` Tweak future expression to call with '...' arguments ... done
[08:07:35.274] | : . ' , ; ` run() for ‘Future’ (<unnamed-12>) ...
[08:07:35.274] | : . ' , ; ` | state: ‘created’
[08:07:35.274] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.274] | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.274] | : . ' , ; ` | Using MulticoreFutureBackend ...
[08:07:35.275] | : . ' , ; ` | : Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:07:35.275] | : . ' , ; ` | : Launching futures ...
[08:07:35.275] | : . ' , ; ` | : . launchFuture() for MulticoreFutureBackend ...
[08:07:35.275] | : . ' , ; ` | : . ' getFutureData() ...
[08:07:35.275] | : . ' , ; ` | : . ' , getFutureCore() ...
[08:07:35.275] | : . ' , ; ` | : . ' , ; Packages needed by the future expression (n = 0): <none>
[08:07:35.275] | : . ' , ; ` | : . ' , getFutureCore() ... done
[08:07:35.275] | : . ' , ; ` | : . ' , getFutureCapture() ...
[08:07:35.276] | : . ' , ; ` | : . ' , getFutureCapture() ... done
[08:07:35.276] | : . ' , ; ` | : . ' , getFutureContext() ...
[08:07:35.276] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.276] | : . ' , ; ` | : . ' , ; ` Getting stack without first backend: [n=0] 
[08:07:35.276] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.276] | : . ' , ; ` | : . ' , ; Packages needed by future backend (n = 0): <none>
[08:07:35.276] | : . ' , ; ` | : . ' , getFutureContext() ... done
[08:07:35.276] | : . ' , ; ` | : . ' getFutureData() ... done
[08:07:35.277] | : . ' , ; ` | : . ' requestCore(..., workers = 2) ...
[08:07:35.277] | : . ' , ; ` | : . ' requestCore(..., workers = 2) ... done
[08:07:35.279] | : . ' , ; ` | : . ' MulticoreFuture started
[08:07:35.279] | : . ' , ; ` | : . launchFuture() for MulticoreFutureBackend ... done
[08:07:35.279] | : . ' , ; ` | : Launching futures ... done
[08:07:35.280] | : . ' , ; ` | : Future launched: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:35.280] | : . ' , ; ` | Using MulticoreFutureBackend ... done
[08:07:35.280] | : . ' , ; ` run() for ‘Future’ (<unnamed-12>) ... done
[08:07:35.280] | : . ' , ; getGlobalsAndPackages() ... done
[08:07:35.281] | : . ' , ; value() for MulticoreFuture (<unnamed-12>) ...
[08:07:35.281] | : . ' , ; ` result() for MulticoreFuture ...
[08:07:35.282] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.282] | : . ' , ; ` | : . ' , Getting full stack: [n=1] ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:35.283] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.283] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.283] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:35.283] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ...
[08:07:35.284] | : . ' , ; ` | : . ' , ; ` New stack:
[08:07:35.284] | : . ' , ; ` | : . ' , ; ` List of 1
[08:07:35.284] | : . ' , ; ` | : . ' , ; `  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.284] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.284] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= logi TRUE
[08:07:35.284] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.284] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.284] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.284] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.284] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.292] | : . ' , ; ` | : . ' , ; ` Old stack:
[08:07:35.292] | : . ' , ; ` | : . ' , ; ` List of 1
[08:07:35.292] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.292] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.292] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.292] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:07:35.292] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.292] | : . ' , ; ` | : . ' , ; `     ...)  
[08:07:35.292] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.292] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.292] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.292] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.292] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.292] | : . ' , ; ` | : . ' , ; `     ...)  
[08:07:35.292] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.292] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` Not identical
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` all.equal() for future ...
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` | List of 2
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |  $ target :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:07:35.300] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.307] | : . ' , ; ` | : . ' , ; ` | Formals differ
[08:07:35.307] | : . ' , ; ` | : . ' , ; ` all.equal() for future ... done
[08:07:35.308] | : . ' , ; ` | : . ' , ; ` Future strategies differ at level 1
[08:07:35.308] | : . ' , ; ` | : . ' , ; all.equal() for FutureStrategyList ... done
[08:07:35.308] | : . ' , ; ` | : . ' , ; plan(): Setting new future backend stack:
[08:07:35.308] | : . ' , ; ` | : . ' , ; List of future strategies:
[08:07:35.308] | : . ' , ; ` | : . ' , ; 1. sequential:
[08:07:35.308] | : . ' , ; ` | : . ' , ;    - args: function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame(), workers = "<NULL>")
[08:07:35.308] | : . ' , ; ` | : . ' , ;    - tweaked: FALSE
[08:07:35.308] | : . ' , ; ` | : . ' , ;    - call: plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.309] | : . ' , ; ` | : . ' , ; List of 1
[08:07:35.309] | : . ' , ; ` | : . ' , ;  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.309] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.309] | : . ' , ; ` | : . ' , ;   ..- attr(*, "init")= logi TRUE
[08:07:35.309] | : . ' , ; ` | : . ' , ;   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.309] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.309] | : . ' , ; ` | : . ' , ;   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.309] | : . ' , ; ` | : . ' , ;   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.309] | : . ' , ; ` | : . ' , ;  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.312] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:35.312] | : . ' , ; ` | : . ' , ; plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:35.312] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.312] | : . ' , ; ` | : . ' , ; ` plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ...
[08:07:35.313] | : . ' , ; ` | : . ' , ; ` | function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.313] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.313] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "init")= logi TRUE
[08:07:35.313] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.313] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.313] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.313] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.315] | : . ' , ; ` | : . ' , ; ` | init: TRUE
[08:07:35.315] | : . ' , ; ` | : . ' , ; ` | makeFutureBackend(<sequential>) ...
[08:07:35.315] | : . ' , ; ` | : . ' , ; ` | : Backend function: <‘NULL’>
[08:07:35.315] | : . ' , ; ` | : . ' , ; ` | : Evaluator tweak arguments: [n=0]
[08:07:35.315] | : . ' , ; ` | : . ' , ; ` | :  list()
[08:07:35.316] | : . ' , ; ` | : . ' , ; ` | : Evaluator formal arguments: [n=2]
[08:07:35.316] | : . ' , ; ` | : . ' , ; ` | :  list()
[08:07:35.316] | : . ' , ; ` | : . ' , ; ` | : Backend factory arguments: [n=2]
[08:07:35.316] | : . ' , ; ` | : . ' , ; ` | : Dotted pair list of 2
[08:07:35.316] | : . ' , ; ` | : . ' , ; ` | :  $ gc         : logi FALSE
[08:07:35.316] | : . ' , ; ` | : . ' , ; ` | :  $ earlySignal: logi FALSE
[08:07:35.317] | : . ' , ; ` | : . ' , ; ` | : Backend: <‘SequentialFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:35.317] | : . ' , ; ` | : . ' , ; ` | makeFutureBackend(<sequential>) ... done
[08:07:35.318] | : . ' , ; ` | : . ' , ; ` plan(): plan_init() of ‘sequential’, ‘uniprocess’, ‘future’, ‘function’ ... done
[08:07:35.318] | : . ' , ; ` | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.318] | : . ' , ; ` | : . ' , ; plan(): nbrOfWorkers() = 1
[08:07:35.318] | : . ' , ; ` | : . ' , plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:35.319] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.320] | : . ' , ; ` | : . ' assign_globals() ...
[08:07:35.320] | : . ' , ; ` | : . ' List of 3
[08:07:35.320] | : . ' , ; ` | : . '  $ fcn:function (x, y)  
[08:07:35.320] | : . ' , ; ` | : . '  $ x  : int [1:2] 1 2
[08:07:35.320] | : . ' , ; ` | : . '  $ y  : num 3
[08:07:35.320] | : . ' , ; ` | : . '  - attr(*, "where")=List of 3
[08:07:35.320] | : . ' , ; ` | : . '   ..$ fcn:<environment: 0x563a5b490478> 
[08:07:35.320] | : . ' , ; ` | : . '   ..$ x  :<environment: 0x563a5b490478> 
[08:07:35.320] | : . ' , ; ` | : . '   ..$ y  :<environment: 0x563a5b490478> 
[08:07:35.320] | : . ' , ; ` | : . '  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[08:07:35.320] | : . ' , ; ` | : . '  - attr(*, "resolved")= logi FALSE
[08:07:35.320] | : . ' , ; ` | : . '  - attr(*, "total_size")= num NA
[08:07:35.320] | : . ' , ; ` | : . '  - attr(*, "already-done")= logi TRUE
[08:07:35.324] | : . ' , ; ` | : . ' - copied ‘fcn’ to environment
[08:07:35.324] | : . ' , ; ` | : . ' - copied ‘x’ to environment
[08:07:35.324] | : . ' , ; ` | : . ' - copied ‘y’ to environment
[08:07:35.324] | : . ' , ; ` | : . ' assign_globals() ... done
[08:07:35.326] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.326] | : . ' , ; ` | : . ' , plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ...
[08:07:35.326] | : . ' , ; ` | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ...
[08:07:35.326] | : . ' , ; ` | : . ' , ; ` all.equal() for FutureStrategyList ...
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` | New stack:
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` | List of 1
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |     ...)  
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.327] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` | Old stack:
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` | List of 1
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |  $ :function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "init")= chr "done"
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5b9e5f98> 
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.330] | : . ' , ; ` | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | Not identical
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | all.equal() for future ...
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | : List of 2
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :  $ target :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :     ...)  
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :     ...)  
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :  $ current:function (..., gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "sequential" "uniprocess" "future" "function"
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategiesR, .cleanup = FALSE, .init = FALSE)
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'SequentialFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5b9e5f98> 
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (..., maxSizeOfObjects = +Inf)  
[08:07:35.333] | : . ' , ; ` | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:5] "maxSizeOfObjects" "earlySignal" "gc" "interrupts" ...
[08:07:35.340] | : . ' , ; ` | : . ' , ; ` | : Formals differ
[08:07:35.340] | : . ' , ; ` | : . ' , ; ` | all.equal() for future ... done
[08:07:35.340] | : . ' , ; ` | : . ' , ; ` | Future strategies differ at level 1
[08:07:35.340] | : . ' , ; ` | : . ' , ; ` all.equal() for FutureStrategyList ... done
[08:07:35.340] | : . ' , ; ` | : . ' , ; ` plan(): Setting new future backend stack:
[08:07:35.340] | : . ' , ; ` | : . ' , ; ` List of future strategies:
[08:07:35.340] | : . ' , ; ` | : . ' , ; ` 1. multicore:
[08:07:35.340] | : . ' , ; ` | : . ' , ; `    - args: function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:35.340] | : . ' , ; ` | : . ' , ; `    - tweaked: FALSE
[08:07:35.340] | : . ' , ; ` | : . ' , ; `    - call: plan(strategy, substitute = FALSE)
[08:07:35.341] | : . ' , ; ` | : . ' , ; ` List of 1
[08:07:35.341] | : . ' , ; ` | : . ' , ; `  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.341] | : . ' , ; ` | : . ' , ; `     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.341] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.341] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "init")= chr "done"
[08:07:35.341] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.341] | : . ' , ; ` | : . ' , ; `     ...)  
[08:07:35.341] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.341] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.341] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.341] | : . ' , ; ` | : . ' , ; `   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.341] | : . ' , ; ` | : . ' , ; `   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.341] | : . ' , ; ` | : . ' , ; `     ...)  
[08:07:35.341] | : . ' , ; ` | : . ' , ; `   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.341] | : . ' , ; ` | : . ' , ; `  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.344] | : . ' , ; ` | : . ' , ; ` plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ...
[08:07:35.344] | : . ' , ; ` | : . ' , ; ` plan(): plan_cleanup(‘sequential’, ‘uniprocess’, ‘future’, ‘function’, cleanup = FALSE) ... done
[08:07:35.344] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.344] | : . ' , ; ` | : . ' , ; ` plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.344] | : . ' , ; ` | : . ' , ; ` plan(): nbrOfWorkers() = 2
[08:07:35.345] | : . ' , ; ` | : . ' , ; plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = FALSE, init = FALSE) ... done
[08:07:35.345] | : . ' , ; ` | : . ' , plan(<FutureStrategyList>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.345] | : . ' , ; ` | : . ' plan(<name>, .skip = FALSE, .cleanup = FALSE, .init = FALSE) ... done
[08:07:35.345] | : . ' , ; ` | readImmediateCondition() ...
[08:07:35.346] | : . ' , ; ` | : Path: ‘/tmp/RtmpCGAMSK/.future/immediateConditions’
[08:07:35.346] | : . ' , ; ` | : Number of RDS files: 0
[08:07:35.346] | : . ' , ; ` | : Returned conditions set:
[08:07:35.346] | : . ' , ; ` | :  list()
[08:07:35.347] | : . ' , ; ` | readImmediateCondition() ... done
[08:07:35.347] | : . ' , ; ` | result() for MulticoreFuture ...
[08:07:35.347] | : . ' , ; ` | result() for MulticoreFuture ... done
[08:07:35.347] | : . ' , ; ` | signalConditions() ...
[08:07:35.348] | : . ' , ; ` | : include = ‘immediateCondition’
[08:07:35.348] | : . ' , ; ` | : exclude = 
[08:07:35.348] | : . ' , ; ` | : resignal = FALSE
[08:07:35.348] | : . ' , ; ` | : Number of conditions: 6
[08:07:35.348] | : . ' , ; ` | :  int 6
[08:07:35.349] | : . ' , ; ` | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.349] | : . ' , ; ` | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.349] | : . ' , ; ` | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.349] | : . ' , ; ` | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.349] | : . ' , ; ` | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.349] | : . ' , ; ` | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.350] | : . ' , ; ` | signalConditions() ... done
[08:07:35.350] | : . ' , ; ` result() for MulticoreFuture ... done
[08:07:35.350] | : . ' , ; ` result() for MulticoreFuture ...
[08:07:35.350] | : . ' , ; ` result() for MulticoreFuture ... done
[08:07:35.352] | : . ' , ; ` signalConditions() ...
[08:07:35.352] | : . ' , ; ` | include = ‘immediateCondition’
[08:07:35.352] | : . ' , ; ` | exclude = 
[08:07:35.353] | : . ' , ; ` | resignal = FALSE
[08:07:35.353] | : . ' , ; ` | Number of conditions: 6
[08:07:35.353] | : . ' , ; ` |  int 6
[08:07:35.354] | : . ' , ; ` | Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.354] | : . ' , ; ` | Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.354] | : . ' , ; ` | Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.355] | : . ' , ; ` | Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.355] | : . ' , ; ` | Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.355] | : . ' , ; ` | Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.355] | : . ' , ; ` signalConditions() ... done
[08:07:35.355] | : . ' , ; ` relay stdout ...
[08:07:35.356] | : . ' , ; ` relay stdout ... done
[08:07:35.356] | : . ' , ; ` check for misuse ...
[08:07:35.356] | : . ' , ; ` check for misuse ... done
[08:07:35.356] | : . ' , ; ` relay conditions ...
[08:07:35.356] | : . ' , ; ` | Future state: ‘finished’
[08:07:35.356] | : . ' , ; ` | result() for MulticoreFuture ...
[08:07:35.356] | : . ' , ; ` | result() for MulticoreFuture ... done
[08:07:35.357] | : . ' , ; ` | signalConditions() ...
[08:07:35.357] | : . ' , ; ` | : include = ‘condition’
[08:07:35.357] | : . ' , ; ` | : exclude = ‘immediateCondition’
[08:07:35.357] | : . ' , ; ` | : resignal = TRUE
[08:07:35.357] | : . ' , ; ` | : Number of conditions: 6
[08:07:35.357] | : . ' , ; ` | :  int 6
[08:07:35.358] | : . ' , ; ` | : Condition #1 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.358] | : . ' , ; ` | : Condition #1: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.280] | : . ' , ; ` | : . ' attachPackages() ...
[08:07:35.358] | : . ' , ; ` | : Condition #2 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.358] | : . ' , ; ` | : Condition #2: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.280] | : . ' , ; ` | : . ' , packages: [n=1] ‘future’
[08:07:35.358] | : . ' , ; ` | : Condition #3 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.359] | : . ' , ; ` | : Condition #3: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.280] | : . ' , ; ` | : . ' attachPackages() ... done
[08:07:35.359] | : . ' , ; ` | : Condition #4 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.359] | : . ' , ; ` | : Condition #4: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.281] | : . ' , ; ` | : . ' attachPackages() ...
[08:07:35.359] | : . ' , ; ` | : Condition #5 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.359] | : . ' , ; ` | : Condition #5: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.281] | : . ' , ; ` | : . ' , packages: [n=0] 
[08:07:35.359] | : . ' , ; ` | : Condition #6 (class: ‘simpleMessage’, ‘message’, ‘condition’):
[08:07:35.360] | : . ' , ; ` | : Condition #6: ‘simpleMessage’, ‘message’, ‘condition’
[08:07:35.281] | : . ' , ; ` | : . ' attachPackages() ... done
[08:07:35.360] | : . ' , ; ` | signalConditions() ... done
[08:07:35.360] | : . ' , ; ` relay conditions ... done
[08:07:35.360] | : . ' , ; value() for MulticoreFuture (<unnamed-12>) ... done
[1] 6
- plan('multisession') ...
[08:07:35.360] | : . ' , ; plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.361] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ...
[08:07:35.361] | : . ' , ; ` | all.equal() for FutureStrategyList ...
[08:07:35.361] | : . ' , ; ` | : New stack:
[08:07:35.361] | : . ' , ; ` | : List of 1
[08:07:35.361] | : . ' , ; ` | :  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:35.361] | : . ' , ; ` | :     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.361] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:35.361] | : . ' , ; ` | :   ..- attr(*, "init")= logi TRUE
[08:07:35.361] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:35.361] | : . ' , ; ` | :     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:35.361] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:35.361] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:35.361] | : . ' , ; ` | :   ..- attr(*, "untweakable")= chr "persistent"
[08:07:35.361] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.361] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.365] | : . ' , ; ` | : Old stack:
[08:07:35.365] | : . ' , ; ` | : List of 1
[08:07:35.365] | : . ' , ; ` | :  $ :function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.365] | : . ' , ; ` | :     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.365] | : . ' , ; ` | :   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.365] | : . ' , ; ` | :   ..- attr(*, "init")= chr "done"
[08:07:35.365] | : . ' , ; ` | :   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.365] | : . ' , ; ` | :     ...)  
[08:07:35.365] | : . ' , ; ` | :   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.365] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.365] | : . ' , ; ` | :   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.365] | : . ' , ; ` | :   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.365] | : . ' , ; ` | :   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.365] | : . ' , ; ` | :     ...)  
[08:07:35.365] | : . ' , ; ` | :   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.365] | : . ' , ; ` | :  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.368] | : . ' , ; ` | : Not identical
[08:07:35.369] | : . ' , ; ` | : all.equal() for future ...
[08:07:35.369] | : . ' , ; ` | : . List of 2
[08:07:35.369] | : . ' , ; ` | : .  $ target :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:35.369] | : . ' , ; ` | : .     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "init")= logi TRUE
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:35.369] | : . ' , ; ` | : .     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:35.369] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "untweakable")= chr "persistent"
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.369] | : . ' , ; ` | : .  $ current:function (..., workers = availableCores(constraints = "multicore"), gc = FALSE, 
[08:07:35.369] | : . ' , ; ` | : .     earlySignal = FALSE, envir = parent.frame())  
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "class")= chr [1:4] "multicore" "multiprocess" "future" "function"
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "init")= chr "done"
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.369] | : . ' , ; ` | : .     ...)  
[08:07:35.369] | : . ' , ; ` | : .   .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.369] | : . ' , ; ` | : .   ..- attr(*, "backend")=Classes 'MulticoreFutureBackend', 'MultiprocessFutureBackend', 'FutureBackend', 'environment' <environment: 0x563a5a9d5fa0> 
[08:07:35.369] | : . ' , ; ` | : .   .. ..- attr(*, "factory")=function (workers = availableCores(constraints = "multicore"), maxSizeOfObjects = +Inf, 
[08:07:35.369] | : . ' , ; ` | : .     ...)  
[08:07:35.369] | : . ' , ; ` | : .   .. .. ..- attr(*, "tweakable")= chr [1:9] "workers" "maxSizeOfObjects" "wait.timeout" "wait.interval" ...
[08:07:35.375] | : . ' , ; ` | : . Formals differ
[08:07:35.375] | : . ' , ; ` | : all.equal() for future ... done
[08:07:35.376] | : . ' , ; ` | : Future strategies differ at level 1
[08:07:35.376] | : . ' , ; ` | all.equal() for FutureStrategyList ... done
[08:07:35.376] | : . ' , ; ` | plan(): Setting new future backend stack:
[08:07:35.376] | : . ' , ; ` | List of future strategies:
[08:07:35.376] | : . ' , ; ` | 1. multisession:
[08:07:35.376] | : . ' , ; ` |    - args: function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), gc = FALSE, earlySignal = FALSE, envir = parent.frame())
[08:07:35.376] | : . ' , ; ` |    - tweaked: FALSE
[08:07:35.376] | : . ' , ; ` |    - call: plan(strategy, substitute = FALSE)
[08:07:35.377] | : . ' , ; ` | List of 1
[08:07:35.377] | : . ' , ; ` |  $ :function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:35.377] | : . ' , ; ` |     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.377] | : . ' , ; ` |   ..- attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:35.377] | : . ' , ; ` |   ..- attr(*, "init")= logi TRUE
[08:07:35.377] | : . ' , ; ` |   ..- attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:35.377] | : . ' , ; ` |     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:35.377] | : . ' , ; ` |   .. ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:35.377] | : . ' , ; ` |   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:35.377] | : . ' , ; ` |   ..- attr(*, "untweakable")= chr "persistent"
[08:07:35.377] | : . ' , ; ` |   ..- attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.377] | : . ' , ; ` |  - attr(*, "class")= chr [1:2] "FutureStrategyList" "list"
[08:07:35.379] | : . ' , ; ` | plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ...
[08:07:35.380] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.380] | : . ' , ; ` | : . Getting current ("next") strategy: ‘FutureStrategy’, ‘multicore’, ‘multiprocess’, ‘future’, ‘function’
[08:07:35.380] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.381] | : . ' , ; ` | : Legacy shutdown of cluster workers ...
[08:07:35.381] | : . ' , ; ` | : . Stopping existing cluster ...
[08:07:35.381] | : . ' , ; ` | : . ' No pre-existing cluster. Skipping
[08:07:35.381] | : . ' , ; ` | : . Stopping existing cluster ... done
[08:07:35.381] | : . ' , ; ` | : Legacy shutdown of cluster workers ... done
[08:07:35.381] | : . ' , ; ` | plan(): plan_cleanup(‘multicore’, ‘multiprocess’, ‘future’, ‘function’, cleanup = NA) ... done
[08:07:35.381] | : . ' , ; ` | plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ...
[08:07:35.381] | : . ' , ; ` | : function (..., workers = availableCores(), lazy = FALSE, rscript_libs = .libPaths(), 
[08:07:35.381] | : . ' , ; ` | :     gc = FALSE, earlySignal = FALSE, envir = parent.frame())  
[08:07:35.381] | : . ' , ; ` | :  - attr(*, "class")= chr [1:5] "multisession" "cluster" "multiprocess" "future" ...
[08:07:35.381] | : . ' , ; ` | :  - attr(*, "init")= logi TRUE
[08:07:35.381] | : . ' , ; ` | :  - attr(*, "factory")=function (workers = availableCores(), rscript_libs = .libPaths(), interrupts = TRUE, 
[08:07:35.381] | : . ' , ; ` | :     gc = FALSE, earlySignal = FALSE, ...)  
[08:07:35.381] | : . ' , ; ` | :   ..- attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:35.381] | : . ' , ; ` | :  - attr(*, "tweakable")= chr [1:11] "workers" "rscript_libs" "interrupts" "gc" ...
[08:07:35.381] | : . ' , ; ` | :  - attr(*, "untweakable")= chr "persistent"
[08:07:35.381] | : . ' , ; ` | :  - attr(*, "call")= language plan(strategy, substitute = FALSE)
[08:07:35.384] | : . ' , ; ` | : init: TRUE
[08:07:35.384] | : . ' , ; ` | : makeFutureBackend(<multisession>) ...
[08:07:35.384] | : . ' , ; ` | : . Backend function: <‘NULL’>
[08:07:35.384] | : . ' , ; ` | : . Evaluator tweak arguments: [n=0]
[08:07:35.384] | : . ' , ; ` | : .  list()
[08:07:35.384] | : . ' , ; ` | : . Evaluator formal arguments: [n=4]
[08:07:35.385] | : . ' , ; ` | : .  list()
[08:07:35.385] | : . ' , ; ` | : . Backend factory arguments: [n=4]
[08:07:35.385] | : . ' , ; ` | : . Dotted pair list of 4
[08:07:35.385] | : . ' , ; ` | : .  $ workers     : language availableCores()
[08:07:35.385] | : . ' , ; ` | : .  $ rscript_libs: language .libPaths()
[08:07:35.385] | : . ' , ; ` | : .  $ gc          : logi FALSE
[08:07:35.385] | : . ' , ; ` | : .  $ earlySignal : logi FALSE
[08:07:35.386] | : . ' , ; ` | : . MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ...
[08:07:35.387] | : . ' , ; ` | : . ' Arguments:
[08:07:35.387] | : . ' , ; ` | : . ' List of 5
[08:07:35.387] | : . ' , ; ` | : . '  $ workers     : Named int 2
[08:07:35.387] | : . ' , ; ` | : . '   ..- attr(*, "names")= chr "mc.cores"
[08:07:35.387] | : . ' , ; ` | : . '  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:07:35.387] | : . ' , ; ` | : . '  $ interrupts  : logi TRUE
[08:07:35.387] | : . ' , ; ` | : . '  $ gc          : logi FALSE
[08:07:35.387] | : . ' , ; ` | : . '  $ earlySignal : logi FALSE
[08:07:35.391] | : . ' , ; ` | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ...
[08:07:35.391] | : . ' , ; ` | : . ' , workers: 2
[08:07:35.391] | : . ' , ; ` | : . ' , getCluster() ...
[08:07:35.391] | : . ' , ; ` | : . ' , getCluster() ... done
[08:07:35.391] | : . ' , ; ` | : . ' , Stopping existing cluster ...
[08:07:35.391] | : . ' , ; ` | : . ' , ; No pre-existing cluster. Skipping
[08:07:35.391] | : . ' , ; ` | : . ' , Stopping existing cluster ... done
[08:07:35.391] | : . ' , ; ` | : . ' , Starting new cluster ...
[08:07:35.391] | : . ' , ; ` | : . ' , ; makeCluster(workers, ...) ...
[08:07:35.391] | : . ' , ; ` | : . ' , ; ` Arguments:
[08:07:35.392] | : . ' , ; ` | : . ' , ; ` List of 2
[08:07:35.392] | : . ' , ; ` | : . ' , ; `  $             : int 2
[08:07:35.392] | : . ' , ; ` | : . ' , ; `  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:07:35.393] | : . ' , ; ` | : . ' , ; ` .makeCluster() ...
[08:07:35.393] | : . ' , ; ` | : . ' , ; ` | workers: ‘2’
[08:07:35.393] | : . ' , ; ` | : . ' , ; ` | R_FUTURE_PLAN: NA
[08:07:35.393] | : . ' , ; ` | : . ' , ; ` | parallelly::makeClusterPSOCK() arguments:
[08:07:35.393] | : . ' , ; ` | : . ' , ; ` | List of 2
[08:07:35.393] | : . ' , ; ` | : . ' , ; ` |  $             : int 2
[08:07:35.393] | : . ' , ; ` | : . ' , ; ` |  $ rscript_libs: chr [1:2] "/usr/local/lib/R/site-library" "/usr/local/lib/R/library"
[08:07:35.897] | : . ' , ; ` | : . ' , ; ` | Generated cluster UUID
[08:07:35.897] | : . ' , ; ` | : . ' , ; ` | Cluster UUID: ‘72a1f0466bb5cdfee378ed066290fd25’
[08:07:35.897] | : . ' , ; ` | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:35.899] | : . ' , ; ` | : . ' , ; ` .makeCluster() ... done
[08:07:35.899] | : . ' , ; ` | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:35.901] | : . ' , ; ` | : . ' , ; makeCluster(workers, ...) ... done
[08:07:35.901] | : . ' , ; ` | : . ' , ; Number of workers: 2
[08:07:35.901] | : . ' , ; ` | : . ' , ; Workers UUID: ‘72a1f0466bb5cdfee378ed066290fd25’
[08:07:35.901] | : . ' , ; ` | : . ' , Starting new cluster ... done
[08:07:35.901] | : . ' , ; ` | : . ' ClusterFutureBackend(..., persistent = FALSE, gc = FALSE, earlySignal = FALSE) ... done
[08:07:35.902] | : . ' , ; ` | : . ' Backend: <‘MultisessionFutureBackend’, ‘ClusterFutureBackend’, ‘MultiprocessFutureBackend’, ‘FutureBackend’, ‘environment’>
[08:07:35.902] | : . ' , ; ` | : . MultisessionFutureBackend(workers = <workers>, interrupts = TRUE, ...) ... done
[08:07:35.902] | : . ' , ; ` | : makeFutureBackend(<multisession>) ... done
[08:07:35.902] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.902] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.902] | : . ' , ; ` | : plan(): nbrOfWorkers() = 2
[08:07:35.902] | : . ' , ; ` | plan(): plan_init() of ‘multisession’, ‘cluster’, ‘multiprocess’, ‘future’, ‘function’ ... done
[08:07:35.902] | : . ' , ; ` plan(): plan_set(<1 strategies>, skip = FALSE, cleanup = NA, init = TRUE) ... done
** Sum function 'A' with plan('multisession') ...
function (x, ...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, ...)
    }
    y
}
<bytecode: 0x563a59bffc88>
Arguments '...' exists: TRUE
[08:07:35.903] | : . ' , ; ` future(..., label = NULL) ...
[08:07:35.903] | : . ' , ; ` | lazy: FALSE
[08:07:35.903] | : . ' , ; ` | stdout: TRUE
[08:07:35.903] | : . ' , ; ` | conditions: [n=1] ‘condition’
[08:07:35.903] | : . ' , ; ` | gc: FALSE
[08:07:35.903] | : . ' , ; ` | earlySignal: FALSE
[08:07:35.904] | : . ' , ; ` | getGlobalsAndPackages() ...
[08:07:35.904] | : . ' , ; ` | : Searching for globals ...
[08:07:35.910] | : . ' , ; ` | : . globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[08:07:35.910] | : . ' , ; ` | : Searching for globals ... done
[08:07:35.910] | : . ' , ; ` | : Resolving globals: FALSE
[08:07:35.910] | : . ' , ; ` | : Tweak future expression to call with '...' arguments ...
[08:07:35.910] | : . ' , ; ` | : . {
[08:07:35.910] | : . ' , ; ` | : .     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:35.910] | : . ' , ; ` | : .     "# expression in do.call(), because function called uses '...'  "
[08:07:35.910] | : . ' , ; ` | : .     "# as a global variable                                         "
[08:07:35.910] | : . ' , ; ` | : .     do.call(function(...) {
[08:07:35.910] | : . ' , ; ` | : .         sum(x, ...)
[08:07:35.910] | : . ' , ; ` | : .     }, args = future.call.arguments)
[08:07:35.910] | : . ' , ; ` | : . }
[08:07:35.910] | : . ' , ; ` | : Tweak future expression to call with '...' arguments ... done
[08:07:35.910] | : . ' , ; ` | : Search for packages associated with the globals ...
[08:07:35.911] | : . ' , ; ` | : . Packages associated with globals: [1] ‘base’
[08:07:35.911] | : . ' , ; ` | : . Packages: [1] ‘base’
[08:07:35.911] | : . ' , ; ` | : Search for packages associated with the globals ... done
[08:07:35.911] | : . ' , ; ` | : Packages after dropping 'base': [0] 
[08:07:35.911] | : . ' , ; ` | : globals: [2] ‘x’, ‘future.call.arguments’
[08:07:35.911] | : . ' , ; ` | : packages: [0] 
[08:07:35.912] | : . ' , ; ` | getGlobalsAndPackages() ... done
[08:07:35.912] | : . ' , ; ` | run() for ‘Future’ (<unnamed-13>) ...
[08:07:35.912] | : . ' , ; ` | : state: ‘created’
[08:07:35.912] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.912] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.912] | : . ' , ; ` | : Using MultisessionFutureBackend ...
[08:07:35.912] | : . ' , ; ` | : . Number of futures since start: 0 (0 created, 0 launched, 0 finished)
[08:07:35.912] | : . ' , ; ` | : . Launching futures ...
[08:07:35.913] | : . ' , ; ` | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:35.913] | : . ' , ; ` | : . ' , Workers: [n=2]
[08:07:35.913] | : . ' , ; ` | : . ' , Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:35.915] | : . ' , ; ` | : . ' , FutureRegistry: ‘workers-72a1f0466bb5cdfee378ed066290fd25’
[08:07:35.915] | : . ' , ; ` | : . ' , requestWorker() ...
[08:07:35.915] | : . ' , ; ` | : . ' , ; requestNode() ...
[08:07:35.915] | : . ' , ; ` | : . ' , ; ` Number of workers: 2
[08:07:35.915] | : . ' , ; ` | : . ' , ; ` Polling for a free worker ...
[08:07:35.915] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:35.915] | : . ' , ; ` | : . ' , ; ` | : Created empty registry ‘workers-72a1f0466bb5cdfee378ed066290fd25’
[08:07:35.915] | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:07:35.916] | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:07:35.916] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:35.916] | : . ' , ; ` | : . ' , ; ` | Total time: 0
[08:07:35.916] | : . ' , ; ` | : . ' , ; ` Polling for a free worker ... done
[08:07:35.916] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:35.916] | : . ' , ; ` | : . ' , ; ` | Listing all futures
[08:07:35.916] | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 0
[08:07:35.917] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:35.917] | : . ' , ; ` | : . ' , ; ` avail: [n=2] ‘1’, ‘2’
[08:07:35.917] | : . ' , ; ` | : . ' , ; ` Index of first available worker: 1
[08:07:35.917] | : . ' , ; ` | : . ' , ; ` Validate that the worker is functional ...
[08:07:35.980] | : . ' , ; ` | : . ' , ; ` | Worker is functional
[08:07:35.981] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:35.981] | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:07:35.981] | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:07:35.981] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:35.981] | : . ' , ; ` | : . ' , ; ` Validate that the worker is functional ... done
[08:07:35.981] | : . ' , ; ` | : . ' , ; requestNode() ... done
[08:07:35.981] | : . ' , ; ` | : . ' , ; cluster node index: 1
[08:07:35.982] | : . ' , ; ` | : . ' , requestWorker() ... done
[08:07:35.982] | : . ' , ; ` | : . ' , eraseGlobalEnvironment() ...
[08:07:35.982] | : . ' , ; ` | : . ' , eraseGlobalEnvironment() ... done
[08:07:35.982] | : . ' , ; ` | : . ' , launchFuture() ...
[08:07:35.983] | : . ' , ; ` | : . ' , ; cluster node index: 1
[08:07:35.983] | : . ' , ; ` | : . ' , ; getFutureData() ...
[08:07:35.983] | : . ' , ; ` | : . ' , ; ` getFutureCore() ...
[08:07:35.983] | : . ' , ; ` | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:35.983] | : . ' , ; ` | : . ' , ; ` getFutureCore() ... done
[08:07:35.983] | : . ' , ; ` | : . ' , ; ` getFutureCapture() ...
[08:07:35.983] | : . ' , ; ` | : . ' , ; ` getFutureCapture() ... done
[08:07:35.984] | : . ' , ; ` | : . ' , ; ` getFutureContext() ...
[08:07:35.984] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:35.984] | : . ' , ; ` | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:35.984] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:35.984] | : . ' , ; ` | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:35.984] | : . ' , ; ` | : . ' , ; ` getFutureContext() ... done
[08:07:35.985] | : . ' , ; ` | : . ' , ; getFutureData() ... done
[08:07:35.985] | : . ' , ; ` | : . ' , ; FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ...
[08:07:35.985] | : . ' , ; ` | : . ' , ; ` Appended future to position #1
[08:07:35.985] | : . ' , ; ` | : . ' , ; ` Number of registered futures: 1
[08:07:35.986] | : . ' , ; ` | : . ' , ; FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ... done
[08:07:35.986] | : . ' , ; ` | : . ' , launchFuture() ... done
[08:07:35.986] | : . ' , ; ` | : . ' , MultisessionFuture started
[08:07:35.986] | : . ' , ; ` | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:35.986] | : . ' , ; ` | : . Launching futures ... done
[08:07:35.986] | : . ' , ; ` | : . Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:35.986] | : . ' , ; ` | : Using MultisessionFutureBackend ... done
[08:07:35.987] | : . ' , ; ` | run() for ‘Future’ (<unnamed-13>) ... done
[08:07:35.987] | : . ' , ; ` future(..., label = NULL) ... done
[08:07:35.987] | : . ' , ; ` value() for MultisessionFuture (<unnamed-13>) ...
[08:07:35.987] | : . ' , ; ` | result() for ClusterFuture ...
[08:07:35.988] | : . ' , ; ` | : assertValidConnection() ...
[08:07:35.988] | : . ' , ; ` | : . cluster node index: 1
[08:07:35.988] | : . ' , ; ` | : assertValidConnection() ... done
[08:07:35.989] | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ...
[08:07:35.989] | : . ' , ; ` | : . cluster node index: 1
[08:07:36.075] | : . ' , ; ` | : . [1] TRUE
[08:07:36.075] | : . ' , ; ` | : . received data:
[08:07:36.075] | : . ' , ; ` | : . List of 5
[08:07:36.075] | : . ' , ; ` | : .  $ type   : chr "VALUE"
[08:07:36.075] | : . ' , ; ` | : .  $ value  :List of 16
[08:07:36.075] | : . ' , ; ` | : .   ..$ value              : num 6
[08:07:36.075] | : . ' , ; ` | : .   ..$ visible            : logi TRUE
[08:07:36.075] | : . ' , ; ` | : .   ..$ stdout             : chr ""
[08:07:36.075] | : . ' , ; ` | : .   ..$ conditions         : list()
[08:07:36.075] | : . ' , ; ` | : .   ..$ rng                : logi FALSE
[08:07:36.075] | : . ' , ; ` | : .   ..$ seed               : NULL
[08:07:36.075] | : . ' , ; ` | : .   ..$ misuseGlobalEnv    : NULL
[08:07:36.075] | : . ' , ; ` | : .   ..$ misuseConnections  :List of 3
[08:07:36.075] | : . ' , ; ` | : .   .. ..$ added   : NULL
[08:07:36.075] | : . ' , ; ` | : .   .. ..$ removed : NULL
[08:07:36.075] | : . ' , ; ` | : .   .. ..$ replaced: NULL
[08:07:36.075] | : . ' , ; ` | : .   ..$ misuseDevices      : NULL
[08:07:36.075] | : . ' , ; ` | : .   ..$ misuseDefaultDevice: list()
[08:07:36.075] | : . ' , ; ` | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.075] | : . ' , ; ` | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.075] | : . ' , ; ` | : .   ..$ uuid               : chr [1:2] "358ea2d3871b28a4c233aed6c57ab88b" "13"
[08:07:36.075] | : . ' , ; ` | : .   ..$ session_uuid       : chr "052bff0a6b81b005d69ccae054863d31"
[08:07:36.075] | : . ' , ; ` | : .   .. ..- attr(*, "source")=List of 5
[08:07:36.075] | : . ' , ; ` | : .   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:36.075] | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:36.075] | : . ' , ; ` | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:36.075] | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:36.075] | : . ' , ; ` | : .   .. .. ..$ pid   : int 67578
[08:07:36.075] | : . ' , ; ` | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:35"
[08:07:36.075] | : . ' , ; ` | : .   .. .. ..$ random: int 2147483647
[08:07:36.075] | : . ' , ; ` | : .   ..$ r_info             :List of 4
[08:07:36.075] | : . ' , ; ` | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:36.075] | : . ' , ; ` | : .   .. .. ..$ : int [1:3] 4 5 1
[08:07:36.075] | : . ' , ; ` | : .   .. ..$ os           : chr "unix"
[08:07:36.075] | : . ' , ; ` | : .   .. ..$ os_name      : chr "Linux"
[08:07:36.075] | : . ' , ; ` | : .   .. ..$ captures_utf8: logi TRUE
[08:07:36.075] | : . ' , ; ` | : .   ..$ version            : chr "1.8"
[08:07:36.075] | : . ' , ; ` | : .   ..- attr(*, "class")= chr "FutureResult"
[08:07:36.075] | : . ' , ; ` | : .  $ success: logi TRUE
[08:07:36.075] | : . ' , ; ` | : .  $ time   : 'proc_time' Named num [1:5] 0.043 0.006 0.049 0 0
[08:07:36.075] | : . ' , ; ` | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:36.075] | : . ' , ; ` | : .  $ tag    : NULL
[08:07:36.090] | : . ' , ; ` | : . Received FutureResult
[08:07:36.090] | : . ' , ; ` | : . FutureResult:
[08:07:36.090] | : . ' , ; ` | : . value: ‘numeric’
[08:07:36.090] | : . ' , ; ` | : . visible: TRUE
[08:07:36.090] | : . ' , ; ` | : . stdout: character
[08:07:36.090] | : . ' , ; ` | : . conditions: [n = 0] 
[08:07:36.090] | : . ' , ; ` | : . RNG used: FALSE
[08:07:36.090] | : . ' , ; ` | : . duration: 0.04746938 secs (started 2025-06-17 08:07:36.026956)
[08:07:36.090] | : . ' , ; ` | : . version: 1.8
[08:07:36.091] | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ...
[08:07:36.091] | : . ' , ; ` | : . ' Removed future from position #1
[08:07:36.091] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:36.091] | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ... done
[08:07:36.091] | : . ' , ; ` | : . Erased future from future backend
[08:07:36.092] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:36.092] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:36.092] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:36.092] | : . ' , ; ` | : . signalConditions() ...
[08:07:36.092] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:07:36.092] | : . ' , ; ` | : . ' exclude = 
[08:07:36.092] | : . ' , ; ` | : . ' resignal = FALSE
[08:07:36.092] | : . ' , ; ` | : . ' Number of conditions: 0
[08:07:36.093] | : . ' , ; ` | : . '  int 0
[08:07:36.093] | : . ' , ; ` | : . signalConditions() ... done
[08:07:36.093] | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ... done
[08:07:36.093] | : . ' , ; ` | result() for ClusterFuture ... done
[08:07:36.093] | : . ' , ; ` | result() for ClusterFuture ...
[08:07:36.094] | : . ' , ; ` | : result already collected: FutureResult
[08:07:36.094] | : . ' , ; ` | result() for ClusterFuture ... done
[08:07:36.094] | : . ' , ; ` | signalConditions() ...
[08:07:36.094] | : . ' , ; ` | : include = ‘immediateCondition’
[08:07:36.094] | : . ' , ; ` | : exclude = 
[08:07:36.094] | : . ' , ; ` | : resignal = FALSE
[08:07:36.094] | : . ' , ; ` | : Number of conditions: 0
[08:07:36.095] | : . ' , ; ` | :  int 0
[08:07:36.095] | : . ' , ; ` | signalConditions() ... done
[08:07:36.095] | : . ' , ; ` | relay stdout ...
[08:07:36.095] | : . ' , ; ` | relay stdout ... done
[08:07:36.095] | : . ' , ; ` | check for misuse ...
[08:07:36.096] | : . ' , ; ` | check for misuse ... done
[08:07:36.096] | : . ' , ; ` value() for MultisessionFuture (<unnamed-13>) ... done
[1] 6
** Sum function 'B' with plan('multisession') ...
function (x, ...) 
{
    sumt <- function(x) {
        message("Arguments '...' exists: ", exists("...", inherits = TRUE))
        y %<-% {
            sum(x, ...)
        }
        y
    }
    sumt(x)
}
<bytecode: 0x563a58dc9f88>
Arguments '...' exists: TRUE
[08:07:36.096] | : . ' , ; ` future(..., label = NULL) ...
[08:07:36.096] | : . ' , ; ` | lazy: FALSE
[08:07:36.097] | : . ' , ; ` | stdout: TRUE
[08:07:36.097] | : . ' , ; ` | conditions: [n=1] ‘condition’
[08:07:36.097] | : . ' , ; ` | gc: FALSE
[08:07:36.097] | : . ' , ; ` | earlySignal: FALSE
[08:07:36.097] | : . ' , ; ` | getGlobalsAndPackages() ...
[08:07:36.097] | : . ' , ; ` | : Searching for globals ...
[08:07:36.105] | : . ' , ; ` | : . globals found: [4] ‘{’, ‘sum’, ‘x’, ‘...’
[08:07:36.105] | : . ' , ; ` | : Searching for globals ... done
[08:07:36.105] | : . ' , ; ` | : Resolving globals: FALSE
[08:07:36.105] | : . ' , ; ` | : Tweak future expression to call with '...' arguments ...
[08:07:36.105] | : . ' , ; ` | : . {
[08:07:36.105] | : . ' , ; ` | : .     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:36.105] | : . ' , ; ` | : .     "# expression in do.call(), because function called uses '...'  "
[08:07:36.105] | : . ' , ; ` | : .     "# as a global variable                                         "
[08:07:36.105] | : . ' , ; ` | : .     do.call(function(...) {
[08:07:36.105] | : . ' , ; ` | : .         sum(x, ...)
[08:07:36.105] | : . ' , ; ` | : .     }, args = future.call.arguments)
[08:07:36.105] | : . ' , ; ` | : . }
[08:07:36.106] | : . ' , ; ` | : Tweak future expression to call with '...' arguments ... done
[08:07:36.106] | : . ' , ; ` | : Search for packages associated with the globals ...
[08:07:36.106] | : . ' , ; ` | : . Packages associated with globals: [1] ‘base’
[08:07:36.107] | : . ' , ; ` | : . Packages: [1] ‘base’
[08:07:36.107] | : . ' , ; ` | : Search for packages associated with the globals ... done
[08:07:36.107] | : . ' , ; ` | : Packages after dropping 'base': [0] 
[08:07:36.107] | : . ' , ; ` | : globals: [2] ‘x’, ‘future.call.arguments’
[08:07:36.107] | : . ' , ; ` | : packages: [0] 
[08:07:36.107] | : . ' , ; ` | getGlobalsAndPackages() ... done
[08:07:36.108] | : . ' , ; ` | run() for ‘Future’ (<unnamed-14>) ...
[08:07:36.108] | : . ' , ; ` | : state: ‘created’
[08:07:36.108] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:36.108] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:36.108] | : . ' , ; ` | : Using MultisessionFutureBackend ...
[08:07:36.108] | : . ' , ; ` | : . Number of futures since start: 1 (1 created, 1 launched, 1 finished)
[08:07:36.109] | : . ' , ; ` | : . Launching futures ...
[08:07:36.109] | : . ' , ; ` | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:36.109] | : . ' , ; ` | : . ' , Workers: [n=2]
[08:07:36.109] | : . ' , ; ` | : . ' , Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:36.111] | : . ' , ; ` | : . ' , FutureRegistry: ‘workers-72a1f0466bb5cdfee378ed066290fd25’
[08:07:36.111] | : . ' , ; ` | : . ' , requestWorker() ...
[08:07:36.111] | : . ' , ; ` | : . ' , ; requestNode() ...
[08:07:36.111] | : . ' , ; ` | : . ' , ; ` Number of workers: 2
[08:07:36.111] | : . ' , ; ` | : . ' , ; ` Polling for a free worker ...
[08:07:36.112] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.112] | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:07:36.112] | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:07:36.112] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.112] | : . ' , ; ` | : . ' , ; ` | Total time: 0
[08:07:36.112] | : . ' , ; ` | : . ' , ; ` Polling for a free worker ... done
[08:07:36.112] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.113] | : . ' , ; ` | : . ' , ; ` | Listing all futures
[08:07:36.113] | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 0
[08:07:36.113] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.113] | : . ' , ; ` | : . ' , ; ` avail: [n=2] ‘1’, ‘2’
[08:07:36.113] | : . ' , ; ` | : . ' , ; ` Index of first available worker: 1
[08:07:36.113] | : . ' , ; ` | : . ' , ; ` Validate that the worker is functional ...
[08:07:36.173] | : . ' , ; ` | : . ' , ; ` | Worker is functional
[08:07:36.173] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.173] | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:07:36.173] | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:07:36.173] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.174] | : . ' , ; ` | : . ' , ; ` Validate that the worker is functional ... done
[08:07:36.174] | : . ' , ; ` | : . ' , ; requestNode() ... done
[08:07:36.174] | : . ' , ; ` | : . ' , ; cluster node index: 1
[08:07:36.174] | : . ' , ; ` | : . ' , requestWorker() ... done
[08:07:36.174] | : . ' , ; ` | : . ' , eraseGlobalEnvironment() ...
[08:07:36.174] | : . ' , ; ` | : . ' , eraseGlobalEnvironment() ... done
[08:07:36.174] | : . ' , ; ` | : . ' , launchFuture() ...
[08:07:36.175] | : . ' , ; ` | : . ' , ; cluster node index: 1
[08:07:36.175] | : . ' , ; ` | : . ' , ; getFutureData() ...
[08:07:36.175] | : . ' , ; ` | : . ' , ; ` getFutureCore() ...
[08:07:36.175] | : . ' , ; ` | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:36.175] | : . ' , ; ` | : . ' , ; ` getFutureCore() ... done
[08:07:36.175] | : . ' , ; ` | : . ' , ; ` getFutureCapture() ...
[08:07:36.175] | : . ' , ; ` | : . ' , ; ` getFutureCapture() ... done
[08:07:36.175] | : . ' , ; ` | : . ' , ; ` getFutureContext() ...
[08:07:36.175] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:36.175] | : . ' , ; ` | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:36.176] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:36.176] | : . ' , ; ` | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:36.176] | : . ' , ; ` | : . ' , ; ` getFutureContext() ... done
[08:07:36.176] | : . ' , ; ` | : . ' , ; getFutureData() ... done
[08:07:36.176] | : . ' , ; ` | : . ' , ; FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ...
[08:07:36.176] | : . ' , ; ` | : . ' , ; ` Appended future to position #1
[08:07:36.176] | : . ' , ; ` | : . ' , ; ` Number of registered futures: 1
[08:07:36.177] | : . ' , ; ` | : . ' , ; FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ... done
[08:07:36.177] | : . ' , ; ` | : . ' , launchFuture() ... done
[08:07:36.177] | : . ' , ; ` | : . ' , MultisessionFuture started
[08:07:36.177] | : . ' , ; ` | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:36.177] | : . ' , ; ` | : . Launching futures ... done
[08:07:36.177] | : . ' , ; ` | : . Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:36.177] | : . ' , ; ` | : Using MultisessionFutureBackend ... done
[08:07:36.177] | : . ' , ; ` | run() for ‘Future’ (<unnamed-14>) ... done
[08:07:36.177] | : . ' , ; ` future(..., label = NULL) ... done
[08:07:36.178] | : . ' , ; ` value() for MultisessionFuture (<unnamed-14>) ...
[08:07:36.178] | : . ' , ; ` | result() for ClusterFuture ...
[08:07:36.178] | : . ' , ; ` | : assertValidConnection() ...
[08:07:36.178] | : . ' , ; ` | : . cluster node index: 1
[08:07:36.178] | : . ' , ; ` | : assertValidConnection() ... done
[08:07:36.178] | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ...
[08:07:36.179] | : . ' , ; ` | : . cluster node index: 1
[08:07:36.220] | : . ' , ; ` | : . [1] TRUE
[08:07:36.221] | : . ' , ; ` | : . received data:
[08:07:36.221] | : . ' , ; ` | : . List of 5
[08:07:36.221] | : . ' , ; ` | : .  $ type   : chr "VALUE"
[08:07:36.221] | : . ' , ; ` | : .  $ value  :List of 16
[08:07:36.221] | : . ' , ; ` | : .   ..$ value              : num 6
[08:07:36.221] | : . ' , ; ` | : .   ..$ visible            : logi TRUE
[08:07:36.221] | : . ' , ; ` | : .   ..$ stdout             : chr ""
[08:07:36.221] | : . ' , ; ` | : .   ..$ conditions         : list()
[08:07:36.221] | : . ' , ; ` | : .   ..$ rng                : logi FALSE
[08:07:36.221] | : . ' , ; ` | : .   ..$ seed               : NULL
[08:07:36.221] | : . ' , ; ` | : .   ..$ misuseGlobalEnv    : NULL
[08:07:36.221] | : . ' , ; ` | : .   ..$ misuseConnections  :List of 3
[08:07:36.221] | : . ' , ; ` | : .   .. ..$ added   : NULL
[08:07:36.221] | : . ' , ; ` | : .   .. ..$ removed : NULL
[08:07:36.221] | : . ' , ; ` | : .   .. ..$ replaced: NULL
[08:07:36.221] | : . ' , ; ` | : .   ..$ misuseDevices      : NULL
[08:07:36.221] | : . ' , ; ` | : .   ..$ misuseDefaultDevice: list()
[08:07:36.221] | : . ' , ; ` | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.221] | : . ' , ; ` | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.221] | : . ' , ; ` | : .   ..$ uuid               : chr [1:2] "358ea2d3871b28a4c233aed6c57ab88b" "14"
[08:07:36.221] | : . ' , ; ` | : .   ..$ session_uuid       : chr "052bff0a6b81b005d69ccae054863d31"
[08:07:36.221] | : . ' , ; ` | : .   .. ..- attr(*, "source")=List of 5
[08:07:36.221] | : . ' , ; ` | : .   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:36.221] | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:36.221] | : . ' , ; ` | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:36.221] | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:36.221] | : . ' , ; ` | : .   .. .. ..$ pid   : int 67578
[08:07:36.221] | : . ' , ; ` | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:35"
[08:07:36.221] | : . ' , ; ` | : .   .. .. ..$ random: int 2147483647
[08:07:36.221] | : . ' , ; ` | : .   ..$ r_info             :List of 4
[08:07:36.221] | : . ' , ; ` | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:36.221] | : . ' , ; ` | : .   .. .. ..$ : int [1:3] 4 5 1
[08:07:36.221] | : . ' , ; ` | : .   .. ..$ os           : chr "unix"
[08:07:36.221] | : . ' , ; ` | : .   .. ..$ os_name      : chr "Linux"
[08:07:36.221] | : . ' , ; ` | : .   .. ..$ captures_utf8: logi TRUE
[08:07:36.221] | : . ' , ; ` | : .   ..$ version            : chr "1.8"
[08:07:36.221] | : . ' , ; ` | : .   ..- attr(*, "class")= chr "FutureResult"
[08:07:36.221] | : . ' , ; ` | : .  $ success: logi TRUE
[08:07:36.221] | : . ' , ; ` | : .  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[08:07:36.221] | : . ' , ; ` | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:36.221] | : . ' , ; ` | : .  $ tag    : NULL
[08:07:36.232] | : . ' , ; ` | : . Received FutureResult
[08:07:36.232] | : . ' , ; ` | : . FutureResult:
[08:07:36.232] | : . ' , ; ` | : . value: ‘numeric’
[08:07:36.232] | : . ' , ; ` | : . visible: TRUE
[08:07:36.232] | : . ' , ; ` | : . stdout: character
[08:07:36.232] | : . ' , ; ` | : . conditions: [n = 0] 
[08:07:36.232] | : . ' , ; ` | : . RNG used: FALSE
[08:07:36.232] | : . ' , ; ` | : . duration: 0.002682924 secs (started 2025-06-17 08:07:36.217764)
[08:07:36.232] | : . ' , ; ` | : . version: 1.8
[08:07:36.232] | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ...
[08:07:36.232] | : . ' , ; ` | : . ' Removed future from position #1
[08:07:36.233] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:36.233] | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ... done
[08:07:36.233] | : . ' , ; ` | : . Erased future from future backend
[08:07:36.233] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:36.233] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:36.233] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:36.233] | : . ' , ; ` | : . signalConditions() ...
[08:07:36.233] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:07:36.234] | : . ' , ; ` | : . ' exclude = 
[08:07:36.234] | : . ' , ; ` | : . ' resignal = FALSE
[08:07:36.234] | : . ' , ; ` | : . ' Number of conditions: 0
[08:07:36.234] | : . ' , ; ` | : . '  int 0
[08:07:36.234] | : . ' , ; ` | : . signalConditions() ... done
[08:07:36.234] | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ... done
[08:07:36.234] | : . ' , ; ` | result() for ClusterFuture ... done
[08:07:36.235] | : . ' , ; ` | result() for ClusterFuture ...
[08:07:36.235] | : . ' , ; ` | : result already collected: FutureResult
[08:07:36.235] | : . ' , ; ` | result() for ClusterFuture ... done
[08:07:36.235] | : . ' , ; ` | signalConditions() ...
[08:07:36.235] | : . ' , ; ` | : include = ‘immediateCondition’
[08:07:36.235] | : . ' , ; ` | : exclude = 
[08:07:36.235] | : . ' , ; ` | : resignal = FALSE
[08:07:36.235] | : . ' , ; ` | : Number of conditions: 0
[08:07:36.235] | : . ' , ; ` | :  int 0
[08:07:36.236] | : . ' , ; ` | signalConditions() ... done
[08:07:36.236] | : . ' , ; ` | relay stdout ...
[08:07:36.236] | : . ' , ; ` | relay stdout ... done
[08:07:36.236] | : . ' , ; ` | check for misuse ...
[08:07:36.236] | : . ' , ; ` | check for misuse ... done
[08:07:36.236] | : . ' , ; ` value() for MultisessionFuture (<unnamed-14>) ... done
[1] 6
** Sum function 'C' with plan('multisession') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y)
    }
    y
}
<bytecode: 0x563a5a91b218>
Arguments '...' exists: FALSE
[08:07:36.237] | : . ' , ; ` future(..., label = NULL) ...
[08:07:36.237] | : . ' , ; ` | lazy: FALSE
[08:07:36.237] | : . ' , ; ` | stdout: TRUE
[08:07:36.237] | : . ' , ; ` | conditions: [n=1] ‘condition’
[08:07:36.237] | : . ' , ; ` | gc: FALSE
[08:07:36.237] | : . ' , ; ` | earlySignal: FALSE
[08:07:36.237] | : . ' , ; ` | getGlobalsAndPackages() ...
[08:07:36.238] | : . ' , ; ` | : Searching for globals ...
[08:07:36.243] | : . ' , ; ` | : . globals found: [4] ‘{’, ‘sum’, ‘x’, ‘y’
[08:07:36.243] | : . ' , ; ` | : Searching for globals ... done
[08:07:36.243] | : . ' , ; ` | : Resolving globals: FALSE
[08:07:36.244] | : . ' , ; ` | : Search for packages associated with the globals ...
[08:07:36.244] | : . ' , ; ` | : . Packages associated with globals: [1] ‘base’
[08:07:36.244] | : . ' , ; ` | : . Packages: [1] ‘base’
[08:07:36.244] | : . ' , ; ` | : Search for packages associated with the globals ... done
[08:07:36.244] | : . ' , ; ` | : Packages after dropping 'base': [0] 
[08:07:36.244] | : . ' , ; ` | : globals: [2] ‘x’, ‘y’
[08:07:36.245] | : . ' , ; ` | : packages: [0] 
[08:07:36.245] | : . ' , ; ` | getGlobalsAndPackages() ... done
[08:07:36.245] | : . ' , ; ` | run() for ‘Future’ (<unnamed-15>) ...
[08:07:36.245] | : . ' , ; ` | : state: ‘created’
[08:07:36.245] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:36.245] | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:36.245] | : . ' , ; ` | : Using MultisessionFutureBackend ...
[08:07:36.246] | : . ' , ; ` | : . Number of futures since start: 2 (2 created, 2 launched, 2 finished)
[08:07:36.246] | : . ' , ; ` | : . Launching futures ...
[08:07:36.246] | : . ' , ; ` | : . ' launchFuture() for ClusterFutureBackend ...
[08:07:36.246] | : . ' , ; ` | : . ' , Workers: [n=2]
[08:07:36.246] | : . ' , ; ` | : . ' , Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:36.247] | : . ' , ; ` | : . ' , FutureRegistry: ‘workers-72a1f0466bb5cdfee378ed066290fd25’
[08:07:36.248] | : . ' , ; ` | : . ' , requestWorker() ...
[08:07:36.248] | : . ' , ; ` | : . ' , ; requestNode() ...
[08:07:36.248] | : . ' , ; ` | : . ' , ; ` Number of workers: 2
[08:07:36.248] | : . ' , ; ` | : . ' , ; ` Polling for a free worker ...
[08:07:36.248] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.248] | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:07:36.248] | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:07:36.248] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.248] | : . ' , ; ` | : . ' , ; ` | Total time: 0
[08:07:36.249] | : . ' , ; ` | : . ' , ; ` Polling for a free worker ... done
[08:07:36.249] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.249] | : . ' , ; ` | : . ' , ; ` | Listing all futures
[08:07:36.249] | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 0
[08:07:36.249] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.249] | : . ' , ; ` | : . ' , ; ` avail: [n=2] ‘1’, ‘2’
[08:07:36.249] | : . ' , ; ` | : . ' , ; ` Index of first available worker: 1
[08:07:36.249] | : . ' , ; ` | : . ' , ; ` Validate that the worker is functional ...
[08:07:36.345] | : . ' , ; ` | : . ' , ; ` | Worker is functional
[08:07:36.346] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.346] | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:07:36.346] | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:07:36.346] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.346] | : . ' , ; ` | : . ' , ; ` Validate that the worker is functional ... done
[08:07:36.346] | : . ' , ; ` | : . ' , ; requestNode() ... done
[08:07:36.346] | : . ' , ; ` | : . ' , ; cluster node index: 1
[08:07:36.347] | : . ' , ; ` | : . ' , requestWorker() ... done
[08:07:36.347] | : . ' , ; ` | : . ' , eraseGlobalEnvironment() ...
[08:07:36.347] | : . ' , ; ` | : . ' , eraseGlobalEnvironment() ... done
[08:07:36.347] | : . ' , ; ` | : . ' , launchFuture() ...
[08:07:36.347] | : . ' , ; ` | : . ' , ; cluster node index: 1
[08:07:36.347] | : . ' , ; ` | : . ' , ; getFutureData() ...
[08:07:36.348] | : . ' , ; ` | : . ' , ; ` getFutureCore() ...
[08:07:36.348] | : . ' , ; ` | : . ' , ; ` | Packages needed by the future expression (n = 0): <none>
[08:07:36.348] | : . ' , ; ` | : . ' , ; ` getFutureCore() ... done
[08:07:36.348] | : . ' , ; ` | : . ' , ; ` getFutureCapture() ...
[08:07:36.348] | : . ' , ; ` | : . ' , ; ` getFutureCapture() ... done
[08:07:36.348] | : . ' , ; ` | : . ' , ; ` getFutureContext() ...
[08:07:36.348] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:36.348] | : . ' , ; ` | : . ' , ; ` | : Getting stack without first backend: [n=0] 
[08:07:36.348] | : . ' , ; ` | : . ' , ; ` | plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:36.349] | : . ' , ; ` | : . ' , ; ` | Packages needed by future backend (n = 0): <none>
[08:07:36.349] | : . ' , ; ` | : . ' , ; ` getFutureContext() ... done
[08:07:36.349] | : . ' , ; ` | : . ' , ; getFutureData() ... done
[08:07:36.349] | : . ' , ; ` | : . ' , ; FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ...
[08:07:36.349] | : . ' , ; ` | : . ' , ; ` Appended future to position #1
[08:07:36.349] | : . ' , ; ` | : . ' , ; ` Number of registered futures: 1
[08:07:36.349] | : . ' , ; ` | : . ' , ; FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ... done
[08:07:36.350] | : . ' , ; ` | : . ' , launchFuture() ... done
[08:07:36.350] | : . ' , ; ` | : . ' , MultisessionFuture started
[08:07:36.350] | : . ' , ; ` | : . ' launchFuture() for ClusterFutureBackend ... done
[08:07:36.350] | : . ' , ; ` | : . Launching futures ... done
[08:07:36.350] | : . ' , ; ` | : . Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:36.350] | : . ' , ; ` | : Using MultisessionFutureBackend ... done
[08:07:36.350] | : . ' , ; ` | run() for ‘Future’ (<unnamed-15>) ... done
[08:07:36.350] | : . ' , ; ` future(..., label = NULL) ... done
[08:07:36.351] | : . ' , ; ` value() for MultisessionFuture (<unnamed-15>) ...
[08:07:36.351] | : . ' , ; ` | result() for ClusterFuture ...
[08:07:36.351] | : . ' , ; ` | : assertValidConnection() ...
[08:07:36.351] | : . ' , ; ` | : . cluster node index: 1
[08:07:36.351] | : . ' , ; ` | : assertValidConnection() ... done
[08:07:36.351] | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ...
[08:07:36.351] | : . ' , ; ` | : . cluster node index: 1
[08:07:36.392] | : . ' , ; ` | : . [1] TRUE
[08:07:36.393] | : . ' , ; ` | : . received data:
[08:07:36.393] | : . ' , ; ` | : . List of 5
[08:07:36.393] | : . ' , ; ` | : .  $ type   : chr "VALUE"
[08:07:36.393] | : . ' , ; ` | : .  $ value  :List of 16
[08:07:36.393] | : . ' , ; ` | : .   ..$ value              : num 6
[08:07:36.393] | : . ' , ; ` | : .   ..$ visible            : logi TRUE
[08:07:36.393] | : . ' , ; ` | : .   ..$ stdout             : chr ""
[08:07:36.393] | : . ' , ; ` | : .   ..$ conditions         : list()
[08:07:36.393] | : . ' , ; ` | : .   ..$ rng                : logi FALSE
[08:07:36.393] | : . ' , ; ` | : .   ..$ seed               : NULL
[08:07:36.393] | : . ' , ; ` | : .   ..$ misuseGlobalEnv    : NULL
[08:07:36.393] | : . ' , ; ` | : .   ..$ misuseConnections  :List of 3
[08:07:36.393] | : . ' , ; ` | : .   .. ..$ added   : NULL
[08:07:36.393] | : . ' , ; ` | : .   .. ..$ removed : NULL
[08:07:36.393] | : . ' , ; ` | : .   .. ..$ replaced: NULL
[08:07:36.393] | : . ' , ; ` | : .   ..$ misuseDevices      : NULL
[08:07:36.393] | : . ' , ; ` | : .   ..$ misuseDefaultDevice: list()
[08:07:36.393] | : . ' , ; ` | : .   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.393] | : . ' , ; ` | : .   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.393] | : . ' , ; ` | : .   ..$ uuid               : chr [1:2] "358ea2d3871b28a4c233aed6c57ab88b" "15"
[08:07:36.393] | : . ' , ; ` | : .   ..$ session_uuid       : chr "052bff0a6b81b005d69ccae054863d31"
[08:07:36.393] | : . ' , ; ` | : .   .. ..- attr(*, "source")=List of 5
[08:07:36.393] | : . ' , ; ` | : .   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:36.393] | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:36.393] | : . ' , ; ` | : .   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:36.393] | : . ' , ; ` | : .   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:36.393] | : . ' , ; ` | : .   .. .. ..$ pid   : int 67578
[08:07:36.393] | : . ' , ; ` | : .   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:35"
[08:07:36.393] | : . ' , ; ` | : .   .. .. ..$ random: int 2147483647
[08:07:36.393] | : . ' , ; ` | : .   ..$ r_info             :List of 4
[08:07:36.393] | : . ' , ; ` | : .   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:36.393] | : . ' , ; ` | : .   .. .. ..$ : int [1:3] 4 5 1
[08:07:36.393] | : . ' , ; ` | : .   .. ..$ os           : chr "unix"
[08:07:36.393] | : . ' , ; ` | : .   .. ..$ os_name      : chr "Linux"
[08:07:36.393] | : . ' , ; ` | : .   .. ..$ captures_utf8: logi TRUE
[08:07:36.393] | : . ' , ; ` | : .   ..$ version            : chr "1.8"
[08:07:36.393] | : . ' , ; ` | : .   ..- attr(*, "class")= chr "FutureResult"
[08:07:36.393] | : . ' , ; ` | : .  $ success: logi TRUE
[08:07:36.393] | : . ' , ; ` | : .  $ time   : 'proc_time' Named num [1:5] 0.003 0 0.003 0 0
[08:07:36.393] | : . ' , ; ` | : .   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:36.393] | : . ' , ; ` | : .  $ tag    : NULL
[08:07:36.404] | : . ' , ; ` | : . Received FutureResult
[08:07:36.404] | : . ' , ; ` | : . FutureResult:
[08:07:36.404] | : . ' , ; ` | : . value: ‘numeric’
[08:07:36.404] | : . ' , ; ` | : . visible: TRUE
[08:07:36.404] | : . ' , ; ` | : . stdout: character
[08:07:36.404] | : . ' , ; ` | : . conditions: [n = 0] 
[08:07:36.404] | : . ' , ; ` | : . RNG used: FALSE
[08:07:36.404] | : . ' , ; ` | : . duration: 0.002538204 secs (started 2025-06-17 08:07:36.38976)
[08:07:36.404] | : . ' , ; ` | : . version: 1.8
[08:07:36.404] | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ...
[08:07:36.405] | : . ' , ; ` | : . ' Removed future from position #1
[08:07:36.405] | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:36.405] | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ... done
[08:07:36.405] | : . ' , ; ` | : . Erased future from future backend
[08:07:36.405] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:36.405] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:36.405] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:36.405] | : . ' , ; ` | : . signalConditions() ...
[08:07:36.405] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:07:36.406] | : . ' , ; ` | : . ' exclude = 
[08:07:36.406] | : . ' , ; ` | : . ' resignal = FALSE
[08:07:36.406] | : . ' , ; ` | : . ' Number of conditions: 0
[08:07:36.406] | : . ' , ; ` | : . '  int 0
[08:07:36.406] | : . ' , ; ` | : . signalConditions() ... done
[08:07:36.406] | : . ' , ; ` | : receiveMessageFromWorker() for ClusterFuture ... done
[08:07:36.407] | : . ' , ; ` | result() for ClusterFuture ... done
[08:07:36.407] | : . ' , ; ` | result() for ClusterFuture ...
[08:07:36.407] | : . ' , ; ` | : result already collected: FutureResult
[08:07:36.407] | : . ' , ; ` | result() for ClusterFuture ... done
[08:07:36.407] | : . ' , ; ` | signalConditions() ...
[08:07:36.407] | : . ' , ; ` | : include = ‘immediateCondition’
[08:07:36.407] | : . ' , ; ` | : exclude = 
[08:07:36.407] | : . ' , ; ` | : resignal = FALSE
[08:07:36.407] | : . ' , ; ` | : Number of conditions: 0
[08:07:36.407] | : . ' , ; ` | :  int 0
[08:07:36.408] | : . ' , ; ` | signalConditions() ... done
[08:07:36.408] | : . ' , ; ` | relay stdout ...
[08:07:36.408] | : . ' , ; ` | relay stdout ... done
[08:07:36.408] | : . ' , ; ` | check for misuse ...
[08:07:36.408] | : . ' , ; ` | check for misuse ... done
[08:07:36.408] | : . ' , ; ` value() for MultisessionFuture (<unnamed-15>) ... done
[1] 6
** Sum function 'D' with plan('multisession') ...
function (x, y) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    y %<-% {
        sum(x, y, ...)
    }
    y
}
<bytecode: 0x563a5ab8a2d0>
Arguments '...' exists: FALSE
[08:07:36.409] | : . ' , ; ` future(..., label = NULL) ...
[08:07:36.409] | : . ' , ; ` | lazy: FALSE
[08:07:36.409] | : . ' , ; ` | stdout: TRUE
[08:07:36.409] | : . ' , ; ` | conditions: [n=1] ‘condition’
[08:07:36.409] | : . ' , ; ` | gc: FALSE
[08:07:36.409] | : . ' , ; ` | earlySignal: FALSE
[08:07:36.409] | : . ' , ; ` | getGlobalsAndPackages() ...
[08:07:36.410] | : . ' , ; ` | : Searching for globals ...
[08:07:36.418] | : . ' , ; ` | : . globals found: [5] ‘{’, ‘sum’, ‘x’, ‘y’, ‘...’
[08:07:36.418] | : . ' , ; ` | : Searching for globals ... done
[08:07:36.418] | : . ' , ; ` | : Resolving globals: FALSE
[08:07:36.418] | : . ' , ; ` | : Tweak future expression to call with '...' arguments ...
[08:07:36.419] | : . ' , ; ` | : . Search for packages associated with the globals ...
[08:07:36.419] | : . ' , ; ` | : . ' Packages associated with globals: [1] ‘base’
[08:07:36.419] | : . ' , ; ` | : . ' Packages: [1] ‘base’
[08:07:36.419] | : . ' , ; ` | : . Search for packages associated with the globals ... done
[08:07:36.419] | : . ' , ; ` | : . Packages after dropping 'base': [0] 
[08:07:36.419] | : . ' , ; ` | : . globals: [2] ‘x’, ‘y’
[08:07:36.420] | : . ' , ; ` | : . packages: [0] 
[08:07:36.420] | : . ' , ; ` | : Tweak future expression to call with '...' arguments ... done
[08:07:36.420] | : . ' , ; ` | : run() for ‘Future’ (<unnamed-16>) ...
[08:07:36.420] | : . ' , ; ` | : . state: ‘created’
[08:07:36.420] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:36.420] | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:36.420] | : . ' , ; ` | : . Using MultisessionFutureBackend ...
[08:07:36.420] | : . ' , ; ` | : . ' Number of futures since start: 3 (3 created, 3 launched, 3 finished)
[08:07:36.421] | : . ' , ; ` | : . ' Launching futures ...
[08:07:36.421] | : . ' , ; ` | : . ' , launchFuture() for ClusterFutureBackend ...
[08:07:36.421] | : . ' , ; ` | : . ' , ; Workers: [n=2]
[08:07:36.421] | : . ' , ; ` | : . ' , ; Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:36.422] | : . ' , ; ` | : . ' , ; FutureRegistry: ‘workers-72a1f0466bb5cdfee378ed066290fd25’
[08:07:36.423] | : . ' , ; ` | : . ' , ; requestWorker() ...
[08:07:36.423] | : . ' , ; ` | : . ' , ; ` requestNode() ...
[08:07:36.423] | : . ' , ; ` | : . ' , ; ` | Number of workers: 2
[08:07:36.423] | : . ' , ; ` | : . ' , ; ` | Polling for a free worker ...
[08:07:36.423] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.423] | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:07:36.423] | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:07:36.423] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.423] | : . ' , ; ` | : . ' , ; ` | : Total time: 0
[08:07:36.423] | : . ' , ; ` | : . ' , ; ` | Polling for a free worker ... done
[08:07:36.424] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.424] | : . ' , ; ` | : . ' , ; ` | : Listing all futures
[08:07:36.424] | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 0
[08:07:36.424] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.424] | : . ' , ; ` | : . ' , ; ` | avail: [n=2] ‘1’, ‘2’
[08:07:36.424] | : . ' , ; ` | : . ' , ; ` | Index of first available worker: 1
[08:07:36.424] | : . ' , ; ` | : . ' , ; ` | Validate that the worker is functional ...
[08:07:36.522] | : . ' , ; ` | : . ' , ; ` | : Worker is functional
[08:07:36.523] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.523] | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:07:36.523] | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:07:36.523] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.523] | : . ' , ; ` | : . ' , ; ` | Validate that the worker is functional ... done
[08:07:36.523] | : . ' , ; ` | : . ' , ; ` requestNode() ... done
[08:07:36.523] | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:07:36.524] | : . ' , ; ` | : . ' , ; requestWorker() ... done
[08:07:36.524] | : . ' , ; ` | : . ' , ; eraseGlobalEnvironment() ...
[08:07:36.524] | : . ' , ; ` | : . ' , ; eraseGlobalEnvironment() ... done
[08:07:36.524] | : . ' , ; ` | : . ' , ; launchFuture() ...
[08:07:36.524] | : . ' , ; ` | : . ' , ; ` cluster node index: 1
[08:07:36.524] | : . ' , ; ` | : . ' , ; ` getFutureData() ...
[08:07:36.524] | : . ' , ; ` | : . ' , ; ` | getFutureCore() ...
[08:07:36.525] | : . ' , ; ` | : . ' , ; ` | : Packages needed by the future expression (n = 0): <none>
[08:07:36.525] | : . ' , ; ` | : . ' , ; ` | getFutureCore() ... done
[08:07:36.525] | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ...
[08:07:36.525] | : . ' , ; ` | : . ' , ; ` | getFutureCapture() ... done
[08:07:36.525] | : . ' , ; ` | : . ' , ; ` | getFutureContext() ...
[08:07:36.525] | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:36.525] | : . ' , ; ` | : . ' , ; ` | : . Getting stack without first backend: [n=0] 
[08:07:36.525] | : . ' , ; ` | : . ' , ; ` | : plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:36.525] | : . ' , ; ` | : . ' , ; ` | : Packages needed by future backend (n = 0): <none>
[08:07:36.526] | : . ' , ; ` | : . ' , ; ` | getFutureContext() ... done
[08:07:36.526] | : . ' , ; ` | : . ' , ; ` getFutureData() ... done
[08:07:36.526] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ...
[08:07:36.526] | : . ' , ; ` | : . ' , ; ` | Appended future to position #1
[08:07:36.526] | : . ' , ; ` | : . ' , ; ` | Number of registered futures: 1
[08:07:36.526] | : . ' , ; ` | : . ' , ; ` FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ... done
[08:07:36.527] | : . ' , ; ` | : . ' , ; launchFuture() ... done
[08:07:36.527] | : . ' , ; ` | : . ' , ; MultisessionFuture started
[08:07:36.527] | : . ' , ; ` | : . ' , launchFuture() for ClusterFutureBackend ... done
[08:07:36.527] | : . ' , ; ` | : . ' Launching futures ... done
[08:07:36.527] | : . ' , ; ` | : . ' Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:36.527] | : . ' , ; ` | : . Using MultisessionFutureBackend ... done
[08:07:36.527] | : . ' , ; ` | : run() for ‘Future’ (<unnamed-16>) ... done
[08:07:36.527] | : . ' , ; ` | getGlobalsAndPackages() ... done
[08:07:36.527] | : . ' , ; ` | value() for MultisessionFuture (<unnamed-16>) ...
[08:07:36.528] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:36.528] | : . ' , ; ` | : . assertValidConnection() ...
[08:07:36.528] | : . ' , ; ` | : . ' cluster node index: 1
[08:07:36.528] | : . ' , ; ` | : . assertValidConnection() ... done
[08:07:36.528] | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ...
[08:07:36.528] | : . ' , ; ` | : . ' cluster node index: 1
[08:07:36.570] | : . ' , ; ` | : . ' [1] TRUE
[08:07:36.570] | : . ' , ; ` | : . ' received data:
[08:07:36.570] | : . ' , ; ` | : . ' List of 5
[08:07:36.570] | : . ' , ; ` | : . '  $ type   : chr "VALUE"
[08:07:36.570] | : . ' , ; ` | : . '  $ value  :List of 16
[08:07:36.570] | : . ' , ; ` | : . '   ..$ value              : NULL
[08:07:36.570] | : . ' , ; ` | : . '   ..$ visible            : logi TRUE
[08:07:36.570] | : . ' , ; ` | : . '   ..$ stdout             : chr ""
[08:07:36.570] | : . ' , ; ` | : . '   ..$ conditions         :List of 1
[08:07:36.570] | : . ' , ; ` | : . '   .. ..$ :List of 5
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ condition:List of 2
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ message: chr "'...' used in an incorrect context"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ call   : language eval(quote({     { ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ calls    :List of 9
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ : language eval(expr, envir = globalenv())
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ : language eval(expr, envir = globalenv())
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ : language local({     { ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ : language eval(expr, p)
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ : language eval(expr, p)
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ : language eval(quote({     { ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ : language eval(quote({     { ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ : language eval(quote({     { ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ session  :List of 6
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ r         :List of 14
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ platform      : chr "x86_64-pc-linux-gnu"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ arch          : chr "x86_64"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ os            : chr "linux-gnu"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ system        : chr "x86_64, linux-gnu"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ status        : chr ""
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ major         : chr "4"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ minor         : chr "5.1"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ year          : chr "2025"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ month         : chr "06"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ day           : chr "13"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ svn rev       : chr "88306"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ language      : chr "R"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ version.string: chr "R version 4.5.1 (2025-06-13)"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..$ nickname      : chr "Great Square Root"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ locale    : chr "LC_CTYPE=en_US.UTF-8;LC_NUMERIC=C;LC_TIME=en_US.UTF-8;LC_COLLATE=en_US.UTF-8;LC_MONETARY=en_US.UTF-8;LC_MESSAGE"| __truncated__
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ rngkind   : chr [1:3] "Mersenne-Twister" "Inversion" "Rejection"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ namespaces: chr [1:16] "compiler" "parallelly" "graphics" "tools" ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ search    : chr [1:10] ".GlobalEnv" "package:future" "package:stats" "package:graphics" ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..$ system    : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ timestamp: POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ signaled : int 0
[08:07:36.570] | : . ' , ; ` | : . '   ..$ rng                : logi FALSE
[08:07:36.570] | : . ' , ; ` | : . '   ..$ seed               : NULL
[08:07:36.570] | : . ' , ; ` | : . '   ..$ misuseGlobalEnv    : NULL
[08:07:36.570] | : . ' , ; ` | : . '   ..$ misuseConnections  :List of 3
[08:07:36.570] | : . ' , ; ` | : . '   .. ..$ added   : NULL
[08:07:36.570] | : . ' , ; ` | : . '   .. ..$ removed : NULL
[08:07:36.570] | : . ' , ; ` | : . '   .. ..$ replaced: NULL
[08:07:36.570] | : . ' , ; ` | : . '   ..$ misuseDevices      : NULL
[08:07:36.570] | : . ' , ; ` | : . '   ..$ misuseDefaultDevice: list()
[08:07:36.570] | : . ' , ; ` | : . '   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.570] | : . ' , ; ` | : . '   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.570] | : . ' , ; ` | : . '   ..$ uuid               : chr [1:2] "358ea2d3871b28a4c233aed6c57ab88b" "16"
[08:07:36.570] | : . ' , ; ` | : . '   ..$ session_uuid       : chr "052bff0a6b81b005d69ccae054863d31"
[08:07:36.570] | : . ' , ; ` | : . '   .. ..- attr(*, "source")=List of 5
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ pid   : int 67578
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:35"
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ random: int 2147483647
[08:07:36.570] | : . ' , ; ` | : . '   ..$ r_info             :List of 4
[08:07:36.570] | : . ' , ; ` | : . '   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:36.570] | : . ' , ; ` | : . '   .. .. ..$ : int [1:3] 4 5 1
[08:07:36.570] | : . ' , ; ` | : . '   .. ..$ os           : chr "unix"
[08:07:36.570] | : . ' , ; ` | : . '   .. ..$ os_name      : chr "Linux"
[08:07:36.570] | : . ' , ; ` | : . '   .. ..$ captures_utf8: logi TRUE
[08:07:36.570] | : . ' , ; ` | : . '   ..$ version            : chr "1.8"
[08:07:36.570] | : . ' , ; ` | : . '   ..- attr(*, "class")= chr "FutureResult"
[08:07:36.570] | : . ' , ; ` | : . '  $ success: logi TRUE
[08:07:36.570] | : . ' , ; ` | : . '  $ time   : 'proc_time' Named num [1:5] 0.004 0.001 0.004 0 0
[08:07:36.570] | : . ' , ; ` | : . '   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:36.570] | : . ' , ; ` | : . '  $ tag    : NULL
[08:07:36.592] | : . ' , ; ` | : . ' Received FutureResult
[08:07:36.592] | : . ' , ; ` | : . ' FutureResult:
[08:07:36.592] | : . ' , ; ` | : . ' value: ‘NULL’
[08:07:36.592] | : . ' , ; ` | : . ' visible: TRUE
[08:07:36.592] | : . ' , ; ` | : . ' stdout: character
[08:07:36.592] | : . ' , ; ` | : . ' conditions: [n = 1] simpleError
[08:07:36.592] | : . ' , ; ` | : . ' RNG used: FALSE
[08:07:36.592] | : . ' , ; ` | : . ' duration: 0.003001928 secs (started 2025-06-17 08:07:36.56689)
[08:07:36.592] | : . ' , ; ` | : . ' version: 1.8
[08:07:36.592] | : . ' , ; ` | : . ' FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ...
[08:07:36.592] | : . ' , ; ` | : . ' , Removed future from position #1
[08:07:36.593] | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:07:36.593] | : . ' , ; ` | : . ' FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ... done
[08:07:36.593] | : . ' , ; ` | : . ' Erased future from future backend
[08:07:36.593] | : . ' , ; ` | : . ' result() for ClusterFuture ...
[08:07:36.593] | : . ' , ; ` | : . ' , result already collected: FutureResult
[08:07:36.593] | : . ' , ; ` | : . ' result() for ClusterFuture ... done
[08:07:36.593] | : . ' , ; ` | : . ' signalConditions() ...
[08:07:36.593] | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:07:36.593] | : . ' , ; ` | : . ' , exclude = 
[08:07:36.594] | : . ' , ; ` | : . ' , resignal = FALSE
[08:07:36.594] | : . ' , ; ` | : . ' , Number of conditions: 1
[08:07:36.594] | : . ' , ; ` | : . ' ,  int 1
[08:07:36.594] | : . ' , ; ` | : . ' , Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:36.594] | : . ' , ; ` | : . ' signalConditions() ... done
[08:07:36.594] | : . ' , ; ` | : . receiveMessageFromWorker() for ClusterFuture ... done
[08:07:36.595] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:36.595] | : . ' , ; ` | : result() for ClusterFuture ...
[08:07:36.595] | : . ' , ; ` | : . result already collected: FutureResult
[08:07:36.595] | : . ' , ; ` | : result() for ClusterFuture ... done
[08:07:36.595] | : . ' , ; ` | : signalConditions() ...
[08:07:36.595] | : . ' , ; ` | : . include = ‘immediateCondition’
[08:07:36.595] | : . ' , ; ` | : . exclude = 
[08:07:36.595] | : . ' , ; ` | : . resignal = FALSE
[08:07:36.595] | : . ' , ; ` | : . Number of conditions: 1
[08:07:36.596] | : . ' , ; ` | : .  int 1
[08:07:36.596] | : . ' , ; ` | : . Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:36.596] | : . ' , ; ` | : signalConditions() ... done
[08:07:36.596] | : . ' , ; ` | : relay stdout ...
[08:07:36.596] | : . ' , ; ` | : relay stdout ... done
[08:07:36.596] | : . ' , ; ` | : check for misuse ...
[08:07:36.597] | : . ' , ; ` | : check for misuse ... done
[08:07:36.597] | : . ' , ; ` | : relay conditions ...
[08:07:36.597] | : . ' , ; ` | : . Future state: ‘finished’
[08:07:36.597] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:36.597] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:36.597] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:36.597] | : . ' , ; ` | : . signalConditions() ...
[08:07:36.597] | : . ' , ; ` | : . ' include = ‘condition’
[08:07:36.597] | : . ' , ; ` | : . ' exclude = ‘immediateCondition’
[08:07:36.597] | : . ' , ; ` | : . ' resignal = TRUE
[08:07:36.598] | : . ' , ; ` | : . ' Number of conditions: 1
[08:07:36.598] | : . ' , ; ` | : . '  int 1
[08:07:36.598] | : . ' , ; ` | : . ' Condition #1 (class: ‘simpleError’, ‘error’, ‘condition’):
[08:07:36.598] | : . ' , ; ` | : . ' Condition #1: ‘simpleError’, ‘error’, ‘condition’
[08:07:36.598] | : . ' , ; ` | : . signalConditions() ... done
[08:07:36.598] | : . ' , ; ` | : relay conditions ... done
Error in eval(quote({ : '...' used in an incorrect context
[1] "Error in eval(quote({ : '...' used in an incorrect context\n"
attr(,"class")
[1] "try-error"
attr(,"condition")
<simpleError in eval(quote({    {        sum(x, y, ...)    }}), new.env()): '...' used in an incorrect context>
** Sum function 'E' with plan('multisession') ...
function (...) 
{
    message("Arguments '...' exists: ", exists("...", inherits = TRUE))
    globals <- globals::globalsByName("...", envir = environment())
    f <- future({
        fcn <- function() sum(...)
        fcn()
    }, envir = parent.frame(), globals = globals)
    y <- value(f)
    y
}
<bytecode: 0x563a5b3e4e20>
Arguments '...' exists: TRUE
[08:07:36.599] | : . ' , ; ` | : future(..., label = NULL) ...
[08:07:36.599] | : . ' , ; ` | : . lazy: FALSE
[08:07:36.599] | : . ' , ; ` | : . stdout: TRUE
[08:07:36.599] | : . ' , ; ` | : . conditions: [n=1] ‘condition’
[08:07:36.599] | : . ' , ; ` | : . gc: FALSE
[08:07:36.600] | : . ' , ; ` | : . earlySignal: FALSE
[08:07:36.600] | : . ' , ; ` | : . getGlobalsAndPackages() ...
[08:07:36.600] | : . ' , ; ` | : . ' globals passed as-is: [1] ‘...’
[08:07:36.600] | : . ' , ; ` | : . ' Resolving globals: FALSE
[08:07:36.600] | : . ' , ; ` | : . ' Tweak future expression to call with '...' arguments ...
[08:07:36.600] | : . ' , ; ` | : . ' , {
[08:07:36.600] | : . ' , ; ` | : . ' ,     "# future::getGlobalsAndPackages(): wrapping the original future"
[08:07:36.600] | : . ' , ; ` | : . ' ,     "# expression in do.call(), because function called uses '...'  "
[08:07:36.600] | : . ' , ; ` | : . ' ,     "# as a global variable                                         "
[08:07:36.600] | : . ' , ; ` | : . ' ,     do.call(function(...) {
[08:07:36.600] | : . ' , ; ` | : . ' ,         fcn <- function() sum(...)
[08:07:36.600] | : . ' , ; ` | : . ' ,         fcn()
[08:07:36.600] | : . ' , ; ` | : . ' ,     }, args = future.call.arguments)
[08:07:36.600] | : . ' , ; ` | : . ' , }
[08:07:36.600] | : . ' , ; ` | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:36.601] | : . ' , ; ` | : . ' Search for packages associated with the globals ...
[08:07:36.601] | : . ' , ; ` | : . ' , Packages associated with globals: [0] 
[08:07:36.601] | : . ' , ; ` | : . ' , Packages: [0] 
[08:07:36.601] | : . ' , ; ` | : . ' Search for packages associated with the globals ... done
[08:07:36.601] | : . ' , ; ` | : . ' Packages after dropping 'base': [0] 
[08:07:36.601] | : . ' , ; ` | : . ' globals: [1] ‘future.call.arguments’
[08:07:36.601] | : . ' , ; ` | : . ' packages: [0] 
[08:07:36.602] | : . ' , ; ` | : . getGlobalsAndPackages() ... done
[08:07:36.602] | : . ' , ; ` | : . run() for ‘Future’ (<unnamed-17>) ...
[08:07:36.602] | : . ' , ; ` | : . ' state: ‘created’
[08:07:36.602] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:36.602] | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:36.602] | : . ' , ; ` | : . ' Using MultisessionFutureBackend ...
[08:07:36.602] | : . ' , ; ` | : . ' , Number of futures since start: 4 (4 created, 4 launched, 4 finished)
[08:07:36.602] | : . ' , ; ` | : . ' , Launching futures ...
[08:07:36.603] | : . ' , ; ` | : . ' , ; launchFuture() for ClusterFutureBackend ...
[08:07:36.603] | : . ' , ; ` | : . ' , ; ` Workers: [n=2]
[08:07:36.603] | : . ' , ; ` | : . ' , ; ` Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:36.604] | : . ' , ; ` | : . ' , ; ` FutureRegistry: ‘workers-72a1f0466bb5cdfee378ed066290fd25’
[08:07:36.605] | : . ' , ; ` | : . ' , ; ` requestWorker() ...
[08:07:36.605] | : . ' , ; ` | : . ' , ; ` | requestNode() ...
[08:07:36.605] | : . ' , ; ` | : . ' , ; ` | : Number of workers: 2
[08:07:36.605] | : . ' , ; ` | : . ' , ; ` | : Polling for a free worker ...
[08:07:36.605] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.605] | : . ' , ; ` | : . ' , ; ` | : . ' Listing all futures
[08:07:36.605] | : . ' , ; ` | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:36.605] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.605] | : . ' , ; ` | : . ' , ; ` | : . Total time: 0
[08:07:36.605] | : . ' , ; ` | : . ' , ; ` | : Polling for a free worker ... done
[08:07:36.606] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.606] | : . ' , ; ` | : . ' , ; ` | : . Listing all futures
[08:07:36.606] | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 0
[08:07:36.606] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.606] | : . ' , ; ` | : . ' , ; ` | : avail: [n=2] ‘1’, ‘2’
[08:07:36.606] | : . ' , ; ` | : . ' , ; ` | : Index of first available worker: 1
[08:07:36.606] | : . ' , ; ` | : . ' , ; ` | : Validate that the worker is functional ...
[08:07:36.669] | : . ' , ; ` | : . ' , ; ` | : . Worker is functional
[08:07:36.670] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.670] | : . ' , ; ` | : . ' , ; ` | : . ' Listing all futures
[08:07:36.670] | : . ' , ; ` | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:36.670] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.670] | : . ' , ; ` | : . ' , ; ` | : Validate that the worker is functional ... done
[08:07:36.670] | : . ' , ; ` | : . ' , ; ` | requestNode() ... done
[08:07:36.670] | : . ' , ; ` | : . ' , ; ` | cluster node index: 1
[08:07:36.671] | : . ' , ; ` | : . ' , ; ` requestWorker() ... done
[08:07:36.671] | : . ' , ; ` | : . ' , ; ` eraseGlobalEnvironment() ...
[08:07:36.671] | : . ' , ; ` | : . ' , ; ` eraseGlobalEnvironment() ... done
[08:07:36.671] | : . ' , ; ` | : . ' , ; ` launchFuture() ...
[08:07:36.671] | : . ' , ; ` | : . ' , ; ` | cluster node index: 1
[08:07:36.672] | : . ' , ; ` | : . ' , ; ` | getFutureData() ...
[08:07:36.672] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ...
[08:07:36.672] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by the future expression (n = 0): <none>
[08:07:36.672] | : . ' , ; ` | : . ' , ; ` | : getFutureCore() ... done
[08:07:36.672] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ...
[08:07:36.672] | : . ' , ; ` | : . ' , ; ` | : getFutureCapture() ... done
[08:07:36.672] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ...
[08:07:36.672] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:36.672] | : . ' , ; ` | : . ' , ; ` | : . ' Getting stack without first backend: [n=0] 
[08:07:36.673] | : . ' , ; ` | : . ' , ; ` | : . plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:36.673] | : . ' , ; ` | : . ' , ; ` | : . Packages needed by future backend (n = 0): <none>
[08:07:36.673] | : . ' , ; ` | : . ' , ; ` | : getFutureContext() ... done
[08:07:36.673] | : . ' , ; ` | : . ' , ; ` | getFutureData() ... done
[08:07:36.673] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ...
[08:07:36.673] | : . ' , ; ` | : . ' , ; ` | : Appended future to position #1
[08:07:36.674] | : . ' , ; ` | : . ' , ; ` | : Number of registered futures: 1
[08:07:36.674] | : . ' , ; ` | : . ' , ; ` | FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ... done
[08:07:36.674] | : . ' , ; ` | : . ' , ; ` launchFuture() ... done
[08:07:36.674] | : . ' , ; ` | : . ' , ; ` MultisessionFuture started
[08:07:36.674] | : . ' , ; ` | : . ' , ; launchFuture() for ClusterFutureBackend ... done
[08:07:36.674] | : . ' , ; ` | : . ' , Launching futures ... done
[08:07:36.674] | : . ' , ; ` | : . ' , Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:36.674] | : . ' , ; ` | : . ' Using MultisessionFutureBackend ... done
[08:07:36.674] | : . ' , ; ` | : . run() for ‘Future’ (<unnamed-17>) ... done
[08:07:36.675] | : . ' , ; ` | : future(..., label = NULL) ... done
[08:07:36.675] | : . ' , ; ` | : value() for MultisessionFuture (<unnamed-17>) ...
[08:07:36.675] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:36.675] | : . ' , ; ` | : . ' assertValidConnection() ...
[08:07:36.675] | : . ' , ; ` | : . ' , cluster node index: 1
[08:07:36.675] | : . ' , ; ` | : . ' assertValidConnection() ... done
[08:07:36.676] | : . ' , ; ` | : . ' receiveMessageFromWorker() for ClusterFuture ...
[08:07:36.676] | : . ' , ; ` | : . ' , cluster node index: 1
[08:07:36.718] | : . ' , ; ` | : . ' , [1] TRUE
[08:07:36.718] | : . ' , ; ` | : . ' , received data:
[08:07:36.718] | : . ' , ; ` | : . ' , List of 5
[08:07:36.718] | : . ' , ; ` | : . ' ,  $ type   : chr "VALUE"
[08:07:36.718] | : . ' , ; ` | : . ' ,  $ value  :List of 16
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ value              : num 6
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ visible            : logi TRUE
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ stdout             : chr ""
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ conditions         : list()
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ rng                : logi FALSE
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ seed               : NULL
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ misuseGlobalEnv    : NULL
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ misuseConnections  :List of 3
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. ..$ added   : NULL
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. ..$ removed : NULL
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. ..$ replaced: NULL
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ misuseDevices      : NULL
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ misuseDefaultDevice: list()
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ uuid               : chr [1:2] "358ea2d3871b28a4c233aed6c57ab88b" "17"
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ session_uuid       : chr "052bff0a6b81b005d69ccae054863d31"
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. ..- attr(*, "source")=List of 5
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. .. ..$ pid   : int 67578
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:35"
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. .. ..$ random: int 2147483647
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ r_info             :List of 4
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. .. ..$ : int [1:3] 4 5 1
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. ..$ os           : chr "unix"
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. ..$ os_name      : chr "Linux"
[08:07:36.718] | : . ' , ; ` | : . ' ,   .. ..$ captures_utf8: logi TRUE
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..$ version            : chr "1.8"
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..- attr(*, "class")= chr "FutureResult"
[08:07:36.718] | : . ' , ; ` | : . ' ,  $ success: logi TRUE
[08:07:36.718] | : . ' , ; ` | : . ' ,  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:07:36.718] | : . ' , ; ` | : . ' ,   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:36.718] | : . ' , ; ` | : . ' ,  $ tag    : NULL
[08:07:36.731] | : . ' , ; ` | : . ' , Received FutureResult
[08:07:36.731] | : . ' , ; ` | : . ' , FutureResult:
[08:07:36.731] | : . ' , ; ` | : . ' , value: ‘numeric’
[08:07:36.731] | : . ' , ; ` | : . ' , visible: TRUE
[08:07:36.731] | : . ' , ; ` | : . ' , stdout: character
[08:07:36.731] | : . ' , ; ` | : . ' , conditions: [n = 0] 
[08:07:36.731] | : . ' , ; ` | : . ' , RNG used: FALSE
[08:07:36.731] | : . ' , ; ` | : . ' , duration: 0.002810478 secs (started 2025-06-17 08:07:36.714798)
[08:07:36.731] | : . ' , ; ` | : . ' , version: 1.8
[08:07:36.732] | : . ' , ; ` | : . ' , FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ...
[08:07:36.732] | : . ' , ; ` | : . ' , ; Removed future from position #1
[08:07:36.732] | : . ' , ; ` | : . ' , ; Number of registered futures: 0
[08:07:36.732] | : . ' , ; ` | : . ' , FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ... done
[08:07:36.732] | : . ' , ; ` | : . ' , Erased future from future backend
[08:07:36.732] | : . ' , ; ` | : . ' , result() for ClusterFuture ...
[08:07:36.733] | : . ' , ; ` | : . ' , ; result already collected: FutureResult
[08:07:36.733] | : . ' , ; ` | : . ' , result() for ClusterFuture ... done
[08:07:36.733] | : . ' , ; ` | : . ' , signalConditions() ...
[08:07:36.733] | : . ' , ; ` | : . ' , ; include = ‘immediateCondition’
[08:07:36.733] | : . ' , ; ` | : . ' , ; exclude = 
[08:07:36.733] | : . ' , ; ` | : . ' , ; resignal = FALSE
[08:07:36.733] | : . ' , ; ` | : . ' , ; Number of conditions: 0
[08:07:36.733] | : . ' , ; ` | : . ' , ;  int 0
[08:07:36.734] | : . ' , ; ` | : . ' , signalConditions() ... done
[08:07:36.734] | : . ' , ; ` | : . ' receiveMessageFromWorker() for ClusterFuture ... done
[08:07:36.734] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:36.734] | : . ' , ; ` | : . result() for ClusterFuture ...
[08:07:36.734] | : . ' , ; ` | : . ' result already collected: FutureResult
[08:07:36.734] | : . ' , ; ` | : . result() for ClusterFuture ... done
[08:07:36.734] | : . ' , ; ` | : . signalConditions() ...
[08:07:36.734] | : . ' , ; ` | : . ' include = ‘immediateCondition’
[08:07:36.735] | : . ' , ; ` | : . ' exclude = 
[08:07:36.735] | : . ' , ; ` | : . ' resignal = FALSE
[08:07:36.735] | : . ' , ; ` | : . ' Number of conditions: 0
[08:07:36.735] | : . ' , ; ` | : . '  int 0
[08:07:36.735] | : . ' , ; ` | : . signalConditions() ... done
[08:07:36.735] | : . ' , ; ` | : . relay stdout ...
[08:07:36.735] | : . ' , ; ` | : . relay stdout ... done
[08:07:36.736] | : . ' , ; ` | : . check for misuse ...
[08:07:36.736] | : . ' , ; ` | : . check for misuse ... done
[08:07:36.736] | : . ' , ; ` | : value() for MultisessionFuture (<unnamed-17>) ... done
[1] 6
** Sum function 'F' with plan('multisession') ...
function (x, y) 
{
    message("Using '...' in a formula")
    fcn <- function(x, y) {
        z = ~list(...)
        sum(x, y)
    }
    f <- future(fcn(x, y))
    y <- value(f)
    y
}
<bytecode: 0x563a5b674508>
Using '...' in a formula
[08:07:36.736] | : . ' , ; ` | : future(..., label = NULL) ...
[08:07:36.736] | : . ' , ; ` | : . lazy: FALSE
[08:07:36.736] | : . ' , ; ` | : . stdout: TRUE
[08:07:36.736] | : . ' , ; ` | : . conditions: [n=1] ‘condition’
[08:07:36.736] | : . ' , ; ` | : . gc: FALSE
[08:07:36.737] | : . ' , ; ` | : . earlySignal: FALSE
[08:07:36.737] | : . ' , ; ` | : . getGlobalsAndPackages() ...
[08:07:36.737] | : . ' , ; ` | : . ' Searching for globals ...
[08:07:36.748] | : . ' , ; ` | : . ' , globals found: [9] ‘fcn’, ‘x’, ‘y’, ‘{’, ‘=’, ‘~’, ‘list’, ‘...’, ‘sum’
[08:07:36.748] | : . ' , ; ` | : . ' Searching for globals ... done
[08:07:36.748] | : . ' , ; ` | : . ' Resolving globals: FALSE
[08:07:36.749] | : . ' , ; ` | : . ' Tweak future expression to call with '...' arguments ...
[08:07:36.749] | : . ' , ; ` | : . ' , Search for packages associated with the globals ...
[08:07:36.749] | : . ' , ; ` | : . ' , ; Packages associated with globals: [1] ‘base’
[08:07:36.749] | : . ' , ; ` | : . ' , ; Packages: [1] ‘base’
[08:07:36.749] | : . ' , ; ` | : . ' , Search for packages associated with the globals ... done
[08:07:36.750] | : . ' , ; ` | : . ' , Packages after dropping 'base': [0] 
[08:07:36.750] | : . ' , ; ` | : . ' , globals: [3] ‘fcn’, ‘x’, ‘y’
[08:07:36.750] | : . ' , ; ` | : . ' , packages: [0] 
[08:07:36.750] | : . ' , ; ` | : . ' Tweak future expression to call with '...' arguments ... done
[08:07:36.750] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-18>) ...
[08:07:36.750] | : . ' , ; ` | : . ' , state: ‘created’
[08:07:36.750] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:36.751] | : . ' , ; ` | : . ' , plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:36.751] | : . ' , ; ` | : . ' , Using MultisessionFutureBackend ...
[08:07:36.751] | : . ' , ; ` | : . ' , ; Number of futures since start: 5 (5 created, 5 launched, 5 finished)
[08:07:36.751] | : . ' , ; ` | : . ' , ; Launching futures ...
[08:07:36.751] | : . ' , ; ` | : . ' , ; ` launchFuture() for ClusterFutureBackend ...
[08:07:36.751] | : . ' , ; ` | : . ' , ; ` | Workers: [n=2]
[08:07:36.751] | : . ' , ; ` | : . ' , ; ` | Socket cluster with 2 nodes where 2 nodes are on host ‘localhost’ (R version 4.5.1 (2025-06-13), platform x86_64-pc-linux-gnu)
[08:07:36.753] | : . ' , ; ` | : . ' , ; ` | FutureRegistry: ‘workers-72a1f0466bb5cdfee378ed066290fd25’
[08:07:36.753] | : . ' , ; ` | : . ' , ; ` | requestWorker() ...
[08:07:36.753] | : . ' , ; ` | : . ' , ; ` | : requestNode() ...
[08:07:36.753] | : . ' , ; ` | : . ' , ; ` | : . Number of workers: 2
[08:07:36.753] | : . ' , ; ` | : . ' , ; ` | : . Polling for a free worker ...
[08:07:36.753] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.753] | : . ' , ; ` | : . ' , ; ` | : . ' , Listing all futures
[08:07:36.754] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:07:36.754] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.754] | : . ' , ; ` | : . ' , ; ` | : . ' Total time: 0
[08:07:36.754] | : . ' , ; ` | : . ' , ; ` | : . Polling for a free worker ... done
[08:07:36.754] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.754] | : . ' , ; ` | : . ' , ; ` | : . ' Listing all futures
[08:07:36.754] | : . ' , ; ` | : . ' , ; ` | : . ' Number of registered futures: 0
[08:07:36.754] | : . ' , ; ` | : . ' , ; ` | : . FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.754] | : . ' , ; ` | : . ' , ; ` | : . avail: [n=2] ‘1’, ‘2’
[08:07:36.755] | : . ' , ; ` | : . ' , ; ` | : . Index of first available worker: 1
[08:07:36.755] | : . ' , ; ` | : . ' , ; ` | : . Validate that the worker is functional ...
[08:07:36.850] | : . ' , ; ` | : . ' , ; ` | : . ' Worker is functional
[08:07:36.850] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ...
[08:07:36.850] | : . ' , ; ` | : . ' , ; ` | : . ' , Listing all futures
[08:07:36.850] | : . ' , ; ` | : . ' , ; ` | : . ' , Number of registered futures: 0
[08:07:36.850] | : . ' , ; ` | : . ' , ; ` | : . ' FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'list', earlySignal = 0) ... done
[08:07:36.850] | : . ' , ; ` | : . ' , ; ` | : . Validate that the worker is functional ... done
[08:07:36.851] | : . ' , ; ` | : . ' , ; ` | : requestNode() ... done
[08:07:36.851] | : . ' , ; ` | : . ' , ; ` | : cluster node index: 1
[08:07:36.851] | : . ' , ; ` | : . ' , ; ` | requestWorker() ... done
[08:07:36.851] | : . ' , ; ` | : . ' , ; ` | eraseGlobalEnvironment() ...
[08:07:36.851] | : . ' , ; ` | : . ' , ; ` | eraseGlobalEnvironment() ... done
[08:07:36.851] | : . ' , ; ` | : . ' , ; ` | launchFuture() ...
[08:07:36.851] | : . ' , ; ` | : . ' , ; ` | : cluster node index: 1
[08:07:36.852] | : . ' , ; ` | : . ' , ; ` | : getFutureData() ...
[08:07:36.852] | : . ' , ; ` | : . ' , ; ` | : . getFutureCore() ...
[08:07:36.852] | : . ' , ; ` | : . ' , ; ` | : . ' Packages needed by the future expression (n = 0): <none>
[08:07:36.852] | : . ' , ; ` | : . ' , ; ` | : . getFutureCore() ... done
[08:07:36.852] | : . ' , ; ` | : . ' , ; ` | : . getFutureCapture() ...
[08:07:36.852] | : . ' , ; ` | : . ' , ; ` | : . getFutureCapture() ... done
[08:07:36.852] | : . ' , ; ` | : . ' , ; ` | : . getFutureContext() ...
[08:07:36.852] | : . ' , ; ` | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ...
[08:07:36.852] | : . ' , ; ` | : . ' , ; ` | : . ' , Getting stack without first backend: [n=0] 
[08:07:36.853] | : . ' , ; ` | : . ' , ; ` | : . ' plan(<character>, .skip = FALSE, .cleanup = NA, .init = TRUE) ... done
[08:07:36.853] | : . ' , ; ` | : . ' , ; ` | : . ' Packages needed by future backend (n = 0): <none>
[08:07:36.853] | : . ' , ; ` | : . ' , ; ` | : . getFutureContext() ... done
[08:07:36.853] | : . ' , ; ` | : . ' , ; ` | : getFutureData() ... done
[08:07:36.853] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ...
[08:07:36.853] | : . ' , ; ` | : . ' , ; ` | : . Appended future to position #1
[08:07:36.854] | : . ' , ; ` | : . ' , ; ` | : . Number of registered futures: 1
[08:07:36.854] | : . ' , ; ` | : . ' , ; ` | : FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'add', earlySignal = 0) ... done
[08:07:36.854] | : . ' , ; ` | : . ' , ; ` | launchFuture() ... done
[08:07:36.854] | : . ' , ; ` | : . ' , ; ` | MultisessionFuture started
[08:07:36.854] | : . ' , ; ` | : . ' , ; ` launchFuture() for ClusterFutureBackend ... done
[08:07:36.854] | : . ' , ; ` | : . ' , ; Launching futures ... done
[08:07:36.854] | : . ' , ; ` | : . ' , ; Future launched: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’
[08:07:36.854] | : . ' , ; ` | : . ' , Using MultisessionFutureBackend ... done
[08:07:36.854] | : . ' , ; ` | : . ' run() for ‘Future’ (<unnamed-18>) ... done
[08:07:36.855] | : . ' , ; ` | : . getGlobalsAndPackages() ... done
[08:07:36.855] | : . ' , ; ` | : . value() for MultisessionFuture (<unnamed-18>) ...
[08:07:36.855] | : . ' , ; ` | : . ' result() for ClusterFuture ...
[08:07:36.855] | : . ' , ; ` | : . ' , assertValidConnection() ...
[08:07:36.855] | : . ' , ; ` | : . ' , ; cluster node index: 1
[08:07:36.855] | : . ' , ; ` | : . ' , assertValidConnection() ... done
[08:07:36.855] | : . ' , ; ` | : . ' , receiveMessageFromWorker() for ClusterFuture ...
[08:07:36.856] | : . ' , ; ` | : . ' , ; cluster node index: 1
[08:07:36.898] | : . ' , ; ` | : . ' , ; [1] TRUE
[08:07:36.898] | : . ' , ; ` | : . ' , ; received data:
[08:07:36.898] | : . ' , ; ` | : . ' , ; List of 5
[08:07:36.898] | : . ' , ; ` | : . ' , ;  $ type   : chr "VALUE"
[08:07:36.898] | : . ' , ; ` | : . ' , ;  $ value  :List of 16
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ value              : num 6
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ visible            : logi TRUE
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ stdout             : chr ""
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ conditions         : list()
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ rng                : logi FALSE
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ seed               : NULL
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ misuseGlobalEnv    : NULL
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ misuseConnections  :List of 3
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. ..$ added   : NULL
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. ..$ removed : NULL
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. ..$ replaced: NULL
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ misuseDevices      : NULL
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ misuseDefaultDevice: list()
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ started            : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ finished           : POSIXct[1:1], format: "2025-06-17 08:07:36"
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ uuid               : chr [1:2] "358ea2d3871b28a4c233aed6c57ab88b" "18"
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ session_uuid       : chr "052bff0a6b81b005d69ccae054863d31"
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. ..- attr(*, "source")=List of 5
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. .. ..$ host  : Named chr "28bb34de9501"
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. .. .. ..- attr(*, "names")= chr "HOSTNAME"
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. .. ..$ info  : Named chr [1:8] "Linux" "6.11.0-1015-azure" "#15~24.04.1-Ubuntu SMP Thu May  1 02:52:08 UTC 2025" "28bb34de9501" ...
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. .. .. ..- attr(*, "names")= chr [1:8] "sysname" "release" "version" "nodename" ...
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. .. ..$ pid   : int 67578
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. .. ..$ time  : POSIXct[1:1], format: "2025-06-17 08:07:35"
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. .. ..$ random: int 2147483647
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ r_info             :List of 4
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. ..$ version      :Classes 'R_system_version', 'package_version', 'numeric_version'  hidden list of 1
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. .. ..$ : int [1:3] 4 5 1
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. ..$ os           : chr "unix"
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. ..$ os_name      : chr "Linux"
[08:07:36.898] | : . ' , ; ` | : . ' , ;   .. ..$ captures_utf8: logi TRUE
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..$ version            : chr "1.8"
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..- attr(*, "class")= chr "FutureResult"
[08:07:36.898] | : . ' , ; ` | : . ' , ;  $ success: logi TRUE
[08:07:36.898] | : . ' , ; ` | : . ' , ;  $ time   : 'proc_time' Named num [1:5] 0.004 0 0.004 0 0
[08:07:36.898] | : . ' , ; ` | : . ' , ;   ..- attr(*, "names")= chr [1:5] "user.self" "sys.self" "elapsed" "user.child" ...
[08:07:36.898] | : . ' , ; ` | : . ' , ;  $ tag    : NULL
[08:07:36.909] | : . ' , ; ` | : . ' , ; Received FutureResult
[08:07:36.909] | : . ' , ; ` | : . ' , ; FutureResult:
[08:07:36.909] | : . ' , ; ` | : . ' , ; value: ‘numeric’
[08:07:36.909] | : . ' , ; ` | : . ' , ; visible: TRUE
[08:07:36.909] | : . ' , ; ` | : . ' , ; stdout: character
[08:07:36.909] | : . ' , ; ` | : . ' , ; conditions: [n = 0] 
[08:07:36.909] | : . ' , ; ` | : . ' , ; RNG used: FALSE
[08:07:36.909] | : . ' , ; ` | : . ' , ; duration: 0.002928257 secs (started 2025-06-17 08:07:36.894897)
[08:07:36.909] | : . ' , ; ` | : . ' , ; version: 1.8
[08:07:36.910] | : . ' , ; ` | : . ' , ; FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ...
[08:07:36.910] | : . ' , ; ` | : . ' , ; ` Removed future from position #1
[08:07:36.910] | : . ' , ; ` | : . ' , ; ` Number of registered futures: 0
[08:07:36.910] | : . ' , ; ` | : . ' , ; FutureRegistry('workers-72a1f0466bb5cdfee378ed066290fd25', action = 'remove', earlySignal = 0) ... done
[08:07:36.910] | : . ' , ; ` | : . ' , ; Erased future from future backend
[08:07:36.911] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ...
[08:07:36.911] | : . ' , ; ` | : . ' , ; ` result already collected: FutureResult
[08:07:36.911] | : . ' , ; ` | : . ' , ; result() for ClusterFuture ... done
[08:07:36.911] | : . ' , ; ` | : . ' , ; signalConditions() ...
[08:07:36.911] | : . ' , ; ` | : . ' , ; ` include = ‘immediateCondition’
[08:07:36.911] | : . ' , ; ` | : . ' , ; ` exclude = 
[08:07:36.911] | : . ' , ; ` | : . ' , ; ` resignal = FALSE
[08:07:36.911] | : . ' , ; ` | : . ' , ; ` Number of conditions: 0
[08:07:36.911] | : . ' , ; ` | : . ' , ; `  int 0
[08:07:36.912] | : . ' , ; ` | : . ' , ; signalConditions() ... done
[08:07:36.912] | : . ' , ; ` | : . ' , receiveMessageFromWorker() for ClusterFuture ... done
[08:07:36.912] | : . ' , ; ` | : . ' result() for ClusterFuture ... done
[08:07:36.912] | : . ' , ; ` | : . ' result() for ClusterFuture ...
[08:07:36.912] | : . ' , ; ` | : . ' , result already collected: FutureResult
[08:07:36.912] | : . ' , ; ` | : . ' result() for ClusterFuture ... done
[08:07:36.912] | : . ' , ; ` | : . ' signalConditions() ...
[08:07:36.913] | : . ' , ; ` | : . ' , include = ‘immediateCondition’
[08:07:36.913] | : . ' , ; ` | : . ' , exclude = 
[08:07:36.913] | : . ' , ; ` | : . ' , resignal = FALSE
[08:07:36.913] | : . ' , ; ` | : . ' , Number of conditions: 0
[08:07:36.913] | : . ' , ; ` | : . ' ,  int 0
[08:07:36.913] | : . ' , ; ` | : . ' signalConditions() ... done
[08:07:36.913] | : . ' , ; ` | : . ' relay stdout ...
[08:07:36.914] | : . ' , ; ` | : . ' relay stdout ... done
[08:07:36.914] | : . ' , ; ` | : . ' check for misuse ...
[08:07:36.914] | : . ' , ; ` | : . ' check for misuse ... done
[08:07:36.914] | : . ' , ; ` | : . value() for MultisessionFuture (<unnamed-18>) ... done
[1] 6
Testing with 2 cores ... DONE

> message("*** Global argument '...' ... DONE")
*** Global argument '...' ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=1s, sys.self=0.08s, elapsed=3s, user.child=0.5s, sys.child=0.4s
Test ‘dotdotdot’ ... success
> 
