
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "doBy"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('doBy')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("NIRmilk")
> ### * NIRmilk
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: NIRmilk
> ### Title: NIRmilk
> ### Aliases: NIRmilk
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 	
> data(NIRmilk)
> 
> 
> 
> 
> cleanEx()
> nameEx("add_pred")
> ### * add_pred
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_pred
> ### Title: Add predicted values of different types to dataframe
> ### Aliases: add_pred
> 
> ### ** Examples
> 
> data(cars)
> lm1 <- lm(dist ~ speed + I(speed^2), data=cars)
> lm1 |> response() |> head()
 1  2  3  4  5  6 
 2 10  4 22 16 10 
> cars <- cars |> add_pred(lm1)
> cars |> head()
  speed dist      pred
1     4    2  7.722637
2     4   10  7.722637
3     7    4 13.761157
4     7   22 13.761157
5     8   16 16.173834
6     9   10 18.786430
> cars <- cars |> add_resid(lm1)
> cars
   speed dist      pred       resid
1      4    2  7.722637  -5.7226371
2      4   10  7.722637   2.2773629
3      7    4 13.761157  -9.7611569
4      7   22 13.761157   8.2388431
5      8   16 16.173834  -0.1738340
6      9   10 18.786430  -8.7864298
7     10   18 21.598944  -3.5989441
8     10   26 21.598944   4.4010559
9     10   34 21.598944  12.4010559
10    11   17 24.611377  -7.6113771
11    11   28 24.611377   3.3886229
12    12   14 27.823729 -13.8237287
13    12   20 27.823729  -7.8237287
14    12   24 27.823729  -3.8237287
15    12   28 27.823729   0.1762713
16    13   26 31.235999  -5.2359988
17    13   34 31.235999   2.7640012
18    13   34 31.235999   2.7640012
19    13   46 31.235999  14.7640012
20    14   26 34.848188  -8.8481876
21    14   36 34.848188   1.1518124
22    14   60 34.848188  25.1518124
23    14   80 34.848188  45.1518124
24    15   20 38.660295 -18.6602950
25    15   26 38.660295 -12.6602950
26    15   54 38.660295  15.3397050
27    16   32 42.672321 -10.6723209
28    16   40 42.672321  -2.6723209
29    17   32 46.884266 -14.8842655
30    17   40 46.884266  -6.8842655
31    17   50 46.884266   3.1157345
32    18   42 51.296129  -9.2961287
33    18   56 51.296129   4.7038713
34    18   76 51.296129  24.7038713
35    18   84 51.296129  32.7038713
36    19   36 55.907911 -19.9079105
37    19   46 55.907911  -9.9079105
38    19   68 55.907911  12.0920895
39    20   32 60.719611 -28.7196109
40    20   48 60.719611 -12.7196109
41    20   52 60.719611  -8.7196109
42    20   56 60.719611  -4.7196109
43    20   64 60.719611   3.2803891
44    22   66 70.942768  -4.9427675
45    23   54 76.354224 -22.3542237
46    24   70 81.965599 -11.9655985
47    24   92 81.965599  10.0344015
48    24   93 81.965599  11.0344015
49    24  120 81.965599  38.0344015
50    25   85 87.776892  -2.7768919
> 
> 
> 
> 
> cleanEx()
> nameEx("add_resid")
> ### * add_resid
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_resid
> ### Title: Add residuals of different types to dataframe
> ### Aliases: add_resid
> 
> ### ** Examples
> 
> data(cars)
> lm1 <- lm(dist ~ speed + I(speed^2), data=cars)
> lm1 |> response() |> head()
 1  2  3  4  5  6 
 2 10  4 22 16 10 
> cars <- cars |> add_pred(lm1)
> cars |> head()
  speed dist      pred
1     4    2  7.722637
2     4   10  7.722637
3     7    4 13.761157
4     7   22 13.761157
5     8   16 16.173834
6     9   10 18.786430
> cars <- cars |> add_resid(lm1)
> cars 
   speed dist      pred       resid
1      4    2  7.722637  -5.7226371
2      4   10  7.722637   2.2773629
3      7    4 13.761157  -9.7611569
4      7   22 13.761157   8.2388431
5      8   16 16.173834  -0.1738340
6      9   10 18.786430  -8.7864298
7     10   18 21.598944  -3.5989441
8     10   26 21.598944   4.4010559
9     10   34 21.598944  12.4010559
10    11   17 24.611377  -7.6113771
11    11   28 24.611377   3.3886229
12    12   14 27.823729 -13.8237287
13    12   20 27.823729  -7.8237287
14    12   24 27.823729  -3.8237287
15    12   28 27.823729   0.1762713
16    13   26 31.235999  -5.2359988
17    13   34 31.235999   2.7640012
18    13   34 31.235999   2.7640012
19    13   46 31.235999  14.7640012
20    14   26 34.848188  -8.8481876
21    14   36 34.848188   1.1518124
22    14   60 34.848188  25.1518124
23    14   80 34.848188  45.1518124
24    15   20 38.660295 -18.6602950
25    15   26 38.660295 -12.6602950
26    15   54 38.660295  15.3397050
27    16   32 42.672321 -10.6723209
28    16   40 42.672321  -2.6723209
29    17   32 46.884266 -14.8842655
30    17   40 46.884266  -6.8842655
31    17   50 46.884266   3.1157345
32    18   42 51.296129  -9.2961287
33    18   56 51.296129   4.7038713
34    18   76 51.296129  24.7038713
35    18   84 51.296129  32.7038713
36    19   36 55.907911 -19.9079105
37    19   46 55.907911  -9.9079105
38    19   68 55.907911  12.0920895
39    20   32 60.719611 -28.7196109
40    20   48 60.719611 -12.7196109
41    20   52 60.719611  -8.7196109
42    20   56 60.719611  -4.7196109
43    20   64 60.719611   3.2803891
44    22   66 70.942768  -4.9427675
45    23   54 76.354224 -22.3542237
46    24   70 81.965599 -11.9655985
47    24   92 81.965599  10.0344015
48    24   93 81.965599  11.0344015
49    24  120 81.965599  38.0344015
50    25   85 87.776892  -2.7768919
> 
> 
> 
> 
> cleanEx()
> nameEx("beets")
> ### * beets
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: beets
> ### Title: beets data
> ### Aliases: beets
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(beets)
> 
> beets$bh <- with(beets, interaction(block, harvest))
> summary(aov(yield ~ block + sow + harvest + Error(bh), beets))

Error: bh
          Df Sum Sq Mean Sq  F value   Pr(>F)    
block      2   11.3     5.7    4.018 0.199292    
harvest    1 1725.2  1725.2 1225.000 0.000815 ***
Residuals  2    2.8     1.4                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Error: Within
          Df Sum Sq Mean Sq F value   Pr(>F)    
sow        4   8369  2092.3   119.7 1.13e-13 ***
Residuals 20    349    17.5                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> summary(aov(sugpct ~ block + sow + harvest + Error(bh), beets))

Error: bh
          Df  Sum Sq Mean Sq F value Pr(>F)  
block      2 0.03267 0.01633   2.579 0.2794  
harvest    1 0.09633 0.09633  15.211 0.0599 .
Residuals  2 0.01267 0.00633                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Error: Within
          Df Sum Sq Mean Sq F value   Pr(>F)    
sow        4   1.01  0.2525     101 5.74e-13 ***
Residuals 20   0.05  0.0025                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> 
> 
> 
> cleanEx()
> nameEx("binomial_to_bernoulli_data")
> ### * binomial_to_bernoulli_data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: binomial_to_bernoulli_data
> ### Title: Convert binomial data to bernoulli data
> ### Aliases: binomial_to_bernoulli_data
> 
> ### ** Examples
> 
> 
> dat <- budworm
> dat <- dat[dat$dose %in% c(1,2), ]
> dat$ntotal <- 5
> dat
     sex dose ndead ntotal
1   male    1     1      5
2   male    2     4      5
7 female    1     0      5
8 female    2     2      5
> dat.a <- dat |>
+   binomial_to_bernoulli_data(ndead, ntotal, type="total")
> dat.b <- dat |>
+   dplyr::mutate(nalive=ntotal-ndead) |> dplyr::select(-ntotal) |>
+   binomial_to_bernoulli_data(ndead, nalive, type="rest")
> 
> m0 <- glm(cbind(ndead, ntotal-ndead) ~ dose + sex, data=dat, family=binomial())
> m1 <- glm(ndead / ntotal ~ dose + sex, data=dat, weight=ntotal, family=binomial())
> ma <- glm(response ~ dose + sex, data=dat.a, family=binomial())
> mb <- glm(response ~ dose + sex, data=dat.b, family=binomial())
> 
> dat.a$response
 [1] ndead     not_ndead not_ndead not_ndead not_ndead ndead     ndead    
 [8] ndead     ndead     not_ndead not_ndead not_ndead not_ndead not_ndead
[15] not_ndead ndead     ndead     not_ndead not_ndead not_ndead
Levels: not_ndead ndead
> dat.b$response ## Not same and therefore the following do not match
 [1] ndead  nalive nalive nalive nalive ndead  ndead  ndead  ndead  nalive
[11] nalive nalive nalive nalive nalive ndead  ndead  nalive nalive nalive
Levels: nalive ndead
> 
> all.equal(coef(m0), coef(ma))
[1] TRUE
> all.equal(coef(m0), coef(mb))
[1] TRUE
> all.equal(coef(m1), coef(ma))
[1] TRUE
> all.equal(coef(m1), coef(mb))
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("bquote_fun_list")
> ### * bquote_fun_list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: bquote_fun_list
> ### Title: Backquote a list of functions
> ### Aliases: bquote_fun_list
> 
> ### ** Examples
> 
> 
> ## Evaluate a list of functions
> f1 <- function(x){x + 1}
> f2 <- function(x){x + 8}
> 
> f1_ <- set_default(f1, list(x=10))
> f2_ <- set_default(f2, list(x=10))
> 
> f1_(); f2_()
[1] 11
[1] 18
> 
> fn_list  <- list(f1_, f2_)
> fn_list_ <- bquote_fun_list(fn_list)
> 
> eval(fn_list[[1]])     ## No
function (x = 10) 
{
    x + 1
}
> sapply(fn_list, eval)  ## No
[[1]]
function (x = 10) 
{
    x + 1
}

[[2]]
function (x = 10) 
{
    x + 8
}

> 
> eval(fn_list_[[1]])    ## Yes
[1] 11
> sapply(fn_list_, eval) ## Yes
[1] 11 18
> 
> 
> 
> 
> cleanEx()
> nameEx("by-lapply")
> ### * by-lapply
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: by-lapply
> ### Title: Formula based version of lapply and sapply
> ### Aliases: by-lapply lapply_by lapplyBy sapply_by sapplyBy
> ### Keywords: utilities
> 
> ### ** Examples
> 
> fun <- function(x) range(x$uptake)
> lapplyBy(~Treatment + Type, data=CO2, FUN=fun)
$`nonchilled|Quebec`
[1] 13.6 45.5

$`chilled|Quebec`
[1]  9.3 42.4

$`nonchilled|Mississippi`
[1] 10.6 35.5

$`chilled|Mississippi`
[1]  7.7 22.2

> sapplyBy(~Treatment + Type, data=CO2, FUN=fun)
     chilled|Mississippi chilled|Quebec nonchilled|Mississippi
[1,]                 7.7            9.3                   10.6
[2,]                22.2           42.4                   35.5
     nonchilled|Quebec
[1,]              13.6
[2,]              45.5
> 
> # Same as
> lapply(splitBy(~Treatment + Type, data=CO2), FUN=fun)
$`chilled|Mississippi`
[1]  7.7 22.2

$`chilled|Quebec`
[1]  9.3 42.4

$`nonchilled|Mississippi`
[1] 10.6 35.5

$`nonchilled|Quebec`
[1] 13.6 45.5

> 
> 
> 
> cleanEx()
> nameEx("by-lmby")
> ### * by-lmby
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: by-lmby
> ### Title: List of lm objects with a common model
> ### Aliases: by-lmby lm_by lmBy coef.lmBy coef.summary_lmBy summary.lmBy
> ###   fitted.lmBy residuals.lmBy getBy
> ### Keywords: models
> 
> ### ** Examples
> 
> 
> bb <- lmBy(1 / uptake ~ log(conc) | Treatment, data=CO2)
> coef(bb)
           (Intercept)   log(conc)
chilled      0.1669465 -0.01964886
nonchilled   0.1440697 -0.01825196
> 
> fitted(bb)
$chilled
        22         23         24         25         26         27         28 
0.07746803 0.06546436 0.05845611 0.05184481 0.04483656 0.03893984 0.03121701 
        29         30         31         32         33         34         35 
0.07746803 0.06546436 0.05845611 0.05184481 0.04483656 0.03893984 0.03121701 
        36         37         38         39         40         41         42 
0.07746803 0.06546436 0.05845611 0.05184481 0.04483656 0.03893984 0.03121701 
        64         65         66         67         68         69         70 
0.07746803 0.06546436 0.05845611 0.05184481 0.04483656 0.03893984 0.03121701 
        71         72         73         74         75         76         77 
0.07746803 0.06546436 0.05845611 0.05184481 0.04483656 0.03893984 0.03121701 
        78         79         80         81         82         83         84 
0.07746803 0.06546436 0.05845611 0.05184481 0.04483656 0.03893984 0.03121701 

$nonchilled
         1          2          3          4          5          6          7 
0.06095250 0.04980222 0.04329220 0.03715092 0.03064091 0.02516341 0.01798962 
         8          9         10         11         12         13         14 
0.06095250 0.04980222 0.04329220 0.03715092 0.03064091 0.02516341 0.01798962 
        15         16         17         18         19         20         21 
0.06095250 0.04980222 0.04329220 0.03715092 0.03064091 0.02516341 0.01798962 
        43         44         45         46         47         48         49 
0.06095250 0.04980222 0.04329220 0.03715092 0.03064091 0.02516341 0.01798962 
        50         51         52         53         54         55         56 
0.06095250 0.04980222 0.04329220 0.03715092 0.03064091 0.02516341 0.01798962 
        57         58         59         60         61         62         63 
0.06095250 0.04980222 0.04329220 0.03715092 0.03064091 0.02516341 0.01798962 

> residuals(bb)
$chilled
          22           23           24           25           26           27 
-0.007045494 -0.023970588 -0.025452808 -0.022943079 -0.014067327 -0.010691257 
          28           29           30           31           32           33 
-0.005377213  0.030058852 -0.028834327 -0.029884680 -0.026071617 -0.018929822 
          34           35           36           37           38           39 
-0.012273178 -0.007632101 -0.011242864 -0.017845316 -0.032209389 -0.022433048 
          40           41           42           64           65           66 
-0.019129616 -0.013687319 -0.007062417  0.017770066  0.001649730 -0.003207489 
          67           68           69           70           71           72 
 0.001065240  0.006445494  0.006105200  0.014445094  0.052402100  0.022254935 
          73           74           75           76           77           78 
 0.022844705  0.025078264  0.035163443  0.034052856  0.038227438  0.016871593 
          79           80           81           82           83           84 
-0.009908808 -0.002590186  0.004021109  0.011029364  0.013970208  0.019034250 

$nonchilled
            1             2             3             4             5 
 0.0015474990 -0.0169074783 -0.0145565675 -0.0102692027 -0.0023122957 
            6             7             8             9            10 
 0.0003467923  0.0071993013  0.0125769107 -0.0131721785 -0.0163380218 
           11            12            13            14            15 
-0.0132274781 -0.0060103658 -0.0010088224  0.0045837478  0.0007758940 
           16            17            18            19            20 
-0.0189380176 -0.0184783039 -0.0133979540 -0.0073308843 -0.0023843685 
           21            43            44            45            46 
 0.0039884064  0.0333871216  0.0022811182 -0.0051242607 -0.0038175898 
           47            48            49            50            51 
 0.0017215519  0.0057007858  0.0101793985  0.0223808323 -0.0043476697 
           52            53            54            55            56 
-0.0106124611 -0.0057043822  0.0002232899  0.0069909291  0.0137564161 
           57            58            59            60            61 
 0.0275430742  0.0017441766 -0.0045325098 -0.0013086292  0.0044468117 
           62            63 
 0.0104237769  0.0179816074 

> 
> summary(bb)

Call:
lm(formula = 1/uptake ~ log(conc), data = wd)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.032209 -0.016901 -0.004292  0.016265  0.052402 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.166947   0.025977   6.427 1.19e-07 ***
log(conc)   -0.019649   0.004427  -4.438 6.95e-05 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.02154 on 40 degrees of freedom
Multiple R-squared:   0.33,	Adjusted R-squared:  0.3132 
F-statistic:  19.7 on 1 and 40 DF,  p-value: 6.95e-05


Call:
lm(formula = 1/uptake ~ log(conc), data = wd)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.018938 -0.007001 -0.000393  0.005422  0.033387 

Coefficients:
             Estimate Std. Error t value Pr(>|t|)    
(Intercept)  0.144070   0.014634   9.845 3.03e-12 ***
log(conc)   -0.018252   0.002494  -7.318 6.79e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.01213 on 40 degrees of freedom
Multiple R-squared:  0.5724,	Adjusted R-squared:  0.5618 
F-statistic: 53.55 on 1 and 40 DF,  p-value: 6.79e-09

> coef(summary(bb))
$chilled
               Estimate Std. Error   t value     Pr(>|t|)
(Intercept)  0.16694651 0.02597669  6.426782 1.187822e-07
log(conc)   -0.01964886 0.00442720 -4.438214 6.950357e-05

$nonchilled
               Estimate  Std. Error   t value     Pr(>|t|)
(Intercept)  0.14406966 0.014634155  9.844754 3.026663e-12
log(conc)   -0.01825196 0.002494095 -7.318068 6.789702e-09

> coef(summary(bb), simplify=TRUE)
     stratum   parameter    Estimate  Std. Error   t value     Pr(>|t|)
1    chilled (Intercept)  0.16694651 0.025976687  6.426782 1.187822e-07
2    chilled   log(conc) -0.01964886 0.004427200 -4.438214 6.950357e-05
3 nonchilled (Intercept)  0.14406966 0.014634155  9.844754 3.026663e-12
4 nonchilled   log(conc) -0.01825196 0.002494095 -7.318068 6.789702e-09
> 
> 
> 
> cleanEx()
> nameEx("by-order")
> ### * by-order
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: by-order
> ### Title: Ordering (sorting) rows of a data frame
> ### Aliases: by-order order_by orderBy
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> orderBy(~ conc + Treatment, CO2)
   Plant        Type  Treatment conc uptake
1    Qn1      Quebec nonchilled   95   16.0
8    Qn2      Quebec nonchilled   95   13.6
15   Qn3      Quebec nonchilled   95   16.2
43   Mn1 Mississippi nonchilled   95   10.6
50   Mn2 Mississippi nonchilled   95   12.0
57   Mn3 Mississippi nonchilled   95   11.3
22   Qc1      Quebec    chilled   95   14.2
29   Qc2      Quebec    chilled   95    9.3
36   Qc3      Quebec    chilled   95   15.1
64   Mc1 Mississippi    chilled   95   10.5
71   Mc2 Mississippi    chilled   95    7.7
78   Mc3 Mississippi    chilled   95   10.6
2    Qn1      Quebec nonchilled  175   30.4
9    Qn2      Quebec nonchilled  175   27.3
16   Qn3      Quebec nonchilled  175   32.4
44   Mn1 Mississippi nonchilled  175   19.2
51   Mn2 Mississippi nonchilled  175   22.0
58   Mn3 Mississippi nonchilled  175   19.4
23   Qc1      Quebec    chilled  175   24.1
30   Qc2      Quebec    chilled  175   27.3
37   Qc3      Quebec    chilled  175   21.0
65   Mc1 Mississippi    chilled  175   14.9
72   Mc2 Mississippi    chilled  175   11.4
79   Mc3 Mississippi    chilled  175   18.0
3    Qn1      Quebec nonchilled  250   34.8
10   Qn2      Quebec nonchilled  250   37.1
17   Qn3      Quebec nonchilled  250   40.3
45   Mn1 Mississippi nonchilled  250   26.2
52   Mn2 Mississippi nonchilled  250   30.6
59   Mn3 Mississippi nonchilled  250   25.8
24   Qc1      Quebec    chilled  250   30.3
31   Qc2      Quebec    chilled  250   35.0
38   Qc3      Quebec    chilled  250   38.1
66   Mc1 Mississippi    chilled  250   18.1
73   Mc2 Mississippi    chilled  250   12.3
80   Mc3 Mississippi    chilled  250   17.9
4    Qn1      Quebec nonchilled  350   37.2
11   Qn2      Quebec nonchilled  350   41.8
18   Qn3      Quebec nonchilled  350   42.1
46   Mn1 Mississippi nonchilled  350   30.0
53   Mn2 Mississippi nonchilled  350   31.8
60   Mn3 Mississippi nonchilled  350   27.9
25   Qc1      Quebec    chilled  350   34.6
32   Qc2      Quebec    chilled  350   38.8
39   Qc3      Quebec    chilled  350   34.0
67   Mc1 Mississippi    chilled  350   18.9
74   Mc2 Mississippi    chilled  350   13.0
81   Mc3 Mississippi    chilled  350   17.9
5    Qn1      Quebec nonchilled  500   35.3
12   Qn2      Quebec nonchilled  500   40.6
19   Qn3      Quebec nonchilled  500   42.9
47   Mn1 Mississippi nonchilled  500   30.9
54   Mn2 Mississippi nonchilled  500   32.4
61   Mn3 Mississippi nonchilled  500   28.5
26   Qc1      Quebec    chilled  500   32.5
33   Qc2      Quebec    chilled  500   38.6
40   Qc3      Quebec    chilled  500   38.9
68   Mc1 Mississippi    chilled  500   19.5
75   Mc2 Mississippi    chilled  500   12.5
82   Mc3 Mississippi    chilled  500   17.9
6    Qn1      Quebec nonchilled  675   39.2
13   Qn2      Quebec nonchilled  675   41.4
20   Qn3      Quebec nonchilled  675   43.9
48   Mn1 Mississippi nonchilled  675   32.4
55   Mn2 Mississippi nonchilled  675   31.1
62   Mn3 Mississippi nonchilled  675   28.1
27   Qc1      Quebec    chilled  675   35.4
34   Qc2      Quebec    chilled  675   37.5
41   Qc3      Quebec    chilled  675   39.6
69   Mc1 Mississippi    chilled  675   22.2
76   Mc2 Mississippi    chilled  675   13.7
83   Mc3 Mississippi    chilled  675   18.9
7    Qn1      Quebec nonchilled 1000   39.7
14   Qn2      Quebec nonchilled 1000   44.3
21   Qn3      Quebec nonchilled 1000   45.5
49   Mn1 Mississippi nonchilled 1000   35.5
56   Mn2 Mississippi nonchilled 1000   31.5
63   Mn3 Mississippi nonchilled 1000   27.8
28   Qc1      Quebec    chilled 1000   38.7
35   Qc2      Quebec    chilled 1000   42.4
42   Qc3      Quebec    chilled 1000   41.4
70   Mc1 Mississippi    chilled 1000   21.9
77   Mc2 Mississippi    chilled 1000   14.4
84   Mc3 Mississippi    chilled 1000   19.9
> ## Sort decreasingly by conc
> orderBy(~ - conc + Treatment, CO2)
   Plant        Type  Treatment conc uptake
7    Qn1      Quebec nonchilled 1000   39.7
14   Qn2      Quebec nonchilled 1000   44.3
21   Qn3      Quebec nonchilled 1000   45.5
49   Mn1 Mississippi nonchilled 1000   35.5
56   Mn2 Mississippi nonchilled 1000   31.5
63   Mn3 Mississippi nonchilled 1000   27.8
28   Qc1      Quebec    chilled 1000   38.7
35   Qc2      Quebec    chilled 1000   42.4
42   Qc3      Quebec    chilled 1000   41.4
70   Mc1 Mississippi    chilled 1000   21.9
77   Mc2 Mississippi    chilled 1000   14.4
84   Mc3 Mississippi    chilled 1000   19.9
6    Qn1      Quebec nonchilled  675   39.2
13   Qn2      Quebec nonchilled  675   41.4
20   Qn3      Quebec nonchilled  675   43.9
48   Mn1 Mississippi nonchilled  675   32.4
55   Mn2 Mississippi nonchilled  675   31.1
62   Mn3 Mississippi nonchilled  675   28.1
27   Qc1      Quebec    chilled  675   35.4
34   Qc2      Quebec    chilled  675   37.5
41   Qc3      Quebec    chilled  675   39.6
69   Mc1 Mississippi    chilled  675   22.2
76   Mc2 Mississippi    chilled  675   13.7
83   Mc3 Mississippi    chilled  675   18.9
5    Qn1      Quebec nonchilled  500   35.3
12   Qn2      Quebec nonchilled  500   40.6
19   Qn3      Quebec nonchilled  500   42.9
47   Mn1 Mississippi nonchilled  500   30.9
54   Mn2 Mississippi nonchilled  500   32.4
61   Mn3 Mississippi nonchilled  500   28.5
26   Qc1      Quebec    chilled  500   32.5
33   Qc2      Quebec    chilled  500   38.6
40   Qc3      Quebec    chilled  500   38.9
68   Mc1 Mississippi    chilled  500   19.5
75   Mc2 Mississippi    chilled  500   12.5
82   Mc3 Mississippi    chilled  500   17.9
4    Qn1      Quebec nonchilled  350   37.2
11   Qn2      Quebec nonchilled  350   41.8
18   Qn3      Quebec nonchilled  350   42.1
46   Mn1 Mississippi nonchilled  350   30.0
53   Mn2 Mississippi nonchilled  350   31.8
60   Mn3 Mississippi nonchilled  350   27.9
25   Qc1      Quebec    chilled  350   34.6
32   Qc2      Quebec    chilled  350   38.8
39   Qc3      Quebec    chilled  350   34.0
67   Mc1 Mississippi    chilled  350   18.9
74   Mc2 Mississippi    chilled  350   13.0
81   Mc3 Mississippi    chilled  350   17.9
3    Qn1      Quebec nonchilled  250   34.8
10   Qn2      Quebec nonchilled  250   37.1
17   Qn3      Quebec nonchilled  250   40.3
45   Mn1 Mississippi nonchilled  250   26.2
52   Mn2 Mississippi nonchilled  250   30.6
59   Mn3 Mississippi nonchilled  250   25.8
24   Qc1      Quebec    chilled  250   30.3
31   Qc2      Quebec    chilled  250   35.0
38   Qc3      Quebec    chilled  250   38.1
66   Mc1 Mississippi    chilled  250   18.1
73   Mc2 Mississippi    chilled  250   12.3
80   Mc3 Mississippi    chilled  250   17.9
2    Qn1      Quebec nonchilled  175   30.4
9    Qn2      Quebec nonchilled  175   27.3
16   Qn3      Quebec nonchilled  175   32.4
44   Mn1 Mississippi nonchilled  175   19.2
51   Mn2 Mississippi nonchilled  175   22.0
58   Mn3 Mississippi nonchilled  175   19.4
23   Qc1      Quebec    chilled  175   24.1
30   Qc2      Quebec    chilled  175   27.3
37   Qc3      Quebec    chilled  175   21.0
65   Mc1 Mississippi    chilled  175   14.9
72   Mc2 Mississippi    chilled  175   11.4
79   Mc3 Mississippi    chilled  175   18.0
1    Qn1      Quebec nonchilled   95   16.0
8    Qn2      Quebec nonchilled   95   13.6
15   Qn3      Quebec nonchilled   95   16.2
43   Mn1 Mississippi nonchilled   95   10.6
50   Mn2 Mississippi nonchilled   95   12.0
57   Mn3 Mississippi nonchilled   95   11.3
22   Qc1      Quebec    chilled   95   14.2
29   Qc2      Quebec    chilled   95    9.3
36   Qc3      Quebec    chilled   95   15.1
64   Mc1 Mississippi    chilled   95   10.5
71   Mc2 Mississippi    chilled   95    7.7
78   Mc3 Mississippi    chilled   95   10.6
> 
> 
> 
> cleanEx()
> nameEx("by-sample")
> ### * by-sample
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: by-sample
> ### Title: Sampling from a data frame
> ### Aliases: by-sample sample_by sampleBy
> ### Keywords: utilities
> 
> ### ** Examples
> 
> data(dietox)
> sampleBy(formula = ~ Evit + Cu, frac=.1, data = dietox)
                   Pig Litter    Start    Weight       Feed Time
Evit000|Cu000.1   4601      1 26.50000  26.50000         NA    1
Evit000|Cu000.62  4643      2 27.00000  31.79999   6.400002    2
Evit000|Cu000.106 4757      3 26.89999  81.00000 129.000000   10
Evit000|Cu000.195 4856      6 32.00000  41.50000  19.600006    3
Evit000|Cu000.199 4856      6 32.00000  70.00000  75.200001    7
Evit000|Cu000.255 5497      8 21.20000  29.39999  16.500000    3
Evit000|Cu000.263 5497      8 21.20000  93.79999 144.200001   11
Evit000|Cu000.401 5852     12 23.79999  75.00000  94.800003    8
Evit000|Cu035.19  4602      1 28.29999  65.00000  72.800003    7
Evit000|Cu035.141 4813      4 27.29999  80.79999 132.800003    9
Evit000|Cu035.406 5862     11 22.00000  22.00000         NA    1
Evit000|Cu035.507 6208     17 26.79999  58.29999  55.200001    6
Evit000|Cu035.706 8142     23 25.20000  25.20000         NA    1
Evit000|Cu035.707 8142     23 25.20000  29.79999   9.000000    2
Evit000|Cu035.712 8142     23 25.20000  63.50000  73.100002    7
Evit000|Cu035.814 8273     22 25.00000  25.00000         NA    1
Evit000|Cu035.817 8273     22 25.00000  46.00000  33.800003    4
Evit000|Cu035.825 8273     22 25.00000 107.50000 183.800001   12
Evit000|Cu175.213 4857      6 26.00000  78.50000 112.700003    9
Evit000|Cu175.214 4857      6 26.00000  86.00000 135.300007   10
Evit000|Cu175.215 4857      6 26.00000  90.59998 154.100002   11
Evit000|Cu175.651 8050     20 26.79999  63.39999  74.200001    6
Evit000|Cu175.653 8050     20 26.79999  80.00000 111.000000    8
Evit000|Cu175.751 8192     21 35.39999  97.79999 165.000000   10
Evit000|Cu175.791 8270     22 23.70000  28.79999   7.600000    2
Evit000|Cu175.796 8270     22 23.70000  65.39996  75.800003    7
Evit000|Cu175.801 8270     22 23.70000 104.00000 167.800001   12
Evit000|Cu175.854 8442     24 25.70000  46.69998  40.000000    5
Evit100|Cu000.308 5524      9 22.39999  63.00000 101.999996    8
Evit100|Cu000.479 6058     16 27.39999  32.19998   8.100000    2
Evit100|Cu000.482 6058     16 27.39999  51.19998  44.100002    5
Evit100|Cu000.516 6211     17 24.50000  37.39999  18.100000    3
Evit100|Cu000.518 6211     17 24.50000  53.59998  48.100000    5
Evit100|Cu000.522 6211     17 24.50000  86.19995 114.600002    9
Evit100|Cu000.596 6433      5 32.19998 111.09998 163.000000   11
Evit100|Cu000.805 8271     22 24.00000  44.00000  30.000000    4
Evit100|Cu000.809 8271     22 24.00000  70.29999  89.500000    8
Evit100|Cu000.812 8271     22 24.00000  96.29999 144.400002   11
Evit100|Cu035.38  4605      1 31.50000  34.79999   6.500000    2
Evit100|Cu035.42  4605      1 31.50000  62.19998  65.800003    6
Evit100|Cu035.146 4814      4 26.20000  31.09999   9.900002    2
Evit100|Cu035.156 4814      4 26.20000  98.39996 174.400002   12
Evit100|Cu035.224 4858      6 28.00000  76.39996 107.300003    8
Evit100|Cu035.576 6432      5 25.09999  28.89999  11.100006    3
Evit100|Cu035.579 6432      5 25.09999  52.79999  56.300003    6
Evit100|Cu035.582 6432      5 25.09999  78.09998 106.300003    9
Evit100|Cu035.660 8051     20 30.59999  42.79999  21.000000    3
Evit100|Cu035.727 8144     23 23.50000  64.79999  96.000000   10
Evit100|Cu175.157 4815      4 24.89999  24.89999         NA    1
Evit100|Cu175.162 4815      4 24.89999  52.89999  59.100006    6
Evit100|Cu175.166 4815      4 24.89999  83.29999 149.000000   10
Evit100|Cu175.435 5866     11 22.00000  50.89999  49.800003    6
Evit100|Cu175.440 5866     11 22.00000  83.79999 122.800003   11
Evit100|Cu175.469 6057     16 27.00000  44.69998  30.100006    4
Evit100|Cu175.472 6057     16 27.00000  70.50000  80.000000    7
Evit100|Cu175.475 6057     16 27.00000  93.29999 131.800003   10
Evit100|Cu175.565 6430      5 34.19998  57.59998  35.000000    4
Evit100|Cu175.569 6430      5 34.19998  81.50000  96.099998    8
Evit200|Cu000.289 5502      8 29.59999  29.59999         NA    1
Evit200|Cu000.298 5502      8 29.59999  91.00000 126.800001   10
Evit200|Cu000.299 5502      8 29.59999  96.39996 145.200001   11
Evit200|Cu000.326 5528      9 24.00000  42.69998  32.100002    4
Evit200|Cu000.327 5528      9 24.00000  48.19998  44.800003    5
Evit200|Cu000.350 5581     10 27.00000  51.50000  46.200001    5
Evit200|Cu000.370 5850     12 22.79999  22.79999         NA    1
Evit200|Cu000.766 8195     21 25.29999  25.29999         NA    1
Evit200|Cu000.771 8195     21 25.29999  40.79999  57.400002    6
Evit200|Cu000.776 8195     21 25.29999  80.50000 140.500000   11
Evit200|Cu035.113 4759      3 22.59999  47.59998  47.100000    5
Evit200|Cu035.117 4759      3 22.59999  74.09998 111.900002    9
Evit200|Cu035.247 5392      7 24.59999  49.29999  62.499996    7
Evit200|Cu035.249 5392      7 24.59999  63.00000  89.499996    9
Evit200|Cu035.426 5865     11 22.00000  71.00000 104.800003    9
Evit200|Cu035.429 5865     11 22.00000  90.00000 146.300001   12
Evit200|Cu035.598 6909     13 24.70000  24.70000         NA    1
Evit200|Cu035.608 6909     13 24.70000  96.39996 137.900002   11
Evit200|Cu035.696 8141     23 24.20000  30.70000  13.300003    3
Evit200|Cu035.759 8193     21 29.29999  58.79999  70.000000    6
Evit200|Cu035.765 8193     21 29.29999  92.09998 178.000000   12
Evit200|Cu175.25  4603      1 27.59999  27.59999         NA    1
Evit200|Cu175.34  4603      1 27.59999  90.19995 125.600002   10
Evit200|Cu175.367 5582     10 29.50000  90.39996 127.800001   10
Evit200|Cu175.388 5851     12 22.29999  60.29999  71.100006    7
Evit200|Cu175.393 5851     12 22.29999 101.39996 157.599991   12
Evit200|Cu175.456 6056     16 32.50000  47.79999  23.800003    3
Evit200|Cu175.464 6056     16 32.50000 112.29999 174.500000   11
Evit200|Cu175.465 6056     16 32.50000 112.00000 191.400002   12
Evit200|Cu175.673 8053     20 21.89999  41.29999  36.700001    4
Evit200|Cu175.843 8439     24 27.29999  57.19998  58.000000    6
> 
> 
> 
> cleanEx()
> nameEx("by-split")
> ### * by-split
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: by-split
> ### Title: Split a data frame
> ### Aliases: by-split split_by splitBy head.splitByData tail.splitByData
> ###   split_by.legacy splitBy.legacy
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> split_by(CO2, ~Treatment+Type)
                listentry  Treatment        Type
1     chilled|Mississippi nonchilled      Quebec
22         chilled|Quebec    chilled      Quebec
43 nonchilled|Mississippi nonchilled Mississippi
64      nonchilled|Quebec    chilled Mississippi
> split_by(CO2, Treatment, Type)
                listentry  Treatment        Type
1     chilled|Mississippi nonchilled      Quebec
22         chilled|Quebec    chilled      Quebec
43 nonchilled|Mississippi nonchilled Mississippi
64      nonchilled|Quebec    chilled Mississippi
> split_by(CO2, c("Treatment", "Type"))
                listentry  Treatment        Type
1     chilled|Mississippi nonchilled      Quebec
22         chilled|Quebec    chilled      Quebec
43 nonchilled|Mississippi nonchilled Mississippi
64      nonchilled|Quebec    chilled Mississippi
> split_by(CO2, Treatment)
    listentry  Treatment
1     chilled nonchilled
22 nonchilled    chilled
> x <- CO2 |> split_by(~Treatment)
> head(x, 3)
$chilled
   Plant   Type conc uptake
22   Qc1 Quebec   95   14.2
23   Qc1 Quebec  175   24.1
24   Qc1 Quebec  250   30.3

$nonchilled
  Plant   Type conc uptake
1   Qn1 Quebec   95   16.0
2   Qn1 Quebec  175   30.4
3   Qn1 Quebec  250   34.8

> tail(x, 3)
$chilled
   Plant        Type conc uptake
82   Mc3 Mississippi  500   17.9
83   Mc3 Mississippi  675   18.9
84   Mc3 Mississippi 1000   19.9

$nonchilled
   Plant        Type conc uptake
61   Mn3 Mississippi  500   28.5
62   Mn3 Mississippi  675   28.1
63   Mn3 Mississippi 1000   27.8

> 
> x <- CO2 |> split_by(~Treatment, omit=FALSE)
> head(x, 3)
$chilled
   Plant   Type Treatment conc uptake
22   Qc1 Quebec   chilled   95   14.2
23   Qc1 Quebec   chilled  175   24.1
24   Qc1 Quebec   chilled  250   30.3

$nonchilled
  Plant   Type  Treatment conc uptake
1   Qn1 Quebec nonchilled   95   16.0
2   Qn1 Quebec nonchilled  175   30.4
3   Qn1 Quebec nonchilled  250   34.8

> tail(x, 3)
$chilled
   Plant        Type Treatment conc uptake
82   Mc3 Mississippi   chilled  500   17.9
83   Mc3 Mississippi   chilled  675   18.9
84   Mc3 Mississippi   chilled 1000   19.9

$nonchilled
   Plant        Type  Treatment conc uptake
61   Mn3 Mississippi nonchilled  500   28.5
62   Mn3 Mississippi nonchilled  675   28.1
63   Mn3 Mississippi nonchilled 1000   27.8

> 
> ## The "Old" interface
> splitBy(~Treatment+Type, CO2)
                listentry  Treatment        Type
1     chilled|Mississippi nonchilled      Quebec
22         chilled|Quebec    chilled      Quebec
43 nonchilled|Mississippi nonchilled Mississippi
64      nonchilled|Quebec    chilled Mississippi
> splitBy(~Treatment+Type, data=CO2)
                listentry  Treatment        Type
1     chilled|Mississippi nonchilled      Quebec
22         chilled|Quebec    chilled      Quebec
43 nonchilled|Mississippi nonchilled Mississippi
64      nonchilled|Quebec    chilled Mississippi
> splitBy(c("Treatment", "Type"), data=CO2)
                listentry  Treatment        Type
1     chilled|Mississippi nonchilled      Quebec
22         chilled|Quebec    chilled      Quebec
43 nonchilled|Mississippi nonchilled Mississippi
64      nonchilled|Quebec    chilled Mississippi
> 
> 
> 
> 
> cleanEx()
> nameEx("by-subset")
> ### * by-subset
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: by-subset
> ### Title: Finds subsets of a dataframe which is split by variables in a
> ###   formula.
> ### Aliases: by-subset subset_by subsetBy
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> data(dietox)
> subsetBy(~Evit, Weight < mean(Weight), data=dietox)
             Pig    Cu Litter    Start   Weight      Feed Time
Evit000.1   4601 Cu000      1 26.50000 26.50000        NA    1
Evit000.2   4601 Cu000      1 26.50000 27.59999  5.200005    2
Evit000.3   4601 Cu000      1 26.50000 36.50000 17.600000    3
Evit000.4   4601 Cu000      1 26.50000 40.29999 28.500000    4
Evit000.5   4601 Cu000      1 26.50000 49.09998 45.200001    5
Evit000.6   4601 Cu000      1 26.50000 55.39999 56.900002    6
Evit000.7   4601 Cu000      1 26.50000 59.59998 71.700005    7
Evit000.13  4602 Cu035      1 28.29999 28.29999        NA    1
Evit000.14  4602 Cu035      1 28.29999 30.09999  3.300003    2
Evit000.15  4602 Cu035      1 28.29999 38.29999 13.200001    3
Evit000.16  4602 Cu035      1 28.29999 44.50000 26.100000    4
Evit000.17  4602 Cu035      1 28.29999 51.59998 43.600002    5
Evit000.18  4602 Cu035      1 28.29999 57.59998 55.200001    6
Evit000.61  4643 Cu000      2 27.00000 27.00000        NA    1
Evit000.62  4643 Cu000      2 27.00000 31.79999  6.400002    2
Evit000.63  4643 Cu000      2 27.00000 39.00000 21.500000    3
Evit000.64  4643 Cu000      2 27.00000 44.79999 33.900002    4
Evit000.65  4643 Cu000      2 27.00000 50.89999 44.900002    5
Evit000.66  4643 Cu000      2 27.00000 57.39999 58.800000    6
Evit000.97  4757 Cu000      3 26.89999 26.89999        NA    1
Evit000.98  4757 Cu000      3 26.89999 32.29999  9.900002    2
Evit000.99  4757 Cu000      3 26.89999 38.59998 20.200005    3
Evit000.100 4757 Cu000      3 26.89999 46.00000 30.000000    4
Evit000.101 4757 Cu000      3 26.89999 57.79999 40.000000    5
Evit000.102 4757 Cu000      3 26.89999 58.59998 62.800003    6
Evit000.121 4760 Cu175      3 15.00000 15.00000        NA    1
Evit000.122 4760 Cu175      3 15.00000 19.39999  7.900002    2
Evit000.123 4760 Cu175      3 15.00000 21.39999 15.000000    3
Evit000.124 4760 Cu175      3 15.00000 25.29999 22.100002    4
Evit000.125 4760 Cu175      3 15.00000 31.89999 29.900002    5
Evit000.126 4760 Cu175      3 15.00000 37.59998 41.800003    6
Evit000.127 4760 Cu175      3 15.00000 43.69998 57.600006    7
Evit000.128 4760 Cu175      3 15.00000 48.89999 69.500000    8
Evit000.129 4760 Cu175      3 15.00000 53.69998 83.800003    9
Evit000.130 4760 Cu175      3 15.00000 59.29999 93.200001   10
Evit000.133 4813 Cu035      4 27.29999 27.29999        NA    1
Evit000.134 4813 Cu035      4 27.29999 32.39999 10.300003    2
Evit000.135 4813 Cu035      4 27.29999 38.29999 22.800003    3
Evit000.136 4813 Cu035      4 27.29999 45.79999 40.200005    4
Evit000.137 4813 Cu035      4 27.29999 53.79999 53.700005    5
Evit000.138 4813 Cu035      4 27.29999 60.00000 72.700005    6
Evit000.169 4817 Cu175      4 24.59999 24.59999        NA    1
Evit000.170 4817 Cu175      4 24.59999 28.00000  9.000000    2
Evit000.171 4817 Cu175      4 24.59999 34.59998 19.900002    3
Evit000.172 4817 Cu175      4 24.59999 41.50000 33.900002    4
Evit000.173 4817 Cu175      4 24.59999 49.69998 47.000004    5
Evit000.174 4817 Cu175      4 24.59999 56.50000 65.200001    6
Evit000.193 4856 Cu000      6 32.00000 32.00000        NA    1
Evit000.194 4856 Cu000      6 32.00000 35.19998  8.100000    2
Evit000.195 4856 Cu000      6 32.00000 41.50000 19.600006    3
Evit000.196 4856 Cu000      6 32.00000 47.69998 27.600000    4
Evit000.197 4856 Cu000      6 32.00000 53.79999 41.800003    5
Evit000.205 4857 Cu175      6 26.00000 26.00000        NA    1
Evit000.206 4857 Cu175      6 26.00000 34.50000  8.500000    2
Evit000.207 4857 Cu175      6 26.00000 40.39999 19.200005    3
Evit000.208 4857 Cu175      6 26.00000 45.00000 29.000000    4
Evit000.209 4857 Cu175      6 26.00000 53.50000 45.000000    5
Evit000.210 4857 Cu175      6 26.00000 60.19998 62.300003    6
Evit000.253 5497 Cu000      8 21.20000 21.20000        NA    1
Evit000.254 5497 Cu000      8 21.20000 25.79999  6.300001    2
Evit000.255 5497 Cu000      8 21.20000 29.39999 16.500000    3
Evit000.256 5497 Cu000      8 21.20000 36.79999 27.200001    4
Evit000.257 5497 Cu000      8 21.20000 43.19998 40.200005    5
Evit000.258 5497 Cu000      8 21.20000 51.09998 54.800003    6
Evit000.259 5497 Cu000      8 21.20000 59.29999 68.000000    7
Evit000.265 5500 Cu035      8 17.00000 17.00000        NA    1
Evit000.266 5500 Cu035      8 17.00000 19.00000  5.200001    2
Evit000.267 5500 Cu035      8 17.00000 23.00000 18.500000    3
Evit000.268 5500 Cu035      8 17.00000 29.39999 32.800003    4
Evit000.269 5500 Cu035      8 17.00000 34.59998 43.800003    5
Evit000.270 5500 Cu035      8 17.00000 40.59998 55.800003    6
Evit000.271 5500 Cu035      8 17.00000 46.59998 71.400002    7
Evit000.272 5500 Cu035      8 17.00000 54.00000 87.000000    8
Evit000.394 5852 Cu000     12 23.79999 23.79999        NA    1
Evit000.395 5852 Cu000     12 23.79999 30.00000  9.700000    2
Evit000.396 5852 Cu000     12 23.79999 37.09998 20.800003    3
Evit000.397 5852 Cu000     12 23.79999 43.19998 31.200005    4
Evit000.398 5852 Cu000     12 23.79999 50.39999 44.900002    5
Evit000.399 5852 Cu000     12 23.79999 60.19998 61.800003    6
Evit000.406 5862 Cu035     11 22.00000 22.00000        NA    1
Evit000.407 5862 Cu035     11 22.00000 25.79999  8.500000    2
Evit000.408 5862 Cu035     11 22.00000 29.20000 15.800003    3
Evit000.409 5862 Cu035     11 22.00000 35.79999 25.900002    4
Evit000.410 5862 Cu035     11 22.00000 41.09998 37.600000    5
Evit000.411 5862 Cu035     11 22.00000 50.00000 48.200005    6
Evit000.412 5862 Cu035     11 22.00000 55.19998 62.000000    7
Evit000.502 6208 Cu035     17 26.79999 26.79999        NA    1
Evit000.503 6208 Cu035     17 26.79999 31.09999  6.100000    2
Evit000.504 6208 Cu035     17 26.79999 37.79999 14.900002    3
Evit000.505 6208 Cu035     17 26.79999 44.59998 28.500000    4
Evit000.506 6208 Cu035     17 26.79999 50.50000 40.500000    5
Evit000.507 6208 Cu035     17 26.79999 58.29999 55.200001    6
Evit000.538 6287 Cu000     18 21.50000 21.50000        NA    1
Evit000.539 6287 Cu000     18 21.50000 24.59999  5.000000    2
Evit000.540 6287 Cu000     18 21.50000 28.50000 14.200001    3
Evit000.541 6287 Cu000     18 21.50000 39.09998 27.800003    4
Evit000.542 6287 Cu000     18 21.50000 45.29999 39.800003    5
Evit000.543 6287 Cu000     18 21.50000 53.00000 53.500000    6
Evit000.544 6287 Cu000     18 21.50000 59.59998 68.500000    7
Evit000.634 8049 Cu035     20 22.00000 22.00000        NA    1
Evit000.635 8049 Cu035     20 22.00000 26.59999  9.500000    2
Evit000.636 8049 Cu035     20 22.00000 33.09998 19.900002    3
Evit000.637 8049 Cu035     20 22.00000 38.39999 31.000000    4
Evit000.638 8049 Cu035     20 22.00000 46.59998 44.900002    5
Evit000.639 8049 Cu035     20 22.00000 52.29999 63.800003    6
Evit000.646 8050 Cu175     20 26.79999 26.79999        NA    1
Evit000.647 8050 Cu175     20 26.79999 33.59998 10.900002    2
Evit000.648 8050 Cu175     20 26.79999 42.09998 25.100002    3
Evit000.649 8050 Cu175     20 26.79999 47.89999 38.000000    4
Evit000.650 8050 Cu175     20 26.79999 56.19998 54.400002    5
Evit000.682 8139 Cu175     23 24.00000 24.00000        NA    1
Evit000.683 8139 Cu175     23 24.00000 26.79999  6.000000    2
Evit000.684 8139 Cu175     23 24.00000 33.00000 20.000000    3
Evit000.685 8139 Cu175     23 24.00000 39.09998 30.300003    4
Evit000.686 8139 Cu175     23 24.00000 46.39999 45.100002    5
Evit000.687 8139 Cu175     23 24.00000 54.00000 61.400002    6
Evit000.706 8142 Cu035     23 25.20000 25.20000        NA    1
Evit000.707 8142 Cu035     23 25.20000 29.79999  9.000000    2
Evit000.708 8142 Cu035     23 25.20000 35.69998 21.000000    3
Evit000.709 8142 Cu035     23 25.20000 42.00000 31.300003    4
Evit000.710 8142 Cu035     23 25.20000 50.00000 44.000000    5
Evit000.711 8142 Cu035     23 25.20000 55.89999 57.800001    6
Evit000.742 8192 Cu175     21 35.39999 35.39999        NA    1
Evit000.743 8192 Cu175     21 35.39999 42.29999 15.100002    2
Evit000.744 8192 Cu175     21 35.39999 49.50000 29.800003    3
Evit000.745 8192 Cu175     21 35.39999 58.69998 48.500000    4
Evit000.790 8270 Cu175     22 23.70000 23.70000        NA    1
Evit000.791 8270 Cu175     22 23.70000 28.79999  7.600000    2
Evit000.792 8270 Cu175     22 23.70000 35.09998 18.500000    3
Evit000.793 8270 Cu175     22 23.70000 43.00000 33.200001    4
Evit000.794 8270 Cu175     22 23.70000 49.09998 44.900002    5
Evit000.795 8270 Cu175     22 23.70000 58.79999 60.000000    6
Evit000.814 8273 Cu035     22 25.00000 25.00000        NA    1
Evit000.815 8273 Cu035     22 25.00000 30.09999  8.000000    2
Evit000.816 8273 Cu035     22 25.00000 37.09998 20.000000    3
Evit000.817 8273 Cu035     22 25.00000 46.00000 33.800003    4
Evit000.818 8273 Cu035     22 25.00000 53.59998 48.500000    5
Evit000.850 8442 Cu175     24 25.70000 25.70000        NA    1
Evit000.851 8442 Cu175     24 25.70000 28.70000  6.600000    2
Evit000.852 8442 Cu175     24 25.70000 33.39999 15.800003    3
Evit000.853 8442 Cu175     24 25.70000 40.00000 27.000000    4
Evit000.854 8442 Cu175     24 25.70000 46.69998 40.000000    5
Evit000.855 8442 Cu175     24 25.70000 56.59998 52.000000    6
Evit100.37  4605 Cu035      1 31.50000 31.50000        NA    1
Evit100.38  4605 Cu035      1 31.50000 34.79999  6.500000    2
Evit100.39  4605 Cu035      1 31.50000 40.69998 20.000000    3
Evit100.40  4605 Cu035      1 31.50000 47.69998 33.100002    4
Evit100.41  4605 Cu035      1 31.50000 55.89999 51.800003    5
Evit100.42  4605 Cu035      1 31.50000 62.19998 65.800003    6
Evit100.49  4641 Cu175      2 27.09999 27.09999        NA    1
Evit100.50  4641 Cu175      2 27.09999 33.00000  5.200001    2
Evit100.51  4641 Cu175      2 27.09999 42.50000 22.500000    3
Evit100.52  4641 Cu175      2 27.09999 50.09998 38.500000    4
Evit100.53  4641 Cu175      2 27.09999 56.50000 53.300003    5
Evit100.145 4814 Cu035      4 26.20000 26.20000        NA    1
Evit100.146 4814 Cu035      4 26.20000 31.09999  9.900002    2
Evit100.147 4814 Cu035      4 26.20000 34.59998 19.600006    3
Evit100.148 4814 Cu035      4 26.20000 41.19998 30.000000    4
Evit100.149 4814 Cu035      4 26.20000 49.19998 37.400002    5
Evit100.150 4814 Cu035      4 26.20000 55.59998 57.200005    6
Evit100.157 4815 Cu175      4 24.89999 24.89999        NA    1
Evit100.158 4815 Cu175      4 24.89999 29.70000  9.500000    2
Evit100.159 4815 Cu175      4 24.89999 33.79999 19.000000    3
Evit100.160 4815 Cu175      4 24.89999 38.79999 32.000000    4
Evit100.161 4815 Cu175      4 24.89999 48.29999 45.500000    5
Evit100.162 4815 Cu175      4 24.89999 52.89999 59.100006    6
Evit100.181 4854 Cu000      6 29.00000 29.00000        NA    1
Evit100.182 4854 Cu000      6 29.00000 32.69998  8.200001    2
Evit100.183 4854 Cu000      6 29.00000 38.29999 19.800003    3
Evit100.184 4854 Cu000      6 29.00000 45.50000 30.000000    4
Evit100.185 4854 Cu000      6 29.00000 48.59998 40.000000    5
Evit100.186 4854 Cu000      6 29.00000 56.00000 50.000000    6
Evit100.217 4858 Cu035      6 28.00000 28.00000        NA    1
Evit100.218 4858 Cu035      6 28.00000 31.20000  8.000000    2
Evit100.219 4858 Cu035      6 28.00000 38.79999 16.700005    3
Evit100.220 4858 Cu035      6 28.00000 44.69998 31.800003    4
Evit100.221 4858 Cu035      6 28.00000 53.59998 50.500004    5
Evit100.222 4858 Cu035      6 28.00000 59.19998 71.100006    6
Evit100.277 5501 Cu175      8 30.00000 30.00000        NA    1
Evit100.278 5501 Cu175      8 30.00000 34.69998 10.000000    2
Evit100.279 5501 Cu175      8 30.00000 42.79999 22.500000    3
Evit100.280 5501 Cu175      8 30.00000 48.39999 35.200001    4
Evit100.281 5501 Cu175      8 30.00000 53.29999 45.800003    5
Evit100.282 5501 Cu175      8 30.00000 60.00000 60.000000    6
Evit100.301 5524 Cu000      9 22.39999 22.39999        NA    1
Evit100.302 5524 Cu000      9 22.39999 25.20000 10.000000    2
Evit100.303 5524 Cu000      9 22.39999 30.00000 26.699997    3
Evit100.304 5524 Cu000      9 22.39999 36.50000 39.799999    4
Evit100.305 5524 Cu000      9 22.39999 43.29999 55.199997    5
Evit100.306 5524 Cu000      9 22.39999 50.00000 74.499996    6
Evit100.307 5524 Cu000      9 22.39999 58.09998 85.999996    7
Evit100.312 5527 Cu175      9 26.59999 26.59999        NA    1
Evit100.313 5527 Cu175      9 26.59999 28.20000 10.000000    2
Evit100.314 5527 Cu175      9 26.59999 38.39999 30.000000    3
Evit100.315 5527 Cu175      9 26.59999 45.79999 50.000000    4
Evit100.316 5527 Cu175      9 26.59999 54.89999 60.000000    5
Evit100.317 5527 Cu175      9 26.59999 60.09998 78.500000    6
Evit100.318 5527 Cu175      9 26.59999 56.89999 86.200001    7
Evit100.334 5578 Cu175     10 27.09999 27.09999        NA    1
Evit100.335 5578 Cu175     10 27.09999 34.69998 11.100002    2
Evit100.336 5578 Cu175     10 27.09999 40.69998 29.900002    3
Evit100.337 5578 Cu175     10 27.09999 47.59998 45.300001    4
Evit100.338 5578 Cu175     10 27.09999 56.50000 65.600000    5
Evit100.430 5866 Cu175     11 22.00000 22.00000        NA    1
Evit100.431 5866 Cu175     11 22.00000 24.79999  7.500000    2
Evit100.432 5866 Cu175     11 22.00000 30.00000 16.100000    3
Evit100.433 5866 Cu175     11 22.00000 35.79999 26.000000    4
Evit100.434 5866 Cu175     11 22.00000 42.29999 36.800001    5
Evit100.435 5866 Cu175     11 22.00000 50.89999 49.800003    6
Evit100.436 5866 Cu175     11 22.00000 57.79999 65.100002    7
Evit100.466 6057 Cu175     16 27.00000 27.00000        NA    1
Evit100.467 6057 Cu175     16 27.00000 32.39999  7.800001    2
Evit100.468 6057 Cu175     16 27.00000 38.19998 17.000000    3
Evit100.469 6057 Cu175     16 27.00000 44.69998 30.100006    4
Evit100.470 6057 Cu175     16 27.00000 53.19998 44.800003    5
Evit100.478 6058 Cu000     16 27.39999 27.39999        NA    1
Evit100.479 6058 Cu000     16 27.39999 32.19998  8.100000    2
Evit100.480 6058 Cu000     16 27.39999 37.89999 18.300000    3
Evit100.481 6058 Cu000     16 27.39999 45.89999 29.900002    4
Evit100.482 6058 Cu000     16 27.39999 51.19998 44.100002    5
Evit100.483 6058 Cu000     16 27.39999 57.09998 58.300000    6
Evit100.514 6211 Cu000     17 24.50000 24.50000        NA    1
Evit100.515 6211 Cu000     17 24.50000 31.59999  8.100000    2
Evit100.516 6211 Cu000     17 24.50000 37.39999 18.100000    3
Evit100.517 6211 Cu000     17 24.50000 46.39999 30.100006    4
Evit100.518 6211 Cu000     17 24.50000 53.59998 48.100000    5
Evit100.519 6211 Cu000     17 24.50000 61.19998 62.600002    6
Evit100.526 6284 Cu000     18 23.09999 23.09999        NA    1
Evit100.527 6284 Cu000     18 23.09999 26.00000  5.900002    2
Evit100.528 6284 Cu000     18 23.09999 30.09999 17.600000    3
Evit100.529 6284 Cu000     18 23.09999 40.69998 30.600006    4
Evit100.530 6284 Cu000     18 23.09999 46.59998 41.400002    5
Evit100.531 6284 Cu000     18 23.09999 52.09998 53.400002    6
Evit100.532 6284 Cu000     18 23.09999 60.50000 69.200000    7
Evit100.562 6430 Cu175      5 34.19998 34.19998        NA    1
Evit100.563 6430 Cu175      5 34.19998 42.09998  8.499996    2
Evit100.564 6430 Cu175      5 34.19998 50.09998 23.099998    3
Evit100.565 6430 Cu175      5 34.19998 57.59998 35.000000    4
Evit100.566 6430 Cu175      5 34.19998 62.29999 54.299995    5
Evit100.574 6432 Cu035      5 25.09999 25.09999        NA    1
Evit100.575 6432 Cu035      5 25.09999 23.20000  4.000000    2
Evit100.576 6432 Cu035      5 25.09999 28.89999 11.100006    3
Evit100.577 6432 Cu035      5 25.09999 36.79999 21.000000    4
Evit100.578 6432 Cu035      5 25.09999 44.19998 31.000000    5
Evit100.579 6432 Cu035      5 25.09999 52.79999 56.300003    6
Evit100.580 6432 Cu035      5 25.09999 62.19998 69.100006    7
Evit100.586 6433 Cu000      5 32.19998 32.19998        NA    1
Evit100.587 6433 Cu000      5 32.19998 36.39999  6.900002    2
Evit100.588 6433 Cu000      5 32.19998 41.79999 14.300003    3
Evit100.589 6433 Cu000      5 32.19998 48.19998 26.400002    4
Evit100.590 6433 Cu000      5 32.19998 55.89999 41.800003    5
Evit100.591 6433 Cu000      5 32.19998 60.09998 58.600000    6
Evit100.610 6910 Cu000     13 24.20000 24.20000        NA    1
Evit100.611 6910 Cu000     13 24.20000 29.20000  6.200001    2
Evit100.612 6910 Cu000     13 24.20000 36.19998 17.100000    3
Evit100.613 6910 Cu000     13 24.20000 43.09998 30.000000    4
Evit100.614 6910 Cu000     13 24.20000 49.19998 44.000000    5
Evit100.615 6910 Cu000     13 24.20000 57.00000 56.900002    6
Evit100.658 8051 Cu035     20 30.59999 30.59999        NA    1
Evit100.659 8051 Cu035     20 30.59999 37.59998 11.200005    2
Evit100.660 8051 Cu035     20 30.59999 42.79999 21.000000    3
Evit100.661 8051 Cu035     20 30.59999 47.39999 31.100006    4
Evit100.662 8051 Cu035     20 30.59999 56.59998 47.000000    5
Evit100.718 8144 Cu035     23 23.50000 23.50000        NA    1
Evit100.719 8144 Cu035     23 23.50000 25.89999  7.200001    2
Evit100.720 8144 Cu035     23 23.50000 32.19998 19.500000    3
Evit100.721 8144 Cu035     23 23.50000 32.39999 25.800003    4
Evit100.722 8144 Cu035     23 23.50000 29.79999 29.500000    5
Evit100.723 8144 Cu035     23 23.50000 32.79999 34.000000    6
Evit100.724 8144 Cu035     23 23.50000 41.00000 50.000000    7
Evit100.725 8144 Cu035     23 23.50000 50.00000 66.700001    8
Evit100.726 8144 Cu035     23 23.50000 56.89999 80.700005    9
Evit100.730 8191 Cu035     21 26.59999 26.59999        NA    1
Evit100.731 8191 Cu035     21 26.59999 33.00000 10.000000    2
Evit100.732 8191 Cu035     21 26.59999 38.19998 20.000000    3
Evit100.733 8191 Cu035     21 26.59999 46.39999 30.000000    4
Evit100.734 8191 Cu035     21 26.59999 53.19998 40.000000    5
Evit100.735 8191 Cu035     21 26.59999 59.59998 60.000000    6
Evit100.802 8271 Cu000     22 24.00000 24.00000        NA    1
Evit100.803 8271 Cu000     22 24.00000 28.89999  8.500000    2
Evit100.804 8271 Cu000     22 24.00000 35.79999 19.500000    3
Evit100.805 8271 Cu000     22 24.00000 44.00000 30.000000    4
Evit100.806 8271 Cu000     22 24.00000 47.50000 43.200001    5
Evit100.807 8271 Cu000     22 24.00000 56.39999 56.600000    6
Evit100.826 8437 Cu035     24 27.00000 27.00000        NA    1
Evit100.827 8437 Cu035     24 27.00000 30.00000  6.800003    2
Evit100.828 8437 Cu035     24 27.00000 35.39999 16.400002    3
Evit100.829 8437 Cu035     24 27.00000 41.00000 28.300001    4
Evit100.830 8437 Cu035     24 27.00000 48.59998 41.000000    5
Evit100.831 8437 Cu035     24 27.00000 56.39999 54.900002    6
Evit200.25  4603 Cu175      1 27.59999 27.59999        NA    1
Evit200.26  4603 Cu175      1 27.59999 30.59999  6.700005    2
Evit200.27  4603 Cu175      1 27.59999 38.69998 17.600000    3
Evit200.28  4603 Cu175      1 27.59999 47.19998 32.800003    4
Evit200.29  4603 Cu175      1 27.59999 54.09998 50.000000    5
Evit200.73  4645 Cu035      2 27.70000 27.70000        NA    1
Evit200.74  4645 Cu035      2 27.70000 33.59998 10.000000    2
Evit200.75  4645 Cu035      2 27.70000 44.00000 28.500000    3
Evit200.76  4645 Cu035      2 27.70000 46.69998 40.000000    4
Evit200.77  4645 Cu035      2 27.70000 54.79999 55.200001    5
Evit200.85  4756 Cu000      3 17.00000 17.00000        NA    1
Evit200.86  4756 Cu000      3 17.00000 19.00000  9.900002    2
Evit200.87  4756 Cu000      3 17.00000 23.59999 18.500000    3
Evit200.88  4756 Cu000      3 17.00000 30.00000 28.900002    4
Evit200.89  4756 Cu000      3 17.00000 36.29999 38.100002    5
Evit200.90  4756 Cu000      3 17.00000 42.39999 52.799999    6
Evit200.91  4756 Cu000      3 17.00000 50.50000 66.799999    7
Evit200.92  4756 Cu000      3 17.00000 57.59998 86.000000    8
Evit200.109 4759 Cu035      3 22.59999 22.59999        NA    1
Evit200.110 4759 Cu035      3 22.59999 28.50000 10.600006    2
Evit200.111 4759 Cu035      3 22.59999 32.69998 21.100006    3
Evit200.112 4759 Cu035      3 22.59999 39.89999 33.300003    4
Evit200.113 4759 Cu035      3 22.59999 47.59998 47.100000    5
Evit200.114 4759 Cu035      3 22.59999 53.79999 63.400002    6
Evit200.229 5389 Cu175      7 24.29999 24.29999        NA    1
Evit200.230 5389 Cu175      7 24.29999 28.39999  5.400002    2
Evit200.231 5389 Cu175      7 24.29999 36.00000 20.000000    3
Evit200.232 5389 Cu175      7 24.29999 40.29999 30.300003    4
Evit200.233 5389 Cu175      7 24.29999 46.19998 41.800003    5
Evit200.234 5389 Cu175      7 24.29999 51.89999 54.800003    6
Evit200.235 5389 Cu175      7 24.29999 58.09998 69.000002    7
Evit200.241 5392 Cu035      7 24.59999 24.59999        NA    1
Evit200.242 5392 Cu035      7 24.59999 25.79999  7.700001    2
Evit200.243 5392 Cu035      7 24.59999 28.59999 19.999996    3
Evit200.244 5392 Cu035      7 24.59999 30.39999 29.999996    4
Evit200.245 5392 Cu035      7 24.59999 36.09998 39.999996    5
Evit200.246 5392 Cu035      7 24.59999 36.09998 47.499996    6
Evit200.247 5392 Cu035      7 24.59999 49.29999 62.499996    7
Evit200.248 5392 Cu035      7 24.59999 57.89999 76.799999    8
Evit200.289 5502 Cu000      8 29.59999 29.59999        NA    1
Evit200.290 5502 Cu000      8 29.59999 34.19998  9.000000    2
Evit200.291 5502 Cu000      8 29.59999 43.00000 21.400002    3
Evit200.292 5502 Cu000      8 29.59999 50.00000 36.500000    4
Evit200.293 5502 Cu000      8 29.59999 57.00000 51.000000    5
Evit200.323 5528 Cu000      9 24.00000 24.00000        NA    1
Evit200.324 5528 Cu000      9 24.00000 28.20000 10.000000    2
Evit200.325 5528 Cu000      9 24.00000 35.29999 20.000000    3
Evit200.326 5528 Cu000      9 24.00000 42.69998 32.100002    4
Evit200.327 5528 Cu000      9 24.00000 48.19998 44.800003    5
Evit200.328 5528 Cu000      9 24.00000 53.19998 58.500000    6
Evit200.346 5581 Cu000     10 27.00000 27.00000        NA    1
Evit200.347 5581 Cu000     10 27.00000 30.00000  6.800001    2
Evit200.348 5581 Cu000     10 27.00000 37.79999 19.500000    3
Evit200.349 5581 Cu000     10 27.00000 43.29999 31.100006    4
Evit200.350 5581 Cu000     10 27.00000 51.50000 46.200001    5
Evit200.351 5581 Cu000     10 27.00000 57.00000 59.900002    6
Evit200.358 5582 Cu175     10 29.50000 29.50000        NA    1
Evit200.359 5582 Cu175     10 29.50000 31.39999  6.800001    2
Evit200.360 5582 Cu175     10 29.50000 39.39999 19.600000    3
Evit200.361 5582 Cu175     10 29.50000 44.79999 30.300003    4
Evit200.362 5582 Cu175     10 29.50000 50.29999 41.400002    5
Evit200.363 5582 Cu175     10 29.50000 57.00000 55.000000    6
Evit200.370 5850 Cu000     12 22.79999 22.79999        NA    1
Evit200.371 5850 Cu000     12 22.79999 27.00000  6.000000    2
Evit200.372 5850 Cu000     12 22.79999 33.89999 18.200001    3
Evit200.373 5850 Cu000     12 22.79999 37.69998 27.000000    4
Evit200.374 5850 Cu000     12 22.79999 41.39999 36.300001    5
Evit200.375 5850 Cu000     12 22.79999 48.19998 48.000000    6
Evit200.376 5850 Cu000     12 22.79999 53.69998 60.200005    7
Evit200.382 5851 Cu175     12 22.29999 22.29999        NA    1
Evit200.383 5851 Cu175     12 22.29999 24.70000  5.900002    2
Evit200.384 5851 Cu175     12 22.29999 30.39999 15.000000    3
Evit200.385 5851 Cu175     12 22.29999 36.89999 25.200001    4
Evit200.386 5851 Cu175     12 22.29999 44.09998 39.000000    5
Evit200.387 5851 Cu175     12 22.29999 52.79999 56.000000    6
Evit200.418 5865 Cu035     11 22.00000 22.00000        NA    1
Evit200.419 5865 Cu035     11 22.00000 27.00000  8.800000    2
Evit200.420 5865 Cu035     11 22.00000 32.89999 18.900001    3
Evit200.421 5865 Cu035     11 22.00000 38.00000 29.200005    4
Evit200.422 5865 Cu035     11 22.00000 46.19998 43.600002    5
Evit200.423 5865 Cu035     11 22.00000 53.50000 58.100000    6
Evit200.424 5865 Cu035     11 22.00000 58.59998 73.400002    7
Evit200.442 6055 Cu035     16 26.20000 26.20000        NA    1
Evit200.443 6055 Cu035     16 26.20000 30.39999  6.900002    2
Evit200.444 6055 Cu035     16 26.20000 37.39999 18.200001    3
Evit200.445 6055 Cu035     16 26.20000 43.00000 30.600006    4
Evit200.446 6055 Cu035     16 26.20000 49.50000 42.100002    5
Evit200.447 6055 Cu035     16 26.20000 55.09998 62.200001    6
Evit200.454 6056 Cu175     16 32.50000 32.50000        NA    1
Evit200.455 6056 Cu175     16 32.50000 38.79999 10.000000    2
Evit200.456 6056 Cu175     16 32.50000 47.79999 23.800003    3
Evit200.457 6056 Cu175     16 32.50000 54.50000 39.000000    4
Evit200.490 6207 Cu000     17 27.09999 27.09999        NA    1
Evit200.491 6207 Cu000     17 27.09999 30.29999  5.800003    2
Evit200.492 6207 Cu000     17 27.09999 38.19998 17.000000    3
Evit200.493 6207 Cu000     17 27.09999 43.19998 30.000000    4
Evit200.494 6207 Cu000     17 27.09999 52.50000 45.000000    5
Evit200.495 6207 Cu000     17 27.09999 59.00000 57.200001    6
Evit200.550 6288 Cu035     18 24.09999 24.09999        NA    1
Evit200.551 6288 Cu035     18 24.09999 28.09999  6.200001    2
Evit200.552 6288 Cu035     18 24.09999 32.50000 15.900002    3
Evit200.553 6288 Cu035     18 24.09999 40.59998 30.800003    4
Evit200.554 6288 Cu035     18 24.09999 46.00000 40.900002    5
Evit200.555 6288 Cu035     18 24.09999 53.79999 52.100002    6
Evit200.598 6909 Cu035     13 24.70000 24.70000        NA    1
Evit200.599 6909 Cu035     13 24.70000 28.89999  5.900002    2
Evit200.600 6909 Cu035     13 24.70000 34.59998 15.000000    3
Evit200.601 6909 Cu035     13 24.70000 42.19998 26.600000    4
Evit200.602 6909 Cu035     13 24.70000 48.19998 38.000000    5
Evit200.603 6909 Cu035     13 24.70000 54.39999 50.900002    6
Evit200.622 6912 Cu000     13 24.50000 24.50000        NA    1
Evit200.623 6912 Cu000     13 24.50000 28.39999  7.100000    2
Evit200.624 6912 Cu000     13 24.50000 35.00000 17.300001    3
Evit200.625 6912 Cu000     13 24.50000 41.89999 29.500000    4
Evit200.626 6912 Cu000     13 24.50000 49.00000 40.900002    5
Evit200.627 6912 Cu000     13 24.50000 55.59998 54.200001    6
Evit200.670 8053 Cu175     20 21.89999 21.89999        NA    1
Evit200.671 8053 Cu175     20 21.89999 26.79999  9.600000    2
Evit200.672 8053 Cu175     20 21.89999 34.69998 21.800003    3
Evit200.673 8053 Cu175     20 21.89999 41.29999 36.700001    4
Evit200.674 8053 Cu175     20 21.89999 48.69998 51.800003    5
Evit200.675 8053 Cu175     20 21.89999 57.89999 71.400002    6
Evit200.694 8141 Cu035     23 24.20000 24.20000        NA    1
Evit200.695 8141 Cu035     23 24.20000 25.39999  3.900002    2
Evit200.696 8141 Cu035     23 24.20000 30.70000 13.300003    3
Evit200.697 8141 Cu035     23 24.20000 35.59998 24.600002    4
Evit200.698 8141 Cu035     23 24.20000 42.79999 38.500000    5
Evit200.699 8141 Cu035     23 24.20000 49.50000 53.000000    6
Evit200.700 8141 Cu035     23 24.20000 57.19998 67.600000    7
Evit200.754 8193 Cu035     21 29.29999 29.29999        NA    1
Evit200.755 8193 Cu035     21 29.29999 34.00000 10.500000    2
Evit200.756 8193 Cu035     21 29.29999 39.00000 20.200005    3
Evit200.757 8193 Cu035     21 29.29999 45.39999 34.800003    4
Evit200.758 8193 Cu035     21 29.29999 51.79999 51.000000    5
Evit200.759 8193 Cu035     21 29.29999 58.79999 70.000000    6
Evit200.766 8195 Cu000     21 25.29999 25.29999        NA    1
Evit200.767 8195 Cu000     21 25.29999 31.59999  9.600006    2
Evit200.768 8195 Cu000     21 25.29999 34.00000 19.600006    3
Evit200.769 8195 Cu000     21 25.29999 35.19998 28.000000    4
Evit200.770 8195 Cu000     21 25.29999 37.29999 41.000000    5
Evit200.771 8195 Cu000     21 25.29999 40.79999 57.400002    6
Evit200.772 8195 Cu000     21 25.29999 47.69998 69.000000    7
Evit200.773 8195 Cu000     21 25.29999 57.00000 86.300001    8
Evit200.778 8269 Cu175     22 22.09999 22.09999        NA    1
Evit200.779 8269 Cu175     22 22.09999 26.29999  6.000000    2
Evit200.780 8269 Cu175     22 22.09999 33.29999 16.800001    3
Evit200.781 8269 Cu175     22 22.09999 38.00000 27.400002    4
Evit200.782 8269 Cu175     22 22.09999 39.59998 36.200001    5
Evit200.783 8269 Cu175     22 22.09999 41.39999 43.300003    6
Evit200.784 8269 Cu175     22 22.09999 46.29999 54.000000    7
Evit200.785 8269 Cu175     22 22.09999 52.39999 70.000000    8
Evit200.838 8439 Cu175     24 27.29999 27.29999        NA    1
Evit200.839 8439 Cu175     24 27.29999 31.20000  8.800000    2
Evit200.840 8439 Cu175     24 27.29999 37.00000 20.000000    3
Evit200.841 8439 Cu175     24 27.29999 43.89999 33.200001    4
Evit200.842 8439 Cu175     24 27.29999 49.79999 44.800003    5
Evit200.843 8439 Cu175     24 27.29999 57.19998 58.000000    6
> 
> 
> 
> cleanEx()
> nameEx("by-summary")
> ### * by-summary
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: by-summary
> ### Title: Function to calculate groupwise summary statistics
> ### Aliases: by-summary summary_by summaryBy
> ### Keywords: univar
> 
> ### ** Examples
> 
> 
> data(dietox)
> dietox12    <- subset(dietox,Time==12)
> 
> fun <- function(x){
+   c(m=mean(x), v=var(x), n=length(x))
+ }
> 
> summaryBy(cbind(Weight, Feed) ~ Evit + Cu, data=dietox12,
+           FUN=fun)
     Evit    Cu  Weight.m  Weight.v Weight.n   Feed.m     Feed.v Feed.n
1 Evit000 Cu000 100.41426  46.41481        7 167.2571   86.40620      7
2 Evit000 Cu035  98.51247  65.80137        8 171.7875  283.20408      8
3 Evit000 Cu175  99.18748 235.70414        8 173.4625 1230.17117      8
4 Evit100 Cu000 102.15712  52.31616        7 162.2000  174.98997      7
5 Evit100 Cu035 102.47498  92.57374        8 178.2250  843.54503      8
6 Evit100 Cu175 105.04283  55.49632        7 182.0143  810.98475      7
7 Evit200 Cu000  97.24283  58.28952        7 160.3571   95.82953      7
8 Evit200 Cu035  95.55553  33.90778        9 164.7667  267.88254      9
9 Evit200 Cu175  98.63748 114.85415        8 168.4250  624.31074      8
> 
> summaryBy(list(c("Weight", "Feed"), c("Evit", "Cu")), data=dietox12,
+           FUN=fun)
     Evit    Cu  Weight.m  Weight.v Weight.n   Feed.m     Feed.v Feed.n
1 Evit000 Cu000 100.41426  46.41481        7 167.2571   86.40620      7
2 Evit000 Cu035  98.51247  65.80137        8 171.7875  283.20408      8
3 Evit000 Cu175  99.18748 235.70414        8 173.4625 1230.17117      8
4 Evit100 Cu000 102.15712  52.31616        7 162.2000  174.98997      7
5 Evit100 Cu035 102.47498  92.57374        8 178.2250  843.54503      8
6 Evit100 Cu175 105.04283  55.49632        7 182.0143  810.98475      7
7 Evit200 Cu000  97.24283  58.28952        7 160.3571   95.82953      7
8 Evit200 Cu035  95.55553  33.90778        9 164.7667  267.88254      9
9 Evit200 Cu175  98.63748 114.85415        8 168.4250  624.31074      8
> 
> ## Computations on several variables is done using cbind( )
> summaryBy(cbind(Weight, Feed) ~ Evit + Cu, data=subset(dietox, Time > 1),
+    FUN=fun)
     Evit    Cu Weight.m Weight.v Weight.n   Feed.m   Feed.v Feed.n
1 Evit000 Cu000 64.49219 545.3481       77 79.37792 2705.516     77
2 Evit000 Cu035 62.53862 558.7867       88 81.19432 2852.290     88
3 Evit000 Cu175 64.51362 603.8636       88 84.37955 3158.985     88
4 Evit100 Cu000 64.70803 553.4286       87 77.46552 2434.824     87
5 Evit100 Cu035 64.38976 595.2586       88 81.04773 3159.666     88
6 Evit100 Cu175 67.81033 578.9620       87 86.72299 3129.720     87
7 Evit200 Cu000 61.40113 537.8238       87 76.35517 2409.296     87
8 Evit200 Cu035 61.68483 504.8144       99 79.13939 2619.280     99
9 Evit200 Cu175 64.16135 562.3279       88 80.88636 2874.140     88
> 
> ## Calculations on transformed data is possible using cbind( ), but
> # the transformed variables must be named
> 
> summaryBy(cbind(lw=log(Weight), Feed) ~ Evit + Cu, data=dietox12, FUN=mean)
     Evit    Cu  lw.mean Feed.mean
1 Evit000 Cu000 4.607344  167.2571
2 Evit000 Cu035 4.587091  171.7875
3 Evit000 Cu175 4.584574  173.4625
4 Evit100 Cu000 4.624415  162.2000
5 Evit100 Cu035 4.625384  178.2250
6 Evit100 Cu175 4.652181  182.0143
7 Evit200 Cu000 4.574510  160.3571
8 Evit200 Cu035 4.558066  164.7667
9 Evit200 Cu175 4.585830  168.4250
>  
> ## There are missing values in the 'airquality' data, so we remove these
> ## before calculating mean and variance with 'na.rm=TRUE'. However the
> ## length function does not accept any such argument. Hence we get
> ## around this by defining our own summary function in which length is
> ## not supplied with this argument while mean and var are:
> 
> sumfun <- function(x, ...){
+   c(m=mean(x, na.rm=TRUE, ...), v=var(x, na.rm=TRUE, ...), l=length(x))
+ }
> summaryBy(cbind(Ozone, Solar.R) ~ Month, data=airquality, FUN=sumfun)
  Month  Ozone.m   Ozone.v Ozone.l Solar.R.m Solar.R.v Solar.R.l
1     5 23.61538  493.9262      31  181.2963 13242.370        31
2     6 29.44444  331.5278      30  190.1667  8627.247        30
3     7 59.11538 1000.8262      31  216.4839  6491.258        31
4     8 59.96154 1574.5985      31  171.8571  5903.608        31
5     9 31.44828  582.8276      30  167.4333  6259.702        30
> ## Compare with
> aggregate(cbind(Ozone, Solar.R) ~ Month, data=airquality, FUN=sumfun)
  Month    Ozone.m    Ozone.v    Ozone.l  Solar.R.m  Solar.R.v  Solar.R.l
1     5   24.12500  523.76630   24.00000   182.0417 14072.1286    24.0000
2     6   29.44444  331.52778    9.00000   184.2222  9159.6944     9.0000
3     7   59.11538 1000.82615   26.00000   216.4231  6478.2538    26.0000
4     8   60.00000 1744.54545   23.00000   173.0870  6215.0830    23.0000
5     9   31.44828  582.82759   29.00000   168.2069  6464.6700    29.0000
> 
> ## Using '.' on the right hand side of a formula means to stratify by
> ## all variables not used elsewhere:
> 
> data(warpbreaks)
> summaryBy(breaks ~ wool + tension, warpbreaks, FUN=mean)
  wool tension breaks.mean
1    A       L    44.55556
2    A       M    24.00000
3    A       H    24.55556
4    B       L    28.22222
5    B       M    28.77778
6    B       H    18.77778
> summaryBy(breaks ~ ., warpbreaks, FUN=mean)
  wool tension breaks.mean
1    A       L    44.55556
2    A       M    24.00000
3    A       H    24.55556
4    B       L    28.22222
5    B       M    28.77778
6    B       H    18.77778
> summaryBy(. ~ wool + tension, warpbreaks, FUN=mean)
  wool tension breaks.mean
1    A       L    44.55556
2    A       M    24.00000
3    A       H    24.55556
4    B       L    28.22222
5    B       M    28.77778
6    B       H    18.77778
> 
> summaryBy(. ~ wool + tension, warpbreaks, FUN=mean)
  wool tension breaks.mean
1    A       L    44.55556
2    A       M    24.00000
3    A       H    24.55556
4    B       L    28.22222
5    B       M    28.77778
6    B       H    18.77778
> 
> 
> 
> 
> cleanEx()
> nameEx("by-transform")
> ### * by-transform
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: by-transform
> ### Title: Function to make groupwise transformations
> ### Aliases: by-transform transform_by transformBy
> ### Keywords: univar
> 
> ### ** Examples
> 
>  
> data(dietox)
> transformBy(~Pig, data=dietox, minW=min(Weight), maxW=max(Weight), 
+     gain=diff(range(Weight)))
       Evit    Cu Litter    Start    Weight       Feed Time     minW      maxW
1   Evit000 Cu000      1 26.50000  26.50000         NA    1 26.50000  98.59998
2   Evit000 Cu000      1 26.50000  27.59999   5.200005    2 26.50000  98.59998
3   Evit000 Cu000      1 26.50000  36.50000  17.600000    3 26.50000  98.59998
4   Evit000 Cu000      1 26.50000  40.29999  28.500000    4 26.50000  98.59998
5   Evit000 Cu000      1 26.50000  49.09998  45.200001    5 26.50000  98.59998
6   Evit000 Cu000      1 26.50000  55.39999  56.900002    6 26.50000  98.59998
7   Evit000 Cu000      1 26.50000  59.59998  71.700005    7 26.50000  98.59998
8   Evit000 Cu000      1 26.50000  67.00000  86.800001    8 26.50000  98.59998
9   Evit000 Cu000      1 26.50000  76.59998 104.900002    9 26.50000  98.59998
10  Evit000 Cu000      1 26.50000  86.50000 123.000000   10 26.50000  98.59998
11  Evit000 Cu000      1 26.50000  91.59998 140.900002   11 26.50000  98.59998
12  Evit000 Cu000      1 26.50000  98.59998 160.000000   12 26.50000  98.59998
13  Evit000 Cu035      1 28.29999  28.29999         NA    1 28.29999 106.69995
14  Evit000 Cu035      1 28.29999  30.09999   3.300003    2 28.29999 106.69995
15  Evit000 Cu035      1 28.29999  38.29999  13.200001    3 28.29999 106.69995
16  Evit000 Cu035      1 28.29999  44.50000  26.100000    4 28.29999 106.69995
17  Evit000 Cu035      1 28.29999  51.59998  43.600002    5 28.29999 106.69995
18  Evit000 Cu035      1 28.29999  57.59998  55.200001    6 28.29999 106.69995
19  Evit000 Cu035      1 28.29999  65.00000  72.800003    7 28.29999 106.69995
20  Evit000 Cu035      1 28.29999  73.00000  90.800003    8 28.29999 106.69995
21  Evit000 Cu035      1 28.29999  82.29999 112.200001    9 28.29999 106.69995
22  Evit000 Cu035      1 28.29999  91.00000 132.900002   10 28.29999 106.69995
23  Evit000 Cu035      1 28.29999  99.69995 156.100000   11 28.29999 106.69995
24  Evit000 Cu035      1 28.29999 106.69995 180.000000   12 28.29999 106.69995
25  Evit200 Cu175      1 27.59999  27.59999         NA    1 27.59999 105.39996
26  Evit200 Cu175      1 27.59999  30.59999   6.700005    2 27.59999 105.39996
27  Evit200 Cu175      1 27.59999  38.69998  17.600000    3 27.59999 105.39996
28  Evit200 Cu175      1 27.59999  47.19998  32.800003    4 27.59999 105.39996
29  Evit200 Cu175      1 27.59999  54.09998  50.000000    5 27.59999 105.39996
30  Evit200 Cu175      1 27.59999  61.50000  64.600002    6 27.59999 105.39996
31  Evit200 Cu175      1 27.59999  68.50000  80.500000    7 27.59999 105.39996
32  Evit200 Cu175      1 27.59999  75.19995  91.800003    8 27.59999 105.39996
33  Evit200 Cu175      1 27.59999  81.69995 110.200005    9 27.59999 105.39996
34  Evit200 Cu175      1 27.59999  90.19995 125.600002   10 27.59999 105.39996
35  Evit200 Cu175      1 27.59999  98.39996 145.000000   11 27.59999 105.39996
36  Evit200 Cu175      1 27.59999 105.39996 166.000000   12 27.59999 105.39996
37  Evit100 Cu035      1 31.50000  31.50000         NA    1 31.50000 109.19995
38  Evit100 Cu035      1 31.50000  34.79999   6.500000    2 31.50000 109.19995
39  Evit100 Cu035      1 31.50000  40.69998  20.000000    3 31.50000 109.19995
40  Evit100 Cu035      1 31.50000  47.69998  33.100002    4 31.50000 109.19995
41  Evit100 Cu035      1 31.50000  55.89999  51.800003    5 31.50000 109.19995
42  Evit100 Cu035      1 31.50000  62.19998  65.800003    6 31.50000 109.19995
43  Evit100 Cu035      1 31.50000  70.69995  81.700005    7 31.50000 109.19995
44  Evit100 Cu035      1 31.50000  78.00000  97.000000    8 31.50000 109.19995
45  Evit100 Cu035      1 31.50000  86.19995 115.300003    9 31.50000 109.19995
46  Evit100 Cu035      1 31.50000  94.69995 133.100002   10 31.50000 109.19995
47  Evit100 Cu035      1 31.50000 102.00000 151.000000   11 31.50000 109.19995
48  Evit100 Cu035      1 31.50000 109.19995 176.400002   12 31.50000 109.19995
49  Evit100 Cu175      2 27.09999  27.09999         NA    1 27.09999 117.00000
50  Evit100 Cu175      2 27.09999  33.00000   5.200001    2 27.09999 117.00000
51  Evit100 Cu175      2 27.09999  42.50000  22.500000    3 27.09999 117.00000
52  Evit100 Cu175      2 27.09999  50.09998  38.500000    4 27.09999 117.00000
53  Evit100 Cu175      2 27.09999  56.50000  53.300003    5 27.09999 117.00000
54  Evit100 Cu175      2 27.09999  63.00000  69.800000    6 27.09999 117.00000
55  Evit100 Cu175      2 27.09999  72.50000  85.100002    7 27.09999 117.00000
56  Evit100 Cu175      2 27.09999  80.50000 101.100006    8 27.09999 117.00000
57  Evit100 Cu175      2 27.09999  92.00000 121.400002    9 27.09999 117.00000
58  Evit100 Cu175      2 27.09999 100.00000 142.200001   10 27.09999 117.00000
59  Evit100 Cu175      2 27.09999 108.39996 157.000000   11 27.09999 117.00000
60  Evit100 Cu175      2 27.09999 117.00000 180.000000   12 27.09999 117.00000
61  Evit000 Cu000      2 27.00000  27.00000         NA    1 27.00000 100.19995
62  Evit000 Cu000      2 27.00000  31.79999   6.400002    2 27.00000 100.19995
63  Evit000 Cu000      2 27.00000  39.00000  21.500000    3 27.00000 100.19995
64  Evit000 Cu000      2 27.00000  44.79999  33.900002    4 27.00000 100.19995
65  Evit000 Cu000      2 27.00000  50.89999  44.900002    5 27.00000 100.19995
66  Evit000 Cu000      2 27.00000  57.39999  58.800000    6 27.00000 100.19995
67  Evit000 Cu000      2 27.00000  62.50000  73.700001    7 27.00000 100.19995
68  Evit000 Cu000      2 27.00000  71.69995  92.800003    8 27.00000 100.19995
69  Evit000 Cu000      2 27.00000  78.19995 111.500000    9 27.00000 100.19995
70  Evit000 Cu000      2 27.00000  85.79999 132.800003   10 27.00000 100.19995
71  Evit000 Cu000      2 27.00000  91.79999 148.400001   11 27.00000 100.19995
72  Evit000 Cu000      2 27.00000 100.19995 170.000000   12 27.00000 100.19995
73  Evit200 Cu035      2 27.70000  27.70000         NA    1 27.70000 102.29999
74  Evit200 Cu035      2 27.70000  33.59998  10.000000    2 27.70000 102.29999
75  Evit200 Cu035      2 27.70000  44.00000  28.500000    3 27.70000 102.29999
76  Evit200 Cu035      2 27.70000  46.69998  40.000000    4 27.70000 102.29999
77  Evit200 Cu035      2 27.70000  54.79999  55.200001    5 27.70000 102.29999
78  Evit200 Cu035      2 27.70000  61.00000  69.000000    6 27.70000 102.29999
79  Evit200 Cu035      2 27.70000  69.79999  88.000000    7 27.70000 102.29999
80  Evit200 Cu035      2 27.70000  76.00000 104.400002    8 27.70000 102.29999
81  Evit200 Cu035      2 27.70000  83.59998 121.800003    9 27.70000 102.29999
82  Evit200 Cu035      2 27.70000  88.19995 140.000000   10 27.70000 102.29999
83  Evit200 Cu035      2 27.70000  96.79999 157.200001   11 27.70000 102.29999
84  Evit200 Cu035      2 27.70000 102.29999 180.000000   12 27.70000 102.29999
85  Evit200 Cu000      3 17.00000  17.00000         NA    1 17.00000  89.29999
86  Evit200 Cu000      3 17.00000  19.00000   9.900002    2 17.00000  89.29999
87  Evit200 Cu000      3 17.00000  23.59999  18.500000    3 17.00000  89.29999
88  Evit200 Cu000      3 17.00000  30.00000  28.900002    4 17.00000  89.29999
89  Evit200 Cu000      3 17.00000  36.29999  38.100002    5 17.00000  89.29999
90  Evit200 Cu000      3 17.00000  42.39999  52.799999    6 17.00000  89.29999
91  Evit200 Cu000      3 17.00000  50.50000  66.799999    7 17.00000  89.29999
92  Evit200 Cu000      3 17.00000  57.59998  86.000000    8 17.00000  89.29999
93  Evit200 Cu000      3 17.00000  66.59998 106.000000    9 17.00000  89.29999
94  Evit200 Cu000      3 17.00000  74.19995 123.000000   10 17.00000  89.29999
95  Evit200 Cu000      3 17.00000  83.00000 141.900002   11 17.00000  89.29999
96  Evit200 Cu000      3 17.00000  89.29999 163.700001   12 17.00000  89.29999
97  Evit000 Cu000      3 26.89999  26.89999         NA    1 26.89999  91.69995
98  Evit000 Cu000      3 26.89999  32.29999   9.900002    2 26.89999  91.69995
99  Evit000 Cu000      3 26.89999  38.59998  20.200005    3 26.89999  91.69995
100 Evit000 Cu000      3 26.89999  46.00000  30.000000    4 26.89999  91.69995
101 Evit000 Cu000      3 26.89999  57.79999  40.000000    5 26.89999  91.69995
102 Evit000 Cu000      3 26.89999  58.59998  62.800003    6 26.89999  91.69995
103 Evit000 Cu000      3 26.89999  65.89996  78.300003    7 26.89999  91.69995
104 Evit000 Cu000      3 26.89999  71.19995  97.900002    8 26.89999  91.69995
105 Evit000 Cu000      3 26.89999  79.39996 115.800003    9 26.89999  91.69995
106 Evit000 Cu000      3 26.89999  81.00000 129.000000   10 26.89999  91.69995
107 Evit000 Cu000      3 26.89999  91.69995 150.000000   11 26.89999  91.69995
108 Evit000 Cu000      3 26.89999  91.00000 156.800003   12 26.89999  91.69995
109 Evit200 Cu035      3 22.59999  22.59999         NA    1 22.59999  93.50000
110 Evit200 Cu035      3 22.59999  28.50000  10.600006    2 22.59999  93.50000
111 Evit200 Cu035      3 22.59999  32.69998  21.100006    3 22.59999  93.50000
112 Evit200 Cu035      3 22.59999  39.89999  33.300003    4 22.59999  93.50000
113 Evit200 Cu035      3 22.59999  47.59998  47.100000    5 22.59999  93.50000
114 Evit200 Cu035      3 22.59999  53.79999  63.400002    6 22.59999  93.50000
115 Evit200 Cu035      3 22.59999  63.00000  80.800003    7 22.59999  93.50000
116 Evit200 Cu035      3 22.59999  67.19995  98.100002    8 22.59999  93.50000
117 Evit200 Cu035      3 22.59999  74.09998 111.900002    9 22.59999  93.50000
118 Evit200 Cu035      3 22.59999  80.00000 128.900002   10 22.59999  93.50000
119 Evit200 Cu035      3 22.59999  89.39996 152.100002   11 22.59999  93.50000
120 Evit200 Cu035      3 22.59999  93.50000 171.700005   12 22.59999  93.50000
121 Evit000 Cu175      3 15.00000  15.00000         NA    1 15.00000  65.79999
122 Evit000 Cu175      3 15.00000  19.39999   7.900002    2 15.00000  65.79999
123 Evit000 Cu175      3 15.00000  21.39999  15.000000    3 15.00000  65.79999
124 Evit000 Cu175      3 15.00000  25.29999  22.100002    4 15.00000  65.79999
125 Evit000 Cu175      3 15.00000  31.89999  29.900002    5 15.00000  65.79999
126 Evit000 Cu175      3 15.00000  37.59998  41.800003    6 15.00000  65.79999
127 Evit000 Cu175      3 15.00000  43.69998  57.600006    7 15.00000  65.79999
128 Evit000 Cu175      3 15.00000  48.89999  69.500000    8 15.00000  65.79999
129 Evit000 Cu175      3 15.00000  53.69998  83.800003    9 15.00000  65.79999
130 Evit000 Cu175      3 15.00000  59.29999  93.200001   10 15.00000  65.79999
131 Evit000 Cu175      3 15.00000  64.89996 107.900002   11 15.00000  65.79999
132 Evit000 Cu175      3 15.00000  65.79999 117.300003   12 15.00000  65.79999
133 Evit000 Cu035      4 27.29999  27.29999         NA    1 27.29999  99.79999
134 Evit000 Cu035      4 27.29999  32.39999  10.300003    2 27.29999  99.79999
135 Evit000 Cu035      4 27.29999  38.29999  22.800003    3 27.29999  99.79999
136 Evit000 Cu035      4 27.29999  45.79999  40.200005    4 27.29999  99.79999
137 Evit000 Cu035      4 27.29999  53.79999  53.700005    5 27.29999  99.79999
138 Evit000 Cu035      4 27.29999  60.00000  72.700005    6 27.29999  99.79999
139 Evit000 Cu035      4 27.29999  68.69995  92.900005    7 27.29999  99.79999
140 Evit000 Cu035      4 27.29999  75.79999 114.700005    8 27.29999  99.79999
141 Evit000 Cu035      4 27.29999  80.79999 132.800003    9 27.29999  99.79999
142 Evit000 Cu035      4 27.29999  86.79999 138.100006   10 27.29999  99.79999
143 Evit000 Cu035      4 27.29999  91.39996 159.900005   11 27.29999  99.79999
144 Evit000 Cu035      4 27.29999  99.79999 182.100006   12 27.29999  99.79999
145 Evit100 Cu035      4 26.20000  26.20000         NA    1 26.20000  98.39996
146 Evit100 Cu035      4 26.20000  31.09999   9.900002    2 26.20000  98.39996
147 Evit100 Cu035      4 26.20000  34.59998  19.600006    3 26.20000  98.39996
148 Evit100 Cu035      4 26.20000  41.19998  30.000000    4 26.20000  98.39996
149 Evit100 Cu035      4 26.20000  49.19998  37.400002    5 26.20000  98.39996
150 Evit100 Cu035      4 26.20000  55.59998  57.200005    6 26.20000  98.39996
151 Evit100 Cu035      4 26.20000  62.59998  76.200005    7 26.20000  98.39996
152 Evit100 Cu035      4 26.20000  72.09998  93.000004    8 26.20000  98.39996
153 Evit100 Cu035      4 26.20000  77.50000 109.800003    9 26.20000  98.39996
154 Evit100 Cu035      4 26.20000  83.79999 127.400002   10 26.20000  98.39996
155 Evit100 Cu035      4 26.20000  93.39996 148.900002   11 26.20000  98.39996
156 Evit100 Cu035      4 26.20000  98.39996 174.400002   12 26.20000  98.39996
157 Evit100 Cu175      4 24.89999  24.89999         NA    1 24.89999 102.69995
158 Evit100 Cu175      4 24.89999  29.70000   9.500000    2 24.89999 102.69995
159 Evit100 Cu175      4 24.89999  33.79999  19.000000    3 24.89999 102.69995
160 Evit100 Cu175      4 24.89999  38.79999  32.000000    4 24.89999 102.69995
161 Evit100 Cu175      4 24.89999  48.29999  45.500000    5 24.89999 102.69995
162 Evit100 Cu175      4 24.89999  52.89999  59.100006    6 24.89999 102.69995
163 Evit100 Cu175      4 24.89999  65.00000  80.100006    7 24.89999 102.69995
164 Evit100 Cu175      4 24.89999  70.39996 104.600002    8 24.89999 102.69995
165 Evit100 Cu175      4 24.89999  76.79999 130.000000    9 24.89999 102.69995
166 Evit100 Cu175      4 24.89999  83.29999 149.000000   10 24.89999 102.69995
167 Evit100 Cu175      4 24.89999  95.00000 175.600006   11 24.89999 102.69995
168 Evit100 Cu175      4 24.89999 102.69995 203.500008   12 24.89999 102.69995
169 Evit000 Cu175      4 24.59999  24.59999         NA    1 24.59999 107.19995
170 Evit000 Cu175      4 24.59999  28.00000   9.000000    2 24.59999 107.19995
171 Evit000 Cu175      4 24.59999  34.59998  19.900002    3 24.59999 107.19995
172 Evit000 Cu175      4 24.59999  41.50000  33.900002    4 24.59999 107.19995
173 Evit000 Cu175      4 24.59999  49.69998  47.000004    5 24.59999 107.19995
174 Evit000 Cu175      4 24.59999  56.50000  65.200001    6 24.59999 107.19995
175 Evit000 Cu175      4 24.59999  66.89996  83.300003    7 24.59999 107.19995
176 Evit000 Cu175      4 24.59999  75.79999 106.400002    8 24.59999 107.19995
177 Evit000 Cu175      4 24.59999  84.59998 125.900002    9 24.59999 107.19995
178 Evit000 Cu175      4 24.59999  91.00000 144.000004   10 24.59999 107.19995
179 Evit000 Cu175      4 24.59999  98.79999 168.200001   11 24.59999 107.19995
180 Evit000 Cu175      4 24.59999 107.19995 178.200001   12 24.59999 107.19995
181 Evit100 Cu000      6 29.00000  29.00000         NA    1 29.00000  93.09998
182 Evit100 Cu000      6 29.00000  32.69998   8.200001    2 29.00000  93.09998
183 Evit100 Cu000      6 29.00000  38.29999  19.800003    3 29.00000  93.09998
184 Evit100 Cu000      6 29.00000  45.50000  30.000000    4 29.00000  93.09998
185 Evit100 Cu000      6 29.00000  48.59998  40.000000    5 29.00000  93.09998
186 Evit100 Cu000      6 29.00000  56.00000  50.000000    6 29.00000  93.09998
187 Evit100 Cu000      6 29.00000  62.59998  70.000000    7 29.00000  93.09998
188 Evit100 Cu000      6 29.00000  70.19995  86.200001    8 29.00000  93.09998
189 Evit100 Cu000      6 29.00000  73.79999 100.000000    9 29.00000  93.09998
190 Evit100 Cu000      6 29.00000  80.29999 120.500000   10 29.00000  93.09998
191 Evit100 Cu000      6 29.00000  85.50000 138.500000   11 29.00000  93.09998
192 Evit100 Cu000      6 29.00000  93.09998 158.000000   12 29.00000  93.09998
193 Evit000 Cu000      6 32.00000  32.00000         NA    1 32.00000 109.00000
194 Evit000 Cu000      6 32.00000  35.19998   8.100000    2 32.00000 109.00000
195 Evit000 Cu000      6 32.00000  41.50000  19.600006    3 32.00000 109.00000
196 Evit000 Cu000      6 32.00000  47.69998  27.600000    4 32.00000 109.00000
197 Evit000 Cu000      6 32.00000  53.79999  41.800003    5 32.00000 109.00000
198 Evit000 Cu000      6 32.00000  61.59998  58.600006    6 32.00000 109.00000
199 Evit000 Cu000      6 32.00000  70.00000  75.200001    7 32.00000 109.00000
200 Evit000 Cu000      6 32.00000  79.09998  91.700005    8 32.00000 109.00000
201 Evit000 Cu000      6 32.00000  85.69995 109.000000    9 32.00000 109.00000
202 Evit000 Cu000      6 32.00000  92.50000 131.000000   10 32.00000 109.00000
203 Evit000 Cu000      6 32.00000 101.09998 153.000000   11 32.00000 109.00000
204 Evit000 Cu000      6 32.00000 109.00000 177.600000   12 32.00000 109.00000
205 Evit000 Cu175      6 26.00000  26.00000         NA    1 26.00000  97.19995
206 Evit000 Cu175      6 26.00000  34.50000   8.500000    2 26.00000  97.19995
207 Evit000 Cu175      6 26.00000  40.39999  19.200005    3 26.00000  97.19995
208 Evit000 Cu175      6 26.00000  45.00000  29.000000    4 26.00000  97.19995
209 Evit000 Cu175      6 26.00000  53.50000  45.000000    5 26.00000  97.19995
210 Evit000 Cu175      6 26.00000  60.19998  62.300003    6 26.00000  97.19995
211 Evit000 Cu175      6 26.00000  68.59998  89.700005    7 26.00000  97.19995
212 Evit000 Cu175      6 26.00000  73.39996 101.800003    8 26.00000  97.19995
213 Evit000 Cu175      6 26.00000  78.50000 112.700003    9 26.00000  97.19995
214 Evit000 Cu175      6 26.00000  86.00000 135.300007   10 26.00000  97.19995
215 Evit000 Cu175      6 26.00000  90.59998 154.100002   11 26.00000  97.19995
216 Evit000 Cu175      6 26.00000  97.19995 168.700005   12 26.00000  97.19995
217 Evit100 Cu035      6 28.00000  28.00000         NA    1 28.00000 107.09998
218 Evit100 Cu035      6 28.00000  31.20000   8.000000    2 28.00000 107.09998
219 Evit100 Cu035      6 28.00000  38.79999  16.700005    3 28.00000 107.09998
220 Evit100 Cu035      6 28.00000  44.69998  31.800003    4 28.00000 107.09998
221 Evit100 Cu035      6 28.00000  53.59998  50.500004    5 28.00000 107.09998
222 Evit100 Cu035      6 28.00000  59.19998  71.100006    6 28.00000 107.09998
223 Evit100 Cu035      6 28.00000  67.09998  87.100006    7 28.00000 107.09998
224 Evit100 Cu035      6 28.00000  76.39996 107.300003    8 28.00000 107.09998
225 Evit100 Cu035      6 28.00000  83.79999 133.200005    9 28.00000 107.09998
226 Evit100 Cu035      6 28.00000  71.59998 163.100006   10 28.00000 107.09998
227 Evit100 Cu035      6 28.00000  97.39996 190.800003   11 28.00000 107.09998
228 Evit100 Cu035      6 28.00000 107.09998 219.800003   12 28.00000 107.09998
229 Evit200 Cu175      7 24.29999  24.29999         NA    1 24.29999  90.39996
230 Evit200 Cu175      7 24.29999  28.39999   5.400002    2 24.29999  90.39996
231 Evit200 Cu175      7 24.29999  36.00000  20.000000    3 24.29999  90.39996
232 Evit200 Cu175      7 24.29999  40.29999  30.300003    4 24.29999  90.39996
233 Evit200 Cu175      7 24.29999  46.19998  41.800003    5 24.29999  90.39996
234 Evit200 Cu175      7 24.29999  51.89999  54.800003    6 24.29999  90.39996
235 Evit200 Cu175      7 24.29999  58.09998  69.000002    7 24.29999  90.39996
236 Evit200 Cu175      7 24.29999  62.59998  83.800005    8 24.29999  90.39996
237 Evit200 Cu175      7 24.29999  68.19995  97.200002    9 24.29999  90.39996
238 Evit200 Cu175      7 24.29999  78.39996 114.200003   10 24.29999  90.39996
239 Evit200 Cu175      7 24.29999  87.50000 131.100004   11 24.29999  90.39996
240 Evit200 Cu175      7 24.29999  90.39996 147.000002   12 24.29999  90.39996
241 Evit200 Cu035      7 24.59999  24.59999         NA    1 24.59999  88.69995
242 Evit200 Cu035      7 24.59999  25.79999   7.700001    2 24.59999  88.69995
243 Evit200 Cu035      7 24.59999  28.59999  19.999996    3 24.59999  88.69995
244 Evit200 Cu035      7 24.59999  30.39999  29.999996    4 24.59999  88.69995
245 Evit200 Cu035      7 24.59999  36.09998  39.999996    5 24.59999  88.69995
246 Evit200 Cu035      7 24.59999  36.09998  47.499996    6 24.59999  88.69995
247 Evit200 Cu035      7 24.59999  49.29999  62.499996    7 24.59999  88.69995
248 Evit200 Cu035      7 24.59999  57.89999  76.799999    8 24.59999  88.69995
249 Evit200 Cu035      7 24.59999  63.00000  89.499996    9 24.59999  88.69995
250 Evit200 Cu035      7 24.59999  75.69995 104.999996   10 24.59999  88.69995
251 Evit200 Cu035      7 24.59999  81.39996 123.999996   11 24.59999  88.69995
252 Evit200 Cu035      7 24.59999  88.69995 142.799997   12 24.59999  88.69995
253 Evit000 Cu000      8 21.20000  21.20000         NA    1 21.20000  95.19995
254 Evit000 Cu000      8 21.20000  25.79999   6.300001    2 21.20000  95.19995
255 Evit000 Cu000      8 21.20000  29.39999  16.500000    3 21.20000  95.19995
256 Evit000 Cu000      8 21.20000  36.79999  27.200001    4 21.20000  95.19995
257 Evit000 Cu000      8 21.20000  43.19998  40.200005    5 21.20000  95.19995
258 Evit000 Cu000      8 21.20000  51.09998  54.800003    6 21.20000  95.19995
259 Evit000 Cu000      8 21.20000  59.29999  68.000000    7 21.20000  95.19995
260 Evit000 Cu000      8 21.20000  66.00000  85.200001    8 21.20000  95.19995
261 Evit000 Cu000      8 21.20000  72.79999 101.100006    9 21.20000  95.19995
262 Evit000 Cu000      8 21.20000  78.59998 119.500000   10 21.20000  95.19995
263 Evit000 Cu000      8 21.20000  93.79999 144.200001   11 21.20000  95.19995
264 Evit000 Cu000      8 21.20000  95.19995 158.500000   12 21.20000  95.19995
265 Evit000 Cu035      8 17.00000  17.00000         NA    1 17.00000  83.19995
266 Evit000 Cu035      8 17.00000  19.00000   5.200001    2 17.00000  83.19995
267 Evit000 Cu035      8 17.00000  23.00000  18.500000    3 17.00000  83.19995
268 Evit000 Cu035      8 17.00000  29.39999  32.800003    4 17.00000  83.19995
269 Evit000 Cu035      8 17.00000  34.59998  43.800003    5 17.00000  83.19995
270 Evit000 Cu035      8 17.00000  40.59998  55.800003    6 17.00000  83.19995
271 Evit000 Cu035      8 17.00000  46.59998  71.400002    7 17.00000  83.19995
272 Evit000 Cu035      8 17.00000  54.00000  87.000000    8 17.00000  83.19995
273 Evit000 Cu035      8 17.00000  62.50000 103.800003    9 17.00000  83.19995
274 Evit000 Cu035      8 17.00000  70.00000 124.800003   10 17.00000  83.19995
275 Evit000 Cu035      8 17.00000  78.29999 147.300001   11 17.00000  83.19995
276 Evit000 Cu035      8 17.00000  83.19995 160.800003   12 17.00000  83.19995
277 Evit100 Cu175      8 30.00000  30.00000         NA    1 30.00000 104.59998
278 Evit100 Cu175      8 30.00000  34.69998  10.000000    2 30.00000 104.59998
279 Evit100 Cu175      8 30.00000  42.79999  22.500000    3 30.00000 104.59998
280 Evit100 Cu175      8 30.00000  48.39999  35.200001    4 30.00000 104.59998
281 Evit100 Cu175      8 30.00000  53.29999  45.800003    5 30.00000 104.59998
282 Evit100 Cu175      8 30.00000  60.00000  60.000000    6 30.00000 104.59998
283 Evit100 Cu175      8 30.00000  71.09998  75.200001    7 30.00000 104.59998
284 Evit100 Cu175      8 30.00000  77.39996  92.800003    8 30.00000 104.59998
285 Evit100 Cu175      8 30.00000  86.00000 110.000000    9 30.00000 104.59998
286 Evit100 Cu175      8 30.00000  94.50000 128.000000   10 30.00000 104.59998
287 Evit100 Cu175      8 30.00000 102.00000 149.500000   11 30.00000 104.59998
288 Evit100 Cu175      8 30.00000 104.59998 160.000000   12 30.00000 104.59998
289 Evit200 Cu000      8 29.59999  29.59999         NA    1 29.59999 100.19995
290 Evit200 Cu000      8 29.59999  34.19998   9.000000    2 29.59999 100.19995
291 Evit200 Cu000      8 29.59999  43.00000  21.400002    3 29.59999 100.19995
292 Evit200 Cu000      8 29.59999  50.00000  36.500000    4 29.59999 100.19995
293 Evit200 Cu000      8 29.59999  57.00000  51.000000    5 29.59999 100.19995
294 Evit200 Cu000      8 29.59999  63.50000  66.800001    6 29.59999 100.19995
295 Evit200 Cu000      8 29.59999  72.69995  80.100006    7 29.59999 100.19995
296 Evit200 Cu000      8 29.59999  78.69995  96.200001    8 29.59999 100.19995
297 Evit200 Cu000      8 29.59999  84.89996 109.800003    9 29.59999 100.19995
298 Evit200 Cu000      8 29.59999  91.00000 126.800001   10 29.59999 100.19995
299 Evit200 Cu000      8 29.59999  96.39996 145.200001   11 29.59999 100.19995
300 Evit200 Cu000      8 29.59999 100.19995 157.999996   12 29.59999 100.19995
301 Evit100 Cu000      9 22.39999  22.39999         NA    1 22.39999  83.50000
302 Evit100 Cu000      9 22.39999  25.20000  10.000000    2 22.39999  83.50000
303 Evit100 Cu000      9 22.39999  30.00000  26.699997    3 22.39999  83.50000
304 Evit100 Cu000      9 22.39999  36.50000  39.799999    4 22.39999  83.50000
305 Evit100 Cu000      9 22.39999  43.29999  55.199997    5 22.39999  83.50000
306 Evit100 Cu000      9 22.39999  50.00000  74.499996    6 22.39999  83.50000
307 Evit100 Cu000      9 22.39999  58.09998  85.999996    7 22.39999  83.50000
308 Evit100 Cu000      9 22.39999  63.00000 101.999996    8 22.39999  83.50000
309 Evit100 Cu000      9 22.39999  70.69995 121.999996    9 22.39999  83.50000
310 Evit100 Cu000      9 22.39999  78.09998 136.099997   10 22.39999  83.50000
311 Evit100 Cu000      9 22.39999  83.50000 136.099997   11 22.39999  83.50000
312 Evit100 Cu175      9 26.59999  26.59999         NA    1 26.59999  90.89996
313 Evit100 Cu175      9 26.59999  28.20000  10.000000    2 26.59999  90.89996
314 Evit100 Cu175      9 26.59999  38.39999  30.000000    3 26.59999  90.89996
315 Evit100 Cu175      9 26.59999  45.79999  50.000000    4 26.59999  90.89996
316 Evit100 Cu175      9 26.59999  54.89999  60.000000    5 26.59999  90.89996
317 Evit100 Cu175      9 26.59999  60.09998  78.500000    6 26.59999  90.89996
318 Evit100 Cu175      9 26.59999  56.89999  86.200001    7 26.59999  90.89996
319 Evit100 Cu175      9 26.59999  64.89996 102.900002    8 26.59999  90.89996
320 Evit100 Cu175      9 26.59999  74.00000 121.799988    9 26.59999  90.89996
321 Evit100 Cu175      9 26.59999  81.89996 136.999992   10 26.59999  90.89996
322 Evit100 Cu175      9 26.59999  90.89996 136.999992   11 26.59999  90.89996
323 Evit200 Cu000      9 24.00000  24.00000         NA    1 24.00000  92.50000
324 Evit200 Cu000      9 24.00000  28.20000  10.000000    2 24.00000  92.50000
325 Evit200 Cu000      9 24.00000  35.29999  20.000000    3 24.00000  92.50000
326 Evit200 Cu000      9 24.00000  42.69998  32.100002    4 24.00000  92.50000
327 Evit200 Cu000      9 24.00000  48.19998  44.800003    5 24.00000  92.50000
328 Evit200 Cu000      9 24.00000  53.19998  58.500000    6 24.00000  92.50000
329 Evit200 Cu000      9 24.00000  64.79999  76.100000    7 24.00000  92.50000
330 Evit200 Cu000      9 24.00000  71.50000  94.200001    8 24.00000  92.50000
331 Evit200 Cu000      9 24.00000  76.09998 113.200001    9 24.00000  92.50000
332 Evit200 Cu000      9 24.00000  86.09998 134.900002   10 24.00000  92.50000
333 Evit200 Cu000      9 24.00000  92.50000 146.100000   11 24.00000  92.50000
334 Evit100 Cu175     10 27.09999  27.09999         NA    1 27.09999 105.69995
335 Evit100 Cu175     10 27.09999  34.69998  11.100002    2 27.09999 105.69995
336 Evit100 Cu175     10 27.09999  40.69998  29.900002    3 27.09999 105.69995
337 Evit100 Cu175     10 27.09999  47.59998  45.300001    4 27.09999 105.69995
338 Evit100 Cu175     10 27.09999  56.50000  65.600000    5 27.09999 105.69995
339 Evit100 Cu175     10 27.09999  64.00000  84.800001    6 27.09999 105.69995
340 Evit100 Cu175     10 27.09999  72.29999 107.000000    7 27.09999 105.69995
341 Evit100 Cu175     10 27.09999  82.00000 135.100000    8 27.09999 105.69995
342 Evit100 Cu175     10 27.09999  88.00000 155.500000    9 27.09999 105.69995
343 Evit100 Cu175     10 27.09999  95.09998 177.900002   10 27.09999 105.69995
344 Evit100 Cu175     10 27.09999 104.00000 201.500000   11 27.09999 105.69995
345 Evit100 Cu175     10 27.09999 105.69995 224.500000   12 27.09999 105.69995
346 Evit200 Cu000     10 27.00000  27.00000         NA    1 27.00000 106.09998
347 Evit200 Cu000     10 27.00000  30.00000   6.800001    2 27.00000 106.09998
348 Evit200 Cu000     10 27.00000  37.79999  19.500000    3 27.00000 106.09998
349 Evit200 Cu000     10 27.00000  43.29999  31.100006    4 27.00000 106.09998
350 Evit200 Cu000     10 27.00000  51.50000  46.200001    5 27.00000 106.09998
351 Evit200 Cu000     10 27.00000  57.00000  59.900002    6 27.00000 106.09998
352 Evit200 Cu000     10 27.00000  63.69998  76.100000    7 27.00000 106.09998
353 Evit200 Cu000     10 27.00000  70.50000  97.000000    8 27.00000 106.09998
354 Evit200 Cu000     10 27.00000  80.39996 115.000000    9 27.00000 106.09998
355 Evit200 Cu000     10 27.00000  92.00000 138.800003   10 27.00000 106.09998
356 Evit200 Cu000     10 27.00000 100.00000 158.200001   11 27.00000 106.09998
357 Evit200 Cu000     10 27.00000 106.09998 177.900002   12 27.00000 106.09998
358 Evit200 Cu175     10 29.50000  29.50000         NA    1 29.50000  99.09998
359 Evit200 Cu175     10 29.50000  31.39999   6.800001    2 29.50000  99.09998
360 Evit200 Cu175     10 29.50000  39.39999  19.600000    3 29.50000  99.09998
361 Evit200 Cu175     10 29.50000  44.79999  30.300003    4 29.50000  99.09998
362 Evit200 Cu175     10 29.50000  50.29999  41.400002    5 29.50000  99.09998
363 Evit200 Cu175     10 29.50000  57.00000  55.000000    6 29.50000  99.09998
364 Evit200 Cu175     10 29.50000  65.59998  71.000000    7 29.50000  99.09998
365 Evit200 Cu175     10 29.50000  72.39996  86.800001    8 29.50000  99.09998
366 Evit200 Cu175     10 29.50000  80.19995 105.200001    9 29.50000  99.09998
367 Evit200 Cu175     10 29.50000  90.39996 127.800001   10 29.50000  99.09998
368 Evit200 Cu175     10 29.50000  95.00000 149.500000   11 29.50000  99.09998
369 Evit200 Cu175     10 29.50000  99.09998 167.500000   12 29.50000  99.09998
370 Evit200 Cu000     12 22.79999  22.79999         NA    1 22.79999  94.00000
371 Evit200 Cu000     12 22.79999  27.00000   6.000000    2 22.79999  94.00000
372 Evit200 Cu000     12 22.79999  33.89999  18.200001    3 22.79999  94.00000
373 Evit200 Cu000     12 22.79999  37.69998  27.000000    4 22.79999  94.00000
374 Evit200 Cu000     12 22.79999  41.39999  36.300001    5 22.79999  94.00000
375 Evit200 Cu000     12 22.79999  48.19998  48.000000    6 22.79999  94.00000
376 Evit200 Cu000     12 22.79999  53.69998  60.200005    7 22.79999  94.00000
377 Evit200 Cu000     12 22.79999  62.59998  76.200001    8 22.79999  94.00000
378 Evit200 Cu000     12 22.79999  70.39996  93.000000    9 22.79999  94.00000
379 Evit200 Cu000     12 22.79999  78.50000 120.000000   10 22.79999  94.00000
380 Evit200 Cu000     12 22.79999  85.89996 127.500000   11 22.79999  94.00000
381 Evit200 Cu000     12 22.79999  94.00000 146.800001   12 22.79999  94.00000
382 Evit200 Cu175     12 22.29999  22.29999         NA    1 22.29999 101.39996
383 Evit200 Cu175     12 22.29999  24.70000   5.900002    2 22.29999 101.39996
384 Evit200 Cu175     12 22.29999  30.39999  15.000000    3 22.29999 101.39996
385 Evit200 Cu175     12 22.29999  36.89999  25.200001    4 22.29999 101.39996
386 Evit200 Cu175     12 22.29999  44.09998  39.000000    5 22.29999 101.39996
387 Evit200 Cu175     12 22.29999  52.79999  56.000000    6 22.29999 101.39996
388 Evit200 Cu175     12 22.29999  60.29999  71.100006    7 22.29999 101.39996
389 Evit200 Cu175     12 22.29999  67.79999  86.500000    8 22.29999 101.39996
390 Evit200 Cu175     12 22.29999  75.39996 106.300001    9 22.29999 101.39996
391 Evit200 Cu175     12 22.29999  87.59998 127.599991   10 22.29999 101.39996
392 Evit200 Cu175     12 22.29999  93.00000 137.599991   11 22.29999 101.39996
393 Evit200 Cu175     12 22.29999 101.39996 157.599991   12 22.29999 101.39996
394 Evit000 Cu000     12 23.79999  23.79999         NA    1 23.79999 109.59998
395 Evit000 Cu000     12 23.79999  30.00000   9.700000    2 23.79999 109.59998
396 Evit000 Cu000     12 23.79999  37.09998  20.800003    3 23.79999 109.59998
397 Evit000 Cu000     12 23.79999  43.19998  31.200005    4 23.79999 109.59998
398 Evit000 Cu000     12 23.79999  50.39999  44.900002    5 23.79999 109.59998
399 Evit000 Cu000     12 23.79999  60.19998  61.800003    6 23.79999 109.59998
400 Evit000 Cu000     12 23.79999  67.00000  78.200001    7 23.79999 109.59998
401 Evit000 Cu000     12 23.79999  75.00000  94.800003    8 23.79999 109.59998
402 Evit000 Cu000     12 23.79999  82.39996 112.900002    9 23.79999 109.59998
403 Evit000 Cu000     12 23.79999  91.19995 132.000000   10 23.79999 109.59998
404 Evit000 Cu000     12 23.79999 101.79999 160.000000   11 23.79999 109.59998
405 Evit000 Cu000     12 23.79999 109.59998 180.100006   12 23.79999 109.59998
406 Evit000 Cu035     11 22.00000  22.00000         NA    1 22.00000  93.19995
407 Evit000 Cu035     11 22.00000  25.79999   8.500000    2 22.00000  93.19995
408 Evit000 Cu035     11 22.00000  29.20000  15.800003    3 22.00000  93.19995
409 Evit000 Cu035     11 22.00000  35.79999  25.900002    4 22.00000  93.19995
410 Evit000 Cu035     11 22.00000  41.09998  37.600000    5 22.00000  93.19995
411 Evit000 Cu035     11 22.00000  50.00000  48.200005    6 22.00000  93.19995
412 Evit000 Cu035     11 22.00000  55.19998  62.000000    7 22.00000  93.19995
413 Evit000 Cu035     11 22.00000  62.19998  76.500000    8 22.00000  93.19995
414 Evit000 Cu035     11 22.00000  69.79999  90.100002    9 22.00000  93.19995
415 Evit000 Cu035     11 22.00000  76.39996 107.100006   10 22.00000  93.19995
416 Evit000 Cu035     11 22.00000  83.19995 126.200000   11 22.00000  93.19995
417 Evit000 Cu035     11 22.00000  93.19995 147.700005   12 22.00000  93.19995
418 Evit200 Cu035     11 22.00000  22.00000         NA    1 22.00000  90.00000
419 Evit200 Cu035     11 22.00000  27.00000   8.800000    2 22.00000  90.00000
420 Evit200 Cu035     11 22.00000  32.89999  18.900001    3 22.00000  90.00000
421 Evit200 Cu035     11 22.00000  38.00000  29.200005    4 22.00000  90.00000
422 Evit200 Cu035     11 22.00000  46.19998  43.600002    5 22.00000  90.00000
423 Evit200 Cu035     11 22.00000  53.50000  58.100000    6 22.00000  90.00000
424 Evit200 Cu035     11 22.00000  58.59998  73.400002    7 22.00000  90.00000
425 Evit200 Cu035     11 22.00000  68.19995  90.000000    8 22.00000  90.00000
426 Evit200 Cu035     11 22.00000  71.00000 104.800003    9 22.00000  90.00000
427 Evit200 Cu035     11 22.00000  80.79999 120.200005   10 22.00000  90.00000
428 Evit200 Cu035     11 22.00000  84.50000 134.800003   11 22.00000  90.00000
429 Evit200 Cu035     11 22.00000  90.00000 146.300001   12 22.00000  90.00000
430 Evit100 Cu175     11 22.00000  22.00000         NA    1 22.00000  92.09998
431 Evit100 Cu175     11 22.00000  24.79999   7.500000    2 22.00000  92.09998
432 Evit100 Cu175     11 22.00000  30.00000  16.100000    3 22.00000  92.09998
433 Evit100 Cu175     11 22.00000  35.79999  26.000000    4 22.00000  92.09998
434 Evit100 Cu175     11 22.00000  42.29999  36.800001    5 22.00000  92.09998
435 Evit100 Cu175     11 22.00000  50.89999  49.800003    6 22.00000  92.09998
436 Evit100 Cu175     11 22.00000  57.79999  65.100002    7 22.00000  92.09998
437 Evit100 Cu175     11 22.00000  64.79999  80.000000    8 22.00000  92.09998
438 Evit100 Cu175     11 22.00000  71.79999  93.800003    9 22.00000  92.09998
439 Evit100 Cu175     11 22.00000  75.00000 109.900002   10 22.00000  92.09998
440 Evit100 Cu175     11 22.00000  83.79999 122.800003   11 22.00000  92.09998
441 Evit100 Cu175     11 22.00000  92.09998 142.400002   12 22.00000  92.09998
442 Evit200 Cu035     16 26.20000  26.20000         NA    1 26.20000  98.39996
443 Evit200 Cu035     16 26.20000  30.39999   6.900002    2 26.20000  98.39996
444 Evit200 Cu035     16 26.20000  37.39999  18.200001    3 26.20000  98.39996
445 Evit200 Cu035     16 26.20000  43.00000  30.600006    4 26.20000  98.39996
446 Evit200 Cu035     16 26.20000  49.50000  42.100002    5 26.20000  98.39996
447 Evit200 Cu035     16 26.20000  55.09998  62.200001    6 26.20000  98.39996
448 Evit200 Cu035     16 26.20000  64.19995  87.200001    7 26.20000  98.39996
449 Evit200 Cu035     16 26.20000  75.59998 106.900002    8 26.20000  98.39996
450 Evit200 Cu035     16 26.20000  83.29999 122.100002    9 26.20000  98.39996
451 Evit200 Cu035     16 26.20000  87.39996 148.400000   10 26.20000  98.39996
452 Evit200 Cu035     16 26.20000  94.69995 170.100006   11 26.20000  98.39996
453 Evit200 Cu035     16 26.20000  98.39996 190.800003   12 26.20000  98.39996
454 Evit200 Cu175     16 32.50000  32.50000         NA    1 32.50000 112.29999
455 Evit200 Cu175     16 32.50000  38.79999  10.000000    2 32.50000 112.29999
456 Evit200 Cu175     16 32.50000  47.79999  23.800003    3 32.50000 112.29999
457 Evit200 Cu175     16 32.50000  54.50000  39.000000    4 32.50000 112.29999
458 Evit200 Cu175     16 32.50000  63.00000  53.200001    5 32.50000 112.29999
459 Evit200 Cu175     16 32.50000  70.09998  69.000000    6 32.50000 112.29999
460 Evit200 Cu175     16 32.50000  76.59998  89.000000    7 32.50000 112.29999
461 Evit200 Cu175     16 32.50000  86.19995 105.900002    8 32.50000 112.29999
462 Evit200 Cu175     16 32.50000  95.79999 127.000000    9 32.50000 112.29999
463 Evit200 Cu175     16 32.50000 101.39996 151.200005   10 32.50000 112.29999
464 Evit200 Cu175     16 32.50000 112.29999 174.500000   11 32.50000 112.29999
465 Evit200 Cu175     16 32.50000 112.00000 191.400002   12 32.50000 112.29999
466 Evit100 Cu175     16 27.00000  27.00000         NA    1 27.00000 104.19995
467 Evit100 Cu175     16 27.00000  32.39999   7.800001    2 27.00000 104.19995
468 Evit100 Cu175     16 27.00000  38.19998  17.000000    3 27.00000 104.19995
469 Evit100 Cu175     16 27.00000  44.69998  30.100006    4 27.00000 104.19995
470 Evit100 Cu175     16 27.00000  53.19998  44.800003    5 27.00000 104.19995
471 Evit100 Cu175     16 27.00000  62.39999  60.000000    6 27.00000 104.19995
472 Evit100 Cu175     16 27.00000  70.50000  80.000000    7 27.00000 104.19995
473 Evit100 Cu175     16 27.00000  72.79999  91.800003    8 27.00000 104.19995
474 Evit100 Cu175     16 27.00000  86.59998 111.100006    9 27.00000 104.19995
475 Evit100 Cu175     16 27.00000  93.29999 131.800003   10 27.00000 104.19995
476 Evit100 Cu175     16 27.00000 103.00000 147.800003   11 27.00000 104.19995
477 Evit100 Cu175     16 27.00000 104.19995 165.400002   12 27.00000 104.19995
478 Evit100 Cu000     16 27.39999  27.39999         NA    1 27.39999 105.29999
479 Evit100 Cu000     16 27.39999  32.19998   8.100000    2 27.39999 105.29999
480 Evit100 Cu000     16 27.39999  37.89999  18.300000    3 27.39999 105.29999
481 Evit100 Cu000     16 27.39999  45.89999  29.900002    4 27.39999 105.29999
482 Evit100 Cu000     16 27.39999  51.19998  44.100002    5 27.39999 105.29999
483 Evit100 Cu000     16 27.39999  57.09998  58.300000    6 27.39999 105.29999
484 Evit100 Cu000     16 27.39999  69.00000  77.500000    7 27.39999 105.29999
485 Evit100 Cu000     16 27.39999  76.79999  91.500000    8 27.39999 105.29999
486 Evit100 Cu000     16 27.39999  83.09998 104.800003    9 27.39999 105.29999
487 Evit100 Cu000     16 27.39999  91.59998 124.000000   10 27.39999 105.29999
488 Evit100 Cu000     16 27.39999 100.50000 148.600000   11 27.39999 105.29999
489 Evit100 Cu000     16 27.39999 105.29999 166.900002   12 27.39999 105.29999
490 Evit200 Cu000     17 27.09999  27.09999         NA    1 27.09999 101.39996
491 Evit200 Cu000     17 27.09999  30.29999   5.800003    2 27.09999 101.39996
492 Evit200 Cu000     17 27.09999  38.19998  17.000000    3 27.09999 101.39996
493 Evit200 Cu000     17 27.09999  43.19998  30.000000    4 27.09999 101.39996
494 Evit200 Cu000     17 27.09999  52.50000  45.000000    5 27.09999 101.39996
495 Evit200 Cu000     17 27.09999  59.00000  57.200001    6 27.09999 101.39996
496 Evit200 Cu000     17 27.09999  67.29999  72.100002    7 27.09999 101.39996
497 Evit200 Cu000     17 27.09999  74.19995  90.000000    8 27.09999 101.39996
498 Evit200 Cu000     17 27.09999  81.19995 103.200001    9 27.09999 101.39996
499 Evit200 Cu000     17 27.09999  87.50000 119.500000   10 27.09999 101.39996
500 Evit200 Cu000     17 27.09999  94.39996 135.200001   11 27.09999 101.39996
501 Evit200 Cu000     17 27.09999 101.39996 153.800003   12 27.09999 101.39996
502 Evit000 Cu035     17 26.79999  26.79999         NA    1 26.79999 104.39996
503 Evit000 Cu035     17 26.79999  31.09999   6.100000    2 26.79999 104.39996
504 Evit000 Cu035     17 26.79999  37.79999  14.900002    3 26.79999 104.39996
505 Evit000 Cu035     17 26.79999  44.59998  28.500000    4 26.79999 104.39996
506 Evit000 Cu035     17 26.79999  50.50000  40.500000    5 26.79999 104.39996
507 Evit000 Cu035     17 26.79999  58.29999  55.200001    6 26.79999 104.39996
508 Evit000 Cu035     17 26.79999  68.29999  73.700001    7 26.79999 104.39996
509 Evit000 Cu035     17 26.79999  75.09998  92.500000    8 26.79999 104.39996
510 Evit000 Cu035     17 26.79999  84.39996 111.200005    9 26.79999 104.39996
511 Evit000 Cu035     17 26.79999  87.29999 129.000000   10 26.79999 104.39996
512 Evit000 Cu035     17 26.79999  96.39996 145.800003   11 26.79999 104.39996
513 Evit000 Cu035     17 26.79999 104.39996 165.500000   12 26.79999 104.39996
514 Evit100 Cu000     17 24.50000  24.50000         NA    1 24.50000 104.50000
515 Evit100 Cu000     17 24.50000  31.59999   8.100000    2 24.50000 104.50000
516 Evit100 Cu000     17 24.50000  37.39999  18.100000    3 24.50000 104.50000
517 Evit100 Cu000     17 24.50000  46.39999  30.100006    4 24.50000 104.50000
518 Evit100 Cu000     17 24.50000  53.59998  48.100000    5 24.50000 104.50000
519 Evit100 Cu000     17 24.50000  61.19998  62.600002    6 24.50000 104.50000
520 Evit100 Cu000     17 24.50000  70.09998  76.400002    7 24.50000 104.50000
521 Evit100 Cu000     17 24.50000  77.50000  96.200001    8 24.50000 104.50000
522 Evit100 Cu000     17 24.50000  86.19995 114.600002    9 24.50000 104.50000
523 Evit100 Cu000     17 24.50000  89.19995 129.800003   10 24.50000 104.50000
524 Evit100 Cu000     17 24.50000  96.89996 146.500000   11 24.50000 104.50000
525 Evit100 Cu000     17 24.50000 104.50000 168.300000   12 24.50000 104.50000
526 Evit100 Cu000     18 23.09999  23.09999         NA    1 23.09999  96.39996
527 Evit100 Cu000     18 23.09999  26.00000   5.900002    2 23.09999  96.39996
528 Evit100 Cu000     18 23.09999  30.09999  17.600000    3 23.09999  96.39996
529 Evit100 Cu000     18 23.09999  40.69998  30.600006    4 23.09999  96.39996
530 Evit100 Cu000     18 23.09999  46.59998  41.400002    5 23.09999  96.39996
531 Evit100 Cu000     18 23.09999  52.09998  53.400002    6 23.09999  96.39996
532 Evit100 Cu000     18 23.09999  60.50000  69.200000    7 23.09999  96.39996
533 Evit100 Cu000     18 23.09999  73.50000  90.000000    8 23.09999  96.39996
534 Evit100 Cu000     18 23.09999  77.29999 100.000000    9 23.09999  96.39996
535 Evit100 Cu000     18 23.09999  86.89996 108.000000   10 23.09999  96.39996
536 Evit100 Cu000     18 23.09999  90.00000 126.000000   11 23.09999  96.39996
537 Evit100 Cu000     18 23.09999  96.39996 141.100006   12 23.09999  96.39996
538 Evit000 Cu000     18 21.50000  21.50000         NA    1 21.50000  99.29999
539 Evit000 Cu000     18 21.50000  24.59999   5.000000    2 21.50000  99.29999
540 Evit000 Cu000     18 21.50000  28.50000  14.200001    3 21.50000  99.29999
541 Evit000 Cu000     18 21.50000  39.09998  27.800003    4 21.50000  99.29999
542 Evit000 Cu000     18 21.50000  45.29999  39.800003    5 21.50000  99.29999
543 Evit000 Cu000     18 21.50000  53.00000  53.500000    6 21.50000  99.29999
544 Evit000 Cu000     18 21.50000  59.59998  68.500000    7 21.50000  99.29999
545 Evit000 Cu000     18 21.50000  69.50000  87.400002    8 21.50000  99.29999
546 Evit000 Cu000     18 21.50000  75.19995 107.300003    9 21.50000  99.29999
547 Evit000 Cu000     18 21.50000  84.89996 127.000000   10 21.50000  99.29999
548 Evit000 Cu000     18 21.50000  93.39996 146.599991   11 21.50000  99.29999
549 Evit000 Cu000     18 21.50000  99.29999 167.799992   12 21.50000  99.29999
550 Evit200 Cu035     18 24.09999  24.09999         NA    1 24.09999 101.59998
551 Evit200 Cu035     18 24.09999  28.09999   6.200001    2 24.09999 101.59998
552 Evit200 Cu035     18 24.09999  32.50000  15.900002    3 24.09999 101.59998
553 Evit200 Cu035     18 24.09999  40.59998  30.800003    4 24.09999 101.59998
554 Evit200 Cu035     18 24.09999  46.00000  40.900002    5 24.09999 101.59998
555 Evit200 Cu035     18 24.09999  53.79999  52.100002    6 24.09999 101.59998
556 Evit200 Cu035     18 24.09999  61.19998  68.500000    7 24.09999 101.59998
557 Evit200 Cu035     18 24.09999  71.89996  85.400002    8 24.09999 101.59998
558 Evit200 Cu035     18 24.09999  79.50000 103.100002    9 24.09999 101.59998
559 Evit200 Cu035     18 24.09999  87.39996 119.500000   10 24.09999 101.59998
560 Evit200 Cu035     18 24.09999  93.29999 141.000000   11 24.09999 101.59998
561 Evit200 Cu035     18 24.09999 101.59998 161.800003   12 24.09999 101.59998
562 Evit100 Cu175      5 34.19998  34.19998         NA    1 34.19998 109.00000
563 Evit100 Cu175      5 34.19998  42.09998   8.499996    2 34.19998 109.00000
564 Evit100 Cu175      5 34.19998  50.09998  23.099998    3 34.19998 109.00000
565 Evit100 Cu175      5 34.19998  57.59998  35.000000    4 34.19998 109.00000
566 Evit100 Cu175      5 34.19998  62.29999  54.299995    5 34.19998 109.00000
567 Evit100 Cu175      5 34.19998  66.00000  73.399996    6 34.19998 109.00000
568 Evit100 Cu175      5 34.19998  76.09998  81.899996    7 34.19998 109.00000
569 Evit100 Cu175      5 34.19998  81.50000  96.099998    8 34.19998 109.00000
570 Evit100 Cu175      5 34.19998  84.29999 114.299995    9 34.19998 109.00000
571 Evit100 Cu175      5 34.19998  97.89996 133.799995   10 34.19998 109.00000
572 Evit100 Cu175      5 34.19998 108.59998 163.799995   11 34.19998 109.00000
573 Evit100 Cu175      5 34.19998 109.00000 198.299995   12 34.19998 109.00000
574 Evit100 Cu035      5 25.09999  25.09999         NA    1 23.20000 106.79999
575 Evit100 Cu035      5 25.09999  23.20000   4.000000    2 23.20000 106.79999
576 Evit100 Cu035      5 25.09999  28.89999  11.100006    3 23.20000 106.79999
577 Evit100 Cu035      5 25.09999  36.79999  21.000000    4 23.20000 106.79999
578 Evit100 Cu035      5 25.09999  44.19998  31.000000    5 23.20000 106.79999
579 Evit100 Cu035      5 25.09999  52.79999  56.300003    6 23.20000 106.79999
580 Evit100 Cu035      5 25.09999  62.19998  69.100006    7 23.20000 106.79999
581 Evit100 Cu035      5 25.09999  69.39996  87.200001    8 23.20000 106.79999
582 Evit100 Cu035      5 25.09999  78.09998 106.300003    9 23.20000 106.79999
583 Evit100 Cu035      5 25.09999  88.79999 129.500000   10 23.20000 106.79999
584 Evit100 Cu035      5 25.09999 102.39996 159.500000   11 23.20000 106.79999
585 Evit100 Cu035      5 25.09999 106.79999 197.400002   12 23.20000 106.79999
586 Evit100 Cu000      5 32.19998  32.19998         NA    1 32.19998 115.39996
587 Evit100 Cu000      5 32.19998  36.39999   6.900002    2 32.19998 115.39996
588 Evit100 Cu000      5 32.19998  41.79999  14.300003    3 32.19998 115.39996
589 Evit100 Cu000      5 32.19998  48.19998  26.400002    4 32.19998 115.39996
590 Evit100 Cu000      5 32.19998  55.89999  41.800003    5 32.19998 115.39996
591 Evit100 Cu000      5 32.19998  60.09998  58.600000    6 32.19998 115.39996
592 Evit100 Cu000      5 32.19998  68.50000  71.400002    7 32.19998 115.39996
593 Evit100 Cu000      5 32.19998  77.79999  88.900002    8 32.19998 115.39996
594 Evit100 Cu000      5 32.19998  86.39996 108.100002    9 32.19998 115.39996
595 Evit100 Cu000      5 32.19998  96.69995 130.500000   10 32.19998 115.39996
596 Evit100 Cu000      5 32.19998 111.09998 163.000000   11 32.19998 115.39996
597 Evit100 Cu000      5 32.19998 115.39996 184.500000   12 32.19998 115.39996
598 Evit200 Cu035     13 24.70000  24.70000         NA    1 24.70000 103.19995
599 Evit200 Cu035     13 24.70000  28.89999   5.900002    2 24.70000 103.19995
600 Evit200 Cu035     13 24.70000  34.59998  15.000000    3 24.70000 103.19995
601 Evit200 Cu035     13 24.70000  42.19998  26.600000    4 24.70000 103.19995
602 Evit200 Cu035     13 24.70000  48.19998  38.000000    5 24.70000 103.19995
603 Evit200 Cu035     13 24.70000  54.39999  50.900002    6 24.70000 103.19995
604 Evit200 Cu035     13 24.70000  62.50000  65.100002    7 24.70000 103.19995
605 Evit200 Cu035     13 24.70000  69.79999  80.000000    8 24.70000 103.19995
606 Evit200 Cu035     13 24.70000  78.59998 100.500000    9 24.70000 103.19995
607 Evit200 Cu035     13 24.70000  87.00000 116.900002   10 24.70000 103.19995
608 Evit200 Cu035     13 24.70000  96.39996 137.900002   11 24.70000 103.19995
609 Evit200 Cu035     13 24.70000 103.19995 158.500000   12 24.70000 103.19995
610 Evit100 Cu000     13 24.20000  24.20000         NA    1 24.20000 100.59998
611 Evit100 Cu000     13 24.20000  29.20000   6.200001    2 24.20000 100.59998
612 Evit100 Cu000     13 24.20000  36.19998  17.100000    3 24.20000 100.59998
613 Evit100 Cu000     13 24.20000  43.09998  30.000000    4 24.20000 100.59998
614 Evit100 Cu000     13 24.20000  49.19998  44.000000    5 24.20000 100.59998
615 Evit100 Cu000     13 24.20000  57.00000  56.900002    6 24.20000 100.59998
616 Evit100 Cu000     13 24.20000  63.00000  70.000000    7 24.20000 100.59998
617 Evit100 Cu000     13 24.20000  70.89996  85.100002    8 24.20000 100.59998
618 Evit100 Cu000     13 24.20000  80.00000 102.300003    9 24.20000 100.59998
619 Evit100 Cu000     13 24.20000  87.19995 118.499996   10 24.20000 100.59998
620 Evit100 Cu000     13 24.20000  94.69995 135.599998   11 24.20000 100.59998
621 Evit100 Cu000     13 24.20000 100.59998 158.499996   12 24.20000 100.59998
622 Evit200 Cu000     13 24.50000  24.50000         NA    1 24.50000 103.79999
623 Evit200 Cu000     13 24.50000  28.39999   7.100000    2 24.50000 103.79999
624 Evit200 Cu000     13 24.50000  35.00000  17.300001    3 24.50000 103.79999
625 Evit200 Cu000     13 24.50000  41.89999  29.500000    4 24.50000 103.79999
626 Evit200 Cu000     13 24.50000  49.00000  40.900002    5 24.50000 103.79999
627 Evit200 Cu000     13 24.50000  55.59998  54.200001    6 24.50000 103.79999
628 Evit200 Cu000     13 24.50000  64.09998  66.800003    7 24.50000 103.79999
629 Evit200 Cu000     13 24.50000  71.19995  84.500000    8 24.50000 103.79999
630 Evit200 Cu000     13 24.50000  80.50000 104.500000    9 24.50000 103.79999
631 Evit200 Cu000     13 24.50000  90.19995 119.900002   10 24.50000 103.79999
632 Evit200 Cu000     13 24.50000  98.89996 143.000000   11 24.50000 103.79999
633 Evit200 Cu000     13 24.50000 103.79999 164.500000   12 24.50000 103.79999
634 Evit000 Cu035     20 22.00000  22.00000         NA    1 22.00000  94.79999
635 Evit000 Cu035     20 22.00000  26.59999   9.500000    2 22.00000  94.79999
636 Evit000 Cu035     20 22.00000  33.09998  19.900002    3 22.00000  94.79999
637 Evit000 Cu035     20 22.00000  38.39999  31.000000    4 22.00000  94.79999
638 Evit000 Cu035     20 22.00000  46.59998  44.900002    5 22.00000  94.79999
639 Evit000 Cu035     20 22.00000  52.29999  63.800003    6 22.00000  94.79999
640 Evit000 Cu035     20 22.00000  61.50000  78.000000    7 22.00000  94.79999
641 Evit000 Cu035     20 22.00000  69.29999  96.000000    8 22.00000  94.79999
642 Evit000 Cu035     20 22.00000  74.19995 116.000000    9 22.00000  94.79999
643 Evit000 Cu035     20 22.00000  80.19995 137.600000   10 22.00000  94.79999
644 Evit000 Cu035     20 22.00000  87.19995 162.100002   11 22.00000  94.79999
645 Evit000 Cu035     20 22.00000  94.79999 198.000000   12 22.00000  94.79999
646 Evit000 Cu175     20 26.79999  26.79999         NA    1 26.79999 112.00000
647 Evit000 Cu175     20 26.79999  33.59998  10.900002    2 26.79999 112.00000
648 Evit000 Cu175     20 26.79999  42.09998  25.100002    3 26.79999 112.00000
649 Evit000 Cu175     20 26.79999  47.89999  38.000000    4 26.79999 112.00000
650 Evit000 Cu175     20 26.79999  56.19998  54.400002    5 26.79999 112.00000
651 Evit000 Cu175     20 26.79999  63.39999  74.200001    6 26.79999 112.00000
652 Evit000 Cu175     20 26.79999  71.79999  89.900002    7 26.79999 112.00000
653 Evit000 Cu175     20 26.79999  80.00000 111.000000    8 26.79999 112.00000
654 Evit000 Cu175     20 26.79999  87.59998 135.800003    9 26.79999 112.00000
655 Evit000 Cu175     20 26.79999  94.89996 159.600006   10 26.79999 112.00000
656 Evit000 Cu175     20 26.79999 101.00000 188.200001   11 26.79999 112.00000
657 Evit000 Cu175     20 26.79999 112.00000 224.000000   12 26.79999 112.00000
658 Evit100 Cu035     20 30.59999  30.59999         NA    1 30.59999 112.50000
659 Evit100 Cu035     20 30.59999  37.59998  11.200005    2 30.59999 112.50000
660 Evit100 Cu035     20 30.59999  42.79999  21.000000    3 30.59999 112.50000
661 Evit100 Cu035     20 30.59999  47.39999  31.100006    4 30.59999 112.50000
662 Evit100 Cu035     20 30.59999  56.59998  47.000000    5 30.59999 112.50000
663 Evit100 Cu035     20 30.59999  62.39999  65.000000    6 30.59999 112.50000
664 Evit100 Cu035     20 30.59999  71.79999  78.000000    7 30.59999 112.50000
665 Evit100 Cu035     20 30.59999  78.00000  95.800003    8 30.59999 112.50000
666 Evit100 Cu035     20 30.59999  86.79999 115.800003    9 30.59999 112.50000
667 Evit100 Cu035     20 30.59999  94.19995 138.000000   10 30.59999 112.50000
668 Evit100 Cu035     20 30.59999 101.89996 166.500000   11 30.59999 112.50000
669 Evit100 Cu035     20 30.59999 112.50000 196.900002   12 30.59999 112.50000
670 Evit200 Cu175     20 21.89999  21.89999         NA    1 21.89999 103.50000
671 Evit200 Cu175     20 21.89999  26.79999   9.600000    2 21.89999 103.50000
672 Evit200 Cu175     20 21.89999  34.69998  21.800003    3 21.89999 103.50000
673 Evit200 Cu175     20 21.89999  41.29999  36.700001    4 21.89999 103.50000
674 Evit200 Cu175     20 21.89999  48.69998  51.800003    5 21.89999 103.50000
675 Evit200 Cu175     20 21.89999  57.89999  71.400002    6 21.89999 103.50000
676 Evit200 Cu175     20 21.89999  65.39996  91.600006    7 21.89999 103.50000
677 Evit200 Cu175     20 21.89999  71.29999 115.800003    8 21.89999 103.50000
678 Evit200 Cu175     20 21.89999  80.59998 138.000000    9 21.89999 103.50000
679 Evit200 Cu175     20 21.89999  88.39996 163.000000   10 21.89999 103.50000
680 Evit200 Cu175     20 21.89999  96.29999 188.000000   11 21.89999 103.50000
681 Evit200 Cu175     20 21.89999 103.50000 217.800001   12 21.89999 103.50000
682 Evit000 Cu175     23 24.00000  24.00000         NA    1 24.00000  90.79999
683 Evit000 Cu175     23 24.00000  26.79999   6.000000    2 24.00000  90.79999
684 Evit000 Cu175     23 24.00000  33.00000  20.000000    3 24.00000  90.79999
685 Evit000 Cu175     23 24.00000  39.09998  30.300003    4 24.00000  90.79999
686 Evit000 Cu175     23 24.00000  46.39999  45.100002    5 24.00000  90.79999
687 Evit000 Cu175     23 24.00000  54.00000  61.400002    6 24.00000  90.79999
688 Evit000 Cu175     23 24.00000  61.59998  74.400002    7 24.00000  90.79999
689 Evit000 Cu175     23 24.00000  68.79999  91.800003    8 24.00000  90.79999
690 Evit000 Cu175     23 24.00000  72.19995 109.500000    9 24.00000  90.79999
691 Evit000 Cu175     23 24.00000  77.19995 128.000000   10 24.00000  90.79999
692 Evit000 Cu175     23 24.00000  83.79999 144.400002   11 24.00000  90.79999
693 Evit000 Cu175     23 24.00000  90.79999 160.300003   12 24.00000  90.79999
694 Evit200 Cu035     23 24.20000  24.20000         NA    1 24.20000  90.19995
695 Evit200 Cu035     23 24.20000  25.39999   3.900002    2 24.20000  90.19995
696 Evit200 Cu035     23 24.20000  30.70000  13.300003    3 24.20000  90.19995
697 Evit200 Cu035     23 24.20000  35.59998  24.600002    4 24.20000  90.19995
698 Evit200 Cu035     23 24.20000  42.79999  38.500000    5 24.20000  90.19995
699 Evit200 Cu035     23 24.20000  49.50000  53.000000    6 24.20000  90.19995
700 Evit200 Cu035     23 24.20000  57.19998  67.600000    7 24.20000  90.19995
701 Evit200 Cu035     23 24.20000  65.59998  83.000000    8 24.20000  90.19995
702 Evit200 Cu035     23 24.20000  72.39996  99.000000    9 24.20000  90.19995
703 Evit200 Cu035     23 24.20000  81.19995 116.000000   10 24.20000  90.19995
704 Evit200 Cu035     23 24.20000  85.19995 135.400002   11 24.20000  90.19995
705 Evit200 Cu035     23 24.20000  90.19995 153.000000   12 24.20000  90.19995
706 Evit000 Cu035     23 25.20000  25.20000         NA    1 25.20000  98.50000
707 Evit000 Cu035     23 25.20000  29.79999   9.000000    2 25.20000  98.50000
708 Evit000 Cu035     23 25.20000  35.69998  21.000000    3 25.20000  98.50000
709 Evit000 Cu035     23 25.20000  42.00000  31.300003    4 25.20000  98.50000
710 Evit000 Cu035     23 25.20000  50.00000  44.000000    5 25.20000  98.50000
711 Evit000 Cu035     23 25.20000  55.89999  57.800001    6 25.20000  98.50000
712 Evit000 Cu035     23 25.20000  63.50000  73.100002    7 25.20000  98.50000
713 Evit000 Cu035     23 25.20000  70.00000  89.500000    8 25.20000  98.50000
714 Evit000 Cu035     23 25.20000  79.50000 105.400002    9 25.20000  98.50000
715 Evit000 Cu035     23 25.20000  83.59998 122.200001   10 25.20000  98.50000
716 Evit000 Cu035     23 25.20000  89.39996 138.500000   11 25.20000  98.50000
717 Evit000 Cu035     23 25.20000  98.50000 156.400002   12 25.20000  98.50000
718 Evit100 Cu035     23 23.50000  23.50000         NA    1 23.50000  81.39996
719 Evit100 Cu035     23 23.50000  25.89999   7.200001    2 23.50000  81.39996
720 Evit100 Cu035     23 23.50000  32.19998  19.500000    3 23.50000  81.39996
721 Evit100 Cu035     23 23.50000  32.39999  25.800003    4 23.50000  81.39996
722 Evit100 Cu035     23 23.50000  29.79999  29.500000    5 23.50000  81.39996
723 Evit100 Cu035     23 23.50000  32.79999  34.000000    6 23.50000  81.39996
724 Evit100 Cu035     23 23.50000  41.00000  50.000000    7 23.50000  81.39996
725 Evit100 Cu035     23 23.50000  50.00000  66.700001    8 23.50000  81.39996
726 Evit100 Cu035     23 23.50000  56.89999  80.700005    9 23.50000  81.39996
727 Evit100 Cu035     23 23.50000  64.79999  96.000000   10 23.50000  81.39996
728 Evit100 Cu035     23 23.50000  72.09998 111.200005   11 23.50000  81.39996
729 Evit100 Cu035     23 23.50000  81.39996 131.400002   12 23.50000  81.39996
730 Evit100 Cu035     21 26.59999  26.59999         NA    1 26.59999 103.00000
731 Evit100 Cu035     21 26.59999  33.00000  10.000000    2 26.59999 103.00000
732 Evit100 Cu035     21 26.59999  38.19998  20.000000    3 26.59999 103.00000
733 Evit100 Cu035     21 26.59999  46.39999  30.000000    4 26.59999 103.00000
734 Evit100 Cu035     21 26.59999  53.19998  40.000000    5 26.59999 103.00000
735 Evit100 Cu035     21 26.59999  59.59998  60.000000    6 26.59999 103.00000
736 Evit100 Cu035     21 26.59999  66.19995  82.100002    7 26.59999 103.00000
737 Evit100 Cu035     21 26.59999  72.59998  99.500000    8 26.59999 103.00000
738 Evit100 Cu035     21 26.59999  80.09998 120.000000    9 26.59999 103.00000
739 Evit100 Cu035     21 26.59999  89.00000 139.000000   10 26.59999 103.00000
740 Evit100 Cu035     21 26.59999  97.69995 162.800003   11 26.59999 103.00000
741 Evit100 Cu035     21 26.59999 103.00000 185.800003   12 26.59999 103.00000
742 Evit000 Cu175     21 35.39999  35.39999         NA    1 35.39999 113.00000
743 Evit000 Cu175     21 35.39999  42.29999  15.100002    2 35.39999 113.00000
744 Evit000 Cu175     21 35.39999  49.50000  29.800003    3 35.39999 113.00000
745 Evit000 Cu175     21 35.39999  58.69998  48.500000    4 35.39999 113.00000
746 Evit000 Cu175     21 35.39999  66.59998  70.000000    5 35.39999 113.00000
747 Evit000 Cu175     21 35.39999  71.39996  87.300001    6 35.39999 113.00000
748 Evit000 Cu175     21 35.39999  78.79999 104.200001    7 35.39999 113.00000
749 Evit000 Cu175     21 35.39999  85.50000 125.500000    8 35.39999 113.00000
750 Evit000 Cu175     21 35.39999  91.29999 144.900002    9 35.39999 113.00000
751 Evit000 Cu175     21 35.39999  97.79999 165.000000   10 35.39999 113.00000
752 Evit000 Cu175     21 35.39999 108.00000 197.000000   11 35.39999 113.00000
753 Evit000 Cu175     21 35.39999 113.00000 220.000000   12 35.39999 113.00000
754 Evit200 Cu035     21 29.29999  29.29999         NA    1 29.29999  92.09998
755 Evit200 Cu035     21 29.29999  34.00000  10.500000    2 29.29999  92.09998
756 Evit200 Cu035     21 29.29999  39.00000  20.200005    3 29.29999  92.09998
757 Evit200 Cu035     21 29.29999  45.39999  34.800003    4 29.29999  92.09998
758 Evit200 Cu035     21 29.29999  51.79999  51.000000    5 29.29999  92.09998
759 Evit200 Cu035     21 29.29999  58.79999  70.000000    6 29.29999  92.09998
760 Evit200 Cu035     21 29.29999  62.59998  86.200001    7 29.29999  92.09998
761 Evit200 Cu035     21 29.29999  71.59998 103.000000    8 29.29999  92.09998
762 Evit200 Cu035     21 29.29999  76.69995 111.000000    9 29.29999  92.09998
763 Evit200 Cu035     21 29.29999  81.69995 132.000000   10 29.29999  92.09998
764 Evit200 Cu035     21 29.29999  86.39996 157.800001   11 29.29999  92.09998
765 Evit200 Cu035     21 29.29999  92.09998 178.000000   12 29.29999  92.09998
766 Evit200 Cu000     21 25.29999  25.29999         NA    1 25.29999  85.89996
767 Evit200 Cu000     21 25.29999  31.59999   9.600006    2 25.29999  85.89996
768 Evit200 Cu000     21 25.29999  34.00000  19.600006    3 25.29999  85.89996
769 Evit200 Cu000     21 25.29999  35.19998  28.000000    4 25.29999  85.89996
770 Evit200 Cu000     21 25.29999  37.29999  41.000000    5 25.29999  85.89996
771 Evit200 Cu000     21 25.29999  40.79999  57.400002    6 25.29999  85.89996
772 Evit200 Cu000     21 25.29999  47.69998  69.000000    7 25.29999  85.89996
773 Evit200 Cu000     21 25.29999  57.00000  86.300001    8 25.29999  85.89996
774 Evit200 Cu000     21 25.29999  64.59998 102.200001    9 25.29999  85.89996
775 Evit200 Cu000     21 25.29999  71.19995 118.500000   10 25.29999  85.89996
776 Evit200 Cu000     21 25.29999  80.50000 140.500000   11 25.29999  85.89996
777 Evit200 Cu000     21 25.29999  85.89996 157.800000   12 25.29999  85.89996
778 Evit200 Cu175     22 22.09999  22.09999         NA    1 22.09999  76.79999
779 Evit200 Cu175     22 22.09999  26.29999   6.000000    2 22.09999  76.79999
780 Evit200 Cu175     22 22.09999  33.29999  16.800001    3 22.09999  76.79999
781 Evit200 Cu175     22 22.09999  38.00000  27.400002    4 22.09999  76.79999
782 Evit200 Cu175     22 22.09999  39.59998  36.200001    5 22.09999  76.79999
783 Evit200 Cu175     22 22.09999  41.39999  43.300003    6 22.09999  76.79999
784 Evit200 Cu175     22 22.09999  46.29999  54.000000    7 22.09999  76.79999
785 Evit200 Cu175     22 22.09999  52.39999  70.000000    8 22.09999  76.79999
786 Evit200 Cu175     22 22.09999  59.39999  90.000000    9 22.09999  76.79999
787 Evit200 Cu175     22 22.09999  66.69995 112.500000   10 22.09999  76.79999
788 Evit200 Cu175     22 22.09999  73.89996 128.000000   11 22.09999  76.79999
789 Evit200 Cu175     22 22.09999  76.79999 141.500000   12 22.09999  76.79999
790 Evit000 Cu175     22 23.70000  23.70000         NA    1 23.70000 104.00000
791 Evit000 Cu175     22 23.70000  28.79999   7.600000    2 23.70000 104.00000
792 Evit000 Cu175     22 23.70000  35.09998  18.500000    3 23.70000 104.00000
793 Evit000 Cu175     22 23.70000  43.00000  33.200001    4 23.70000 104.00000
794 Evit000 Cu175     22 23.70000  49.09998  44.900002    5 23.70000 104.00000
795 Evit000 Cu175     22 23.70000  58.79999  60.000000    6 23.70000 104.00000
796 Evit000 Cu175     22 23.70000  65.39996  75.800003    7 23.70000 104.00000
797 Evit000 Cu175     22 23.70000  68.50000  91.000000    8 23.70000 104.00000
798 Evit000 Cu175     22 23.70000  79.00000 108.500000    9 23.70000 104.00000
799 Evit000 Cu175     22 23.70000  90.69995 133.200001   10 23.70000 104.00000
800 Evit000 Cu175     22 23.70000  98.00000 151.200005   11 23.70000 104.00000
801 Evit000 Cu175     22 23.70000 104.00000 167.800001   12 23.70000 104.00000
802 Evit100 Cu000     22 24.00000  24.00000         NA    1 24.00000  99.79999
803 Evit100 Cu000     22 24.00000  28.89999   8.500000    2 24.00000  99.79999
804 Evit100 Cu000     22 24.00000  35.79999  19.500000    3 24.00000  99.79999
805 Evit100 Cu000     22 24.00000  44.00000  30.000000    4 24.00000  99.79999
806 Evit100 Cu000     22 24.00000  47.50000  43.200001    5 24.00000  99.79999
807 Evit100 Cu000     22 24.00000  56.39999  56.600000    6 24.00000  99.79999
808 Evit100 Cu000     22 24.00000  63.69998  72.000000    7 24.00000  99.79999
809 Evit100 Cu000     22 24.00000  70.29999  89.500000    8 24.00000  99.79999
810 Evit100 Cu000     22 24.00000  78.00000 108.000000    9 24.00000  99.79999
811 Evit100 Cu000     22 24.00000  89.19995 127.500000   10 24.00000  99.79999
812 Evit100 Cu000     22 24.00000  96.29999 144.400002   11 24.00000  99.79999
813 Evit100 Cu000     22 24.00000  99.79999 158.100000   12 24.00000  99.79999
814 Evit000 Cu035     22 25.00000  25.00000         NA    1 25.00000 107.50000
815 Evit000 Cu035     22 25.00000  30.09999   8.000000    2 25.00000 107.50000
816 Evit000 Cu035     22 25.00000  37.09998  20.000000    3 25.00000 107.50000
817 Evit000 Cu035     22 25.00000  46.00000  33.800003    4 25.00000 107.50000
818 Evit000 Cu035     22 25.00000  53.59998  48.500000    5 25.00000 107.50000
819 Evit000 Cu035     22 25.00000  61.09998  67.000000    6 25.00000 107.50000
820 Evit000 Cu035     22 25.00000  69.00000  83.000000    7 25.00000 107.50000
821 Evit000 Cu035     22 25.00000  78.19995 102.000000    8 25.00000 107.50000
822 Evit000 Cu035     22 25.00000  87.09998 119.000000    9 25.00000 107.50000
823 Evit000 Cu035     22 25.00000  94.39996 145.500000   10 25.00000 107.50000
824 Evit000 Cu035     22 25.00000 102.50000 163.400002   11 25.00000 107.50000
825 Evit000 Cu035     22 25.00000 107.50000 183.800001   12 25.00000 107.50000
826 Evit100 Cu035     24 27.00000  27.00000         NA    1 27.00000 101.39996
827 Evit100 Cu035     24 27.00000  30.00000   6.800003    2 27.00000 101.39996
828 Evit100 Cu035     24 27.00000  35.39999  16.400002    3 27.00000 101.39996
829 Evit100 Cu035     24 27.00000  41.00000  28.300001    4 27.00000 101.39996
830 Evit100 Cu035     24 27.00000  48.59998  41.000000    5 27.00000 101.39996
831 Evit100 Cu035     24 27.00000  56.39999  54.900002    6 27.00000 101.39996
832 Evit100 Cu035     24 27.00000  63.00000  70.500000    7 27.00000 101.39996
833 Evit100 Cu035     24 27.00000  75.50000  88.500000    8 27.00000 101.39996
834 Evit100 Cu035     24 27.00000  77.79999 103.300003    9 27.00000 101.39996
835 Evit100 Cu035     24 27.00000  85.79999 119.500000   10 27.00000 101.39996
836 Evit100 Cu035     24 27.00000  95.00000 124.500000   11 27.00000 101.39996
837 Evit100 Cu035     24 27.00000 101.39996 143.700000   12 27.00000 101.39996
838 Evit200 Cu175     24 27.29999  27.29999         NA    1 27.29999 100.50000
839 Evit200 Cu175     24 27.29999  31.20000   8.800000    2 27.29999 100.50000
840 Evit200 Cu175     24 27.29999  37.00000  20.000000    3 27.29999 100.50000
841 Evit200 Cu175     24 27.29999  43.89999  33.200001    4 27.29999 100.50000
842 Evit200 Cu175     24 27.29999  49.79999  44.800003    5 27.29999 100.50000
843 Evit200 Cu175     24 27.29999  57.19998  58.000000    6 27.29999 100.50000
844 Evit200 Cu175     24 27.29999  65.19995  74.600002    7 27.29999 100.50000
845 Evit200 Cu175     24 27.29999  73.19995  94.900002    8 27.29999 100.50000
846 Evit200 Cu175     24 27.29999  78.79999 108.800000    9 27.29999 100.50000
847 Evit200 Cu175     24 27.29999  87.39996 128.000000   10 27.29999 100.50000
848 Evit200 Cu175     24 27.29999  95.00000 149.000000   11 27.29999 100.50000
849 Evit200 Cu175     24 27.29999 100.50000 158.600006   12 27.29999 100.50000
850 Evit000 Cu175     24 25.70000  25.70000         NA    1 25.70000 103.50000
851 Evit000 Cu175     24 25.70000  28.70000   6.600000    2 25.70000 103.50000
852 Evit000 Cu175     24 25.70000  33.39999  15.800003    3 25.70000 103.50000
853 Evit000 Cu175     24 25.70000  40.00000  27.000000    4 25.70000 103.50000
854 Evit000 Cu175     24 25.70000  46.69998  40.000000    5 25.70000 103.50000
855 Evit000 Cu175     24 25.70000  56.59998  52.000000    6 25.70000 103.50000
856 Evit000 Cu175     24 25.70000  65.19995  66.000000    7 25.70000 103.50000
857 Evit000 Cu175     24 25.70000  73.19995  83.800003    8 25.70000 103.50000
858 Evit000 Cu175     24 25.70000  81.69995  99.800003    9 25.70000 103.50000
859 Evit000 Cu175     24 25.70000  90.29999 115.200001   10 25.70000 103.50000
860 Evit000 Cu175     24 25.70000  96.00000 133.200001   11 25.70000 103.50000
861 Evit000 Cu175     24 25.70000 103.50000 151.400002   12 25.70000 103.50000
        gain
1   72.09998
2   72.09998
3   72.09998
4   72.09998
5   72.09998
6   72.09998
7   72.09998
8   72.09998
9   72.09998
10  72.09998
11  72.09998
12  72.09998
13  78.39996
14  78.39996
15  78.39996
16  78.39996
17  78.39996
18  78.39996
19  78.39996
20  78.39996
21  78.39996
22  78.39996
23  78.39996
24  78.39996
25  77.79997
26  77.79997
27  77.79997
28  77.79997
29  77.79997
30  77.79997
31  77.79997
32  77.79997
33  77.79997
34  77.79997
35  77.79997
36  77.79997
37  77.69995
38  77.69995
39  77.69995
40  77.69995
41  77.69995
42  77.69995
43  77.69995
44  77.69995
45  77.69995
46  77.69995
47  77.69995
48  77.69995
49  89.90001
50  89.90001
51  89.90001
52  89.90001
53  89.90001
54  89.90001
55  89.90001
56  89.90001
57  89.90001
58  89.90001
59  89.90001
60  89.90001
61  73.19995
62  73.19995
63  73.19995
64  73.19995
65  73.19995
66  73.19995
67  73.19995
68  73.19995
69  73.19995
70  73.19995
71  73.19995
72  73.19995
73  74.59999
74  74.59999
75  74.59999
76  74.59999
77  74.59999
78  74.59999
79  74.59999
80  74.59999
81  74.59999
82  74.59999
83  74.59999
84  74.59999
85  72.29999
86  72.29999
87  72.29999
88  72.29999
89  72.29999
90  72.29999
91  72.29999
92  72.29999
93  72.29999
94  72.29999
95  72.29999
96  72.29999
97  64.79996
98  64.79996
99  64.79996
100 64.79996
101 64.79996
102 64.79996
103 64.79996
104 64.79996
105 64.79996
106 64.79996
107 64.79996
108 64.79996
109 70.90001
110 70.90001
111 70.90001
112 70.90001
113 70.90001
114 70.90001
115 70.90001
116 70.90001
117 70.90001
118 70.90001
119 70.90001
120 70.90001
121 50.79999
122 50.79999
123 50.79999
124 50.79999
125 50.79999
126 50.79999
127 50.79999
128 50.79999
129 50.79999
130 50.79999
131 50.79999
132 50.79999
133 72.50000
134 72.50000
135 72.50000
136 72.50000
137 72.50000
138 72.50000
139 72.50000
140 72.50000
141 72.50000
142 72.50000
143 72.50000
144 72.50000
145 72.19996
146 72.19996
147 72.19996
148 72.19996
149 72.19996
150 72.19996
151 72.19996
152 72.19996
153 72.19996
154 72.19996
155 72.19996
156 72.19996
157 77.79996
158 77.79996
159 77.79996
160 77.79996
161 77.79996
162 77.79996
163 77.79996
164 77.79996
165 77.79996
166 77.79996
167 77.79996
168 77.79996
169 82.59996
170 82.59996
171 82.59996
172 82.59996
173 82.59996
174 82.59996
175 82.59996
176 82.59996
177 82.59996
178 82.59996
179 82.59996
180 82.59996
181 64.09998
182 64.09998
183 64.09998
184 64.09998
185 64.09998
186 64.09998
187 64.09998
188 64.09998
189 64.09998
190 64.09998
191 64.09998
192 64.09998
193 77.00000
194 77.00000
195 77.00000
196 77.00000
197 77.00000
198 77.00000
199 77.00000
200 77.00000
201 77.00000
202 77.00000
203 77.00000
204 77.00000
205 71.19995
206 71.19995
207 71.19995
208 71.19995
209 71.19995
210 71.19995
211 71.19995
212 71.19995
213 71.19995
214 71.19995
215 71.19995
216 71.19995
217 79.09998
218 79.09998
219 79.09998
220 79.09998
221 79.09998
222 79.09998
223 79.09998
224 79.09998
225 79.09998
226 79.09998
227 79.09998
228 79.09998
229 66.09997
230 66.09997
231 66.09997
232 66.09997
233 66.09997
234 66.09997
235 66.09997
236 66.09997
237 66.09997
238 66.09997
239 66.09997
240 66.09997
241 64.09996
242 64.09996
243 64.09996
244 64.09996
245 64.09996
246 64.09996
247 64.09996
248 64.09996
249 64.09996
250 64.09996
251 64.09996
252 64.09996
253 73.99995
254 73.99995
255 73.99995
256 73.99995
257 73.99995
258 73.99995
259 73.99995
260 73.99995
261 73.99995
262 73.99995
263 73.99995
264 73.99995
265 66.19995
266 66.19995
267 66.19995
268 66.19995
269 66.19995
270 66.19995
271 66.19995
272 66.19995
273 66.19995
274 66.19995
275 66.19995
276 66.19995
277 74.59998
278 74.59998
279 74.59998
280 74.59998
281 74.59998
282 74.59998
283 74.59998
284 74.59998
285 74.59998
286 74.59998
287 74.59998
288 74.59998
289 70.59996
290 70.59996
291 70.59996
292 70.59996
293 70.59996
294 70.59996
295 70.59996
296 70.59996
297 70.59996
298 70.59996
299 70.59996
300 70.59996
301 61.10001
302 61.10001
303 61.10001
304 61.10001
305 61.10001
306 61.10001
307 61.10001
308 61.10001
309 61.10001
310 61.10001
311 61.10001
312 64.29997
313 64.29997
314 64.29997
315 64.29997
316 64.29997
317 64.29997
318 64.29997
319 64.29997
320 64.29997
321 64.29997
322 64.29997
323 68.50000
324 68.50000
325 68.50000
326 68.50000
327 68.50000
328 68.50000
329 68.50000
330 68.50000
331 68.50000
332 68.50000
333 68.50000
334 78.59996
335 78.59996
336 78.59996
337 78.59996
338 78.59996
339 78.59996
340 78.59996
341 78.59996
342 78.59996
343 78.59996
344 78.59996
345 78.59996
346 79.09998
347 79.09998
348 79.09998
349 79.09998
350 79.09998
351 79.09998
352 79.09998
353 79.09998
354 79.09998
355 79.09998
356 79.09998
357 79.09998
358 69.59998
359 69.59998
360 69.59998
361 69.59998
362 69.59998
363 69.59998
364 69.59998
365 69.59998
366 69.59998
367 69.59998
368 69.59998
369 69.59998
370 71.20001
371 71.20001
372 71.20001
373 71.20001
374 71.20001
375 71.20001
376 71.20001
377 71.20001
378 71.20001
379 71.20001
380 71.20001
381 71.20001
382 79.09997
383 79.09997
384 79.09997
385 79.09997
386 79.09997
387 79.09997
388 79.09997
389 79.09997
390 79.09997
391 79.09997
392 79.09997
393 79.09997
394 85.79999
395 85.79999
396 85.79999
397 85.79999
398 85.79999
399 85.79999
400 85.79999
401 85.79999
402 85.79999
403 85.79999
404 85.79999
405 85.79999
406 71.19995
407 71.19995
408 71.19995
409 71.19995
410 71.19995
411 71.19995
412 71.19995
413 71.19995
414 71.19995
415 71.19995
416 71.19995
417 71.19995
418 68.00000
419 68.00000
420 68.00000
421 68.00000
422 68.00000
423 68.00000
424 68.00000
425 68.00000
426 68.00000
427 68.00000
428 68.00000
429 68.00000
430 70.09998
431 70.09998
432 70.09998
433 70.09998
434 70.09998
435 70.09998
436 70.09998
437 70.09998
438 70.09998
439 70.09998
440 70.09998
441 70.09998
442 72.19996
443 72.19996
444 72.19996
445 72.19996
446 72.19996
447 72.19996
448 72.19996
449 72.19996
450 72.19996
451 72.19996
452 72.19996
453 72.19996
454 79.79999
455 79.79999
456 79.79999
457 79.79999
458 79.79999
459 79.79999
460 79.79999
461 79.79999
462 79.79999
463 79.79999
464 79.79999
465 79.79999
466 77.19995
467 77.19995
468 77.19995
469 77.19995
470 77.19995
471 77.19995
472 77.19995
473 77.19995
474 77.19995
475 77.19995
476 77.19995
477 77.19995
478 77.90000
479 77.90000
480 77.90000
481 77.90000
482 77.90000
483 77.90000
484 77.90000
485 77.90000
486 77.90000
487 77.90000
488 77.90000
489 77.90000
490 74.29997
491 74.29997
492 74.29997
493 74.29997
494 74.29997
495 74.29997
496 74.29997
497 74.29997
498 74.29997
499 74.29997
500 74.29997
501 74.29997
502 77.59997
503 77.59997
504 77.59997
505 77.59997
506 77.59997
507 77.59997
508 77.59997
509 77.59997
510 77.59997
511 77.59997
512 77.59997
513 77.59997
514 80.00000
515 80.00000
516 80.00000
517 80.00000
518 80.00000
519 80.00000
520 80.00000
521 80.00000
522 80.00000
523 80.00000
524 80.00000
525 80.00000
526 73.29997
527 73.29997
528 73.29997
529 73.29997
530 73.29997
531 73.29997
532 73.29997
533 73.29997
534 73.29997
535 73.29997
536 73.29997
537 73.29997
538 77.79999
539 77.79999
540 77.79999
541 77.79999
542 77.79999
543 77.79999
544 77.79999
545 77.79999
546 77.79999
547 77.79999
548 77.79999
549 77.79999
550 77.49999
551 77.49999
552 77.49999
553 77.49999
554 77.49999
555 77.49999
556 77.49999
557 77.49999
558 77.49999
559 77.49999
560 77.49999
561 77.49999
562 74.80002
563 74.80002
564 74.80002
565 74.80002
566 74.80002
567 74.80002
568 74.80002
569 74.80002
570 74.80002
571 74.80002
572 74.80002
573 74.80002
574 83.59999
575 83.59999
576 83.59999
577 83.59999
578 83.59999
579 83.59999
580 83.59999
581 83.59999
582 83.59999
583 83.59999
584 83.59999
585 83.59999
586 83.19998
587 83.19998
588 83.19998
589 83.19998
590 83.19998
591 83.19998
592 83.19998
593 83.19998
594 83.19998
595 83.19998
596 83.19998
597 83.19998
598 78.49995
599 78.49995
600 78.49995
601 78.49995
602 78.49995
603 78.49995
604 78.49995
605 78.49995
606 78.49995
607 78.49995
608 78.49995
609 78.49995
610 76.39998
611 76.39998
612 76.39998
613 76.39998
614 76.39998
615 76.39998
616 76.39998
617 76.39998
618 76.39998
619 76.39998
620 76.39998
621 76.39998
622 79.29999
623 79.29999
624 79.29999
625 79.29999
626 79.29999
627 79.29999
628 79.29999
629 79.29999
630 79.29999
631 79.29999
632 79.29999
633 79.29999
634 72.79999
635 72.79999
636 72.79999
637 72.79999
638 72.79999
639 72.79999
640 72.79999
641 72.79999
642 72.79999
643 72.79999
644 72.79999
645 72.79999
646 85.20001
647 85.20001
648 85.20001
649 85.20001
650 85.20001
651 85.20001
652 85.20001
653 85.20001
654 85.20001
655 85.20001
656 85.20001
657 85.20001
658 81.90001
659 81.90001
660 81.90001
661 81.90001
662 81.90001
663 81.90001
664 81.90001
665 81.90001
666 81.90001
667 81.90001
668 81.90001
669 81.90001
670 81.60001
671 81.60001
672 81.60001
673 81.60001
674 81.60001
675 81.60001
676 81.60001
677 81.60001
678 81.60001
679 81.60001
680 81.60001
681 81.60001
682 66.79999
683 66.79999
684 66.79999
685 66.79999
686 66.79999
687 66.79999
688 66.79999
689 66.79999
690 66.79999
691 66.79999
692 66.79999
693 66.79999
694 65.99995
695 65.99995
696 65.99995
697 65.99995
698 65.99995
699 65.99995
700 65.99995
701 65.99995
702 65.99995
703 65.99995
704 65.99995
705 65.99995
706 73.30000
707 73.30000
708 73.30000
709 73.30000
710 73.30000
711 73.30000
712 73.30000
713 73.30000
714 73.30000
715 73.30000
716 73.30000
717 73.30000
718 57.89996
719 57.89996
720 57.89996
721 57.89996
722 57.89996
723 57.89996
724 57.89996
725 57.89996
726 57.89996
727 57.89996
728 57.89996
729 57.89996
730 76.40001
731 76.40001
732 76.40001
733 76.40001
734 76.40001
735 76.40001
736 76.40001
737 76.40001
738 76.40001
739 76.40001
740 76.40001
741 76.40001
742 77.60001
743 77.60001
744 77.60001
745 77.60001
746 77.60001
747 77.60001
748 77.60001
749 77.60001
750 77.60001
751 77.60001
752 77.60001
753 77.60001
754 62.79999
755 62.79999
756 62.79999
757 62.79999
758 62.79999
759 62.79999
760 62.79999
761 62.79999
762 62.79999
763 62.79999
764 62.79999
765 62.79999
766 60.59997
767 60.59997
768 60.59997
769 60.59997
770 60.59997
771 60.59997
772 60.59997
773 60.59997
774 60.59997
775 60.59997
776 60.59997
777 60.59997
778 54.70000
779 54.70000
780 54.70000
781 54.70000
782 54.70000
783 54.70000
784 54.70000
785 54.70000
786 54.70000
787 54.70000
788 54.70000
789 54.70000
790 80.30000
791 80.30000
792 80.30000
793 80.30000
794 80.30000
795 80.30000
796 80.30000
797 80.30000
798 80.30000
799 80.30000
800 80.30000
801 80.30000
802 75.79999
803 75.79999
804 75.79999
805 75.79999
806 75.79999
807 75.79999
808 75.79999
809 75.79999
810 75.79999
811 75.79999
812 75.79999
813 75.79999
814 82.50000
815 82.50000
816 82.50000
817 82.50000
818 82.50000
819 82.50000
820 82.50000
821 82.50000
822 82.50000
823 82.50000
824 82.50000
825 82.50000
826 74.39996
827 74.39996
828 74.39996
829 74.39996
830 74.39996
831 74.39996
832 74.39996
833 74.39996
834 74.39996
835 74.39996
836 74.39996
837 74.39996
838 73.20001
839 73.20001
840 73.20001
841 73.20001
842 73.20001
843 73.20001
844 73.20001
845 73.20001
846 73.20001
847 73.20001
848 73.20001
849 73.20001
850 77.80000
851 77.80000
852 77.80000
853 77.80000
854 77.80000
855 77.80000
856 77.80000
857 77.80000
858 77.80000
859 77.80000
860 77.80000
861 77.80000
> 
> 
> 
> 
> cleanEx()
> nameEx("by_scale")
> ### * by_scale
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: by_scale
> ### Title: Scale a dataframe or matrix
> ### Aliases: by_scale scaleBy scale_by
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> scaleBy(~Species, data=iris, center=TRUE, scale=FALSE)
$setosa
   Sepal.Length Sepal.Width Petal.Length Petal.Width
1         0.094       0.072       -0.062      -0.046
2        -0.106      -0.428       -0.062      -0.046
3        -0.306      -0.228       -0.162      -0.046
4        -0.406      -0.328        0.038      -0.046
5        -0.006       0.172       -0.062      -0.046
6         0.394       0.472        0.238       0.154
7        -0.406      -0.028       -0.062       0.054
8        -0.006      -0.028        0.038      -0.046
9        -0.606      -0.528       -0.062      -0.046
10       -0.106      -0.328        0.038      -0.146
11        0.394       0.272        0.038      -0.046
12       -0.206      -0.028        0.138      -0.046
13       -0.206      -0.428       -0.062      -0.146
14       -0.706      -0.428       -0.362      -0.146
15        0.794       0.572       -0.262      -0.046
16        0.694       0.972        0.038       0.154
17        0.394       0.472       -0.162       0.154
18        0.094       0.072       -0.062       0.054
19        0.694       0.372        0.238       0.054
20        0.094       0.372        0.038       0.054
21        0.394      -0.028        0.238      -0.046
22        0.094       0.272        0.038       0.154
23       -0.406       0.172       -0.462      -0.046
24        0.094      -0.128        0.238       0.254
25       -0.206      -0.028        0.438      -0.046
26       -0.006      -0.428        0.138      -0.046
27       -0.006      -0.028        0.138       0.154
28        0.194       0.072        0.038      -0.046
29        0.194      -0.028       -0.062      -0.046
30       -0.306      -0.228        0.138      -0.046
31       -0.206      -0.328        0.138      -0.046
32        0.394      -0.028        0.038       0.154
33        0.194       0.672        0.038      -0.146
34        0.494       0.772       -0.062      -0.046
35       -0.106      -0.328        0.038      -0.046
36       -0.006      -0.228       -0.262      -0.046
37        0.494       0.072       -0.162      -0.046
38       -0.106       0.172       -0.062      -0.146
39       -0.606      -0.428       -0.162      -0.046
40        0.094      -0.028        0.038      -0.046
41       -0.006       0.072       -0.162       0.054
42       -0.506      -1.128       -0.162       0.054
43       -0.606      -0.228       -0.162      -0.046
44       -0.006       0.072        0.138       0.354
45        0.094       0.372        0.438       0.154
46       -0.206      -0.428       -0.062       0.054
47        0.094       0.372        0.138      -0.046
48       -0.406      -0.228       -0.062      -0.046
49        0.294       0.272        0.038      -0.046
50       -0.006      -0.128       -0.062      -0.046

$versicolor
    Sepal.Length Sepal.Width Petal.Length Petal.Width
51         1.064        0.43         0.44       0.074
52         0.464        0.43         0.24       0.174
53         0.964        0.33         0.64       0.174
54        -0.436       -0.47        -0.26      -0.026
55         0.564        0.03         0.34       0.174
56        -0.236        0.03         0.24      -0.026
57         0.364        0.53         0.44       0.274
58        -1.036       -0.37        -0.96      -0.326
59         0.664        0.13         0.34      -0.026
60        -0.736       -0.07        -0.36       0.074
61        -0.936       -0.77        -0.76      -0.326
62        -0.036        0.23        -0.06       0.174
63         0.064       -0.57        -0.26      -0.326
64         0.164        0.13         0.44       0.074
65        -0.336        0.13        -0.66      -0.026
66         0.764        0.33         0.14       0.074
67        -0.336        0.23         0.24       0.174
68        -0.136       -0.07        -0.16      -0.326
69         0.264       -0.57         0.24       0.174
70        -0.336       -0.27        -0.36      -0.226
71        -0.036        0.43         0.54       0.474
72         0.164        0.03        -0.26      -0.026
73         0.364       -0.27         0.64       0.174
74         0.164        0.03         0.44      -0.126
75         0.464        0.13         0.04      -0.026
76         0.664        0.23         0.14       0.074
77         0.864        0.03         0.54       0.074
78         0.764        0.23         0.74       0.374
79         0.064        0.13         0.24       0.174
80        -0.236       -0.17        -0.76      -0.326
81        -0.436       -0.37        -0.46      -0.226
82        -0.436       -0.37        -0.56      -0.326
83        -0.136       -0.07        -0.36      -0.126
84         0.064       -0.07         0.84       0.274
85        -0.536        0.23         0.24       0.174
86         0.064        0.63         0.24       0.274
87         0.764        0.33         0.44       0.174
88         0.364       -0.47         0.14      -0.026
89        -0.336        0.23        -0.16      -0.026
90        -0.436       -0.27        -0.26      -0.026
91        -0.436       -0.17         0.14      -0.126
92         0.164        0.23         0.34       0.074
93        -0.136       -0.17        -0.26      -0.126
94        -0.936       -0.47        -0.96      -0.326
95        -0.336       -0.07        -0.06      -0.026
96        -0.236        0.23        -0.06      -0.126
97        -0.236        0.13        -0.06      -0.026
98         0.264        0.13         0.04      -0.026
99        -0.836       -0.27        -1.26      -0.226
100       -0.236        0.03        -0.16      -0.026

$virginica
    Sepal.Length Sepal.Width Petal.Length Petal.Width
101       -0.288       0.326        0.448       0.474
102       -0.788      -0.274       -0.452      -0.126
103        0.512       0.026        0.348       0.074
104       -0.288      -0.074        0.048      -0.226
105       -0.088       0.026        0.248       0.174
106        1.012       0.026        1.048       0.074
107       -1.688      -0.474       -1.052      -0.326
108        0.712      -0.074        0.748      -0.226
109        0.112      -0.474        0.248      -0.226
110        0.612       0.626        0.548       0.474
111       -0.088       0.226       -0.452      -0.026
112       -0.188      -0.274       -0.252      -0.126
113        0.212       0.026       -0.052       0.074
114       -0.888      -0.474       -0.552      -0.026
115       -0.788      -0.174       -0.452       0.374
116       -0.188       0.226       -0.252       0.274
117       -0.088       0.026       -0.052      -0.226
118        1.112       0.826        1.148       0.174
119        1.112      -0.374        1.348       0.274
120       -0.588      -0.774       -0.552      -0.526
121        0.312       0.226        0.148       0.274
122       -0.988      -0.174       -0.652      -0.026
123        1.112      -0.174        1.148      -0.026
124       -0.288      -0.274       -0.652      -0.226
125        0.112       0.326        0.148       0.074
126        0.612       0.226        0.448      -0.226
127       -0.388      -0.174       -0.752      -0.226
128       -0.488       0.026       -0.652      -0.226
129       -0.188      -0.174        0.048       0.074
130        0.612       0.026        0.248      -0.426
131        0.812      -0.174        0.548      -0.126
132        1.312       0.826        0.848      -0.026
133       -0.188      -0.174        0.048       0.174
134       -0.288      -0.174       -0.452      -0.526
135       -0.488      -0.374        0.048      -0.626
136        1.112       0.026        0.548       0.274
137       -0.288       0.426        0.048       0.374
138       -0.188       0.126       -0.052      -0.226
139       -0.588       0.026       -0.752      -0.226
140        0.312       0.126       -0.152       0.074
141        0.112       0.126        0.048       0.374
142        0.312       0.126       -0.452       0.274
143       -0.788      -0.274       -0.452      -0.126
144        0.212       0.226        0.348       0.274
145        0.112       0.326        0.148       0.474
146        0.112       0.026       -0.352       0.274
147       -0.288      -0.474       -0.552      -0.126
148       -0.088       0.026       -0.352      -0.026
149       -0.388       0.426       -0.152       0.274
150       -0.688       0.026       -0.452      -0.226

> scaleBy(~1, data=iris, center=TRUE, scale=FALSE)
$<NA>
NULL

> 
> scale_by(iris, ~Species)
$setosa
   Sepal.Length Sepal.Width Petal.Length Petal.Width
1    0.26667447  0.18994136   -0.3570112  -0.4364923
2   -0.30071802 -1.12909583   -0.3570112  -0.4364923
3   -0.86811050 -0.60148096   -0.9328358  -0.4364923
4   -1.15180675 -0.86528840    0.2188133  -0.4364923
5   -0.01702177  0.45374879   -0.3570112  -0.4364923
6    1.11776320  1.24517111    1.3704625   1.4613004
7   -1.15180675 -0.07386608   -0.3570112   0.5124040
8   -0.01702177 -0.07386608    0.2188133  -0.4364923
9   -1.71919923 -1.39290327   -0.3570112  -0.4364923
10  -0.30071802 -0.86528840    0.2188133  -1.3853887
11   1.11776320  0.71755623    0.2188133  -0.4364923
12  -0.58441426 -0.07386608    0.7946379  -0.4364923
13  -0.58441426 -1.12909583   -0.3570112  -1.3853887
14  -2.00289548 -1.12909583   -2.0844850  -1.3853887
15   2.25254817  1.50897854   -1.5086604  -0.4364923
16   1.96885193  2.56420830    0.2188133   1.4613004
17   1.11776320  1.24517111   -0.9328358   1.4613004
18   0.26667447  0.18994136   -0.3570112   0.5124040
19   1.96885193  0.98136367    1.3704625   0.5124040
20   0.26667447  0.98136367    0.2188133   0.5124040
21   1.11776320 -0.07386608    1.3704625  -0.4364923
22   0.26667447  0.71755623    0.2188133   1.4613004
23  -1.15180675  0.45374879   -2.6603096  -0.4364923
24   0.26667447 -0.33767352    1.3704625   2.4101967
25  -0.58441426 -0.07386608    2.5221117  -0.4364923
26  -0.01702177 -1.12909583    0.7946379  -0.4364923
27  -0.01702177 -0.07386608    0.7946379   1.4613004
28   0.55037071  0.18994136    0.2188133  -0.4364923
29   0.55037071 -0.07386608   -0.3570112  -0.4364923
30  -0.86811050 -0.60148096    0.7946379  -0.4364923
31  -0.58441426 -0.86528840    0.7946379  -0.4364923
32   1.11776320 -0.07386608    0.2188133   1.4613004
33   0.55037071  1.77278598    0.2188133  -1.3853887
34   1.40145944  2.03659342   -0.3570112  -0.4364923
35  -0.30071802 -0.86528840    0.2188133  -0.4364923
36  -0.01702177 -0.60148096   -1.5086604  -0.4364923
37   1.40145944  0.18994136   -0.9328358  -0.4364923
38  -0.30071802  0.45374879   -0.3570112  -1.3853887
39  -1.71919923 -1.12909583   -0.9328358  -0.4364923
40   0.26667447 -0.07386608    0.2188133  -0.4364923
41  -0.01702177  0.18994136   -0.9328358   0.5124040
42  -1.43550299 -2.97574790   -0.9328358   0.5124040
43  -1.71919923 -0.60148096   -0.9328358  -0.4364923
44  -0.01702177  0.18994136    0.7946379   3.3590930
45   0.26667447  0.98136367    2.5221117   1.4613004
46  -0.58441426 -1.12909583   -0.3570112   0.5124040
47   0.26667447  0.98136367    0.7946379  -0.4364923
48  -1.15180675 -0.60148096   -0.3570112  -0.4364923
49   0.83406695  0.71755623    0.2188133  -0.4364923
50  -0.01702177 -0.33767352   -0.3570112  -0.4364923

$versicolor
    Sepal.Length Sepal.Width Petal.Length Petal.Width
51    2.06133180  1.37030688   0.93634757   0.3742048
52    0.89892665  1.37030688   0.51073504   0.8798869
53    1.86759761  1.05163086   1.36196010   0.8798869
54   -0.84468108 -1.49777728  -0.55329629  -0.1314774
55    1.09266084  0.09560281   0.72354130   0.8798869
56   -0.45721269  0.09560281   0.51073504  -0.1314774
57    0.70519246  1.68898289   0.93634757   1.3855691
58   -2.00708623 -1.17910126  -2.04294015  -1.6485238
59    1.28639503  0.41427882   0.72354130  -0.1314774
60   -1.42588365 -0.22307321  -0.76610255   0.3742048
61   -1.81335204 -2.45380533  -1.61732761  -1.6485238
62   -0.06974431  0.73295484  -0.12768376   0.8798869
63    0.12398988 -1.81645330  -0.55329629  -1.6485238
64    0.31772407  0.41427882   0.93634757   0.3742048
65   -0.65094688  0.41427882  -1.40452135  -0.1314774
66    1.48012923  1.05163086   0.29792877   0.3742048
67   -0.65094688  0.73295484   0.51073504   0.8798869
68   -0.26347850 -0.22307321  -0.34049002  -1.6485238
69    0.51145827 -1.81645330   0.51073504   0.8798869
70   -0.65094688 -0.86042525  -0.76610255  -1.1428417
71   -0.06974431  1.37030688   1.14915383   2.3969334
72    0.31772407  0.09560281  -0.55329629  -0.1314774
73    0.70519246 -0.86042525   1.36196010   0.8798869
74    0.31772407  0.09560281   0.93634757  -0.6371595
75    0.89892665  0.41427882   0.08512251  -0.1314774
76    1.28639503  0.73295484   0.29792877   0.3742048
77    1.67386342  0.09560281   1.14915383   0.3742048
78    1.48012923  0.73295484   1.57476636   1.8912512
79    0.12398988  0.41427882   0.51073504   0.8798869
80   -0.45721269 -0.54174923  -1.61732761  -1.6485238
81   -0.84468108 -1.17910126  -0.97890882  -1.1428417
82   -0.84468108 -1.17910126  -1.19171508  -1.6485238
83   -0.26347850 -0.22307321  -0.76610255  -0.6371595
84    0.12398988 -0.22307321   1.78757263   1.3855691
85   -1.03841527  0.73295484   0.51073504   0.8798869
86    0.12398988  2.00765891   0.51073504   1.3855691
87    1.48012923  1.05163086   0.93634757   0.8798869
88    0.70519246 -1.49777728   0.29792877  -0.1314774
89   -0.65094688  0.73295484  -0.34049002  -0.1314774
90   -0.84468108 -0.86042525  -0.55329629  -0.1314774
91   -0.84468108 -0.54174923   0.29792877  -0.6371595
92    0.31772407  0.73295484   0.72354130   0.3742048
93   -0.26347850 -0.54174923  -0.55329629  -0.6371595
94   -1.81335204 -1.49777728  -2.04294015  -1.6485238
95   -0.65094688 -0.22307321  -0.12768376  -0.1314774
96   -0.45721269  0.73295484  -0.12768376  -0.6371595
97   -0.45721269  0.41427882  -0.12768376  -0.1314774
98    0.51145827  0.41427882   0.08512251  -0.1314774
99   -1.61961784 -0.86042525  -2.68135894  -1.1428417
100  -0.45721269  0.09560281  -0.34049002  -0.1314774

$virginica
    Sepal.Length Sepal.Width Petal.Length Petal.Width
101   -0.4529159   1.0108633   0.81174906  1.72583253
102   -1.2392283  -0.8496213  -0.81899682 -0.45876561
103    0.8051839   0.0806210   0.63055507  0.26943377
104   -0.4529159  -0.2294598   0.08697311 -0.82286530
105   -0.1383910   0.0806210   0.44936109  0.63353346
106    1.5914963   0.0806210   1.89891298  0.26943377
107   -2.6545906  -1.4697828  -1.90616074 -1.18696499
108    1.1197088  -0.2294598   1.35533102 -0.82286530
109    0.1761340  -1.4697828   0.44936109 -0.82286530
110    0.9624464   1.9411055   0.99294305  1.72583253
111   -0.1383910   0.7007825  -0.81899682 -0.09466592
112   -0.2956535  -0.8496213  -0.45660885 -0.45876561
113    0.3333965   0.0806210  -0.09422087  0.26943377
114   -1.3964908  -1.4697828  -1.00019081 -0.09466592
115   -1.2392283  -0.5395405  -0.81899682  1.36173284
116   -0.2956535   0.7007825  -0.45660885  0.99763315
117   -0.1383910   0.0806210  -0.09422087 -0.82286530
118    1.7487587   2.5612670   2.08010696  0.63353346
119    1.7487587  -1.1597020   2.44249494  0.99763315
120   -0.9247034  -2.4000250  -1.00019081 -1.91516437
121    0.4906589   0.7007825   0.26816710  0.99763315
122   -1.5537533  -0.5395405  -1.18138479 -0.09466592
123    1.7487587  -0.5395405   2.08010696 -0.09466592
124   -0.4529159  -0.8496213  -1.18138479 -0.82286530
125    0.1761340   1.0108633   0.26816710  0.26943377
126    0.9624464   0.7007825   0.81174906 -0.82286530
127   -0.6101784  -0.5395405  -1.36257878 -0.82286530
128   -0.7674409   0.0806210  -1.18138479 -0.82286530
129   -0.2956535  -0.5395405   0.08697311  0.26943377
130    0.9624464   0.0806210   0.44936109 -1.55106468
131    1.2769713  -0.5395405   0.99294305 -0.45876561
132    2.0632837   2.5612670   1.53652500 -0.09466592
133   -0.2956535  -0.5395405   0.08697311  0.63353346
134   -0.4529159  -0.5395405  -0.81899682 -1.91516437
135   -0.7674409  -1.1597020   0.08697311 -2.27926406
136    1.7487587   0.0806210   0.99294305  0.99763315
137   -0.4529159   1.3209440   0.08697311  1.36173284
138   -0.2956535   0.3907017  -0.09422087 -0.82286530
139   -0.9247034   0.0806210  -1.36257878 -0.82286530
140    0.4906589   0.3907017  -0.27541486  0.26943377
141    0.1761340   0.3907017   0.08697311  1.36173284
142    0.4906589   0.3907017  -0.81899682  0.99763315
143   -1.2392283  -0.8496213  -0.81899682 -0.45876561
144    0.3333965   0.7007825   0.63055507  0.99763315
145    0.1761340   1.0108633   0.26816710  1.72583253
146    0.1761340   0.0806210  -0.63780283  0.99763315
147   -0.4529159  -1.4697828  -1.00019081 -0.45876561
148   -0.1383910   0.0806210  -0.63780283 -0.09466592
149   -0.6101784   1.3209440  -0.27541486  0.99763315
150   -1.0819658   0.0806210  -0.81899682 -0.82286530

> scale_by(iris, ~1)
$<NA>
NULL

> 
> ## Not combine list of dataframes to one dataframe e.g. as:
> a <- scale_by(iris, ~Species)
> d <- do.call(rbind, a)
> 
> 
> 
> cleanEx()
> nameEx("carcass")
> ### * carcass
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: carcass
> ### Title: Lean meat contents of 344 pig carcasses
> ### Aliases: carcass carcassall
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(carcass)
> head(carcass)
  Fat11 Meat11 Fat12 Meat12 Fat13 Meat13 LeanMeat
1    17     51    12     51    12     61 56.52475
2    17     49    15     48    15     54 57.57958
3    14     38    11     34    11     40 55.88994
4    17     58    12     58    11     58 61.81719
5    14     51    12     48    13     54 62.95964
6    20     40    14     40    14     45 54.57870
> 
> 
> 
> 
> cleanEx()
> nameEx("codstom")
> ### * codstom
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: codstom
> ### Title: Diet of Atlantic cod in the Gulf of St. Lawrence (Canada)
> ### Aliases: codstom
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(codstom)
> str(codstom)
'data.frame':	10000 obs. of  9 variables:
 $ region     : Factor w/ 2 levels "SGSL","NGSL": 1 1 1 1 1 1 1 1 1 1 ...
 $ ship.type  : Factor w/ 6 levels "2","3","31","34",..: 1 1 1 1 1 1 1 1 1 1 ...
 $ ship.id    : Factor w/ 9 levels "11558","11712",..: NA NA NA NA NA NA NA NA NA NA ...
 $ trip       : Factor w/ 17 levels "10","11","12",..: 17 17 17 17 17 17 17 17 17 17 ...
 $ set        : num  3 3 3 3 3 3 3 3 3 3 ...
 $ fish.id    : int  30 30 30 31 31 31 32 32 32 33 ...
 $ fish.length: num  530 530 530 490 490 490 470 470 470 480 ...
 $ prey.mass  : num  27.06 1.47 4.77 34.11 0.17 ...
 $ prey.type  : Factor w/ 26 levels "Ammodytes_sp",..: 17 17 17 17 17 17 17 17 17 17 ...
> # removes multiple occurences of same prey.type in stomachs
> codstom1 <- summaryBy(prey.mass ~ 
+                       region + ship.type + ship.id + trip + set + fish.id + prey.type,
+                       data = codstom, 
+                       FUN = sum) 
> 
> # keeps a single line per stomach with the total mass of stomach content
> codstom2 <- summaryBy(prey.mass ~ region + ship.type + ship.id + trip + set + fish.id,
+                       data = codstom, 
+                       FUN = sum) 
> 
> # mean prey mass per stomach for each trip
> codstom3 <- summaryBy(prey.mass.sum ~ region + ship.type + ship.id + trip,
+                       data = codstom2, FUN = mean) 
> 
> ## Not run: 
> ##D           
> ##D # wide version, one line per stomach, one column per prey type
> ##D library(reshape)
> ##D codstom4 <- melt(codstom, id = c(1:7, 9))
> ##D codstom5 <- cast(codstom4, 
> ##D                  region + ship.type + ship.id + trip + set + fish.id + fish.length ~ 
> ##D                  prey.type, sum)
> ##D k <- length(names(codstom5))
> ##D prey_col <- 8:k
> ##D out <- codstom5[,prey_col]
> ##D out[is.na(out)] <- 0
> ##D codstom5[,prey_col] <- out
> ##D codstom5$total.content <- rowSums(codstom5[, prey_col])
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("crickets")
> ### * crickets
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: crickets
> ### Title: crickets data
> ### Aliases: crickets
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 	
> data(crickets)
> coplot(pps ~ temp | species, data=crickets) 
> 
> 
> 
> cleanEx()
> nameEx("crimeRate")
> ### * crimeRate
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: crimeRate
> ### Title: crimeRate
> ### Aliases: crimeRate
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 	
> data(crimeRate)
> 
> 
> 
> 
> cleanEx()
> nameEx("crime_rate")
> ### * crime_rate
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: crime_rate
> ### Title: crimeRate
> ### Aliases: crime_rate
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 	
> data(crime_rate)
> 
> 
> 
> 
> cleanEx()
> nameEx("data-prostate")
> ### * data-prostate
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: prostate
> ### Title: Prostate Tumor Gene Expression Dataset
> ### Aliases: prostate
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(prostate)
> prostate$x[1:5,1:5]
           [,1]       [,2]       [,3]       [,4]       [,5]
[1,] -0.9271777 -0.7400391 -0.5320164 -1.0978915 -0.9866733
[2,] -0.8358990 -0.8358990 -0.5856470 -0.8358990 -0.3297677
[3,]  0.2360733  0.2526450 -1.1543512 -0.3723715 -0.3388998
[4,] -0.7486226 -0.4391652  0.7909530 -1.0338757  0.2411153
[5,]  0.1012387 -0.2982854 -1.1215187 -0.9577135  0.3422581
> prostate$y
  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [38] 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
> 
> 
> 
> cleanEx()
> nameEx("data-wine")
> ### * data-wine
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: data-wine
> ### Title: Chemical composition of wine
> ### Aliases: data-wine wine
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(wine)
> ## maybe str(wine) ; plot(wine) ...
> 
> 
> 
> 
> cleanEx()
> nameEx("data_breastcancer")
> ### * data_breastcancer
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: data_breastcancer
> ### Title: Gene expression signatures for p53 mutation status in 250 breast
> ###   cancer samples
> ### Aliases: data_breastcancer breastcancer
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(breastcancer)
> bc <- breastcancer
> pairs(bc[,1:5], col=bc$code)
> 
> train <- sample(1:nrow(bc), 50)
> table(bc$code[train])

   case control 
     12      38 
> ## Not run: 
> ##D library(MASS)
> ##D z <- lda(code ~ ., data=bc, prior = c(1, 1) / 2, subset = train)
> ##D pc <- predict(z, bc[-train, ])$class
> ##D pc
> ##D bc[-train, "code"]
> ##D table(pc, bc[-train, "code"])
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("data_budworm")
> ### * data_budworm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: data_budworm
> ### Title: Budworm data
> ### Aliases: data_budworm budworm
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(budworm)
> 
> ## function to caclulate the empirical logits
> empirical.logit<- function(nevent,ntotal) {
+    y <- log((nevent + 0.5) / (ntotal - nevent + 0.5))
+    y
+ }
> 
> 
> # plot the empirical logits against log-dose
> 
> log.dose <- log(budworm$dose)
> emp.logit <- empirical.logit(budworm$ndead, budworm$ntotal)
> plot(log.dose, emp.logit, type='n', xlab='log-dose',ylab='emprirical logit')
> title('budworm: emprirical logits of probability to die ')
> male <- budworm$sex=='male'
> female <- budworm$sex=='female'
> lines(log.dose[male], emp.logit[male], type='b', lty=1, col=1)
> lines(log.dose[female], emp.logit[female], type='b', lty=2, col=2)
> legend(0.5, 2, legend=c('male', 'female'), lty=c(1,2), col=c(1,2))
> 
> ## Not run: 
> ##D * SAS example;
> ##D data budworm;
> ##D infile 'budworm.txt' firstobs=2;
> ##D input sex dose ndead ntotal;
> ##D run;
> ## End(Not run)
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("data_cad")
> ### * data_cad
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: data_cad
> ### Title: Coronary artery disease data
> ### Aliases: data_cad cad1 cad2
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(cad1)
> ## maybe str(cad1) ; plot(cad1) ...
> 
> 
> 
> 
> cleanEx()
> nameEx("data_mathmark")
> ### * data_mathmark
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: data_mathmark
> ### Title: Mathematics marks for students
> ### Aliases: data_mathmark mathmark math
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(mathmark)
> 
> 
> 
> 
> cleanEx()
> nameEx("data_personality")
> ### * data_personality
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: data_personality
> ### Title: Personality traits
> ### Aliases: data_personality personality
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(personality)
> str(personality)
'data.frame':	240 obs. of  32 variables:
 $ distant: int  2 3 6 3 7 7 3 7 2 4 ...
 $ talkatv: int  7 8 6 7 3 6 6 6 6 7 ...
 $ carelss: int  1 2 2 6 3 7 8 2 2 3 ...
 $ hardwrk: int  4 7 5 7 5 6 6 9 8 6 ...
 $ anxious: int  7 5 1 8 8 7 6 7 2 3 ...
 $ agreebl: int  8 8 8 8 6 8 7 8 7 7 ...
 $ tense  : int  5 4 2 2 7 7 3 6 4 3 ...
 $ kind   : int  9 8 9 8 2 8 5 7 7 7 ...
 $ opposng: int  5 5 2 3 3 5 3 2 4 5 ...
 $ relaxed: int  6 7 8 7 3 5 7 4 8 6 ...
 $ disorgn: int  3 5 7 2 5 6 7 4 3 3 ...
 $ outgoin: int  2 8 6 5 2 5 8 6 8 5 ...
 $ approvn: int  7 7 7 6 5 6 7 5 7 7 ...
 $ shy    : int  9 6 5 4 8 8 5 4 3 5 ...
 $ discipl: int  5 7 5 6 7 5 7 8 6 7 ...
 $ harsh  : int  5 3 2 2 5 3 2 6 4 6 ...
 $ persevr: int  8 7 5 8 6 6 4 8 8 7 ...
 $ friendl: int  9 7 8 8 2 7 8 6 8 6 ...
 $ worryin: int  9 5 3 3 8 7 6 5 2 4 ...
 $ respnsi: int  9 7 9 8 7 7 2 8 8 7 ...
 $ contrar: int  5 5 2 2 3 5 2 5 3 4 ...
 $ sociabl: int  9 8 8 6 2 4 9 7 8 7 ...
 $ lazy   : int  7 2 5 3 6 5 6 4 3 3 ...
 $ coopera: int  9 7 8 8 6 7 6 8 8 7 ...
 $ quiet  : int  9 6 7 4 7 8 4 6 5 5 ...
 $ organiz: int  5 6 4 7 5 6 4 6 7 6 ...
 $ criticl: int  5 4 5 6 5 6 6 4 7 5 ...
 $ lax    : int  5 3 5 6 3 4 9 3 3 3 ...
 $ laidbck: int  7 7 7 6 3 4 9 2 6 4 ...
 $ withdrw: int  5 2 6 4 7 6 2 5 3 4 ...
 $ givinup: int  5 2 2 3 5 4 3 6 1 2 ...
 $ easygon: int  8 7 8 7 5 7 8 6 7 5 ...
> 
> 
> 
> cleanEx()
> nameEx("descStat")
> ### * descStat
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: descStat
> ### Title: Computing simple descriptive statistics of a numeric vector.
> ### Aliases: descStat
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> x <- c(1, 2, 3, 4, NA, NaN)
> descStat(x)
        n       obs      mean    median        sd        cv       min       max 
6.0000000 4.0000000 2.5000000 2.5000000 1.2909944 0.5163978 1.0000000 4.0000000 
> 
> 
> 
> 
> cleanEx()
> nameEx("dietox")
> ### * dietox
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dietox
> ### Title: Growth curves of pigs in a 3x3 factorial experiment
> ### Aliases: dietox
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(dietox)
> head(dietox)
   Pig    Evit    Cu Litter Start   Weight      Feed Time
1 4601 Evit000 Cu000      1  26.5 26.50000        NA    1
2 4601 Evit000 Cu000      1  26.5 27.59999  5.200005    2
3 4601 Evit000 Cu000      1  26.5 36.50000 17.600000    3
4 4601 Evit000 Cu000      1  26.5 40.29999 28.500000    4
5 4601 Evit000 Cu000      1  26.5 49.09998 45.200001    5
6 4601 Evit000 Cu000      1  26.5 55.39999 56.900002    6
> coplot(Weight ~ Time | Evit * Cu, data=dietox)
> 
> 
> 
> 
> cleanEx()
> nameEx("esticon")
> ### * esticon
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: esticon
> ### Title: Contrasts for lm, glm, lme, and geeglm objects
> ### Aliases: esticon coef.esticon_class summary.esticon_class
> ###   confint.esticon_class vcov.esticon_class
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> data(iris)
> lm1  <- lm(Sepal.Length ~ Sepal.Width + Species + Sepal.Width : Species, data=iris)
> ## Note that the setosa parameters are set to zero
> coef(lm1)
                  (Intercept)                   Sepal.Width 
                    2.6390012                     0.6904897 
            Speciesversicolor              Speciesvirginica 
                    0.9007335                     1.2678352 
Sepal.Width:Speciesversicolor  Sepal.Width:Speciesvirginica 
                    0.1745880                     0.2110448 
> 
> ## Estimate the intercept for versicolor
> lambda1 <- c(1, 0, 1, 0, 0, 0)
> esticon(lm1, L=lambda1)
       estimate  std.error  statistic    p.value      beta0  df
[1,] 3.5397e+00 5.5802e-01 6.3434e+00 2.7352e-09 0.0000e+00 144
> 
> ## Estimate the difference between versicolor and virgica intercept
> ## and test if the difference is 1
> lambda2 <- c(0, 1, -1, 0, 0, 0)
> esticon(lm1, L=lambda2, beta0=1)
     estimate std.error statistic  p.value    beta0  df
[1,] -0.21024   0.69077  -1.75202  0.08190  1.00000 144
> 
> ## Do both estimates at one time
> esticon(lm1, L=rbind(lambda1, lambda2), beta0=c(0, 1))
           estimate   std.error   statistic     p.value       beta0  df
lambda1  3.5397e+00  5.5802e-01  6.3434e+00  2.7352e-09  0.0000e+00 144
lambda2 -2.1024e-01  6.9077e-01 -1.7520e+00  8.1900e-02  1.0000e+00 144
> 
> ## Make a combined test for that the difference between versicolor and virgica intercept
> ## and difference between versicolor and virginica slope is zero:
> lambda3 <- c(0, 0, 0, 0, 1, -1)
> esticon(lm1, L=rbind(lambda2, lambda3), joint.test=TRUE)
     X2.stat DF Pr(>|X^2|)
1 0.09560902  2  0.9533201
> 
> # Example using esticon on coxph objects (thanks to Alessandro A. Leidi).
> # Using dataset 'veteran' in the survival package
> # from the Veterans' Administration Lung Cancer study
> 
> if (require(survival)){
+ data(veteran)
+ sapply(veteran, class)
+ levels(veteran$celltype)
+ attach(veteran)
+ veteran.s <- Surv(time, status)
+ coxmod <- coxph(veteran.s ~ age + celltype + trt, method='breslow')
+ summary(coxmod)
+ 
+ # compare a subject 50 years old with celltype 1
+ # to a subject 70 years old with celltype 2
+ # both subjects on the same treatment
+ AvB <- c(-20, -1, 0, 0, 0)
+ 
+ # compare a subject 40 years old with celltype 2 on treat=0
+ # to a subject 35 years old with celltype 3 on treat=1
+ CvB <- c(5, 1, -1, 0, -1)
+ 
+ est <- esticon(coxmod, L=rbind(AvB, CvB))
+ est
+ ##exp(est[, c(2, 7, 8)])
+ }
Loading required package: survival
Warning in data(veteran) : data set ‘veteran’ not found
       estimate   std.error   statistic     p.value       beta0 df
AvB -1.15579745  0.31242070 13.68623052  0.00021603  0.00000000  1
CvB -0.24580560  0.28171444  0.76131664  0.38291680  0.00000000  1
> 
> 
> 
> cleanEx()

detaching ‘veteran’, ‘package:survival’

> nameEx("expr_to_fun")
> ### * expr_to_fun
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: expr_to_fun
> ### Title: Convert expression into function object.
> ### Aliases: expr_to_fun
> 
> ### ** Examples
> 
> 
> ee  <- expression(b1 + (b0 - b1)*exp(-k*x) + b2*x)
> ff1 <- expr_to_fun(ee)
> formals(ff1)
$b0


$b1


$b2


$k


$x


> 
> ff2 <- expr_to_fun(ee, vec_arg=TRUE)
> formals(ff2)
$parm


$length_parm
[1] 5

$names_parm
c("b0", "b1", "b2", "k", "x")

> formals(ff2)$length_parm
[1] 5
> formals(ff2)$names_parm |> eval()
[1] "b0" "b1" "b2" "k"  "x" 
> 
> ee <- expression(matrix(c(x1+x2, x1-x2, x1^2+x2^2, x1^3+x2^3), nrow=2))
> ff1 <- expr_to_fun(ee)
> ff2 <- expr_to_fun(ee, vec_arg=TRUE)
> 
> formals(ff2)
$parm


$length_parm
[1] 2

$names_parm
c("x1", "x2")

> formals(ff2)$length_parm
[1] 2
> formals(ff2)$names_parm |> eval()
[1] "x1" "x2"
> 
> 
> 
> 
> cleanEx()
> nameEx("fev")
> ### * fev
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: fev
> ### Title: Forced expiratory volume in children
> ### Aliases: fev
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(fev)
> summary(fev)
      Age              FEV              Ht         Gender    Smoke    
 Min.   : 3.000   Min.   :0.791   Min.   :117.0   Girl:318   No :589  
 1st Qu.: 8.000   1st Qu.:1.981   1st Qu.:145.0   Boy :336   Yes: 65  
 Median :10.000   Median :2.547   Median :156.0                       
 Mean   : 9.931   Mean   :2.637   Mean   :155.3                       
 3rd Qu.:12.000   3rd Qu.:3.119   3rd Qu.:166.0                       
 Max.   :19.000   Max.   :5.793   Max.   :188.0                       
> 
> 
> 
> 
> cleanEx()
> nameEx("firstlastobs")
> ### * firstlastobs
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: firstlastobs
> ### Title: Locate the index of the first/last unique value
> ### Aliases: firstlastobs lastobs firstobs firstobs.default lastobs.default
> ###   firstobs.formula lastobs.formula
> ### Keywords: utilities
> 
> ### ** Examples
> 
> x <- c(rep(1, 5), rep(2, 3), rep(3, 7), rep(1, 4))
> firstobs(x)
[1] 1 6 9
> lastobs(x)
[1]  8 15 19
> data(dietox)
> firstobs(~Pig, data=dietox)
 [1]   1  13  25  37  49  61  73  85  97 109 121 133 145 157 169 181 193 205 217
[20] 229 241 253 265 277 289 301 312 323 334 346 358 370 382 394 406 418 430 442
[39] 454 466 478 490 502 514 526 538 550 562 574 586 598 610 622 634 646 658 670
[58] 682 694 706 718 730 742 754 766 778 790 802 814 826 838 850
> lastobs(~Pig, data=dietox)
 [1]  12  24  36  48  60  72  84  96 108 120 132 144 156 168 180 192 204 216 228
[20] 240 252 264 276 288 300 311 322 333 345 357 369 381 393 405 417 429 441 453
[39] 465 477 489 501 513 525 537 549 561 573 585 597 609 621 633 645 657 669 681
[58] 693 705 717 729 741 753 765 777 789 801 813 825 837 849 861
> 
> 
> 
> 
> cleanEx()
> nameEx("formula_ops")
> ### * formula_ops
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: formula_ops
> ### Title: Formula operations and coercion.
> ### Aliases: formula_ops formula_add_str formula_add formula_poly
> ###   formula_nth formula_to_interaction_matrix formula_chr_to_form to_str
> ###   terms_labels simplify_rhs simplify_rhs.formula simplify_rhs.character
> ###   as_rhs_frm as_lhs_frm as_rhs_chr as_lhs_chr unique_formula
> 
> ### ** Examples
> 
> 
> formula_poly("z", 2)
~z + I(z^2)
<environment: 0x55c0c491bc38>
> formula_poly("z", 2, noint=TRUE)
~-1 + z + I(z^2)
<environment: 0x55c0c49259d0>
> 
> as_rhs_chr(c("a", "b", "z"))
[1] "abz"
> as_rhs_chr(c("a*b", "z"))
[1] "a*bz"
> 
> as_rhs_chr(y~a+b+z)
[1] "a+b+z"
> as_rhs_chr(y~a+b+z, string=TRUE)
[1] "a+b+z"
> as_rhs_chr(y~a+b+z)
[1] "a+b+z"
> as_rhs_chr(y~a*b+z)
[1] "a+a:b+b+z"
> as_rhs_chr(y~a*b+z, string=TRUE)
[1] "a+a:b+b+z"
> 
> as_lhs_chr(y~a*b+z)
[1] "y"
> as_lhs_chr(log(y)~a*b+z)      ## Not what one might expect
[1] "log" "y"  
> as_lhs_chr(cbind(y, u)~a*b+z) ## Not what one might expect
[1] "cbind" "y"     "u"    
> 
> formula_chr_to_form(c("a*b", "z"))
~a * b + z
<environment: 0x55c0c49acb88>
> formula_chr_to_form(c("a*b", "z"), "y")
y ~ a * b + z
<environment: 0x55c0c49b2300>
> formula_chr_to_form(c("a*b", "z"), "log(y)")
log(y) ~ a * b + z
<environment: 0x55c0c49b9d88>
> 
> formula_add(y~a*b+z, ~-1)
y ~ a + a:b + b + z
<environment: 0x55c0c4a021a0>
> formula_add(y~a*b+z, ~a:b)
y ~ a + a:b + b + z
<environment: 0x55c0c4a75d10>
> 
> formula_add_str(y~x1 + x2, "x3")
y ~ x1 + x2 + x3
> formula_add_str(y~x1 + x2, "x1")
y ~ x1 + x2
> formula_add_str(y~x1 + x2, "x1", op="-")
y ~ x2
> 
> 
> 
> 
> cleanEx()
> nameEx("haldCement")
> ### * haldCement
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: haldCement
> ### Title: Heat development in cement under hardening.
> ### Aliases: haldCement
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(haldCement)
> 
> if( interactive() ){
+ pairs( haldCement )
+ }
> m <- lm(y ~ x1 + x2 + x3 + x4, data=haldCement)
> summary(m)

Call:
lm(formula = y ~ x1 + x2 + x3 + x4, data = haldCement)

Residuals:
    Min      1Q  Median      3Q     Max 
-3.1750 -1.6709  0.2508  1.3783  3.9254 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)  
(Intercept)  62.4054    70.0710   0.891   0.3991  
x1            1.5511     0.7448   2.083   0.0708 .
x2            0.5102     0.7238   0.705   0.5009  
x3            0.1019     0.7547   0.135   0.8959  
x4           -0.1441     0.7091  -0.203   0.8441  
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 2.446 on 8 degrees of freedom
Multiple R-squared:  0.9824,	Adjusted R-squared:  0.9736 
F-statistic: 111.5 on 4 and 8 DF,  p-value: 4.756e-07

> 
> # Notice: The model explains practically all variation in data;
> # yet none of the explanatory variables appear to be statistically
> # significant.
> 
> 
> 
> 
> cleanEx()
> nameEx("interaction-plot")
> ### * interaction-plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: interaction-plot
> ### Title: Two-way interaction plot
> ### Aliases: interaction-plot interaction_plot
> 
> ### ** Examples
> 
> 
> ToothGrowth |> interaction_plot(len ~ dose + supp)
> ToothGrowth |> interaction_plot(len ~ dose + supp, interval="conf.int")
> ToothGrowth |> interaction_plot(len ~ dose + supp, interval="boxplot")
> ToothGrowth |> interaction_plot(len ~ dose + supp, interval="none")
> 
> 
> 
> cleanEx()
> nameEx("linest-matrix")
> ### * linest-matrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: linest-matrix
> ### Title: Linear estimates matrix
> ### Aliases: linest-matrix LE_matrix LE_matrix.default
> ###   aggregate_linest_list get_linest_list
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> ## Two way anova:
> 
> data(warpbreaks)
> 
> ## An additive model
> m0 <- lm(breaks ~ wool + tension, data=warpbreaks)
> 
> ## Estimate mean for each wool type, for tension="M":
> K <- LE_matrix(m0, at=list(wool=c("A", "B"), tension="M"))
List of 2
 $ new.fact.lev:List of 2
  ..$ wool   : chr [1:2] "A" "B"
  ..$ tension: chr "M"
 $ grid.data   :'data.frame':	2 obs. of  2 variables:
  ..$ wool   : chr [1:2] "A" "B"
  ..$ tension: chr [1:2] "M" "M"
> K
     (Intercept) woolB tensionM tensionH
[1,]           1     0        1        0
[2,]           1     1        1        0
> 
> ## Vanilla computation:
> K %*% coef(m0)
         [,1]
[1,] 29.27778
[2,] 23.50000
> 
> ## Alternative; also providing standard errors etc:
> linest(m0, K)
  wool tension estimate std.error statistic df  p.value  lwr  upr
1    A       M     29.3      3.16      9.26 50 2.00e-12 22.9 35.6
2    B       M     23.5      3.16      7.43 50 1.27e-09 17.1 29.9
> esticon(m0, K)
       estimate  std.error  statistic    p.value      beta0 df
[1,] 2.9278e+01 3.1618e+00 9.2599e+00 2.0017e-12 0.0000e+00 50
[2,] 2.3500e+01 3.1618e+00 7.4325e+00 1.2661e-09 0.0000e+00 50
> 
> ## Estimate mean for each wool type when averaging over tension;
> # two ways of doing this
> K <- LE_matrix(m0, at=list(wool=c("A", "B")))
List of 2
 $ new.fact.lev:List of 1
  ..$ wool: chr [1:2] "A" "B"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ wool: chr [1:2] "A" "B"
> K
     (Intercept) woolB  tensionM  tensionH
[1,]           1     0 0.3333333 0.3333333
[2,]           1     1 0.3333333 0.3333333
> K <- LE_matrix(m0, effect="wool")
List of 2
 $ new.fact.lev:List of 1
  ..$ wool: chr [1:2] "A" "B"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ wool: chr [1:2] "A" "B"
> K
     (Intercept) woolB  tensionM  tensionH
[1,]           1     0 0.3333333 0.3333333
[2,]           1     1 0.3333333 0.3333333
> linest(m0, K)
  wool estimate std.error statistic df  p.value  lwr  upr
1    A     31.0      2.24      13.9 50 8.81e-19 26.5 35.5
2    B     25.3      2.24      11.3 50 2.26e-15 20.8 29.7
> 
> ## The linear estimate is sometimes called to "least squares mean"
> # (LSmeans) or popupulation means.
> # Same as
> LSmeans(m0, effect="wool")
List of 2
 $ new.fact.lev:List of 1
  ..$ wool: chr [1:2] "A" "B"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ wool: chr [1:2] "A" "B"
  wool estimate std.error statistic df  p.value  lwr  upr
1    A     31.0      2.24      13.9 50 8.81e-19 26.5 35.5
2    B     25.3      2.24      11.3 50 2.26e-15 20.8 29.7
> 
> ## Without mentioning 'effect' or 'at' an average across all
> #predictors are calculated:
> K <- LE_matrix(m0)
> K
     (Intercept) woolB  tensionM  tensionH
[1,]           1   0.5 0.3333333 0.3333333
> linest(m0, K)
  estimate std.error statistic df  p.value lwr  upr
1     28.1      1.58      17.8 50 2.74e-23  25 31.3
> 
> ## Because the design is balanced (9 observations per combination
> #of wool and tension) this is the same as computing the average. If
> #the design is not balanced, the two quantities are in general not
> #the same.
> mean(warpbreaks$breaks)
[1] 28.14815
> 
> ## Same as 
> LSmeans(m0)
  estimate std.error statistic df  p.value lwr  upr
1     28.1      1.58      17.8 50 2.74e-23  25 31.3
> 
> ## An interaction model 
> m1 <- lm(breaks ~ wool * tension, data=warpbreaks)
> 
> K <- LE_matrix(m1, at=list(wool=c("A", "B"), tension="M"))
List of 2
 $ new.fact.lev:List of 2
  ..$ wool   : chr [1:2] "A" "B"
  ..$ tension: chr "M"
 $ grid.data   :'data.frame':	2 obs. of  2 variables:
  ..$ wool   : chr [1:2] "A" "B"
  ..$ tension: chr [1:2] "M" "M"
> K
     (Intercept) woolB tensionM tensionH woolB:tensionM woolB:tensionH
[1,]           1     0        1        0              0              0
[2,]           1     1        1        0              1              0
> linest(m1, K)
  wool tension estimate std.error statistic df  p.value  lwr  upr
1    A       M     24.0      3.65      6.58 48 3.23e-08 16.7 31.3
2    B       M     28.8      3.65      7.89 48 3.22e-10 21.4 36.1
> K <- LE_matrix(m1, at=list(wool=c("A", "B")))
List of 2
 $ new.fact.lev:List of 1
  ..$ wool: chr [1:2] "A" "B"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ wool: chr [1:2] "A" "B"
> K
     (Intercept) woolB  tensionM  tensionH woolB:tensionM woolB:tensionH
[1,]           1     0 0.3333333 0.3333333      0.0000000      0.0000000
[2,]           1     1 0.3333333 0.3333333      0.3333333      0.3333333
> linest(m1, K)
  wool estimate std.error statistic df  p.value  lwr  upr
1    A     31.0      2.11      14.7 48 1.91e-19 26.8 35.3
2    B     25.3      2.11      12.0 48 4.71e-16 21.0 29.5
> K <- LE_matrix(m1, effect="wool")
List of 2
 $ new.fact.lev:List of 1
  ..$ wool: chr [1:2] "A" "B"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ wool: chr [1:2] "A" "B"
> K
     (Intercept) woolB  tensionM  tensionH woolB:tensionM woolB:tensionH
[1,]           1     0 0.3333333 0.3333333      0.0000000      0.0000000
[2,]           1     1 0.3333333 0.3333333      0.3333333      0.3333333
> linest(m1, K)
  wool estimate std.error statistic df  p.value  lwr  upr
1    A     31.0      2.11      14.7 48 1.91e-19 26.8 35.3
2    B     25.3      2.11      12.0 48 4.71e-16 21.0 29.5
> LSmeans(m1, effect="wool")
List of 2
 $ new.fact.lev:List of 1
  ..$ wool: chr [1:2] "A" "B"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ wool: chr [1:2] "A" "B"
  wool estimate std.error statistic df  p.value  lwr  upr
1    A     31.0      2.11      14.7 48 1.91e-19 26.8 35.3
2    B     25.3      2.11      12.0 48 4.71e-16 21.0 29.5
> 
> K <- LE_matrix(m1)
> K
     (Intercept) woolB  tensionM  tensionH woolB:tensionM woolB:tensionH
[1,]           1   0.5 0.3333333 0.3333333      0.1666667      0.1666667
> linest(m1, K)
  estimate std.error statistic df  p.value  lwr  upr
1     28.1      1.49      18.9 48 6.98e-24 25.2 31.1
> LSmeans(m1)
  estimate std.error statistic df  p.value  lwr  upr
1     28.1      1.49      18.9 48 6.98e-24 25.2 31.1
> 
> 
> 
> cleanEx()
> nameEx("linest")
> ### * linest
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: linest
> ### Title: Compute linear estimates
> ### Aliases: linest linest.lm linest.glm linest.geeglm linest.lmerMod
> ###   linest.merMod linest.default confint.linest_class coef.linest_class
> ###   summary.linest_class
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> ## Make balanced dataset
> dat.bal <- expand.grid(list(AA=factor(1:2), BB=factor(1:3), CC=factor(1:3)))
> dat.bal$y <- rnorm(nrow(dat.bal))
> 
> ## Make unbalanced dataset
> #   'BB' is nested within 'CC' so BB=1 is only found when CC=1
> #   and BB=2,3 are found in each CC=2,3,4
> dat.nst <- dat.bal
> dat.nst$CC <-factor(c(1,1,2,2,2,2,1,1,3,3,3,3,1,1,4,4,4,4))
> 
> mod.bal  <- lm(y ~ AA + BB * CC, data=dat.bal)
> mod.nst  <- lm(y ~ AA + BB : CC, data=dat.nst)
> 
> L <- LE_matrix(mod.nst, effect=c("BB", "CC"))
List of 2
 $ new.fact.lev:List of 2
  ..$ BB: chr [1:3] "1" "2" "3"
  ..$ CC: chr [1:4] "1" "2" "3" "4"
 $ grid.data   :'data.frame':	12 obs. of  2 variables:
  ..$ BB: chr [1:12] "1" "2" "3" "1" ...
  ..$ CC: chr [1:12] "1" "1" "1" "2" ...
> linest( mod.nst, L )
   BB CC estimate std.error statistic df p.value    lwr   upr
1   1  1   -0.342     0.437    -0.783 10   0.452 -1.316 0.631
2   2  1       NA        NA        NA NA      NA     NA    NA
3   3  1       NA        NA        NA NA      NA     NA    NA
4   1  2       NA        NA        NA NA      NA     NA    NA
5   2  2    0.380     0.757     0.502 10   0.627 -1.307 2.066
6   3  2   -0.245     0.757    -0.324 10   0.752 -1.932 1.441
7   1  3       NA        NA        NA NA      NA     NA    NA
8   2  3    0.135     0.757     0.179 10   0.862 -1.551 1.822
9   3  3    0.951     0.757     1.256 10   0.238 -0.736 2.637
10  1  4       NA        NA        NA NA      NA     NA    NA
11  2  4    0.540     0.757     0.713 10   0.492 -1.146 2.226
12  3  4       NA        NA        NA NA      NA     NA    NA
> 
> 
> 
> 
> cleanEx()
> nameEx("ls-means")
> ### * ls-means
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: ls-means
> ### Title: Compute LS-means (aka population means or marginal means)
> ### Aliases: ls-means LSmeans LSmeans.default LSmeans.lmerMod popMeans
> ###   popMeans.default popMeans.lmerMod
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> ## Two way anova:
> 
> data(warpbreaks)
> 
> m0 <- lm(breaks ~ wool + tension, data=warpbreaks)
> m1 <- lm(breaks ~ wool * tension, data=warpbreaks)
> LSmeans(m0)
  estimate std.error statistic df  p.value lwr  upr
1     28.1      1.58      17.8 50 2.74e-23  25 31.3
> LSmeans(m1)
  estimate std.error statistic df  p.value  lwr  upr
1     28.1      1.49      18.9 48 6.98e-24 25.2 31.1
> 
> ## same as:
> K <- LE_matrix(m0);K
     (Intercept) woolB  tensionM  tensionH
[1,]           1   0.5 0.3333333 0.3333333
> linest(m0, K)
  estimate std.error statistic df  p.value lwr  upr
1     28.1      1.58      17.8 50 2.74e-23  25 31.3
> K <- LE_matrix(m1);K
     (Intercept) woolB  tensionM  tensionH woolB:tensionM woolB:tensionH
[1,]           1   0.5 0.3333333 0.3333333      0.1666667      0.1666667
> linest(m1, K)
  estimate std.error statistic df  p.value  lwr  upr
1     28.1      1.49      18.9 48 6.98e-24 25.2 31.1
> 
> LE_matrix(m0, effect="wool")
List of 2
 $ new.fact.lev:List of 1
  ..$ wool: chr [1:2] "A" "B"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ wool: chr [1:2] "A" "B"
     (Intercept) woolB  tensionM  tensionH
[1,]           1     0 0.3333333 0.3333333
[2,]           1     1 0.3333333 0.3333333
> LSmeans(m0, effect="wool")
List of 2
 $ new.fact.lev:List of 1
  ..$ wool: chr [1:2] "A" "B"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ wool: chr [1:2] "A" "B"
  wool estimate std.error statistic df  p.value  lwr  upr
1    A     31.0      2.24      13.9 50 8.81e-19 26.5 35.5
2    B     25.3      2.24      11.3 50 2.26e-15 20.8 29.7
> 
> LE_matrix(m1, effect="wool")
List of 2
 $ new.fact.lev:List of 1
  ..$ wool: chr [1:2] "A" "B"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ wool: chr [1:2] "A" "B"
     (Intercept) woolB  tensionM  tensionH woolB:tensionM woolB:tensionH
[1,]           1     0 0.3333333 0.3333333      0.0000000      0.0000000
[2,]           1     1 0.3333333 0.3333333      0.3333333      0.3333333
> LSmeans(m1, effect="wool")
List of 2
 $ new.fact.lev:List of 1
  ..$ wool: chr [1:2] "A" "B"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ wool: chr [1:2] "A" "B"
  wool estimate std.error statistic df  p.value  lwr  upr
1    A     31.0      2.11      14.7 48 1.91e-19 26.8 35.3
2    B     25.3      2.11      12.0 48 4.71e-16 21.0 29.5
> 
> LE_matrix(m0, effect=c("wool", "tension"))
List of 2
 $ new.fact.lev:List of 2
  ..$ wool   : chr [1:2] "A" "B"
  ..$ tension: chr [1:3] "L" "M" "H"
 $ grid.data   :'data.frame':	6 obs. of  2 variables:
  ..$ wool   : chr [1:6] "A" "B" "A" "B" ...
  ..$ tension: chr [1:6] "L" "L" "M" "M" ...
     (Intercept) woolB tensionM tensionH
[1,]           1     0        0        0
[2,]           1     1        0        0
[3,]           1     0        1        0
[4,]           1     1        1        0
[5,]           1     0        0        1
[6,]           1     1        0        1
> LSmeans(m0, effect=c("wool", "tension"))
List of 2
 $ new.fact.lev:List of 2
  ..$ wool   : chr [1:2] "A" "B"
  ..$ tension: chr [1:3] "L" "M" "H"
 $ grid.data   :'data.frame':	6 obs. of  2 variables:
  ..$ wool   : chr [1:6] "A" "B" "A" "B" ...
  ..$ tension: chr [1:6] "L" "L" "M" "M" ...
  wool tension estimate std.error statistic df  p.value  lwr  upr
1    A       L     39.3      3.16     12.42 50 6.68e-17 32.9 45.6
2    B       L     33.5      3.16     10.60 50 2.22e-14 27.1 39.9
3    A       M     29.3      3.16      9.26 50 2.00e-12 22.9 35.6
4    B       M     23.5      3.16      7.43 50 1.27e-09 17.1 29.9
5    A       H     24.6      3.16      7.77 50 3.83e-10 18.2 30.9
6    B       H     18.8      3.16      5.94 50 2.72e-07 12.4 25.1
> 
> LE_matrix(m1, effect=c("wool", "tension"))
List of 2
 $ new.fact.lev:List of 2
  ..$ wool   : chr [1:2] "A" "B"
  ..$ tension: chr [1:3] "L" "M" "H"
 $ grid.data   :'data.frame':	6 obs. of  2 variables:
  ..$ wool   : chr [1:6] "A" "B" "A" "B" ...
  ..$ tension: chr [1:6] "L" "L" "M" "M" ...
     (Intercept) woolB tensionM tensionH woolB:tensionM woolB:tensionH
[1,]           1     0        0        0              0              0
[2,]           1     1        0        0              0              0
[3,]           1     0        1        0              0              0
[4,]           1     1        1        0              1              0
[5,]           1     0        0        1              0              0
[6,]           1     1        0        1              0              1
> LSmeans(m1, effect=c("wool", "tension"))
List of 2
 $ new.fact.lev:List of 2
  ..$ wool   : chr [1:2] "A" "B"
  ..$ tension: chr [1:3] "L" "M" "H"
 $ grid.data   :'data.frame':	6 obs. of  2 variables:
  ..$ wool   : chr [1:6] "A" "B" "A" "B" ...
  ..$ tension: chr [1:6] "L" "L" "M" "M" ...
  wool tension estimate std.error statistic df  p.value  lwr  upr
1    A       L     44.6      3.65     12.22 48 2.43e-16 37.2 51.9
2    B       L     28.2      3.65      7.74 48 5.47e-10 20.9 35.6
3    A       M     24.0      3.65      6.58 48 3.23e-08 16.7 31.3
4    B       M     28.8      3.65      7.89 48 3.22e-10 21.4 36.1
5    A       H     24.6      3.65      6.73 48 1.88e-08 17.2 31.9
6    B       H     18.8      3.65      5.15 48 4.84e-06 11.4 26.1
> 
> 
> ## Regression; two parallel regression lines:
> 
> data(Puromycin)
> 
> m0 <- lm(rate ~ state + log(conc), data=Puromycin)
> ## Can not use LSmeans / LE_matrix here because of
> ## the log-transformation. Instead we must do:
> Puromycin$lconc <- log( Puromycin$conc )
> m1 <- lm(rate ~ state + lconc, data=Puromycin)
> 
> LE_matrix(m1)
     (Intercept) stateuntreated     lconc
[1,]           1            0.5 -1.905247
> LSmeans(m1)
  estimate std.error statistic df  p.value lwr upr
1      126      2.37      53.2 20 5.12e-23 121 131
> 
> LE_matrix(m1, effect="state")
List of 2
 $ new.fact.lev:List of 1
  ..$ state: chr [1:2] "treated" "untreated"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ state: chr [1:2] "treated" "untreated"
     (Intercept) stateuntreated     lconc
[1,]           1              0 -1.905247
[2,]           1              1 -1.905247
> LSmeans(m1, effect="state")
List of 2
 $ new.fact.lev:List of 1
  ..$ state: chr [1:2] "treated" "untreated"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ state: chr [1:2] "treated" "untreated"
      state lconc estimate std.error statistic df  p.value lwr upr
1   treated -1.91      139      3.29      42.3 20 4.94e-21 132 146
2 untreated -1.91      114      3.43      33.1 20 6.04e-19 107 121
> 
> LE_matrix(m1, effect="state", at=list(lconc=3))
List of 2
 $ new.fact.lev:List of 1
  ..$ state: chr [1:2] "treated" "untreated"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ state: chr [1:2] "treated" "untreated"
     (Intercept) stateuntreated lconc
[1,]           1              0     3
[2,]           1              1     3
> LSmeans(m1, effect="state", at=list(lconc=3))
List of 2
 $ new.fact.lev:List of 1
  ..$ state: chr [1:2] "treated" "untreated"
 $ grid.data   :'data.frame':	2 obs. of  1 variable:
  ..$ state: chr [1:2] "treated" "untreated"
      state lconc estimate std.error statistic df  p.value lwr upr
1   treated     3      299      9.35      31.9 20 1.23e-18 279 318
2 untreated     3      273      9.70      28.2 20 1.41e-17 253 294
> 
> ## Non estimable contrasts
> 
> ## ## Make balanced dataset
> dat.bal <- expand.grid(list(AA=factor(1:2), BB=factor(1:3),
+                             CC=factor(1:3)))
> dat.bal$y <- rnorm(nrow(dat.bal))
> 
> ## ## Make unbalanced dataset
> #      'BB' is nested within 'CC' so BB=1 is only found when CC=1
> #       and BB=2,3 are found in each CC=2,3,4
> dat.nst <- dat.bal
> dat.nst$CC <-factor(c(1, 1, 2, 2, 2, 2, 1, 1, 3, 3,
+                       3, 3, 1, 1, 4, 4, 4, 4))
> 
> mod.bal  <- lm(y ~ AA + BB * CC,    data=dat.bal)
> mod.nst  <- lm(y ~ AA + BB : CC, data=dat.nst)
> 
> LSmeans(mod.bal, effect=c("BB", "CC"))
List of 2
 $ new.fact.lev:List of 2
  ..$ BB: chr [1:3] "1" "2" "3"
  ..$ CC: chr [1:3] "1" "2" "3"
 $ grid.data   :'data.frame':	9 obs. of  2 variables:
  ..$ BB: chr [1:9] "1" "2" "3" "1" ...
  ..$ CC: chr [1:9] "1" "1" "1" "2" ...
  BB CC estimate std.error statistic df p.value    lwr   upr
1  1  1   -0.221     0.675    -0.328  8  0.7513 -1.778 1.335
2  2  1    0.380     0.675     0.563  8  0.5890 -1.177 1.936
3  3  1   -0.245     0.675    -0.364  8  0.7255 -1.802 1.311
4  1  2    0.613     0.675     0.908  8  0.3904 -0.944 2.169
5  2  2    0.135     0.675     0.200  8  0.8462 -1.421 1.692
6  3  2    0.951     0.675     1.409  8  0.1966 -0.606 2.507
7  1  3   -1.418     0.675    -2.101  8  0.0688 -2.974 0.138
8  2  3    0.540     0.675     0.800  8  0.4468 -1.016 2.096
9  3  3    0.464     0.675     0.687  8  0.5114 -1.093 2.020
> LSmeans(mod.nst, effect=c("BB", "CC"))
List of 2
 $ new.fact.lev:List of 2
  ..$ BB: chr [1:3] "1" "2" "3"
  ..$ CC: chr [1:4] "1" "2" "3" "4"
 $ grid.data   :'data.frame':	12 obs. of  2 variables:
  ..$ BB: chr [1:12] "1" "2" "3" "1" ...
  ..$ CC: chr [1:12] "1" "1" "1" "2" ...
   BB CC estimate std.error statistic df p.value    lwr   upr
1   1  1   -0.342     0.437    -0.783 10   0.452 -1.316 0.631
2   2  1       NA        NA        NA NA      NA     NA    NA
3   3  1       NA        NA        NA NA      NA     NA    NA
4   1  2       NA        NA        NA NA      NA     NA    NA
5   2  2    0.380     0.757     0.502 10   0.627 -1.307 2.066
6   3  2   -0.245     0.757    -0.324 10   0.752 -1.932 1.441
7   1  3       NA        NA        NA NA      NA     NA    NA
8   2  3    0.135     0.757     0.179 10   0.862 -1.551 1.822
9   3  3    0.951     0.757     1.256 10   0.238 -0.736 2.637
10  1  4       NA        NA        NA NA      NA     NA    NA
11  2  4    0.540     0.757     0.713 10   0.492 -1.146 2.226
12  3  4       NA        NA        NA NA      NA     NA    NA
> LSmeans(mod.nst, at=list(BB=1, CC=1))
List of 2
 $ new.fact.lev:List of 2
  ..$ BB: num 1
  ..$ CC: num 1
 $ grid.data   :'data.frame':	1 obs. of  2 variables:
  ..$ BB: chr "1"
  ..$ CC: chr "1"
  BB CC estimate std.error statistic df p.value   lwr   upr
1  1  1   -0.342     0.437    -0.783 10   0.452 -1.32 0.631
> 
> LSmeans(mod.nst, at=list(BB=1, CC=2))
List of 2
 $ new.fact.lev:List of 2
  ..$ BB: num 1
  ..$ CC: num 2
 $ grid.data   :'data.frame':	1 obs. of  2 variables:
  ..$ BB: chr "1"
  ..$ CC: chr "2"
  BB CC estimate std.error statistic df p.value lwr upr
1  1  2       NA        NA        NA NA      NA  NA  NA
> ## Above: NA's are correct; not an estimable function
> 
> if( require( lme4 )){
+  warp.mm <- lmer(breaks ~ -1 + tension + (1|wool), data=warpbreaks)
+  LSmeans(warp.mm, effect="tension")
+  class(warp.mm)
+  fixef(warp.mm)
+  coef(summary(warp.mm))
+  vcov(warp.mm)
+  if (require(pbkrtest))
+    vcovAdj(warp.mm)
+ }
Loading required package: lme4
Loading required package: Matrix
List of 2
 $ new.fact.lev:List of 1
  ..$ tension: chr [1:3] "L" "M" "H"
 $ grid.data   :'data.frame':	3 obs. of  1 variable:
  ..$ tension: chr [1:3] "L" "M" "H"
Loading required package: pbkrtest
3 x 3 Matrix of class "dgeMatrix"
          tensionL  tensionM  tensionH
tensionL 13.344136  5.846482  5.846482
tensionM  5.846482 13.344136  5.846482
tensionH  5.846482  5.846482 13.344136
> 
> LSmeans(warp.mm, effect="tension")
List of 2
 $ new.fact.lev:List of 1
  ..$ tension: chr [1:3] "L" "M" "H"
 $ grid.data   :'data.frame':	3 obs. of  1 variable:
  ..$ tension: chr [1:3] "L" "M" "H"
  tension estimate std.error statistic   df p.value   lwr  upr
1       L     36.4      3.65      9.96 2.54 0.00423 23.47 49.3
2       M     26.4      3.65      7.22 2.54 0.00935 13.47 39.3
3       H     21.7      3.65      5.93 2.54 0.01509  8.75 34.6
> 
> 
> 
> 
> cleanEx()

detaching ‘package:pbkrtest’, ‘package:lme4’, ‘package:Matrix’

> nameEx("math_teachers")
> ### * math_teachers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: math_teachers
> ### Title: Height of math teachers
> ### Aliases: math_teachers
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> aggregate(height ~  sex, data=math_teachers, FUN=mean)
     sex   height
1   male 180.3750
2 female 169.9286
> aggregate(height ~  sex, data=math_teachers, FUN=function(x) {c(mean=mean(x), sd=sd(x))})
     sex height.mean  height.sd
1   male  180.375000   5.149434
2 female  169.928571   3.791981
> 
> 
> 
> 
> cleanEx()
> nameEx("milkman")
> ### * milkman
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: milkman
> ### Title: Milk yield data for manually milked cows.
> ### Aliases: milkman milkman_rdm1
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(milkman)
> 
> 
> 
> 
> cleanEx()
> nameEx("nir_milk")
> ### * nir_milk
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: nir_milk
> ### Title: nir_milk
> ### Aliases: nir_milk
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 	
> data(nir_milk)
> 
> 
> 
> 
> cleanEx()
> nameEx("parseGroupFormula")
> ### * parseGroupFormula
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: parseGroupFormula
> ### Title: Extract components from a formula with "conditioning bar"
> ### Aliases: parseGroupFormula
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> gf <- parseGroupFormula(y ~ x1 + x2 | g1 + g2)
> gf 
$model
y ~ x1 + x2

$groups
g1 + g2

$groupFormula
~g1 + g2
<environment: 0x55c0c317ddf8>

> 
> 
> 
> 
> cleanEx()
> nameEx("pick_elements")
> ### * pick_elements
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: pick_elements
> ### Title: Extract (pick) elements without using brackets
> ### Aliases: pick_elements pick1 pick2
> 
> ### ** Examples
> 
> lst <- list(a = 1:3, b = 4:6)
> 
> # Without pipe
> pick1(lst, "a")      # List with one element
$a
[1] 1 2 3

> pick2(lst, "a")      # Just the vector 1:3
[1] 1 2 3
> 
> # With base R pipe
> lst |> pick1("a")
$a
[1] 1 2 3

> lst |> pick2("a")
[1] 1 2 3
> 
> df <- data.frame(x = 1:5, y = letters[1:5])
> 
> df |> pick1("y")     # Returns a data frame with column 'y'
  y
1 a
2 b
3 c
4 d
5 e
> df |> pick2("y")     # Returns column 'y' as a character vector
[1] "a" "b" "c" "d" "e"
> 
> 
> 
> 
> cleanEx()
> nameEx("plot_lm")
> ### * plot_lm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plot_lm
> ### Title: Plot linear model object
> ### Aliases: plot_lm
> 
> ### ** Examples
> 
> data(income)
> m1 <- lm(inc ~ race + educ, data=income)
> plot_lm(m1)
> plot_lm(m1, "2x2")
> plot_lm(m1, "1x4")
> plot_lm(m1, "4x1")
> plot_lm(m1, "list")
$pl1

$pl2

$pl3

$pl4

> 
> 
> 
> 
> cleanEx()
> nameEx("potatoes")
> ### * potatoes
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: potatoes
> ### Title: Weight and size of 20 potatoes
> ### Aliases: potatoes
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(potatoes)
> plot(potatoes) 
> 
> 
> 
> 
> cleanEx()
> nameEx("rbind_list")
> ### * rbind_list
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: rbind_list
> ### Title: Bind list of data frames and add list names as a column
> ### Aliases: rbind_list
> 
> ### ** Examples
> 
> lst <- list(a = data.frame(x = 1:2), b = data.frame(x = 3:4))
> rbind_list(lst)
  name x
1    a 1
2    a 2
3    b 3
4    b 4
> 
> lst <- split(iris, iris$Species)
> rbind_list(lst)
          name Sepal.Length Sepal.Width Petal.Length Petal.Width    Species
1       setosa          5.1         3.5          1.4         0.2     setosa
2       setosa          4.9         3.0          1.4         0.2     setosa
3       setosa          4.7         3.2          1.3         0.2     setosa
4       setosa          4.6         3.1          1.5         0.2     setosa
5       setosa          5.0         3.6          1.4         0.2     setosa
6       setosa          5.4         3.9          1.7         0.4     setosa
7       setosa          4.6         3.4          1.4         0.3     setosa
8       setosa          5.0         3.4          1.5         0.2     setosa
9       setosa          4.4         2.9          1.4         0.2     setosa
10      setosa          4.9         3.1          1.5         0.1     setosa
11      setosa          5.4         3.7          1.5         0.2     setosa
12      setosa          4.8         3.4          1.6         0.2     setosa
13      setosa          4.8         3.0          1.4         0.1     setosa
14      setosa          4.3         3.0          1.1         0.1     setosa
15      setosa          5.8         4.0          1.2         0.2     setosa
16      setosa          5.7         4.4          1.5         0.4     setosa
17      setosa          5.4         3.9          1.3         0.4     setosa
18      setosa          5.1         3.5          1.4         0.3     setosa
19      setosa          5.7         3.8          1.7         0.3     setosa
20      setosa          5.1         3.8          1.5         0.3     setosa
21      setosa          5.4         3.4          1.7         0.2     setosa
22      setosa          5.1         3.7          1.5         0.4     setosa
23      setosa          4.6         3.6          1.0         0.2     setosa
24      setosa          5.1         3.3          1.7         0.5     setosa
25      setosa          4.8         3.4          1.9         0.2     setosa
26      setosa          5.0         3.0          1.6         0.2     setosa
27      setosa          5.0         3.4          1.6         0.4     setosa
28      setosa          5.2         3.5          1.5         0.2     setosa
29      setosa          5.2         3.4          1.4         0.2     setosa
30      setosa          4.7         3.2          1.6         0.2     setosa
31      setosa          4.8         3.1          1.6         0.2     setosa
32      setosa          5.4         3.4          1.5         0.4     setosa
33      setosa          5.2         4.1          1.5         0.1     setosa
34      setosa          5.5         4.2          1.4         0.2     setosa
35      setosa          4.9         3.1          1.5         0.2     setosa
36      setosa          5.0         3.2          1.2         0.2     setosa
37      setosa          5.5         3.5          1.3         0.2     setosa
38      setosa          4.9         3.6          1.4         0.1     setosa
39      setosa          4.4         3.0          1.3         0.2     setosa
40      setosa          5.1         3.4          1.5         0.2     setosa
41      setosa          5.0         3.5          1.3         0.3     setosa
42      setosa          4.5         2.3          1.3         0.3     setosa
43      setosa          4.4         3.2          1.3         0.2     setosa
44      setosa          5.0         3.5          1.6         0.6     setosa
45      setosa          5.1         3.8          1.9         0.4     setosa
46      setosa          4.8         3.0          1.4         0.3     setosa
47      setosa          5.1         3.8          1.6         0.2     setosa
48      setosa          4.6         3.2          1.4         0.2     setosa
49      setosa          5.3         3.7          1.5         0.2     setosa
50      setosa          5.0         3.3          1.4         0.2     setosa
51  versicolor          7.0         3.2          4.7         1.4 versicolor
52  versicolor          6.4         3.2          4.5         1.5 versicolor
53  versicolor          6.9         3.1          4.9         1.5 versicolor
54  versicolor          5.5         2.3          4.0         1.3 versicolor
55  versicolor          6.5         2.8          4.6         1.5 versicolor
56  versicolor          5.7         2.8          4.5         1.3 versicolor
57  versicolor          6.3         3.3          4.7         1.6 versicolor
58  versicolor          4.9         2.4          3.3         1.0 versicolor
59  versicolor          6.6         2.9          4.6         1.3 versicolor
60  versicolor          5.2         2.7          3.9         1.4 versicolor
61  versicolor          5.0         2.0          3.5         1.0 versicolor
62  versicolor          5.9         3.0          4.2         1.5 versicolor
63  versicolor          6.0         2.2          4.0         1.0 versicolor
64  versicolor          6.1         2.9          4.7         1.4 versicolor
65  versicolor          5.6         2.9          3.6         1.3 versicolor
66  versicolor          6.7         3.1          4.4         1.4 versicolor
67  versicolor          5.6         3.0          4.5         1.5 versicolor
68  versicolor          5.8         2.7          4.1         1.0 versicolor
69  versicolor          6.2         2.2          4.5         1.5 versicolor
70  versicolor          5.6         2.5          3.9         1.1 versicolor
71  versicolor          5.9         3.2          4.8         1.8 versicolor
72  versicolor          6.1         2.8          4.0         1.3 versicolor
73  versicolor          6.3         2.5          4.9         1.5 versicolor
74  versicolor          6.1         2.8          4.7         1.2 versicolor
75  versicolor          6.4         2.9          4.3         1.3 versicolor
76  versicolor          6.6         3.0          4.4         1.4 versicolor
77  versicolor          6.8         2.8          4.8         1.4 versicolor
78  versicolor          6.7         3.0          5.0         1.7 versicolor
79  versicolor          6.0         2.9          4.5         1.5 versicolor
80  versicolor          5.7         2.6          3.5         1.0 versicolor
81  versicolor          5.5         2.4          3.8         1.1 versicolor
82  versicolor          5.5         2.4          3.7         1.0 versicolor
83  versicolor          5.8         2.7          3.9         1.2 versicolor
84  versicolor          6.0         2.7          5.1         1.6 versicolor
85  versicolor          5.4         3.0          4.5         1.5 versicolor
86  versicolor          6.0         3.4          4.5         1.6 versicolor
87  versicolor          6.7         3.1          4.7         1.5 versicolor
88  versicolor          6.3         2.3          4.4         1.3 versicolor
89  versicolor          5.6         3.0          4.1         1.3 versicolor
90  versicolor          5.5         2.5          4.0         1.3 versicolor
91  versicolor          5.5         2.6          4.4         1.2 versicolor
92  versicolor          6.1         3.0          4.6         1.4 versicolor
93  versicolor          5.8         2.6          4.0         1.2 versicolor
94  versicolor          5.0         2.3          3.3         1.0 versicolor
95  versicolor          5.6         2.7          4.2         1.3 versicolor
96  versicolor          5.7         3.0          4.2         1.2 versicolor
97  versicolor          5.7         2.9          4.2         1.3 versicolor
98  versicolor          6.2         2.9          4.3         1.3 versicolor
99  versicolor          5.1         2.5          3.0         1.1 versicolor
100 versicolor          5.7         2.8          4.1         1.3 versicolor
101  virginica          6.3         3.3          6.0         2.5  virginica
102  virginica          5.8         2.7          5.1         1.9  virginica
103  virginica          7.1         3.0          5.9         2.1  virginica
104  virginica          6.3         2.9          5.6         1.8  virginica
105  virginica          6.5         3.0          5.8         2.2  virginica
106  virginica          7.6         3.0          6.6         2.1  virginica
107  virginica          4.9         2.5          4.5         1.7  virginica
108  virginica          7.3         2.9          6.3         1.8  virginica
109  virginica          6.7         2.5          5.8         1.8  virginica
110  virginica          7.2         3.6          6.1         2.5  virginica
111  virginica          6.5         3.2          5.1         2.0  virginica
112  virginica          6.4         2.7          5.3         1.9  virginica
113  virginica          6.8         3.0          5.5         2.1  virginica
114  virginica          5.7         2.5          5.0         2.0  virginica
115  virginica          5.8         2.8          5.1         2.4  virginica
116  virginica          6.4         3.2          5.3         2.3  virginica
117  virginica          6.5         3.0          5.5         1.8  virginica
118  virginica          7.7         3.8          6.7         2.2  virginica
119  virginica          7.7         2.6          6.9         2.3  virginica
120  virginica          6.0         2.2          5.0         1.5  virginica
121  virginica          6.9         3.2          5.7         2.3  virginica
122  virginica          5.6         2.8          4.9         2.0  virginica
123  virginica          7.7         2.8          6.7         2.0  virginica
124  virginica          6.3         2.7          4.9         1.8  virginica
125  virginica          6.7         3.3          5.7         2.1  virginica
126  virginica          7.2         3.2          6.0         1.8  virginica
127  virginica          6.2         2.8          4.8         1.8  virginica
128  virginica          6.1         3.0          4.9         1.8  virginica
129  virginica          6.4         2.8          5.6         2.1  virginica
130  virginica          7.2         3.0          5.8         1.6  virginica
131  virginica          7.4         2.8          6.1         1.9  virginica
132  virginica          7.9         3.8          6.4         2.0  virginica
133  virginica          6.4         2.8          5.6         2.2  virginica
134  virginica          6.3         2.8          5.1         1.5  virginica
135  virginica          6.1         2.6          5.6         1.4  virginica
136  virginica          7.7         3.0          6.1         2.3  virginica
137  virginica          6.3         3.4          5.6         2.4  virginica
138  virginica          6.4         3.1          5.5         1.8  virginica
139  virginica          6.0         3.0          4.8         1.8  virginica
140  virginica          6.9         3.1          5.4         2.1  virginica
141  virginica          6.7         3.1          5.6         2.4  virginica
142  virginica          6.9         3.1          5.1         2.3  virginica
143  virginica          5.8         2.7          5.1         1.9  virginica
144  virginica          6.8         3.2          5.9         2.3  virginica
145  virginica          6.7         3.3          5.7         2.5  virginica
146  virginica          6.7         3.0          5.2         2.3  virginica
147  virginica          6.3         2.5          5.0         1.9  virginica
148  virginica          6.5         3.0          5.2         2.0  virginica
149  virginica          6.2         3.4          5.4         2.3  virginica
150  virginica          5.9         3.0          5.1         1.8  virginica
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("recodeVar")
> ### * recodeVar
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: recodeVar
> ### Title: Recode values of a vector
> ### Aliases: recodeVar recode_var
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> x <- c("dec", "jan", "feb", "mar", "apr", "may")
> src1 <- list(c("dec", "jan", "feb"), c("mar", "apr", "may"))
> tgt1 <- list("winter", "spring")
> recodeVar(x, src=src1, tgt=tgt1)
[1] "winter" "winter" "winter" "spring" "spring" "spring"
> #[1] "winter" "winter" "winter" "spring" "spring" "spring"
> 
> x <- c(rep(1:3, 3))
> #[1] 1 2 3 1 2 3 1 2 3
> 
> ## Simple usage:
> recodeVar(x, src=c(1, 2), tgt=c("A", "B"))
[1] "A" "B" "3" "A" "B" "3" "A" "B" "3"
> #[1] "A" "B" NA  "A" "B" NA  "A" "B" NA 
> 
> ## Here we need to use lists
> recodeVar(x, src=list(c(1, 2)), tgt=list("A"))
[1] "A" "A" "3" "A" "A" "3" "A" "A" "3"
> #[1] "A" "A" NA  "A" "A" NA  "A" "A" NA 
> recodeVar(x, src=list(c(1, 2)), tgt=list("A"), default="L")
[1] "A" "A" "L" "A" "A" "L" "A" "A" "L"
> #[1] "A" "A" "L" "A" "A" "L" "A" "A" "L"
> recodeVar(x, src=list(c(1, 2), 3), tgt=list("A", "B"), default="L")
[1] "A" "A" "B" "A" "A" "B" "A" "A" "B"
> #[1] "A" "A" "B" "A" "A" "B" "A" "A" "B"
> 
> ## Dealing with NA's in x
> x<-c(NA,rep(1:3, 3),NA)
> #[1] NA  1  2  3  1  2  3  1  2  3 NA
> recodeVar(x, src=list(c(1, 2)), tgt=list("A"))
 [1] NA  "A" "A" "3" "A" "A" "3" "A" "A" "3" NA 
> #[1] NA  "A" "A" NA  "A" "A" NA  "A" "A" NA  NA 
> recodeVar(x, src=list(c(1, 2)), tgt=list("A"), default="L")
 [1] NA  "A" "A" "L" "A" "A" "L" "A" "A" "L" NA 
> #[1] NA  "A" "A" "L" "A" "A" "L" "A" "A" "L" NA 
> recodeVar(x, src=list(c(1, 2)), tgt=list("A"), default="L", keep.na=FALSE)
 [1] "L" "A" "A" "L" "A" "A" "L" "A" "A" "L" "L"
> #[1] "L" "A" "A" "L" "A" "A" "L" "A" "A" "L" "L"
> 
> x <- c("no", "yes", "not registered", "no", "yes", "no answer")
> recodeVar(x, src = c("no", "yes"), tgt = c("0", "1"), default = NA)
[1] "0" "1" NA  "0" "1" NA 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("recover_pca_data")
> ### * recover_pca_data
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: recover_pca_data
> ### Title: Recover data from principal component analysis
> ### Aliases: recover_pca_data
> 
> ### ** Examples
> 
> 
> crime <- doBy::crimeRate
> rownames(crime) <- crime$state
> crime$state <- NULL
> 
> o <- order(apply(scale(crime), 1, sum))
> dat <- crime[o,]
> head(dat)
             murder rape assault robbery burglary larceny autotheft
NorthDakota     0.9  9.0    43.8    13.3    446.1  1843.0     144.7
SouthDakota     2.0 13.5   155.7    17.9    570.5  1704.4     147.5
WestVirginia    6.0 13.2    90.9    42.2    597.4  1341.7     163.3
Iowa            2.3 10.6    89.8    41.2    812.5  2685.1     219.9
Wisconsin       2.8 12.9    63.7    52.2    846.9  2614.2     220.7
NewHampshire    3.2 10.7    76.0    23.2   1041.7  2343.9     293.4
> tail(dat)
           murder rape assault robbery burglary larceny autotheft
Alaska       10.8 51.6   284.0    96.8   1331.7  3369.8     753.3
Arizona       9.5 34.2   312.3   138.2   2346.1  4467.4     439.5
Florida      10.2 39.6   449.1   187.9   1859.9  3840.5     351.4
NewYork      10.7 29.4   319.1   472.6   1728.0  2782.0     745.8
California   11.5 49.4   358.0   287.0   2139.4  3499.8     663.5
Nevada       15.8 49.1   355.0   323.1   2453.1  4212.6     559.2
> matplot(scale(dat), type="l")
> 
> pc1 <- prcomp(dat, scale. = TRUE)
> summary(pc1)
Importance of components:
                          PC1    PC2    PC3    PC4     PC5     PC6     PC7
Standard deviation     2.0285 1.1130 0.8519 0.5625 0.50791 0.47121 0.35222
Proportion of Variance 0.5878 0.1770 0.1037 0.0452 0.03685 0.03172 0.01772
Cumulative Proportion  0.5878 0.7648 0.8685 0.9137 0.95056 0.98228 1.00000
> rec2 <- recover_pca_data(pc1, 2)
> 
> pairs(rec2)
> 
> par(mfrow=c(1,2))
> matplot(scale(dat), type="l")
> matplot(scale(rec2), type="l")
> 
> j <- merge(dat, rec2, by=0)
> pairs(j[,-1])
> 
> 
> 
> 
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("renameCol")
> ### * renameCol
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: renameCol
> ### Title: Rename columns in a matrix or a dataframe.
> ### Aliases: renameCol
> ### Keywords: utitlities
> 
> ### ** Examples
> 
> renameCol(CO2, 1:2, c("kk", "ll"))
Grouped Data: uptake ~ conc | Plant
    kk          ll  Treatment conc uptake
1  Qn1      Quebec nonchilled   95   16.0
2  Qn1      Quebec nonchilled  175   30.4
3  Qn1      Quebec nonchilled  250   34.8
4  Qn1      Quebec nonchilled  350   37.2
5  Qn1      Quebec nonchilled  500   35.3
6  Qn1      Quebec nonchilled  675   39.2
7  Qn1      Quebec nonchilled 1000   39.7
8  Qn2      Quebec nonchilled   95   13.6
9  Qn2      Quebec nonchilled  175   27.3
10 Qn2      Quebec nonchilled  250   37.1
11 Qn2      Quebec nonchilled  350   41.8
12 Qn2      Quebec nonchilled  500   40.6
13 Qn2      Quebec nonchilled  675   41.4
14 Qn2      Quebec nonchilled 1000   44.3
15 Qn3      Quebec nonchilled   95   16.2
16 Qn3      Quebec nonchilled  175   32.4
17 Qn3      Quebec nonchilled  250   40.3
18 Qn3      Quebec nonchilled  350   42.1
19 Qn3      Quebec nonchilled  500   42.9
20 Qn3      Quebec nonchilled  675   43.9
21 Qn3      Quebec nonchilled 1000   45.5
22 Qc1      Quebec    chilled   95   14.2
23 Qc1      Quebec    chilled  175   24.1
24 Qc1      Quebec    chilled  250   30.3
25 Qc1      Quebec    chilled  350   34.6
26 Qc1      Quebec    chilled  500   32.5
27 Qc1      Quebec    chilled  675   35.4
28 Qc1      Quebec    chilled 1000   38.7
29 Qc2      Quebec    chilled   95    9.3
30 Qc2      Quebec    chilled  175   27.3
31 Qc2      Quebec    chilled  250   35.0
32 Qc2      Quebec    chilled  350   38.8
33 Qc2      Quebec    chilled  500   38.6
34 Qc2      Quebec    chilled  675   37.5
35 Qc2      Quebec    chilled 1000   42.4
36 Qc3      Quebec    chilled   95   15.1
37 Qc3      Quebec    chilled  175   21.0
38 Qc3      Quebec    chilled  250   38.1
39 Qc3      Quebec    chilled  350   34.0
40 Qc3      Quebec    chilled  500   38.9
41 Qc3      Quebec    chilled  675   39.6
42 Qc3      Quebec    chilled 1000   41.4
43 Mn1 Mississippi nonchilled   95   10.6
44 Mn1 Mississippi nonchilled  175   19.2
45 Mn1 Mississippi nonchilled  250   26.2
46 Mn1 Mississippi nonchilled  350   30.0
47 Mn1 Mississippi nonchilled  500   30.9
48 Mn1 Mississippi nonchilled  675   32.4
49 Mn1 Mississippi nonchilled 1000   35.5
50 Mn2 Mississippi nonchilled   95   12.0
51 Mn2 Mississippi nonchilled  175   22.0
52 Mn2 Mississippi nonchilled  250   30.6
53 Mn2 Mississippi nonchilled  350   31.8
54 Mn2 Mississippi nonchilled  500   32.4
55 Mn2 Mississippi nonchilled  675   31.1
56 Mn2 Mississippi nonchilled 1000   31.5
57 Mn3 Mississippi nonchilled   95   11.3
58 Mn3 Mississippi nonchilled  175   19.4
59 Mn3 Mississippi nonchilled  250   25.8
60 Mn3 Mississippi nonchilled  350   27.9
61 Mn3 Mississippi nonchilled  500   28.5
62 Mn3 Mississippi nonchilled  675   28.1
63 Mn3 Mississippi nonchilled 1000   27.8
64 Mc1 Mississippi    chilled   95   10.5
65 Mc1 Mississippi    chilled  175   14.9
66 Mc1 Mississippi    chilled  250   18.1
67 Mc1 Mississippi    chilled  350   18.9
68 Mc1 Mississippi    chilled  500   19.5
69 Mc1 Mississippi    chilled  675   22.2
70 Mc1 Mississippi    chilled 1000   21.9
71 Mc2 Mississippi    chilled   95    7.7
72 Mc2 Mississippi    chilled  175   11.4
73 Mc2 Mississippi    chilled  250   12.3
74 Mc2 Mississippi    chilled  350   13.0
75 Mc2 Mississippi    chilled  500   12.5
76 Mc2 Mississippi    chilled  675   13.7
77 Mc2 Mississippi    chilled 1000   14.4
78 Mc3 Mississippi    chilled   95   10.6
79 Mc3 Mississippi    chilled  175   18.0
80 Mc3 Mississippi    chilled  250   17.9
81 Mc3 Mississippi    chilled  350   17.9
82 Mc3 Mississippi    chilled  500   17.9
83 Mc3 Mississippi    chilled  675   18.9
84 Mc3 Mississippi    chilled 1000   19.9
> renameCol(CO2, c("Plant", "Type"), c("kk", "ll"))
Grouped Data: uptake ~ conc | Plant
    kk          ll  Treatment conc uptake
1  Qn1      Quebec nonchilled   95   16.0
2  Qn1      Quebec nonchilled  175   30.4
3  Qn1      Quebec nonchilled  250   34.8
4  Qn1      Quebec nonchilled  350   37.2
5  Qn1      Quebec nonchilled  500   35.3
6  Qn1      Quebec nonchilled  675   39.2
7  Qn1      Quebec nonchilled 1000   39.7
8  Qn2      Quebec nonchilled   95   13.6
9  Qn2      Quebec nonchilled  175   27.3
10 Qn2      Quebec nonchilled  250   37.1
11 Qn2      Quebec nonchilled  350   41.8
12 Qn2      Quebec nonchilled  500   40.6
13 Qn2      Quebec nonchilled  675   41.4
14 Qn2      Quebec nonchilled 1000   44.3
15 Qn3      Quebec nonchilled   95   16.2
16 Qn3      Quebec nonchilled  175   32.4
17 Qn3      Quebec nonchilled  250   40.3
18 Qn3      Quebec nonchilled  350   42.1
19 Qn3      Quebec nonchilled  500   42.9
20 Qn3      Quebec nonchilled  675   43.9
21 Qn3      Quebec nonchilled 1000   45.5
22 Qc1      Quebec    chilled   95   14.2
23 Qc1      Quebec    chilled  175   24.1
24 Qc1      Quebec    chilled  250   30.3
25 Qc1      Quebec    chilled  350   34.6
26 Qc1      Quebec    chilled  500   32.5
27 Qc1      Quebec    chilled  675   35.4
28 Qc1      Quebec    chilled 1000   38.7
29 Qc2      Quebec    chilled   95    9.3
30 Qc2      Quebec    chilled  175   27.3
31 Qc2      Quebec    chilled  250   35.0
32 Qc2      Quebec    chilled  350   38.8
33 Qc2      Quebec    chilled  500   38.6
34 Qc2      Quebec    chilled  675   37.5
35 Qc2      Quebec    chilled 1000   42.4
36 Qc3      Quebec    chilled   95   15.1
37 Qc3      Quebec    chilled  175   21.0
38 Qc3      Quebec    chilled  250   38.1
39 Qc3      Quebec    chilled  350   34.0
40 Qc3      Quebec    chilled  500   38.9
41 Qc3      Quebec    chilled  675   39.6
42 Qc3      Quebec    chilled 1000   41.4
43 Mn1 Mississippi nonchilled   95   10.6
44 Mn1 Mississippi nonchilled  175   19.2
45 Mn1 Mississippi nonchilled  250   26.2
46 Mn1 Mississippi nonchilled  350   30.0
47 Mn1 Mississippi nonchilled  500   30.9
48 Mn1 Mississippi nonchilled  675   32.4
49 Mn1 Mississippi nonchilled 1000   35.5
50 Mn2 Mississippi nonchilled   95   12.0
51 Mn2 Mississippi nonchilled  175   22.0
52 Mn2 Mississippi nonchilled  250   30.6
53 Mn2 Mississippi nonchilled  350   31.8
54 Mn2 Mississippi nonchilled  500   32.4
55 Mn2 Mississippi nonchilled  675   31.1
56 Mn2 Mississippi nonchilled 1000   31.5
57 Mn3 Mississippi nonchilled   95   11.3
58 Mn3 Mississippi nonchilled  175   19.4
59 Mn3 Mississippi nonchilled  250   25.8
60 Mn3 Mississippi nonchilled  350   27.9
61 Mn3 Mississippi nonchilled  500   28.5
62 Mn3 Mississippi nonchilled  675   28.1
63 Mn3 Mississippi nonchilled 1000   27.8
64 Mc1 Mississippi    chilled   95   10.5
65 Mc1 Mississippi    chilled  175   14.9
66 Mc1 Mississippi    chilled  250   18.1
67 Mc1 Mississippi    chilled  350   18.9
68 Mc1 Mississippi    chilled  500   19.5
69 Mc1 Mississippi    chilled  675   22.2
70 Mc1 Mississippi    chilled 1000   21.9
71 Mc2 Mississippi    chilled   95    7.7
72 Mc2 Mississippi    chilled  175   11.4
73 Mc2 Mississippi    chilled  250   12.3
74 Mc2 Mississippi    chilled  350   13.0
75 Mc2 Mississippi    chilled  500   12.5
76 Mc2 Mississippi    chilled  675   13.7
77 Mc2 Mississippi    chilled 1000   14.4
78 Mc3 Mississippi    chilled   95   10.6
79 Mc3 Mississippi    chilled  175   18.0
80 Mc3 Mississippi    chilled  250   17.9
81 Mc3 Mississippi    chilled  350   17.9
82 Mc3 Mississippi    chilled  500   17.9
83 Mc3 Mississippi    chilled  675   18.9
84 Mc3 Mississippi    chilled 1000   19.9
> 
> # These fail - as they should:
> # renameCol(CO2, c("Plant", "Type", "conc"), c("kk", "ll"))
> # renameCol(CO2, c("Plant", "Type", "Plant"), c("kk", "ll"))
> 
> 
> 
> 
> cleanEx()
> nameEx("response")
> ### * response
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: response
> ### Title: Get response variable from model
> ### Aliases: response
> 
> ### ** Examples
> 
> data(cars)
> lm1 <- lm(dist ~ speed + I(speed^2), data=cars)
> lm1 |> response() |> head()
 1  2  3  4  5  6 
 2 10  4 22 16 10 
> cars <- cars |> add_pred(lm1)
> cars |> head()
  speed dist      pred
1     4    2  7.722637
2     4   10  7.722637
3     7    4 13.761157
4     7   22 13.761157
5     8   16 16.173834
6     9   10 18.786430
> cars <- cars |> add_resid(lm1)
> cars 
   speed dist      pred       resid
1      4    2  7.722637  -5.7226371
2      4   10  7.722637   2.2773629
3      7    4 13.761157  -9.7611569
4      7   22 13.761157   8.2388431
5      8   16 16.173834  -0.1738340
6      9   10 18.786430  -8.7864298
7     10   18 21.598944  -3.5989441
8     10   26 21.598944   4.4010559
9     10   34 21.598944  12.4010559
10    11   17 24.611377  -7.6113771
11    11   28 24.611377   3.3886229
12    12   14 27.823729 -13.8237287
13    12   20 27.823729  -7.8237287
14    12   24 27.823729  -3.8237287
15    12   28 27.823729   0.1762713
16    13   26 31.235999  -5.2359988
17    13   34 31.235999   2.7640012
18    13   34 31.235999   2.7640012
19    13   46 31.235999  14.7640012
20    14   26 34.848188  -8.8481876
21    14   36 34.848188   1.1518124
22    14   60 34.848188  25.1518124
23    14   80 34.848188  45.1518124
24    15   20 38.660295 -18.6602950
25    15   26 38.660295 -12.6602950
26    15   54 38.660295  15.3397050
27    16   32 42.672321 -10.6723209
28    16   40 42.672321  -2.6723209
29    17   32 46.884266 -14.8842655
30    17   40 46.884266  -6.8842655
31    17   50 46.884266   3.1157345
32    18   42 51.296129  -9.2961287
33    18   56 51.296129   4.7038713
34    18   76 51.296129  24.7038713
35    18   84 51.296129  32.7038713
36    19   36 55.907911 -19.9079105
37    19   46 55.907911  -9.9079105
38    19   68 55.907911  12.0920895
39    20   32 60.719611 -28.7196109
40    20   48 60.719611 -12.7196109
41    20   52 60.719611  -8.7196109
42    20   56 60.719611  -4.7196109
43    20   64 60.719611   3.2803891
44    22   66 70.942768  -4.9427675
45    23   54 76.354224 -22.3542237
46    24   70 81.965599 -11.9655985
47    24   92 81.965599  10.0344015
48    24   93 81.965599  11.0344015
49    24  120 81.965599  38.0344015
50    25   85 87.776892  -2.7768919
> 
> 
> 
> cleanEx()
> nameEx("response_plot")
> ### * response_plot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: response_plot
> ### Title: Plot the response variable against the predictor variables.
> ### Aliases: response_plot
> 
> ### ** Examples
> 
> library(ggplot2)
> response_plot(iris, Sepal.Width ~ ., geoms=geom_point())
> response_plot(iris, Sepal.Width ~ ., geoms=geom_point(), global_aes=list(color="Species"))
> personality |> response_plot(easygon~., geoms=geom_point(), global_aes=NULL)
> 
> 
> 
> 
> cleanEx()

detaching ‘package:ggplot2’

> nameEx("scale_df")
> ### * scale_df
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: scale_df
> ### Title: Scaling numerical values
> ### Aliases: scale_df scale2
> 
> ### ** Examples
> 
> 
> scale2(iris)
    Sepal.Length Sepal.Width Petal.Length   Petal.Width    Species
1    -0.89767388  1.01560199  -1.33575163 -1.3110521482     setosa
2    -1.13920048 -0.13153881  -1.33575163 -1.3110521482     setosa
3    -1.38072709  0.32731751  -1.39239929 -1.3110521482     setosa
4    -1.50149039  0.09788935  -1.27910398 -1.3110521482     setosa
5    -1.01843718  1.24503015  -1.33575163 -1.3110521482     setosa
6    -0.53538397  1.93331463  -1.16580868 -1.0486667950     setosa
7    -1.50149039  0.78617383  -1.33575163 -1.1798594716     setosa
8    -1.01843718  0.78617383  -1.27910398 -1.3110521482     setosa
9    -1.74301699 -0.36096697  -1.33575163 -1.3110521482     setosa
10   -1.13920048  0.09788935  -1.27910398 -1.4422448248     setosa
11   -0.53538397  1.47445831  -1.27910398 -1.3110521482     setosa
12   -1.25996379  0.78617383  -1.22245633 -1.3110521482     setosa
13   -1.25996379 -0.13153881  -1.33575163 -1.4422448248     setosa
14   -1.86378030 -0.13153881  -1.50569459 -1.4422448248     setosa
15   -0.05233076  2.16274279  -1.44904694 -1.3110521482     setosa
16   -0.17309407  3.08045544  -1.27910398 -1.0486667950     setosa
17   -0.53538397  1.93331463  -1.39239929 -1.0486667950     setosa
18   -0.89767388  1.01560199  -1.33575163 -1.1798594716     setosa
19   -0.17309407  1.70388647  -1.16580868 -1.1798594716     setosa
20   -0.89767388  1.70388647  -1.27910398 -1.1798594716     setosa
21   -0.53538397  0.78617383  -1.16580868 -1.3110521482     setosa
22   -0.89767388  1.47445831  -1.27910398 -1.0486667950     setosa
23   -1.50149039  1.24503015  -1.56234224 -1.3110521482     setosa
24   -0.89767388  0.55674567  -1.16580868 -0.9174741184     setosa
25   -1.25996379  0.78617383  -1.05251337 -1.3110521482     setosa
26   -1.01843718 -0.13153881  -1.22245633 -1.3110521482     setosa
27   -1.01843718  0.78617383  -1.22245633 -1.0486667950     setosa
28   -0.77691058  1.01560199  -1.27910398 -1.3110521482     setosa
29   -0.77691058  0.78617383  -1.33575163 -1.3110521482     setosa
30   -1.38072709  0.32731751  -1.22245633 -1.3110521482     setosa
31   -1.25996379  0.09788935  -1.22245633 -1.3110521482     setosa
32   -0.53538397  0.78617383  -1.27910398 -1.0486667950     setosa
33   -0.77691058  2.39217095  -1.27910398 -1.4422448248     setosa
34   -0.41462067  2.62159911  -1.33575163 -1.3110521482     setosa
35   -1.13920048  0.09788935  -1.27910398 -1.3110521482     setosa
36   -1.01843718  0.32731751  -1.44904694 -1.3110521482     setosa
37   -0.41462067  1.01560199  -1.39239929 -1.3110521482     setosa
38   -1.13920048  1.24503015  -1.33575163 -1.4422448248     setosa
39   -1.74301699 -0.13153881  -1.39239929 -1.3110521482     setosa
40   -0.89767388  0.78617383  -1.27910398 -1.3110521482     setosa
41   -1.01843718  1.01560199  -1.39239929 -1.1798594716     setosa
42   -1.62225369 -1.73753594  -1.39239929 -1.1798594716     setosa
43   -1.74301699  0.32731751  -1.39239929 -1.3110521482     setosa
44   -1.01843718  1.01560199  -1.22245633 -0.7862814418     setosa
45   -0.89767388  1.70388647  -1.05251337 -1.0486667950     setosa
46   -1.25996379 -0.13153881  -1.33575163 -1.1798594716     setosa
47   -0.89767388  1.70388647  -1.22245633 -1.3110521482     setosa
48   -1.50149039  0.32731751  -1.33575163 -1.3110521482     setosa
49   -0.65614727  1.47445831  -1.27910398 -1.3110521482     setosa
50   -1.01843718  0.55674567  -1.33575163 -1.3110521482     setosa
51    1.39682886  0.32731751   0.53362088  0.2632599711 versicolor
52    0.67224905  0.32731751   0.42032558  0.3944526477 versicolor
53    1.27606556  0.09788935   0.64691619  0.3944526477 versicolor
54   -0.41462067 -1.73753594   0.13708732  0.1320672944 versicolor
55    0.79301235 -0.59039513   0.47697323  0.3944526477 versicolor
56   -0.17309407 -0.59039513   0.42032558  0.1320672944 versicolor
57    0.55148575  0.55674567   0.53362088  0.5256453243 versicolor
58   -1.13920048 -1.50810778  -0.25944625 -0.2615107354 versicolor
59    0.91377565 -0.36096697   0.47697323  0.1320672944 versicolor
60   -0.77691058 -0.81982329   0.08043967  0.2632599711 versicolor
61   -1.01843718 -2.42582042  -0.14615094 -0.2615107354 versicolor
62    0.06843254 -0.13153881   0.25038262  0.3944526477 versicolor
63    0.18919584 -1.96696410   0.13708732 -0.2615107354 versicolor
64    0.30995914 -0.36096697   0.53362088  0.2632599711 versicolor
65   -0.29385737 -0.36096697  -0.08950329  0.1320672944 versicolor
66    1.03453895  0.09788935   0.36367793  0.2632599711 versicolor
67   -0.29385737 -0.13153881   0.42032558  0.3944526477 versicolor
68   -0.05233076 -0.81982329   0.19373497 -0.2615107354 versicolor
69    0.43072244 -1.96696410   0.42032558  0.3944526477 versicolor
70   -0.29385737 -1.27867961   0.08043967 -0.1303180588 versicolor
71    0.06843254  0.32731751   0.59026853  0.7880306775 versicolor
72    0.30995914 -0.59039513   0.13708732  0.1320672944 versicolor
73    0.55148575 -1.27867961   0.64691619  0.3944526477 versicolor
74    0.30995914 -0.59039513   0.53362088  0.0008746178 versicolor
75    0.67224905 -0.36096697   0.30703027  0.1320672944 versicolor
76    0.91377565 -0.13153881   0.36367793  0.2632599711 versicolor
77    1.15530226 -0.59039513   0.59026853  0.2632599711 versicolor
78    1.03453895 -0.13153881   0.70356384  0.6568380009 versicolor
79    0.18919584 -0.36096697   0.42032558  0.3944526477 versicolor
80   -0.17309407 -1.04925145  -0.14615094 -0.2615107354 versicolor
81   -0.41462067 -1.50810778   0.02379201 -0.1303180588 versicolor
82   -0.41462067 -1.50810778  -0.03285564 -0.2615107354 versicolor
83   -0.05233076 -0.81982329   0.08043967  0.0008746178 versicolor
84    0.18919584 -0.81982329   0.76021149  0.5256453243 versicolor
85   -0.53538397 -0.13153881   0.42032558  0.3944526477 versicolor
86    0.18919584  0.78617383   0.42032558  0.5256453243 versicolor
87    1.03453895  0.09788935   0.53362088  0.3944526477 versicolor
88    0.55148575 -1.73753594   0.36367793  0.1320672944 versicolor
89   -0.29385737 -0.13153881   0.19373497  0.1320672944 versicolor
90   -0.41462067 -1.27867961   0.13708732  0.1320672944 versicolor
91   -0.41462067 -1.04925145   0.36367793  0.0008746178 versicolor
92    0.30995914 -0.13153881   0.47697323  0.2632599711 versicolor
93   -0.05233076 -1.04925145   0.13708732  0.0008746178 versicolor
94   -1.01843718 -1.73753594  -0.25944625 -0.2615107354 versicolor
95   -0.29385737 -0.81982329   0.25038262  0.1320672944 versicolor
96   -0.17309407 -0.13153881   0.25038262  0.0008746178 versicolor
97   -0.17309407 -0.36096697   0.25038262  0.1320672944 versicolor
98    0.43072244 -0.36096697   0.30703027  0.1320672944 versicolor
99   -0.89767388 -1.27867961  -0.42938920 -0.1303180588 versicolor
100  -0.17309407 -0.59039513   0.19373497  0.1320672944 versicolor
101   0.55148575  0.55674567   1.27004036  1.7063794137  virginica
102  -0.05233076 -0.81982329   0.76021149  0.9192233541  virginica
103   1.51759216 -0.13153881   1.21339271  1.1816087073  virginica
104   0.55148575 -0.36096697   1.04344975  0.7880306775  virginica
105   0.79301235 -0.13153881   1.15674505  1.3128013839  virginica
106   2.12140867 -0.13153881   1.60992627  1.1816087073  virginica
107  -1.13920048 -1.27867961   0.42032558  0.6568380009  virginica
108   1.75911877 -0.36096697   1.43998331  0.7880306775  virginica
109   1.03453895 -1.27867961   1.15674505  0.7880306775  virginica
110   1.63835547  1.24503015   1.32668801  1.7063794137  virginica
111   0.79301235  0.32731751   0.76021149  1.0504160307  virginica
112   0.67224905 -0.81982329   0.87350679  0.9192233541  virginica
113   1.15530226 -0.13153881   0.98680210  1.1816087073  virginica
114  -0.17309407 -1.27867961   0.70356384  1.0504160307  virginica
115  -0.05233076 -0.59039513   0.76021149  1.5751867371  virginica
116   0.67224905  0.32731751   0.87350679  1.4439940605  virginica
117   0.79301235 -0.13153881   0.98680210  0.7880306775  virginica
118   2.24217198  1.70388647   1.66657392  1.3128013839  virginica
119   2.24217198 -1.04925145   1.77986923  1.4439940605  virginica
120   0.18919584 -1.96696410   0.70356384  0.3944526477  virginica
121   1.27606556  0.32731751   1.10009740  1.4439940605  virginica
122  -0.29385737 -0.59039513   0.64691619  1.0504160307  virginica
123   2.24217198 -0.59039513   1.66657392  1.0504160307  virginica
124   0.55148575 -0.81982329   0.64691619  0.7880306775  virginica
125   1.03453895  0.55674567   1.10009740  1.1816087073  virginica
126   1.63835547  0.32731751   1.27004036  0.7880306775  virginica
127   0.43072244 -0.59039513   0.59026853  0.7880306775  virginica
128   0.30995914 -0.13153881   0.64691619  0.7880306775  virginica
129   0.67224905 -0.59039513   1.04344975  1.1816087073  virginica
130   1.63835547 -0.13153881   1.15674505  0.5256453243  virginica
131   1.87988207 -0.59039513   1.32668801  0.9192233541  virginica
132   2.48369858  1.70388647   1.49663097  1.0504160307  virginica
133   0.67224905 -0.59039513   1.04344975  1.3128013839  virginica
134   0.55148575 -0.59039513   0.76021149  0.3944526477  virginica
135   0.30995914 -1.04925145   1.04344975  0.2632599711  virginica
136   2.24217198 -0.13153881   1.32668801  1.4439940605  virginica
137   0.55148575  0.78617383   1.04344975  1.5751867371  virginica
138   0.67224905  0.09788935   0.98680210  0.7880306775  virginica
139   0.18919584 -0.13153881   0.59026853  0.7880306775  virginica
140   1.27606556  0.09788935   0.93015445  1.1816087073  virginica
141   1.03453895  0.09788935   1.04344975  1.5751867371  virginica
142   1.27606556  0.09788935   0.76021149  1.4439940605  virginica
143  -0.05233076 -0.81982329   0.76021149  0.9192233541  virginica
144   1.15530226  0.32731751   1.21339271  1.4439940605  virginica
145   1.03453895  0.55674567   1.10009740  1.7063794137  virginica
146   1.03453895 -0.13153881   0.81685914  1.4439940605  virginica
147   0.55148575 -1.27867961   0.70356384  0.9192233541  virginica
148   0.79301235 -0.13153881   0.81685914  1.0504160307  virginica
149   0.43072244  0.78617383   0.93015445  1.4439940605  virginica
150   0.06843254 -0.13153881   0.76021149  0.7880306775  virginica
> 
> 
> 
> cleanEx()
> nameEx("section_fun")
> ### * section_fun
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: section_fun
> ### Title: Section a function and set default values in function
> ### Aliases: section_fun set_default section_fun_sub section_fun_env
> ###   get_section get_fun
> 
> ### ** Examples
> 
> 
> f  <- function(x, y){x + y}
> 
> f_ <- section_fun(f, list(y = 10),    method="args") ## "def"" is default
> f_ <- section_fun(f, nms="y", vls=10, method="args") ## SAME AS ABOVE
> f_
function (x, y = 10) 
{
    x + y
}
> f_(x=1)
[1] 11
> 
> f_ <- section_fun(f, list(y = 10),    method="body") ## 
> f_ <- section_fun(f, nms="y", vls=10, method="body") ## SAME AS ABOVE
> f_
function (x) 
{
    y = 10
    x + y
}
> f_(x=1)
[1] 11
> 
> f_ <- section_fun(f, list(y = 10),    method="env")
> f_ <- section_fun(f, nms="y", vls=10, method="env") ## SAME AS ABOVE
> f_
function (x) 
{
    . <- "use get_section(function_name) to see section"
    . <- "use get_fun(function_name) to see original function"
    args <- arg_getter()
    do.call(fun, args)
}
<environment: 0x55c0cd2f42a0>
> f_(x=1)
[1] 11
> get_section(f_)
$y
[1] 10

> get_fun(f_)
function (x, y) 
{
    x + y
}
> 
>  
> ## With more complicated values:
> g <- function(A, B) {
+   A + B
+ }
> g_ <- section_fun(g, list(A = matrix(1:4, nrow=2)))
> g_ <- section_fun(g, "A", list(matrix(1:4, nrow=2)))
> g_(diag(1, 2))
     [,1] [,2]
[1,]    2    3
[2,]    2    5
> 
> g_ <- section_fun(g, list(A = matrix(1:4, nrow=2)))
> 
> ## Using built in function
> set.seed(123)
> rnorm5 <- section_fun(rnorm, list(n=5)) 
> rnorm5(0, 1)
[1] -0.56047565 -0.23017749  1.55870831  0.07050839  0.12928774
> 
> set.seed(123)
> rnorm(5)
[1] -0.56047565 -0.23017749  1.55870831  0.07050839  0.12928774
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("set_list_set_matrix")
> ### * set_list_set_matrix
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_list_set_matrix
> ### Title: Matrix representatation of list of vectors and vice versa
> ### Aliases: set_list_set_matrix set_list2matrix matrix2set_list
> 
> ### ** Examples
> 
> l <- list(c(1,2,3), c(3,2,4), c(3,2,4))
> m1 <- set_list2matrix(l)
> m1
     1 2 3 4
[1,] 1 1 1 0
[2,] 0 1 1 1
[3,] 0 1 1 1
> matrix2set_list(m1)
[[1]]
[1] "1" "2" "3"

[[2]]
[1] "2" "3" "4"

[[3]]
[1] "2" "3" "4"

> 
> m2 <- set_list2matrix(l, aggregate=TRUE)
> m2
     1 2 3 4 Freq__
[1,] 0 1 1 1      2
[2,] 1 1 1 0      1
> matrix2set_list(m2)
[[1]]
[1] "2" "3" "4"

[[2]]
[1] "2" "3" "4"

[[3]]
[1] "1" "2" "3"

> 
> 
> 
> 
> 
> cleanEx()
> nameEx("split_byrow_bycol")
> ### * split_byrow_bycol
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: split_byrow_bycol
> ### Title: Split matrix or dataframe into list
> ### Aliases: split_byrow_bycol split_bycol split_byrow
> 
> ### ** Examples
> 
> x <- mtcars[1:3, 1:6]
> x  |> split_bycol()
[[1]]
               mpg
Mazda RX4     21.0
Mazda RX4 Wag 21.0
Datsun 710    22.8

[[2]]
              cyl
Mazda RX4       6
Mazda RX4 Wag   6
Datsun 710      4

[[3]]
              disp
Mazda RX4      160
Mazda RX4 Wag  160
Datsun 710     108

[[4]]
               hp
Mazda RX4     110
Mazda RX4 Wag 110
Datsun 710     93

[[5]]
              drat
Mazda RX4     3.90
Mazda RX4 Wag 3.90
Datsun 710    3.85

[[6]]
                 wt
Mazda RX4     2.620
Mazda RX4 Wag 2.875
Datsun 710    2.320

> x  |> split_bycol(as.list=TRUE)
$mpg
[1] 21.0 21.0 22.8

$cyl
[1] 6 6 4

$disp
[1] 160 160 108

$hp
[1] 110 110  93

$drat
[1] 3.90 3.90 3.85

$wt
[1] 2.620 2.875 2.320

> x  |> split_bycol(as.list=FALSE)
[[1]]
               mpg
Mazda RX4     21.0
Mazda RX4 Wag 21.0
Datsun 710    22.8

[[2]]
              cyl
Mazda RX4       6
Mazda RX4 Wag   6
Datsun 710      4

[[3]]
              disp
Mazda RX4      160
Mazda RX4 Wag  160
Datsun 710     108

[[4]]
               hp
Mazda RX4     110
Mazda RX4 Wag 110
Datsun 710     93

[[5]]
              drat
Mazda RX4     3.90
Mazda RX4 Wag 3.90
Datsun 710    3.85

[[6]]
                 wt
Mazda RX4     2.620
Mazda RX4 Wag 2.875
Datsun 710    2.320

> x  |> split_bycol(idx=c(1,1,1,2,2,3,3,3))
[[1]]
               mpg cyl disp
Mazda RX4     21.0   6  160
Mazda RX4 Wag 21.0   6  160
Datsun 710    22.8   4  108

[[2]]
               hp drat
Mazda RX4     110 3.90
Mazda RX4 Wag 110 3.90
Datsun 710     93 3.85

[[3]]
                 wt
Mazda RX4     2.620
Mazda RX4 Wag 2.875
Datsun 710    2.320

> ## x  |> split_bycol(idx=c(1,1,7,2,2,3,3,3)) ## Gives error
> 
> x <- mtcars[1:6, 1:6]
> x  |> split_byrow()
$`1`
          mpg cyl disp  hp drat   wt
Mazda RX4  21   6  160 110  3.9 2.62

$`2`
              mpg cyl disp  hp drat    wt
Mazda RX4 Wag  21   6  160 110  3.9 2.875

$`3`
            mpg cyl disp hp drat   wt
Datsun 710 22.8   4  108 93 3.85 2.32

$`4`
                mpg cyl disp  hp drat    wt
Hornet 4 Drive 21.4   6  258 110 3.08 3.215

$`5`
                   mpg cyl disp  hp drat   wt
Hornet Sportabout 18.7   8  360 175 3.15 3.44

$`6`
         mpg cyl disp  hp drat   wt
Valiant 18.1   6  225 105 2.76 3.46

> x  |> split_byrow(idx=c(1,1,2,2))
$`1`
                   mpg cyl disp  hp drat    wt
Mazda RX4         21.0   6  160 110 3.90 2.620
Mazda RX4 Wag     21.0   6  160 110 3.90 2.875
Hornet Sportabout 18.7   8  360 175 3.15 3.440
Valiant           18.1   6  225 105 2.76 3.460

$`2`
                mpg cyl disp  hp drat    wt
Datsun 710     22.8   4  108  93 3.85 2.320
Hornet 4 Drive 21.4   6  258 110 3.08 3.215

> 
> m <- as.matrix(x)
> u <- x |> split_byrow(idx=c(1,1,2,2))
> y <- m |> split_byrow(idx=c(1,1,2,2))
> 
> 
> 
> 
> cleanEx()
> nameEx("sub_seq")
> ### * sub_seq
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: sub_seq
> ### Title: Find sub-sequences of identical elements in a vector.
> ### Aliases: sub_seq subSeq is_grouped rle2
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> x <- c(1, 1, 1, 0, 0, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 3)
> (ans <- subSeq(x))
  first last slength midpoint value
1     1    3       3        2     1
2     4    5       2        5     0
3     6    8       3        7     1
4     9   11       3       10     2
5    12   12       1       12     1
6    13   15       3       14     2
7    16   16       1       16     3
> ans$value
[1] 1 0 1 2 1 2 3
> 
> ## Notice: Same results below
> subSeq(x, item=1)
  first last slength midpoint value
1     1    3       3        2     1
2     6    8       3        7     1
3    12   12       1       12     1
> subSeq(x, item="1")
  first last slength midpoint value
1     1    3       3        2     1
2     6    8       3        7     1
3    12   12       1       12     1
> 
> xc <- as.character(x)
> (ans<-subSeq(xc))
  first last slength midpoint value
1     1    3       3        2     1
2     4    5       2        5     0
3     6    8       3        7     1
4     9   11       3       10     2
5    12   12       1       12     1
6    13   15       3       14     2
7    16   16       1       16     3
> ans$value
[1] "1" "0" "1" "2" "1" "2" "3"
> 
> ## Notice: Same results below
> subSeq(xc, item="1")
  first last slength midpoint value
1     1    3       3        2     1
2     6    8       3        7     1
3    12   12       1       12     1
> subSeq(xc, item=1)
  first last slength midpoint value
1     1    3       3        2     1
2     6    8       3        7     1
3    12   12       1       12     1
> 
> is_grouped(x)
[1] FALSE
> is_grouped(sort(x))
[1] TRUE
> is_grouped(xc)
[1] FALSE
> is_grouped(sort(xc))
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("taylor")
> ### * taylor
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: taylor
> ### Title: Taylor expansion (one dimension)
> ### Aliases: taylor
> ### Keywords: utilities
> 
> ### ** Examples
> 
> fn <- function(x) log(x)
> ord <- 2
> x0 <- 2
> 
> xv  <- seq(.2, 5, .1)
> plot(xv, fn(xv), type="l")
> lines(xv, taylor(fn, x0=x0, ord=ord)(xv), lty=2)
> abline(v=x0)
> 
> fn <- function(x)sin(x)
> ord <- 4
> x0 <- 0
> xv <- seq(-2*pi, 2*pi, 0.1)
> plot(xv, fn(xv), type="l")
> lines(xv, taylor(fn, x0=x0, ord=ord)(xv), lty=2)
> abline(v=x0)
> 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("timeSinceEvent")
> ### * timeSinceEvent
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: timeSinceEvent
> ### Title: Calculate "time since event" in a vector.
> ### Aliases: timeSinceEvent
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> ## Events:
> yvar <- c(0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,
+           0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0)
> 
> ## Plot results:
> tse <- timeSinceEvent(yvar)
> plot(sign.tse ~ tvar, data=tse, type="b")
> grid()
> rug(tse$tvar[tse$yvar==1], col=4, lwd=4)
> points(scale(tse$run), col=tse$run, lwd=2)
> lines(abs.tse + .2 ~ tvar, data=tse, type="b", col=3)
> 
> ## Find times for which time since an event is at most 1:
> tse$tvar[tse$abs <= 1]
 [1]  3  4  5  9 10 11 15 16 17 18 19 26 27 28 29
> 
> yvar <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
+ 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
+ )
> 
> tvar <- c(207, 208, 208, 208, 209, 209, 209, 209, 210, 210, 211, 211, 
+ 211, 212, 213, 213, 214, 214, 215, 216, 216, 216, 216, 217, 217, 
+ 217, 218, 218, 219, 219, 219, 219, 220, 220, 221, 221, 221, 221, 
+ 222, 222, 222)
> 
> timeSinceEvent(yvar, tvar)
   yvar tvar abs.tse sign.tse ewin run tae tbe
1     0  207       6       -6    1  NA  NA  -6
2     0  208       5       -5    1  NA  NA  -5
3     0  208       5       -5    1  NA  NA  -5
4     0  208       5       -5    1  NA  NA  -5
5     0  209       4       -4    1  NA  NA  -4
6     0  209       4       -4    1  NA  NA  -4
7     0  209       4       -4    1  NA  NA  -4
8     0  209       4       -4    1  NA  NA  -4
9     0  210       3       -3    1  NA  NA  -3
10    0  210       3       -3    1  NA  NA  -3
11    0  211       2       -2    1  NA  NA  -2
12    0  211       2       -2    1  NA  NA  -2
13    0  211       2       -2    1  NA  NA  -2
14    0  212       1       -1    1  NA  NA  -1
15    1  213       0        0    1   1   0   0
16    1  213       0        0    1   2   0   0
17    0  214       1        1    2   2   1  -5
18    0  214       1        1    2   2   1  -5
19    0  215       2        2    2   2   2  -4
20    0  216       3        3    2   2   3  -3
21    0  216       3        3    2   2   3  -3
22    0  216       3        3    2   2   3  -3
23    0  216       3        3    2   2   3  -3
24    0  217       2       -2    3   2   4  -2
25    0  217       2       -2    3   2   4  -2
26    0  217       2       -2    3   2   4  -2
27    0  218       1       -1    3   2   5  -1
28    0  218       1       -1    3   2   5  -1
29    0  219       0        0    3   2   6   0
30    1  219       0        0    3   3   0   0
31    0  219       0        0    3   3   0  NA
32    0  219       0        0    3   3   0  NA
33    0  220       1        1    3   3   1  NA
34    0  220       1        1    3   3   1  NA
35    0  221       2        2    3   3   2  NA
36    0  221       2        2    3   3   2  NA
37    0  221       2        2    3   3   2  NA
38    0  221       2        2    3   3   2  NA
39    0  222       3        3    3   3   3  NA
40    0  222       3        3    3   3   3  NA
41    0  222       3        3    3   3   3  NA
> 
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("which.maxn")
> ### * which.maxn
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: which.maxn
> ### Title: Where are the n largest or n smallest elements in a numeric
> ###   vector ?
> ### Aliases: which.maxn which.minn
> ### Keywords: utilities
> 
> ### ** Examples
> 
> 
> x <- c(1:4, 0:5, 11, NA, NA)
> ii <- which.minn(x, 5)
> 
> x <- c(1, rep(NA,10), 2)
> ii <- which.minn(x, 5)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  8.223 0.188 8.418 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
