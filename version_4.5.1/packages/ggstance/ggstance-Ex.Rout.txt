
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "ggstance"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('ggstance')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("geom_boxploth")
> ### * geom_boxploth
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: geom_boxploth
> ### Title: Horizontal box and whiskers plot.
> ### Aliases: geom_boxploth
> 
> ### ** Examples
> 
> library("ggplot2")

Attaching package: ‘ggplot2’

The following objects are masked from ‘package:ggstance’:

    geom_errorbarh, GeomErrorbarh

> 
> # With ggplot2 we need coord_flip():
> ggplot(mpg, aes(class, hwy, fill = factor(cyl))) +
+   geom_boxplot() +
+   coord_flip()
> 
> # With ggstance we use the h-suffixed version:
> ggplot(mpg, aes(hwy, class, fill = factor(cyl))) +
+   geom_boxploth()
Warning: The following aesthetics were dropped during statistical transformation: x.
ℹ This can happen when ggplot fails to infer the correct grouping structure in
  the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical
  variable into a factor?
Warning: Using the `size` aesthetic with geom_segment was deprecated in ggplot2 3.4.0.
ℹ Please use the `linewidth` aesthetic instead.
Warning: Using the `size` aesthetic with geom_polygon was deprecated in ggplot2 3.4.0.
ℹ Please use the `linewidth` aesthetic instead.
> 
> # With facets ggstance horizontal layers are often the only way of
> # having all ggplot features working correctly, for instance free
> # scales:
> df <- data.frame(
+   Group = factor(rep(1:3, each = 4), labels = c("Drug A", "Drug B", "Control")),
+   Subject = factor(rep(1:6, each = 2), labels = c("A", "B", "C", "D", "E", "F")),
+   Result = rnorm(12)
+ )
> 
> ggplot(df, aes(Result, Subject))+
+   geom_boxploth(aes(fill = Group))+
+   facet_grid(Group ~ ., scales = "free_y")
Warning: The following aesthetics were dropped during statistical transformation: x.
ℹ This can happen when ggplot fails to infer the correct grouping structure in
  the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical
  variable into a factor?
Warning: The following aesthetics were dropped during statistical transformation: x.
ℹ This can happen when ggplot fails to infer the correct grouping structure in
  the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical
  variable into a factor?
Warning: The following aesthetics were dropped during statistical transformation: x.
ℹ This can happen when ggplot fails to infer the correct grouping structure in
  the data.
ℹ Did you forget to specify a `group` aesthetic or to convert a numerical
  variable into a factor?
> 
> 
> 
> cleanEx()

detaching ‘package:ggplot2’

> nameEx("hmisc_h")
> ### * hmisc_h
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hmisc_h
> ### Title: Horizontal versions of summary functions from Hmisc
> ### Aliases: hmisc_h mean_cl_boot_h mean_cl_normal_h mean_sdl_h
> ###   median_hilow_h
> 
> ### ** Examples
> 
> if (requireNamespace("Hmisc")) {
+   x <- rnorm(100)
+   mean_cl_boot_h(x)
+   mean_cl_normal_h(x)
+   mean_sdl_h(x)
+   median_hilow_h(x)
+ }
Loading required namespace: Hmisc
          x      xmin     xmax
1 0.1139092 -1.671298 1.797468
> 
> 
> 
> cleanEx()
> nameEx("mean_se_h")
> ### * mean_se_h
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: mean_se_h
> ### Title: Calculate mean and standard error
> ### Aliases: mean_se_h
> 
> ### ** Examples
> 
> x <- rnorm(100)
> mean_se_h(x)
          x       xmin      xmax
1 0.1088874 0.01906743 0.1987073
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  1.965 0.059 2.025 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
