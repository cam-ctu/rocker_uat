
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-isForkedChild.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> parallelly:::testme("isForkedChild")
Test ‘isForkedChild’ ...
Sourcing 7 prologue scripts ...
01/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/001.load.R’
02/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/002.record-state.R’
03/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/030.imports.R’
04/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/050.utils.R’
05/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/090.context.R’
06/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/090.options.R’
07/07 prologue script ‘/usr/local/lib/R/site-library/parallelly/testme/_prologue/091.envvars.R’
Sourcing 7 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/parallelly/testme/test-isForkedChild.R’

> library(parallelly)

> library(parallel)

Attaching package: ‘parallel’

The following object is masked from ‘testme’:

    detectCores


> options(parallelly.debug = FALSE)

> message("*** isForkedChild() ...")
*** isForkedChild() ...

> stopifnot(!isForkedChild())

> if (supportsMulticore()) {
+     message("- mcparallel()/mccollect()")
+     f <- mcparallel(isForkedChild())
+     isForked <- mccollect(f)[[1]]
+  .... [TRUNCATED] 
- mcparallel()/mccollect()
- makeForkCluster()

> message("- mclapply()")
- mclapply()

> isForked <- mclapply(1:2, FUN = function(ii) isForkedChild())

> isForked <- unlist(isForked, use.names = FALSE)

> if (supportsMulticore()) {
+     stopifnot(all(isForked))
+ } else {
+     stopifnot(!any(isForked))
+ }

> message("- makeClusterPSOCK()")
- makeClusterPSOCK()

> cl <- makeClusterPSOCK(1)

> isForked <- clusterEvalQ(cl, {
+     parallelly::isForkedChild()
+ })

> isForked <- unlist(isForked, use.names = FALSE)

> stopifnot(!isForked)

> parallel::stopCluster(cl)

> message("*** isForkedChild() ... DONE")
*** isForkedChild() ... DONE
Sourcing 4 epilogue scripts ...
01/04 epilogue script ‘/usr/local/lib/R/site-library/parallelly/testme/_epilogue/002.undo-state.R’
02/04 epilogue script ‘/usr/local/lib/R/site-library/parallelly/testme/_epilogue/090.gc.R’
03/04 epilogue script ‘/usr/local/lib/R/site-library/parallelly/testme/_epilogue/099.session_info.R’
04/04 epilogue script ‘/usr/local/lib/R/site-library/parallelly/testme/_epilogue/999.detritus.R’
Looking for detritus files generated by test ‘isForkedChild’:
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 4 epilogue scripts ... done
Test time: user.self=0.06s, sys.self=0.03s, elapsed=0.5s, user.child=0.2s, sys.child=0.4s
Test ‘isForkedChild’ ... success
> 
