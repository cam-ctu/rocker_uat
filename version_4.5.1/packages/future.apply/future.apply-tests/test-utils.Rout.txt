
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-utils.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future.apply:::testme("utils")
Test ‘utils’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future.apply/testme/test-utils.R’

> loadNamespace("future.apply")
<environment: namespace:future.apply>

> stop_if_not <- future.apply:::stop_if_not

> message("*** utils ...")
*** utils ...

> message("*** hpaste() ...")
*** hpaste() ...

> x <- 1:6

> y <- 10:1

> z <- LETTERS[x]

> printf("x = %s.\n", hpaste(x))
x = 1, 2, 3, 4, 5, 6.

> printf("x = %s.\n", hpaste(x, maxHead = 2))
x = 1, 2, ..., 6.

> printf("x = %s.\n", hpaste(x, maxHead = 3))
x = 1, 2, 3, ..., 6.

> printf("x = %s.\n", hpaste(x, maxHead = 4))
x = 1, 2, 3, 4, 5, 6.

> printf("x = %s.\n", hpaste(x, maxHead = 1, maxTail = 2))
x = 1, ..., 5, 6.

> printf("y = %s.\n", hpaste(y, maxHead = Inf))
y = 10, 9, 8, 7, 6, 5, 4, 3, 2, 1.

> printf("y = %s.\n", paste(y, collapse = ", "))
y = 10, 9, 8, 7, 6, 5, 4, 3, 2, 1.

> printf("x = %s.\n", hpaste(x, lastCollapse = " and "))
x = 1, 2, 3, 4, 5 and 6.

> stopifnot(all(hpaste(x, collapse = NULL) == x))

> stopifnot(identical(hpaste(character(0)), character(0)))

> message("*** hpaste() ...")
*** hpaste() ...

> message("*** mdebug() ...")
*** mdebug() ...

> mdebug("Hello #", 1)
[08:07:01.964] Hello #1

> mdebugf("Hello #%d", 1)
[08:07:01.965] Hello #1

> options(future.debug = TRUE)

> mdebug("Hello #", 2)
[08:07:01.965] Hello #2

> mdebugf("Hello #%d", 2)
[08:07:01.965] Hello #2

> options(future.debug = FALSE)

> mdebug("Hello #", 3)
[08:07:01.965] Hello #3

> mdebugf("Hello #%d", 3)
[08:07:01.965] Hello #3

> message("*** mdebug() ... DONE")
*** mdebug() ... DONE

> message("*** import_from() ...")
*** import_from() ...

> obj <- import_from("non-existing-fcn", default = NA, 
+     package = "future")

> stopifnot(identical(obj, NA))

> res <- tryCatch({
+     obj <- import_from("non-existing-fcn", package = "future")
+ }, error = identity)

> print(res)
<simpleError in import_from("non-existing-fcn", package = "future"): No such 'future' function: non-existing-fcn()>

> stopifnot(inherits(res, "simpleError"))

> message("*** import_from() ... DONE")
*** import_from() ... DONE

> message("*** stop_if_not() ...")
*** stop_if_not() ...

> stop_if_not(TRUE)
NULL

> stop_if_not(TRUE, TRUE)
NULL

> res <- tryCatch({
+     stop_if_not(FALSE)
+ }, error = identity)

> stopifnot(inherits(res, "simpleError"))

> res <- tryCatch({
+     stop_if_not(list(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, 
+         FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, .... [TRUNCATED] 

> stopifnot(inherits(res, "simpleError"))

> message("*** stop_if_not() ... DONE")
*** stop_if_not() ... DONE

> message("*** assert_values2() ...")
*** assert_values2() ...

> assert_values2 <- future.apply:::assert_values2

> assert_values2(nX = 2, values2 = as.list(1:2))

> res <- tryCatch({
+     assert_values2(nX = 1, values = as.list(1:2), values2 = as.list(1:2), 
+         fcn = "tests", debug = TRUE)
+ }, error = i .... [TRUNCATED] 
[08:07:01.968] Unexpected error in tests(): After gathering and merging the values from 2 chunks in to a list, the total number of elements (= 2) does not match the number of input elements in 'X' (= 1). There were in total 2 chunks and 2 elements (2 chunks with 1 elements)
[08:07:01.968] chunk_sizes
[08:07:01.968] 1 
[08:07:01.968] 2 
[08:07:01.969] Results before merge chunks:
[08:07:01.969] List of 2
[08:07:01.969]  $ : int 1
[08:07:01.969]  $ : int 2
[08:07:01.971] Results after merge chunks:
[08:07:01.973] List of 2
[08:07:01.973]  $ : int 1
[08:07:01.973]  $ : int 2

> stopifnot(inherits(res, "FutureError"))

> message("*** assert_values2() ... DONE")
*** assert_values2() ... DONE

> message("*** utils ... DONE")
*** utils ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=0.07s, sys.self=0.001s, elapsed=0.08s, user.child=0.001s, sys.child=0.004s
Test ‘utils’ ... success
> 
