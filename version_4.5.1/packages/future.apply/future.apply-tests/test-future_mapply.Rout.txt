
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This runs testme test script inst/testme/test-future_mapply.R
> ## Don't edit - it was autogenerated by inst/testme/deploy.R
> future.apply:::testme("future_mapply")
Test ‘future_mapply’ ...
Sourcing 9 prologue scripts ...
01/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/001.load.R’
02/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/002.record-state.R’
03/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/030.imports.R’
04/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/050.utils.R’
05/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/090.context.R’
06/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/090.options.R’
07/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/091.envvars.R’
08/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/099.future-setup.R’
09/09 prologue script ‘/usr/local/lib/R/site-library/future.apply/testme/_prologue/995.detrius-connections.R’
Sourcing 9 prologue scripts ... done
Running test script: ‘/usr/local/lib/R/site-library/future.apply/testme/test-future_mapply.R’

> library(future.apply)
Loading required package: future

> message("*** future_mapply() ...")
*** future_mapply() ...

> message("- Parallel RNG truth (for later)...")
- Parallel RNG truth (for later)...

> plan(sequential)

> y_rng_0 <- future_mapply(stats::runif, n = 1:4, max = 2:5, 
+     MoreArgs = list(min = 1), future.seed = 48879)

> print(y_rng_0)
[[1]]
[1] 1.752502

[[2]]
[1] 2.765950 2.044156

[[3]]
[1] 1.419503 3.529684 1.023802

[[4]]
[1] 4.494280 3.546145 1.402837 4.295444


> for (strategy in supportedStrategies()) {
+     message(sprintf("*** strategy = %s ...", sQuote(strategy)))
+     plan(strategy)
+     message("- Fr ..." ... [TRUNCATED] 
*** strategy = ‘sequential’ ...
- From example(mapply) ...
- future_.mapply()
- Subsetting (Issue #17) ...
- Non-recycling of MoreArgs (Issue #51) ...
- Recycle arguments to same length ...
- Parallel RNG ...
[[1]]
[1] 1.752502

[[2]]
[1] 2.765950 2.044156

[[3]]
[1] 1.419503 3.529684 1.023802

[[4]]
[1] 4.494280 3.546145 1.402837 4.295444

- future_Map() ...
- future_mapply() - 'max-or-0-if' recycling rule ...
- future_mapply(x, ...) where x[[i]] subsets via S3 method ...
*** strategy = ‘sequential’ ... done
*** strategy = ‘multicore’ ...
- From example(mapply) ...
- future_.mapply()
- Subsetting (Issue #17) ...
- Non-recycling of MoreArgs (Issue #51) ...
- Recycle arguments to same length ...
- Parallel RNG ...
[[1]]
[1] 1.752502

[[2]]
[1] 2.765950 2.044156

[[3]]
[1] 1.419503 3.529684 1.023802

[[4]]
[1] 4.494280 3.546145 1.402837 4.295444

- future_Map() ...
- future_mapply() - 'max-or-0-if' recycling rule ...
- future_mapply(x, ...) where x[[i]] subsets via S3 method ...
*** strategy = ‘multicore’ ... done
*** strategy = ‘multisession’ ...
- From example(mapply) ...
- future_.mapply()
- Subsetting (Issue #17) ...
- Non-recycling of MoreArgs (Issue #51) ...
- Recycle arguments to same length ...
- Parallel RNG ...
[[1]]
[1] 1.752502

[[2]]
[1] 2.765950 2.044156

[[3]]
[1] 1.419503 3.529684 1.023802

[[4]]
[1] 4.494280 3.546145 1.402837 4.295444

- future_Map() ...
- future_mapply() - 'max-or-0-if' recycling rule ...
- future_mapply(x, ...) where x[[i]] subsets via S3 method ...
*** strategy = ‘multisession’ ... done

> message("- Empty input [non parallel] ...")
- Empty input [non parallel] ...

> y0 <- mapply(search)

> y1 <- future_mapply(search)

> stopifnot(identical(y1, y0))

> y0 <- mapply(list, integer(0))

> y1 <- future_mapply(list, integer(0))

> stopifnot(identical(y1, y0))

> message("*** future_mapply() - special cases ...")
*** future_mapply() - special cases ...

> X <- list()

> names(X) <- character(0)

> y <- future_mapply(FUN = identity, X)

> stopifnot(length(y) == 0, !is.null(names(y)), identical(y, 
+     X))

> y <- future_mapply(FUN = identity, X, X)

> stopifnot(length(y) == 0, !is.null(names(y)), identical(y, 
+     X))

> message("*** future_mapply() - special cases ... DONE")
*** future_mapply() - special cases ... DONE

> message("*** future_mapply() ... DONE")
*** future_mapply() ... DONE
Sourcing 6 epilogue scripts ...
01/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/001.undo-future.R’
02/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/002.undo-state.R’
03/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/090.gc.R’
04/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/099.session_info.R’
05/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/995.detritus-connections.R’
06/06 epilogue script ‘/usr/local/lib/R/site-library/future.apply/testme/_epilogue/999.detritus-files.R’
Skipping, because path appears not to be an 'R CMD check' folder: ‘/tmp’
Sourcing 6 epilogue scripts ... done
Test time: user.self=4s, sys.self=0.4s, elapsed=7s, user.child=0.4s, sys.child=0.7s
Test ‘future_mapply’ ... success
> 
