
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("R.utils")
Loading required package: R.oo
Loading required package: R.methodsS3
R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help.
R.oo v1.27.1 (2025-05-02 21:00:05 UTC) successfully loaded. See ?R.oo for help.

Attaching package: ‘R.oo’

The following object is masked from ‘package:R.methodsS3’:

    throw

The following objects are masked from ‘package:methods’:

    getClasses, getMethods

The following objects are masked from ‘package:base’:

    attach, detach, load, save

R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help.

Attaching package: ‘R.utils’

The following object is masked from ‘package:utils’:

    timestamp

The following objects are masked from ‘package:base’:

    cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings

> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Example using an array with a random number of dimensions
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> maxdim <- 4
> dim <- sample(3:maxdim, size=sample(2:maxdim, size=1), replace=TRUE)
> ndim <- length(dim)
> dimnames <- list()
> for (kk in 1:ndim)
+   dimnames[[kk]] <- sprintf("%s%d", letters[kk], 1:dim[kk])
> x <- 1:prod(dim)
> x <- array(x, dim=dim, dimnames=dimnames)
> 
> cat("\nArray 'x':\n")

Array 'x':
> print(x)
   b1 b2 b3
a1  1  5  9
a2  2  6 10
a3  3  7 11
a4  4  8 12
> 
> 
> cat("\nExtract 'x[2:3,...]':\n")

Extract 'x[2:3,...]':
> print(extract(x, "1"=2:3))
   b1 b2 b3
a2  2  6 10
a3  3  7 11
> 
> cat("\nExtract 'x[3,2:3,...]':\n")

Extract 'x[3,2:3,...]':
> print(extract(x, "1"=3,"2"=2:3))
   b2 b3
a3  7 11
> 
> cat("\nExtract 'x[...,2:3]':\n")

Extract 'x[...,2:3]':
> print(extract(x, indices=2:3, dims=length(dim(x))))
   b2
a1  5
a2  6
a3  7
a4  8
> 
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Assertions
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> y <- array(1:24, dim=c(2,3,4))
> yA <- y[,,2:3]
> yB <- extract(y, indices=list(2:3), dims=length(dim(y)))
> stopifnot(identical(yB, yA))
> 
> yA <- y[,2:3,2]
> yB <- extract(y, indices=list(2:3,2), dims=c(2,3), drop=TRUE)
> stopifnot(identical(yB, yA))
> 
> 
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> # Matrix
> # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
> y <- matrix(1:24, nrow=6, ncol=4)
> yA <- y[,2:3]
> yB <- extract(y, indices=list(2:3), dims=length(dim(y)))
> stopifnot(identical(yB, yA))
> 
