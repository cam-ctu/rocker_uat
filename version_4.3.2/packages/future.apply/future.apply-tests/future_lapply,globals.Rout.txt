
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[13:20:08.083] plan(): Setting new future strategy stack:
[13:20:08.084] List of future strategies:
[13:20:08.084] 1. sequential:
[13:20:08.084]    - args: function (..., envir = parent.frame())
[13:20:08.084]    - tweaked: FALSE
[13:20:08.084]    - call: future::plan("sequential")
[13:20:08.099] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[13:20:08.665] future_lapply() ...
[13:20:08.669] Number of chunks: 1
[13:20:08.670] getGlobalsAndPackagesXApply() ...
[13:20:08.670]  - future.globals: FALSE
[13:20:08.672]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:20:08.673]  - needed namespaces: [n=0] 
[13:20:08.673] Finding globals ... DONE
[13:20:08.673]  - use_args: TRUE
[13:20:08.673]  - Getting '...' globals ...
[13:20:08.674]    - '...' content: [n=0] 
[13:20:08.674] List of 1
[13:20:08.674]  $ ...: list()
[13:20:08.674]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.674]  - attr(*, "where")=List of 1
[13:20:08.674]   ..$ ...:<environment: 0x5604840efa68> 
[13:20:08.674]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:08.674]  - attr(*, "resolved")= logi TRUE
[13:20:08.674]  - attr(*, "total_size")= num NA
[13:20:08.677]  - Getting '...' globals ... DONE
[13:20:08.677] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:20:08.677] List of 3
[13:20:08.677]  $ ...future.FUN        :function (x)  
[13:20:08.677]  $ future.call.arguments: list()
[13:20:08.677]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.677]  $ ...                  : list()
[13:20:08.677]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.677]  - attr(*, "where")=List of 3
[13:20:08.677]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:20:08.677]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:20:08.677]   ..$ ...                  :<environment: 0x5604840efa68> 
[13:20:08.677]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:08.677]  - attr(*, "resolved")= logi FALSE
[13:20:08.677]  - attr(*, "total_size")= num 3824
[13:20:08.681] Packages to be attached in all futures: [n=1] ‘utils’
[13:20:08.681] getGlobalsAndPackagesXApply() ... DONE
[13:20:08.681] Number of futures (= number of chunks): 1
[13:20:08.682] Launching 1 futures (chunks) ...
[13:20:08.682] Chunk #1 of 1 ...
[13:20:08.682]  - seeds: <none>
[13:20:08.682]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:08.692] Created future:
[13:20:08.692] ClusterFuture:
[13:20:08.692] Label: ‘future_lapply-1’
[13:20:08.692] Expression:
[13:20:08.692] {
[13:20:08.692]     do.call(function(...) {
[13:20:08.692]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:08.692]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:08.692]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:08.692]             on.exit(options(oopts), add = TRUE)
[13:20:08.692]         }
[13:20:08.692]         {
[13:20:08.692]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:08.692]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:08.692]                 ...future.FUN(...future.X_jj, ...)
[13:20:08.692]             })
[13:20:08.692]         }
[13:20:08.692]     }, args = future.call.arguments)
[13:20:08.692] }
[13:20:08.692] Lazy evaluation: FALSE
[13:20:08.692] Asynchronous evaluation: TRUE
[13:20:08.692] Local evaluation: TRUE
[13:20:08.692] Environment: R_GlobalEnv
[13:20:08.692] Capture standard output: TRUE
[13:20:08.692] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:08.692] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:08.692] Packages: 1 packages (‘utils’)
[13:20:08.692] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:08.692] Resolved: FALSE
[13:20:08.692] Value: <not collected>
[13:20:08.692] Conditions captured: <none>
[13:20:08.692] Early signaling: FALSE
[13:20:08.692] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:08.692] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:08.705] Chunk #1 of 1 ... DONE
[13:20:08.705] Launching 1 futures (chunks) ... DONE
[13:20:08.705] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[13:20:08.749] future_lapply() ...
[13:20:08.750] Number of chunks: 1
[13:20:08.750] getGlobalsAndPackagesXApply() ...
[13:20:08.750]  - future.globals: TRUE
[13:20:08.754]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[13:20:08.754]  - needed namespaces: [n=1] ‘stats’
[13:20:08.754] Finding globals ... DONE
[13:20:08.754]  - use_args: TRUE
[13:20:08.754]  - Getting '...' globals ...
[13:20:08.755]    - '...' content: [n=0] 
[13:20:08.755] List of 1
[13:20:08.755]  $ ...: list()
[13:20:08.755]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.755]  - attr(*, "where")=List of 1
[13:20:08.755]   ..$ ...:<environment: 0x560487518948> 
[13:20:08.755]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:08.755]  - attr(*, "resolved")= logi TRUE
[13:20:08.755]  - attr(*, "total_size")= num NA
[13:20:08.758]  - Getting '...' globals ... DONE
[13:20:08.758] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[13:20:08.758] List of 4
[13:20:08.758]  $ ...future.FUN:function (x)  
[13:20:08.758]  $ a            : num 1
[13:20:08.758]  $ b            : num 2
[13:20:08.758]  $ ...          : list()
[13:20:08.758]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.758]  - attr(*, "where")=List of 4
[13:20:08.758]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:08.758]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:08.758]   ..$ b            :<environment: R_EmptyEnv> 
[13:20:08.758]   ..$ ...          :<environment: 0x560487518948> 
[13:20:08.758]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:08.758]  - attr(*, "resolved")= logi FALSE
[13:20:08.758]  - attr(*, "total_size")= num 3936
[13:20:08.763] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[13:20:08.766] getGlobalsAndPackagesXApply() ... DONE
[13:20:08.766] Number of futures (= number of chunks): 1
[13:20:08.766] Launching 1 futures (chunks) ...
[13:20:08.767] Chunk #1 of 1 ...
[13:20:08.767]  - Finding globals in 'X' for chunk #1 ...
[13:20:08.767]    + additional globals found: [n=0] 
[13:20:08.767]    + additional namespaces needed: [n=0] 
[13:20:08.767]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:08.767]  - seeds: <none>
[13:20:08.767]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:08.776] Created future:
[13:20:08.777] ClusterFuture:
[13:20:08.777] Label: ‘future_lapply-1’
[13:20:08.777] Expression:
[13:20:08.777] {
[13:20:08.777]     do.call(function(...) {
[13:20:08.777]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:08.777]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:08.777]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:08.777]             on.exit(options(oopts), add = TRUE)
[13:20:08.777]         }
[13:20:08.777]         {
[13:20:08.777]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:08.777]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:08.777]                 ...future.FUN(...future.X_jj, ...)
[13:20:08.777]             })
[13:20:08.777]         }
[13:20:08.777]     }, args = future.call.arguments)
[13:20:08.777] }
[13:20:08.777] Lazy evaluation: FALSE
[13:20:08.777] Asynchronous evaluation: TRUE
[13:20:08.777] Local evaluation: TRUE
[13:20:08.777] Environment: R_GlobalEnv
[13:20:08.777] Capture standard output: TRUE
[13:20:08.777] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:08.777] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[13:20:08.777] Packages: 2 packages (‘stats’, ‘utils’)
[13:20:08.777] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:08.777] Resolved: FALSE
[13:20:08.777] Value: <not collected>
[13:20:08.777] Conditions captured: <none>
[13:20:08.777] Early signaling: FALSE
[13:20:08.777] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:08.777] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:08.788] Chunk #1 of 1 ... DONE
[13:20:08.788] Launching 1 futures (chunks) ... DONE
[13:20:08.788] Resolving 1 futures (chunks) ...
[13:20:08.831]  - Number of value chunks collected: 1
[13:20:08.831] Resolving 1 futures (chunks) ... DONE
[13:20:08.831] Reducing values from 1 chunks ...
[13:20:08.831]  - Number of values collected after concatenation: 1
[13:20:08.831]  - Number of values expected: 1
[13:20:08.832] Reducing values from 1 chunks ... DONE
[13:20:08.832] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[13:20:08.832] future_lapply() ...
[13:20:08.833] Number of chunks: 1
[13:20:08.833] getGlobalsAndPackagesXApply() ...
[13:20:08.833]  - future.globals: ‘a’, ‘b’
[13:20:08.833]  - use_args: TRUE
[13:20:08.833] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[13:20:08.833] List of 4
[13:20:08.833]  $ a            : num 1
[13:20:08.833]  $ b            : num 2
[13:20:08.833]  $ ...future.FUN:function (x)  
[13:20:08.833]  $ ...          : list()
[13:20:08.833]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.833]  - attr(*, "where")=List of 4
[13:20:08.833]   ..$ a            :<environment: R_GlobalEnv> 
[13:20:08.833]   ..$ b            :<environment: R_GlobalEnv> 
[13:20:08.833]   ..$ ...future.FUN:<environment: 0x5604864c72f0> 
[13:20:08.833]   ..$ ...          :<environment: 0x5604864c72f0> 
[13:20:08.833]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:08.833]  - attr(*, "resolved")= logi FALSE
[13:20:08.833]  - attr(*, "total_size")= num NA
[13:20:08.837] Packages to be attached in all futures: [n=1] ‘utils’
[13:20:08.837] getGlobalsAndPackagesXApply() ... DONE
[13:20:08.838] Number of futures (= number of chunks): 1
[13:20:08.838] Launching 1 futures (chunks) ...
[13:20:08.838] Chunk #1 of 1 ...
[13:20:08.838]  - seeds: <none>
[13:20:08.838]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:08.848] Created future:
[13:20:08.848] ClusterFuture:
[13:20:08.848] Label: ‘future_lapply-1’
[13:20:08.848] Expression:
[13:20:08.848] {
[13:20:08.848]     do.call(function(...) {
[13:20:08.848]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:08.848]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:08.848]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:08.848]             on.exit(options(oopts), add = TRUE)
[13:20:08.848]         }
[13:20:08.848]         {
[13:20:08.848]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:08.848]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:08.848]                 ...future.FUN(...future.X_jj, ...)
[13:20:08.848]             })
[13:20:08.848]         }
[13:20:08.848]     }, args = future.call.arguments)
[13:20:08.848] }
[13:20:08.848] Lazy evaluation: FALSE
[13:20:08.848] Asynchronous evaluation: TRUE
[13:20:08.848] Local evaluation: TRUE
[13:20:08.848] Environment: R_GlobalEnv
[13:20:08.848] Capture standard output: TRUE
[13:20:08.848] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:08.848] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[13:20:08.848] Packages: 1 packages (‘utils’)
[13:20:08.848] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:08.848] Resolved: FALSE
[13:20:08.848] Value: <not collected>
[13:20:08.848] Conditions captured: <none>
[13:20:08.848] Early signaling: FALSE
[13:20:08.848] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:08.848] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:08.859] Chunk #1 of 1 ... DONE
[13:20:08.860] Launching 1 futures (chunks) ... DONE
[13:20:08.860] Resolving 1 futures (chunks) ...
[13:20:08.890]  - Number of value chunks collected: 1
[13:20:08.890] Resolving 1 futures (chunks) ... DONE
[13:20:08.891] Reducing values from 1 chunks ...
[13:20:08.891]  - Number of values collected after concatenation: 1
[13:20:08.891]  - Number of values expected: 1
[13:20:08.891] Reducing values from 1 chunks ... DONE
[13:20:08.891] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[13:20:08.891] future_lapply() ...
[13:20:08.892] Number of chunks: 1
[13:20:08.892] getGlobalsAndPackagesXApply() ...
[13:20:08.892]  - future.globals: <name-value list> with names ‘2’, ‘3’
[13:20:08.892]  - use_args: TRUE
[13:20:08.892]  - Getting '...' globals ...
[13:20:08.893]    - '...' content: [n=0] 
[13:20:08.893] List of 1
[13:20:08.893]  $ ...: list()
[13:20:08.893]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.893]  - attr(*, "where")=List of 1
[13:20:08.893]   ..$ ...:<environment: 0x56048472f468> 
[13:20:08.893]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:08.893]  - attr(*, "resolved")= logi TRUE
[13:20:08.893]  - attr(*, "total_size")= num NA
[13:20:08.895]  - Getting '...' globals ... DONE
[13:20:08.896] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[13:20:08.896] List of 4
[13:20:08.896]  $ a            : num 2
[13:20:08.896]  $ b            : num 3
[13:20:08.896]  $ ...future.FUN:function (x)  
[13:20:08.896]  $ ...          : list()
[13:20:08.896]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.896]  - attr(*, "where")=List of 4
[13:20:08.896]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:08.896]   ..$ b            :<environment: R_EmptyEnv> 
[13:20:08.896]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:20:08.896]   ..$ ...          :<environment: 0x56048472f468> 
[13:20:08.896]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:08.896]  - attr(*, "resolved")= logi FALSE
[13:20:08.896]  - attr(*, "total_size")= num NA
[13:20:08.900] Packages to be attached in all futures: [n=1] ‘utils’
[13:20:08.900] getGlobalsAndPackagesXApply() ... DONE
[13:20:08.900] Number of futures (= number of chunks): 1
[13:20:08.900] Launching 1 futures (chunks) ...
[13:20:08.900] Chunk #1 of 1 ...
[13:20:08.900]  - seeds: <none>
[13:20:08.900]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:08.910] Created future:
[13:20:08.910] ClusterFuture:
[13:20:08.910] Label: ‘future_lapply-1’
[13:20:08.910] Expression:
[13:20:08.910] {
[13:20:08.910]     do.call(function(...) {
[13:20:08.910]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:08.910]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:08.910]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:08.910]             on.exit(options(oopts), add = TRUE)
[13:20:08.910]         }
[13:20:08.910]         {
[13:20:08.910]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:08.910]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:08.910]                 ...future.FUN(...future.X_jj, ...)
[13:20:08.910]             })
[13:20:08.910]         }
[13:20:08.910]     }, args = future.call.arguments)
[13:20:08.910] }
[13:20:08.910] Lazy evaluation: FALSE
[13:20:08.910] Asynchronous evaluation: TRUE
[13:20:08.910] Local evaluation: TRUE
[13:20:08.910] Environment: R_GlobalEnv
[13:20:08.910] Capture standard output: TRUE
[13:20:08.910] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:08.910] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[13:20:08.910] Packages: 1 packages (‘utils’)
[13:20:08.910] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:08.910] Resolved: FALSE
[13:20:08.910] Value: <not collected>
[13:20:08.910] Conditions captured: <none>
[13:20:08.910] Early signaling: FALSE
[13:20:08.910] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:08.910] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:08.922] Chunk #1 of 1 ... DONE
[13:20:08.922] Launching 1 futures (chunks) ... DONE
[13:20:08.922] Resolving 1 futures (chunks) ...
[13:20:08.964]  - Number of value chunks collected: 1
[13:20:08.965] Resolving 1 futures (chunks) ... DONE
[13:20:08.965] Reducing values from 1 chunks ...
[13:20:08.965]  - Number of values collected after concatenation: 1
[13:20:08.965]  - Number of values expected: 1
[13:20:08.965] Reducing values from 1 chunks ... DONE
[13:20:08.965] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[13:20:08.965] future_lapply() ...
[13:20:08.966] Number of chunks: 1
[13:20:08.966] getGlobalsAndPackagesXApply() ...
[13:20:08.966]  - future.globals: FALSE
[13:20:08.967]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[13:20:08.968]  - needed namespaces: [n=0] 
[13:20:08.968] Finding globals ... DONE
[13:20:08.968]  - use_args: TRUE
[13:20:08.968]  - Getting '...' globals ...
[13:20:08.968]    - '...' content: [n=0] 
[13:20:08.968] List of 1
[13:20:08.968]  $ ...: list()
[13:20:08.968]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.968]  - attr(*, "where")=List of 1
[13:20:08.968]   ..$ ...:<environment: 0x560487510d70> 
[13:20:08.968]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:08.968]  - attr(*, "resolved")= logi TRUE
[13:20:08.968]  - attr(*, "total_size")= num NA
[13:20:08.971]  - Getting '...' globals ... DONE
[13:20:08.971] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:20:08.971] List of 4
[13:20:08.971]  $ d                    : num 42
[13:20:08.971]  $ ...future.FUN        :function (x)  
[13:20:08.971]  $ future.call.arguments: list()
[13:20:08.971]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.971]  $ ...                  : list()
[13:20:08.971]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:08.971]  - attr(*, "where")=List of 4
[13:20:08.971]   ..$ d                    :<environment: R_EmptyEnv> 
[13:20:08.971]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:20:08.971]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:20:08.971]   ..$ ...                  :<environment: 0x560487510d70> 
[13:20:08.971]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:08.971]  - attr(*, "resolved")= logi FALSE
[13:20:08.971]  - attr(*, "total_size")= num 784
[13:20:08.975] Packages to be attached in all futures: [n=0] 
[13:20:08.975] getGlobalsAndPackagesXApply() ... DONE
[13:20:08.975] Number of futures (= number of chunks): 1
[13:20:08.975] Launching 1 futures (chunks) ...
[13:20:08.975] Chunk #1 of 1 ...
[13:20:08.976]  - seeds: <none>
[13:20:08.976]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:08.986] Created future:
[13:20:08.987] ClusterFuture:
[13:20:08.987] Label: ‘future_lapply-1’
[13:20:08.987] Expression:
[13:20:08.987] {
[13:20:08.987]     do.call(function(...) {
[13:20:08.987]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:08.987]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:08.987]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:08.987]             on.exit(options(oopts), add = TRUE)
[13:20:08.987]         }
[13:20:08.987]         {
[13:20:08.987]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:08.987]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:08.987]                 ...future.FUN(...future.X_jj, ...)
[13:20:08.987]             })
[13:20:08.987]         }
[13:20:08.987]     }, args = future.call.arguments)
[13:20:08.987] }
[13:20:08.987] Lazy evaluation: FALSE
[13:20:08.987] Asynchronous evaluation: TRUE
[13:20:08.987] Local evaluation: TRUE
[13:20:08.987] Environment: R_GlobalEnv
[13:20:08.987] Capture standard output: TRUE
[13:20:08.987] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:08.987] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:20:08.987] Packages: <none>
[13:20:08.987] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:08.987] Resolved: FALSE
[13:20:08.987] Value: <not collected>
[13:20:08.987] Conditions captured: <none>
[13:20:08.987] Early signaling: FALSE
[13:20:08.987] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:08.987] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:08.998] Chunk #1 of 1 ... DONE
[13:20:08.998] Launching 1 futures (chunks) ... DONE
[13:20:08.998] Resolving 1 futures (chunks) ...
[13:20:09.041]  - Number of value chunks collected: 1
[13:20:09.041] Resolving 1 futures (chunks) ... DONE
[13:20:09.041] Reducing values from 1 chunks ...
[13:20:09.041]  - Number of values collected after concatenation: 2
[13:20:09.041]  - Number of values expected: 2
[13:20:09.041] Reducing values from 1 chunks ... DONE
[13:20:09.041] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[13:20:09.042] future_lapply() ...
[13:20:09.042] Number of chunks: 1
[13:20:09.042] getGlobalsAndPackagesXApply() ...
[13:20:09.043]  - future.globals: TRUE
[13:20:09.044]  - globals found/used: [n=1] ‘FUN’
[13:20:09.044]  - needed namespaces: [n=0] 
[13:20:09.045] Finding globals ... DONE
[13:20:09.045]  - use_args: TRUE
[13:20:09.045]  - Getting '...' globals ...
[13:20:09.045]    - '...' content: [n=0] 
[13:20:09.045] List of 1
[13:20:09.045]  $ ...: list()
[13:20:09.045]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.045]  - attr(*, "where")=List of 1
[13:20:09.045]   ..$ ...:<environment: 0x56048666acf0> 
[13:20:09.045]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.045]  - attr(*, "resolved")= logi TRUE
[13:20:09.045]  - attr(*, "total_size")= num NA
[13:20:09.048]  - Getting '...' globals ... DONE
[13:20:09.048] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.048] List of 2
[13:20:09.048]  $ ...future.FUN:function (x)  
[13:20:09.048]  $ ...          : list()
[13:20:09.048]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.048]  - attr(*, "where")=List of 2
[13:20:09.048]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.048]   ..$ ...          :<environment: 0x56048666acf0> 
[13:20:09.048]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.048]  - attr(*, "resolved")= logi FALSE
[13:20:09.048]  - attr(*, "total_size")= num 728
[13:20:09.051] Packages to be attached in all futures: [n=0] 
[13:20:09.051] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.051] Number of futures (= number of chunks): 1
[13:20:09.051] Launching 1 futures (chunks) ...
[13:20:09.051] Chunk #1 of 1 ...
[13:20:09.051]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.051]    + additional globals found: [n=0] 
[13:20:09.052]    + additional namespaces needed: [n=0] 
[13:20:09.052]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.052]  - seeds: <none>
[13:20:09.052]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.061] Created future:
[13:20:09.061] ClusterFuture:
[13:20:09.061] Label: ‘future_lapply-1’
[13:20:09.061] Expression:
[13:20:09.061] {
[13:20:09.061]     do.call(function(...) {
[13:20:09.061]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.061]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.061]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.061]             on.exit(options(oopts), add = TRUE)
[13:20:09.061]         }
[13:20:09.061]         {
[13:20:09.061]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.061]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.061]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.061]             })
[13:20:09.061]         }
[13:20:09.061]     }, args = future.call.arguments)
[13:20:09.061] }
[13:20:09.061] Lazy evaluation: FALSE
[13:20:09.061] Asynchronous evaluation: TRUE
[13:20:09.061] Local evaluation: TRUE
[13:20:09.061] Environment: R_GlobalEnv
[13:20:09.061] Capture standard output: TRUE
[13:20:09.061] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.061] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.061] Packages: <none>
[13:20:09.061] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.061] Resolved: FALSE
[13:20:09.061] Value: <not collected>
[13:20:09.061] Conditions captured: <none>
[13:20:09.061] Early signaling: FALSE
[13:20:09.061] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.061] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.073] Chunk #1 of 1 ... DONE
[13:20:09.073] Launching 1 futures (chunks) ... DONE
[13:20:09.073] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[13:20:09.167] future_lapply() ...
[13:20:09.168] Number of chunks: 1
[13:20:09.168] getGlobalsAndPackagesXApply() ...
[13:20:09.169]  - future.globals: TRUE
[13:20:09.174]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[13:20:09.174]  - needed namespaces: [n=0] 
[13:20:09.174] Finding globals ... DONE
[13:20:09.174]  - use_args: TRUE
[13:20:09.174]  - Getting '...' globals ...
[13:20:09.174]    - '...' content: [n=0] 
[13:20:09.175] List of 1
[13:20:09.175]  $ ...: list()
[13:20:09.175]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.175]  - attr(*, "where")=List of 1
[13:20:09.175]   ..$ ...:<environment: 0x5604875435f0> 
[13:20:09.175]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.175]  - attr(*, "resolved")= logi TRUE
[13:20:09.175]  - attr(*, "total_size")= num NA
[13:20:09.177]  - Getting '...' globals ... DONE
[13:20:09.177] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[13:20:09.177] List of 6
[13:20:09.177]  $ ...future.FUN:function (i)  
[13:20:09.177]  $ caller       :function (a, b, FUN = call_my_add)  
[13:20:09.177]  $ args         :List of 1
[13:20:09.177]   ..$ FUN:function (a, b)  
[13:20:09.177]  $ call_my_add  :function (a, b)  
[13:20:09.177]  $ my_add       :function (a, b)  
[13:20:09.177]  $ ...          : list()
[13:20:09.177]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.177]  - attr(*, "where")=List of 6
[13:20:09.177]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.177]   ..$ caller       :<environment: R_EmptyEnv> 
[13:20:09.177]   ..$ args         :<environment: R_EmptyEnv> 
[13:20:09.177]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[13:20:09.177]   ..$ my_add       :<environment: R_EmptyEnv> 
[13:20:09.177]   ..$ ...          :<environment: 0x5604875435f0> 
[13:20:09.177]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.177]  - attr(*, "resolved")= logi FALSE
[13:20:09.177]  - attr(*, "total_size")= num 6664
[13:20:09.184] Packages to be attached in all futures: [n=0] 
[13:20:09.184] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.184] Number of futures (= number of chunks): 1
[13:20:09.184] Launching 1 futures (chunks) ...
[13:20:09.184] Chunk #1 of 1 ...
[13:20:09.184]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.185]    + additional globals found: [n=0] 
[13:20:09.185]    + additional namespaces needed: [n=0] 
[13:20:09.185]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.185]  - seeds: <none>
[13:20:09.185]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.191] Created future:
[13:20:09.191] SequentialFuture:
[13:20:09.191] Label: ‘future_lapply-1’
[13:20:09.191] Expression:
[13:20:09.191] {
[13:20:09.191]     do.call(function(...) {
[13:20:09.191]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.191]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.191]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.191]             on.exit(options(oopts), add = TRUE)
[13:20:09.191]         }
[13:20:09.191]         {
[13:20:09.191]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.191]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.191]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.191]             })
[13:20:09.191]         }
[13:20:09.191]     }, args = future.call.arguments)
[13:20:09.191] }
[13:20:09.191] Lazy evaluation: FALSE
[13:20:09.191] Asynchronous evaluation: FALSE
[13:20:09.191] Local evaluation: TRUE
[13:20:09.191] Environment: 0x560487543a50
[13:20:09.191] Capture standard output: TRUE
[13:20:09.191] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.191] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:20:09.191] Packages: <none>
[13:20:09.191] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.191] Resolved: TRUE
[13:20:09.191] Value: 168 bytes of class ‘list’
[13:20:09.191] Early signaling: FALSE
[13:20:09.191] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.191] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.192] Chunk #1 of 1 ... DONE
[13:20:09.192] Launching 1 futures (chunks) ... DONE
[13:20:09.192] Resolving 1 futures (chunks) ...
[13:20:09.193]  - Number of value chunks collected: 1
[13:20:09.193] Resolving 1 futures (chunks) ... DONE
[13:20:09.193] Reducing values from 1 chunks ...
[13:20:09.193]  - Number of values collected after concatenation: 3
[13:20:09.193]  - Number of values expected: 3
[13:20:09.193] Reducing values from 1 chunks ... DONE
[13:20:09.193] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[13:20:09.194] future_lapply() ...
[13:20:09.197] Number of chunks: 1
[13:20:09.197] getGlobalsAndPackagesXApply() ...
[13:20:09.197]  - future.globals: TRUE
[13:20:09.200]  - globals found/used: [n=1] ‘FUN’
[13:20:09.200]  - needed namespaces: [n=0] 
[13:20:09.200] Finding globals ... DONE
[13:20:09.200]  - use_args: TRUE
[13:20:09.200]  - Getting '...' globals ...
[13:20:09.201]    - '...' content: [n=1] ‘what’
[13:20:09.201] List of 1
[13:20:09.201]  $ ...:List of 1
[13:20:09.201]   ..$ what:function (x)  
[13:20:09.201]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.201]  - attr(*, "where")=List of 1
[13:20:09.201]   ..$ ...:<environment: 0x5604860877e8> 
[13:20:09.201]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.201]  - attr(*, "resolved")= logi TRUE
[13:20:09.201]  - attr(*, "total_size")= num NA
[13:20:09.203]  - Getting '...' globals ... DONE
[13:20:09.204] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.204] List of 2
[13:20:09.204]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:20:09.204]  $ ...          :List of 1
[13:20:09.204]   ..$ what:function (x)  
[13:20:09.204]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.204]  - attr(*, "where")=List of 2
[13:20:09.204]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.204]   ..$ ...          :<environment: 0x5604860877e8> 
[13:20:09.204]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.204]  - attr(*, "resolved")= logi FALSE
[13:20:09.204]  - attr(*, "total_size")= num 12192
[13:20:09.207] Packages to be attached in all futures: [n=0] 
[13:20:09.207] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.207] Number of futures (= number of chunks): 1
[13:20:09.207] Launching 1 futures (chunks) ...
[13:20:09.207] Chunk #1 of 1 ...
[13:20:09.207]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.208]    + additional globals found: [n=0] 
[13:20:09.208]    + additional namespaces needed: [n=0] 
[13:20:09.208]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.208]  - seeds: <none>
[13:20:09.208]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.210] Created future:
[13:20:09.211] SequentialFuture:
[13:20:09.211] Label: ‘future_lapply-1’
[13:20:09.211] Expression:
[13:20:09.211] {
[13:20:09.211]     do.call(function(...) {
[13:20:09.211]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.211]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.211]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.211]             on.exit(options(oopts), add = TRUE)
[13:20:09.211]         }
[13:20:09.211]         {
[13:20:09.211]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.211]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.211]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.211]             })
[13:20:09.211]         }
[13:20:09.211]     }, args = future.call.arguments)
[13:20:09.211] }
[13:20:09.211] Lazy evaluation: FALSE
[13:20:09.211] Asynchronous evaluation: FALSE
[13:20:09.211] Local evaluation: TRUE
[13:20:09.211] Environment: R_GlobalEnv
[13:20:09.211] Capture standard output: TRUE
[13:20:09.211] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.211] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.211] Packages: <none>
[13:20:09.211] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.211] Resolved: TRUE
[13:20:09.211] Value: 56 bytes of class ‘list’
[13:20:09.211] Early signaling: FALSE
[13:20:09.211] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.211] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.212] Chunk #1 of 1 ... DONE
[13:20:09.212] Launching 1 futures (chunks) ... DONE
[13:20:09.212] Resolving 1 futures (chunks) ...
[13:20:09.212]  - Number of value chunks collected: 1
[13:20:09.212] Resolving 1 futures (chunks) ... DONE
[13:20:09.212] Reducing values from 1 chunks ...
[13:20:09.212]  - Number of values collected after concatenation: 1
[13:20:09.213]  - Number of values expected: 1
[13:20:09.213] Reducing values from 1 chunks ... DONE
[13:20:09.213] future_lapply() ... DONE
[13:20:09.213] future_lapply() ...
[13:20:09.214] Number of chunks: 1
[13:20:09.214] getGlobalsAndPackagesXApply() ...
[13:20:09.214]  - future.globals: TRUE
[13:20:09.217]  - globals found/used: [n=1] ‘FUN’
[13:20:09.217]  - needed namespaces: [n=0] 
[13:20:09.217] Finding globals ... DONE
[13:20:09.217]  - use_args: TRUE
[13:20:09.217]  - Getting '...' globals ...
[13:20:09.218]    - '...' content: [n=1] ‘what’
[13:20:09.218] List of 1
[13:20:09.218]  $ ...:List of 1
[13:20:09.218]   ..$ what:function (...)  
[13:20:09.218]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.218]  - attr(*, "where")=List of 1
[13:20:09.218]   ..$ ...:<environment: 0x56048726b028> 
[13:20:09.218]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.218]  - attr(*, "resolved")= logi TRUE
[13:20:09.218]  - attr(*, "total_size")= num NA
[13:20:09.220]  - Getting '...' globals ... DONE
[13:20:09.221] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.221] List of 2
[13:20:09.221]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:20:09.221]  $ ...          :List of 1
[13:20:09.221]   ..$ what:function (...)  
[13:20:09.221]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.221]  - attr(*, "where")=List of 2
[13:20:09.221]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.221]   ..$ ...          :<environment: 0x56048726b028> 
[13:20:09.221]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.221]  - attr(*, "resolved")= logi FALSE
[13:20:09.221]  - attr(*, "total_size")= num 12584
[13:20:09.224] Packages to be attached in all futures: [n=0] 
[13:20:09.224] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.224] Number of futures (= number of chunks): 1
[13:20:09.224] Launching 1 futures (chunks) ...
[13:20:09.224] Chunk #1 of 1 ...
[13:20:09.224]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.225]    + additional globals found: [n=0] 
[13:20:09.225]    + additional namespaces needed: [n=0] 
[13:20:09.225]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.225]  - seeds: <none>
[13:20:09.225]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.230] Created future:
[13:20:09.230] SequentialFuture:
[13:20:09.230] Label: ‘future_lapply-1’
[13:20:09.230] Expression:
[13:20:09.230] {
[13:20:09.230]     do.call(function(...) {
[13:20:09.230]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.230]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.230]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.230]             on.exit(options(oopts), add = TRUE)
[13:20:09.230]         }
[13:20:09.230]         {
[13:20:09.230]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.230]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.230]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.230]             })
[13:20:09.230]         }
[13:20:09.230]     }, args = future.call.arguments)
[13:20:09.230] }
[13:20:09.230] Lazy evaluation: FALSE
[13:20:09.230] Asynchronous evaluation: FALSE
[13:20:09.230] Local evaluation: TRUE
[13:20:09.230] Environment: R_GlobalEnv
[13:20:09.230] Capture standard output: TRUE
[13:20:09.230] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.230] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.230] Packages: <none>
[13:20:09.230] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.230] Resolved: TRUE
[13:20:09.230] Value: 56 bytes of class ‘list’
[13:20:09.230] Early signaling: FALSE
[13:20:09.230] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.230] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.231] Chunk #1 of 1 ... DONE
[13:20:09.231] Launching 1 futures (chunks) ... DONE
[13:20:09.231] Resolving 1 futures (chunks) ...
[13:20:09.231]  - Number of value chunks collected: 1
[13:20:09.232] Resolving 1 futures (chunks) ... DONE
[13:20:09.232] Reducing values from 1 chunks ...
[13:20:09.232]  - Number of values collected after concatenation: 1
[13:20:09.232]  - Number of values expected: 1
[13:20:09.232] Reducing values from 1 chunks ... DONE
[13:20:09.232] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[13:20:09.232] future_lapply() ...
[13:20:09.233] Number of chunks: 1
[13:20:09.233] getGlobalsAndPackagesXApply() ...
[13:20:09.233]  - future.globals: TRUE
[13:20:09.235]  - globals found/used: [n=1] ‘FUN’
[13:20:09.235]  - needed namespaces: [n=0] 
[13:20:09.235] Finding globals ... DONE
[13:20:09.235]  - use_args: TRUE
[13:20:09.235]  - Getting '...' globals ...
[13:20:09.235]    - '...' content: [n=1] ‘b’
[13:20:09.235] List of 1
[13:20:09.235]  $ ...:List of 1
[13:20:09.235]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:20:09.235]   .. ..$ a: int [1:2] 1 2
[13:20:09.235]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.235]  - attr(*, "where")=List of 1
[13:20:09.235]   ..$ ...:<environment: 0x5604867acf80> 
[13:20:09.235]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.235]  - attr(*, "resolved")= logi TRUE
[13:20:09.235]  - attr(*, "total_size")= num NA
[13:20:09.239]  - Getting '...' globals ... DONE
[13:20:09.239] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.239] List of 2
[13:20:09.239]  $ ...future.FUN:function (a, b)  
[13:20:09.239]  $ ...          :List of 1
[13:20:09.239]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:20:09.239]   .. ..$ a: int [1:2] 1 2
[13:20:09.239]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.239]  - attr(*, "where")=List of 2
[13:20:09.239]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.239]   ..$ ...          :<environment: 0x5604867acf80> 
[13:20:09.239]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.239]  - attr(*, "resolved")= logi FALSE
[13:20:09.239]  - attr(*, "total_size")= num 1440
[13:20:09.242] Packages to be attached in all futures: [n=0] 
[13:20:09.242] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.243] Number of futures (= number of chunks): 1
[13:20:09.243] Launching 1 futures (chunks) ...
[13:20:09.243] Chunk #1 of 1 ...
[13:20:09.243]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.243]    + additional globals found: [n=0] 
[13:20:09.243]    + additional namespaces needed: [n=0] 
[13:20:09.243]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.244]  - seeds: <none>
[13:20:09.244]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.246] Created future:
[13:20:09.246] SequentialFuture:
[13:20:09.246] Label: ‘future_lapply-1’
[13:20:09.246] Expression:
[13:20:09.246] {
[13:20:09.246]     do.call(function(...) {
[13:20:09.246]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.246]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.246]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.246]             on.exit(options(oopts), add = TRUE)
[13:20:09.246]         }
[13:20:09.246]         {
[13:20:09.246]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.246]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.246]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.246]             })
[13:20:09.246]         }
[13:20:09.246]     }, args = future.call.arguments)
[13:20:09.246] }
[13:20:09.246] Lazy evaluation: FALSE
[13:20:09.246] Asynchronous evaluation: FALSE
[13:20:09.246] Local evaluation: TRUE
[13:20:09.246] Environment: R_GlobalEnv
[13:20:09.246] Capture standard output: TRUE
[13:20:09.246] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.246] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.246] Packages: <none>
[13:20:09.246] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.246] Resolved: TRUE
[13:20:09.246] Value: 112 bytes of class ‘list’
[13:20:09.246] Early signaling: FALSE
[13:20:09.246] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.246] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.247] Chunk #1 of 1 ... DONE
[13:20:09.247] Launching 1 futures (chunks) ... DONE
[13:20:09.247] Resolving 1 futures (chunks) ...
[13:20:09.248]  - Number of value chunks collected: 1
[13:20:09.248] Resolving 1 futures (chunks) ... DONE
[13:20:09.248] Reducing values from 1 chunks ...
[13:20:09.248]  - Number of values collected after concatenation: 1
[13:20:09.248]  - Number of values expected: 1
[13:20:09.248] Reducing values from 1 chunks ... DONE
[13:20:09.248] future_lapply() ... DONE
[13:20:09.248] future_lapply() ...
[13:20:09.249] Number of chunks: 1
[13:20:09.249] getGlobalsAndPackagesXApply() ...
[13:20:09.249]  - future.globals: TRUE
[13:20:09.251]  - globals found/used: [n=1] ‘FUN’
[13:20:09.251]  - needed namespaces: [n=0] 
[13:20:09.251] Finding globals ... DONE
[13:20:09.251]  - use_args: TRUE
[13:20:09.251]  - Getting '...' globals ...
[13:20:09.251]    - '...' content: [n=1] ‘b’
[13:20:09.251] List of 1
[13:20:09.251]  $ ...:List of 1
[13:20:09.251]   ..$ b:<environment: 0x560483f48ce0> 
[13:20:09.251]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.251]  - attr(*, "where")=List of 1
[13:20:09.251]   ..$ ...:<environment: 0x5604848bc018> 
[13:20:09.251]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.251]  - attr(*, "resolved")= logi TRUE
[13:20:09.251]  - attr(*, "total_size")= num NA
[13:20:09.254]  - Getting '...' globals ... DONE
[13:20:09.254] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.254] List of 2
[13:20:09.254]  $ ...future.FUN:function (a, b)  
[13:20:09.254]  $ ...          :List of 1
[13:20:09.254]   ..$ b:<environment: 0x560483f48ce0> 
[13:20:09.254]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.254]  - attr(*, "where")=List of 2
[13:20:09.254]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.254]   ..$ ...          :<environment: 0x5604848bc018> 
[13:20:09.254]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.254]  - attr(*, "resolved")= logi FALSE
[13:20:09.254]  - attr(*, "total_size")= num 1440
[13:20:09.257] Packages to be attached in all futures: [n=0] 
[13:20:09.257] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.258] Number of futures (= number of chunks): 1
[13:20:09.258] Launching 1 futures (chunks) ...
[13:20:09.258] Chunk #1 of 1 ...
[13:20:09.258]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.258]    + additional globals found: [n=0] 
[13:20:09.258]    + additional namespaces needed: [n=0] 
[13:20:09.258]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.259]  - seeds: <none>
[13:20:09.259]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.261] Created future:
[13:20:09.261] SequentialFuture:
[13:20:09.261] Label: ‘future_lapply-1’
[13:20:09.261] Expression:
[13:20:09.261] {
[13:20:09.261]     do.call(function(...) {
[13:20:09.261]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.261]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.261]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.261]             on.exit(options(oopts), add = TRUE)
[13:20:09.261]         }
[13:20:09.261]         {
[13:20:09.261]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.261]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.261]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.261]             })
[13:20:09.261]         }
[13:20:09.261]     }, args = future.call.arguments)
[13:20:09.261] }
[13:20:09.261] Lazy evaluation: FALSE
[13:20:09.261] Asynchronous evaluation: FALSE
[13:20:09.261] Local evaluation: TRUE
[13:20:09.261] Environment: R_GlobalEnv
[13:20:09.261] Capture standard output: TRUE
[13:20:09.261] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.261] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.261] Packages: <none>
[13:20:09.261] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.261] Resolved: TRUE
[13:20:09.261] Value: 120 bytes of class ‘list’
[13:20:09.261] Early signaling: FALSE
[13:20:09.261] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.261] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.262] Chunk #1 of 1 ... DONE
[13:20:09.262] Launching 1 futures (chunks) ... DONE
[13:20:09.262] Resolving 1 futures (chunks) ...
[13:20:09.263]  - Number of value chunks collected: 1
[13:20:09.263] Resolving 1 futures (chunks) ... DONE
[13:20:09.263] Reducing values from 1 chunks ...
[13:20:09.263]  - Number of values collected after concatenation: 1
[13:20:09.263]  - Number of values expected: 1
[13:20:09.263] Reducing values from 1 chunks ... DONE
[13:20:09.263] future_lapply() ... DONE
[13:20:09.263] future_lapply() ...
[13:20:09.264] Number of chunks: 1
[13:20:09.264] getGlobalsAndPackagesXApply() ...
[13:20:09.264]  - future.globals: TRUE
[13:20:09.266]  - globals found/used: [n=1] ‘FUN’
[13:20:09.266]  - needed namespaces: [n=0] 
[13:20:09.266] Finding globals ... DONE
[13:20:09.266]  - use_args: TRUE
[13:20:09.267]  - Getting '...' globals ...
[13:20:09.267]    - '...' content: [n=1] ‘b’
[13:20:09.267] List of 1
[13:20:09.267]  $ ...:List of 1
[13:20:09.267]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:20:09.267]   .. .. ..@ slots     :List of 4
[13:20:09.267]   .. .. .. ..$ .Data  : chr "function"
[13:20:09.267]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. ..$ target : chr "signature"
[13:20:09.267]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. ..$ defined: chr "signature"
[13:20:09.267]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. ..$ generic: chr "character"
[13:20:09.267]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. ..@ contains  :List of 3
[13:20:09.267]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.267]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ superClass: chr "function"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.267]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.267]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.267]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.267]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.267]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.267]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.267]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.267]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.267]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.267]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.267]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.267]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.267]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.267]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.267]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.267]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ by        : chr "function"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.267]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.267]   .. .. ..@ virtual   : logi FALSE
[13:20:09.267]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:20:09.267]  list()
[13:20:09.267]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:20:09.267]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:09.267]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:09.267]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:09.267]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:20:09.267]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:09.267]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:09.267]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:09.267]   .. .. .. .. ..$ generic: chr(0) 
[13:20:09.267]   .. .. ..@ validity  : NULL
[13:20:09.267]   .. .. ..@ access    : list()
[13:20:09.267]   .. .. ..@ className : chr "MethodDefinition"
[13:20:09.267]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. ..@ subclasses:List of 7
[13:20:09.267]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.267]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.267]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.267]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.267]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.267]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.267]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.267]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.267]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.267]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.267]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.267]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.267]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.267]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.267]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.267]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.267]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.267]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.267]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.267]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.267]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.267]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.267]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.267]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.267]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.267]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.267]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.267]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.267]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.267]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.267]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.267]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.267]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.267]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.267]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.267]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.267]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.267]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.267]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.267]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.267]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.267]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.267]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.267]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.267]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.267]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:09.267]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.267]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.267]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.267]   .. .. ..@ versionKey:<externalptr> 
[13:20:09.267]   .. .. ..@ sealed    : logi TRUE
[13:20:09.267]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.267]  - attr(*, "where")=List of 1
[13:20:09.267]   ..$ ...:<environment: 0x560487486888> 
[13:20:09.267]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.267]  - attr(*, "resolved")= logi TRUE
[13:20:09.267]  - attr(*, "total_size")= num NA
[13:20:09.317]  - Getting '...' globals ... DONE
[13:20:09.317] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.317] List of 2
[13:20:09.317]  $ ...future.FUN:function (a, b)  
[13:20:09.317]  $ ...          :List of 1
[13:20:09.317]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:20:09.317]   .. .. ..@ slots     :List of 4
[13:20:09.317]   .. .. .. ..$ .Data  : chr "function"
[13:20:09.317]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. ..$ target : chr "signature"
[13:20:09.317]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. ..$ defined: chr "signature"
[13:20:09.317]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. ..$ generic: chr "character"
[13:20:09.317]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. ..@ contains  :List of 3
[13:20:09.317]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.317]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ superClass: chr "function"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.317]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.317]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.317]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.317]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.317]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.317]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.317]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.317]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.317]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.317]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.317]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.317]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.317]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.317]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.317]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.317]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ by        : chr "function"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.317]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.317]   .. .. ..@ virtual   : logi FALSE
[13:20:09.317]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:20:09.317]  list()
[13:20:09.317]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:20:09.317]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:09.317]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:09.317]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:09.317]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:20:09.317]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:09.317]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:09.317]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:09.317]   .. .. .. .. ..$ generic: chr(0) 
[13:20:09.317]   .. .. ..@ validity  : NULL
[13:20:09.317]   .. .. ..@ access    : list()
[13:20:09.317]   .. .. ..@ className : chr "MethodDefinition"
[13:20:09.317]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. ..@ subclasses:List of 7
[13:20:09.317]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.317]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.317]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.317]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.317]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.317]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.317]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.317]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.317]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.317]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.317]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.317]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.317]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.317]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.317]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.317]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.317]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.317]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.317]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.317]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.317]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.317]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.317]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.317]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.317]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.317]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.317]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.317]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.317]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.317]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.317]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.317]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.317]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.317]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.317]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.317]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.317]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.317]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.317]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.317]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.317]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.317]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.317]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.317]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.317]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.317]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:09.317]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.317]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.317]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.317]   .. .. ..@ versionKey:<externalptr> 
[13:20:09.317]   .. .. ..@ sealed    : logi TRUE
[13:20:09.317]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.317]  - attr(*, "where")=List of 2
[13:20:09.317]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.317]   ..$ ...          :<environment: 0x560487486888> 
[13:20:09.317]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.317]  - attr(*, "resolved")= logi FALSE
[13:20:09.317]  - attr(*, "total_size")= num 312512
[13:20:09.365] Packages to be attached in all futures: [n=0] 
[13:20:09.365] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.365] Number of futures (= number of chunks): 1
[13:20:09.365] Launching 1 futures (chunks) ...
[13:20:09.365] Chunk #1 of 1 ...
[13:20:09.366]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.366]    + additional globals found: [n=0] 
[13:20:09.366]    + additional namespaces needed: [n=0] 
[13:20:09.366]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.366]  - seeds: <none>
[13:20:09.366]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.369] Created future:
[13:20:09.369] SequentialFuture:
[13:20:09.369] Label: ‘future_lapply-1’
[13:20:09.369] Expression:
[13:20:09.369] {
[13:20:09.369]     do.call(function(...) {
[13:20:09.369]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.369]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.369]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.369]             on.exit(options(oopts), add = TRUE)
[13:20:09.369]         }
[13:20:09.369]         {
[13:20:09.369]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.369]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.369]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.369]             })
[13:20:09.369]         }
[13:20:09.369]     }, args = future.call.arguments)
[13:20:09.369] }
[13:20:09.369] Lazy evaluation: FALSE
[13:20:09.369] Asynchronous evaluation: FALSE
[13:20:09.369] Local evaluation: TRUE
[13:20:09.369] Environment: R_GlobalEnv
[13:20:09.369] Capture standard output: TRUE
[13:20:09.369] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.369] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.369] Packages: <none>
[13:20:09.369] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.369] Resolved: TRUE
[13:20:09.369] Value: 112 bytes of class ‘list’
[13:20:09.369] Early signaling: FALSE
[13:20:09.369] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.369] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.370] Chunk #1 of 1 ... DONE
[13:20:09.370] Launching 1 futures (chunks) ... DONE
[13:20:09.370] Resolving 1 futures (chunks) ...
[13:20:09.371]  - Number of value chunks collected: 1
[13:20:09.371] Resolving 1 futures (chunks) ... DONE
[13:20:09.371] Reducing values from 1 chunks ...
[13:20:09.371]  - Number of values collected after concatenation: 1
[13:20:09.371]  - Number of values expected: 1
[13:20:09.371] Reducing values from 1 chunks ... DONE
[13:20:09.371] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[13:20:09.373] future_lapply() ...
[13:20:09.374] Number of chunks: 1
[13:20:09.374] getGlobalsAndPackagesXApply() ...
[13:20:09.374]  - future.globals: TRUE
[13:20:09.375]  - globals found/used: [n=1] ‘FUN’
[13:20:09.375]  - needed namespaces: [n=0] 
[13:20:09.375] Finding globals ... DONE
[13:20:09.375]  - use_args: TRUE
[13:20:09.375]  - Getting '...' globals ...
[13:20:09.376]    - '...' content: [n=0] 
[13:20:09.376] List of 1
[13:20:09.376]  $ ...: list()
[13:20:09.376]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.376]  - attr(*, "where")=List of 1
[13:20:09.376]   ..$ ...:<environment: 0x560485e677a0> 
[13:20:09.376]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.376]  - attr(*, "resolved")= logi TRUE
[13:20:09.376]  - attr(*, "total_size")= num NA
[13:20:09.378]  - Getting '...' globals ... DONE
[13:20:09.379] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.379] List of 2
[13:20:09.379]  $ ...future.FUN:function (f)  
[13:20:09.379]  $ ...          : list()
[13:20:09.379]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.379]  - attr(*, "where")=List of 2
[13:20:09.379]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.379]   ..$ ...          :<environment: 0x560485e677a0> 
[13:20:09.379]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.379]  - attr(*, "resolved")= logi FALSE
[13:20:09.379]  - attr(*, "total_size")= num 1008
[13:20:09.381] Packages to be attached in all futures: [n=0] 
[13:20:09.381] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.382] Number of futures (= number of chunks): 1
[13:20:09.382] Launching 1 futures (chunks) ...
[13:20:09.382] Chunk #1 of 1 ...
[13:20:09.382]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.384]    + additional globals found: [n=2] ‘a’, ‘b’
[13:20:09.384]    + additional namespaces needed: [n=1] ‘tools’
[13:20:09.385]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.385]  - seeds: <none>
[13:20:09.385]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[13:20:09.388] Created future:
[13:20:09.388] SequentialFuture:
[13:20:09.388] Label: ‘future_lapply-1’
[13:20:09.388] Expression:
[13:20:09.388] {
[13:20:09.388]     do.call(function(...) {
[13:20:09.388]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.388]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.388]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.388]             on.exit(options(oopts), add = TRUE)
[13:20:09.388]         }
[13:20:09.388]         {
[13:20:09.388]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.388]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.388]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.388]             })
[13:20:09.388]         }
[13:20:09.388]     }, args = future.call.arguments)
[13:20:09.388] }
[13:20:09.388] Lazy evaluation: FALSE
[13:20:09.388] Asynchronous evaluation: FALSE
[13:20:09.388] Local evaluation: TRUE
[13:20:09.388] Environment: R_GlobalEnv
[13:20:09.388] Capture standard output: TRUE
[13:20:09.388] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.388] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:20:09.388] Packages: 1 packages (‘tools’)
[13:20:09.388] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.388] Resolved: TRUE
[13:20:09.388] Value: 224 bytes of class ‘list’
[13:20:09.388] Early signaling: FALSE
[13:20:09.388] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.388] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.389] Chunk #1 of 1 ... DONE
[13:20:09.389] Launching 1 futures (chunks) ... DONE
[13:20:09.389] Resolving 1 futures (chunks) ...
[13:20:09.389]  - Number of value chunks collected: 1
[13:20:09.389] Resolving 1 futures (chunks) ... DONE
[13:20:09.390] Reducing values from 1 chunks ...
[13:20:09.390]  - Number of values collected after concatenation: 4
[13:20:09.390]  - Number of values expected: 4
[13:20:09.390] Reducing values from 1 chunks ... DONE
[13:20:09.390] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[13:20:09.393] future_lapply() ...
[13:20:09.394] Number of chunks: 1
[13:20:09.394] getGlobalsAndPackagesXApply() ...
[13:20:09.394]  - future.globals: TRUE
[13:20:09.396]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:20:09.396]  - needed namespaces: [n=0] 
[13:20:09.396] Finding globals ... DONE
[13:20:09.396]  - use_args: TRUE
[13:20:09.396]  - Getting '...' globals ...
[13:20:09.396]    - '...' content: [n=0] 
[13:20:09.397] List of 1
[13:20:09.397]  $ ...: list()
[13:20:09.397]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.397]  - attr(*, "where")=List of 1
[13:20:09.397]   ..$ ...:<environment: 0x5604874bb2a0> 
[13:20:09.397]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.397]  - attr(*, "resolved")= logi TRUE
[13:20:09.397]  - attr(*, "total_size")= num NA
[13:20:09.399]  - Getting '...' globals ... DONE
[13:20:09.399] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:20:09.399] List of 3
[13:20:09.399]  $ ...future.FUN        :function (x)  
[13:20:09.399]  $ future.call.arguments:List of 1
[13:20:09.399]   ..$ a: num 1
[13:20:09.399]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.399]  $ ...                  : list()
[13:20:09.399]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.399]  - attr(*, "where")=List of 3
[13:20:09.399]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:20:09.399]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:20:09.399]   ..$ ...                  :<environment: 0x5604874bb2a0> 
[13:20:09.399]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.399]  - attr(*, "resolved")= logi FALSE
[13:20:09.399]  - attr(*, "total_size")= num 1272
[13:20:09.405] Packages to be attached in all futures: [n=0] 
[13:20:09.405] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.405] Number of futures (= number of chunks): 1
[13:20:09.405] Launching 1 futures (chunks) ...
[13:20:09.405] Chunk #1 of 1 ...
[13:20:09.405]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.406]    + additional globals found: [n=0] 
[13:20:09.406]    + additional namespaces needed: [n=0] 
[13:20:09.406]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.406]  - seeds: <none>
[13:20:09.406]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.408] Created future:
[13:20:09.409] SequentialFuture:
[13:20:09.409] Label: ‘future_lapply-1’
[13:20:09.409] Expression:
[13:20:09.409] {
[13:20:09.409]     do.call(function(...) {
[13:20:09.409]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.409]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.409]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.409]             on.exit(options(oopts), add = TRUE)
[13:20:09.409]         }
[13:20:09.409]         {
[13:20:09.409]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.409]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.409]                 ...future.FUN(...future.X_jj)
[13:20:09.409]             })
[13:20:09.409]         }
[13:20:09.409]     }, args = future.call.arguments)
[13:20:09.409] }
[13:20:09.409] Lazy evaluation: FALSE
[13:20:09.409] Asynchronous evaluation: FALSE
[13:20:09.409] Local evaluation: TRUE
[13:20:09.409] Environment: 0x5604874bb690
[13:20:09.409] Capture standard output: TRUE
[13:20:09.409] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.409] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.409] Packages: <none>
[13:20:09.409] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.409] Resolved: TRUE
[13:20:09.409] Value: 56 bytes of class ‘list’
[13:20:09.409] Early signaling: FALSE
[13:20:09.409] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.409] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.410] Chunk #1 of 1 ... DONE
[13:20:09.410] Launching 1 futures (chunks) ... DONE
[13:20:09.410] Resolving 1 futures (chunks) ...
[13:20:09.410]  - Number of value chunks collected: 1
[13:20:09.410] Resolving 1 futures (chunks) ... DONE
[13:20:09.410] Reducing values from 1 chunks ...
[13:20:09.410]  - Number of values collected after concatenation: 1
[13:20:09.411]  - Number of values expected: 1
[13:20:09.411] Reducing values from 1 chunks ... DONE
[13:20:09.411] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[13:20:09.412] future_lapply() ...
[13:20:09.413] Number of chunks: 1
[13:20:09.413] getGlobalsAndPackagesXApply() ...
[13:20:09.413]  - future.globals: TRUE
[13:20:09.415]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:20:09.415]  - needed namespaces: [n=0] 
[13:20:09.415] Finding globals ... DONE
[13:20:09.415]  - use_args: TRUE
[13:20:09.415]  - Getting '...' globals ...
[13:20:09.416]    - '...' content: [n=0] 
[13:20:09.416] List of 1
[13:20:09.416]  $ ...: list()
[13:20:09.416]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.416]  - attr(*, "where")=List of 1
[13:20:09.416]   ..$ ...:<environment: 0x560486508e30> 
[13:20:09.416]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.416]  - attr(*, "resolved")= logi TRUE
[13:20:09.416]  - attr(*, "total_size")= num NA
[13:20:09.418]  - Getting '...' globals ... DONE
[13:20:09.418] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:20:09.419] List of 3
[13:20:09.419]  $ ...future.FUN:function (ii)  
[13:20:09.419]  $ a            : num 1
[13:20:09.419]  $ ...          : list()
[13:20:09.419]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.419]  - attr(*, "where")=List of 3
[13:20:09.419]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.419]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:09.419]   ..$ ...          :<environment: 0x560486508e30> 
[13:20:09.419]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.419]  - attr(*, "resolved")= logi FALSE
[13:20:09.419]  - attr(*, "total_size")= num 2984
[13:20:09.422] Packages to be attached in all futures: [n=0] 
[13:20:09.422] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.422] Number of futures (= number of chunks): 1
[13:20:09.422] Launching 1 futures (chunks) ...
[13:20:09.422] Chunk #1 of 1 ...
[13:20:09.422]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.423]    + additional globals found: [n=0] 
[13:20:09.423]    + additional namespaces needed: [n=0] 
[13:20:09.423]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.423]  - seeds: <none>
[13:20:09.423]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.425] Created future:
[13:20:09.426] SequentialFuture:
[13:20:09.426] Label: ‘future_lapply-1’
[13:20:09.426] Expression:
[13:20:09.426] {
[13:20:09.426]     do.call(function(...) {
[13:20:09.426]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.426]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.426]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.426]             on.exit(options(oopts), add = TRUE)
[13:20:09.426]         }
[13:20:09.426]         {
[13:20:09.426]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.426]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.426]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.426]             })
[13:20:09.426]         }
[13:20:09.426]     }, args = future.call.arguments)
[13:20:09.426] }
[13:20:09.426] Lazy evaluation: FALSE
[13:20:09.426] Asynchronous evaluation: FALSE
[13:20:09.426] Local evaluation: TRUE
[13:20:09.426] Environment: R_GlobalEnv
[13:20:09.426] Capture standard output: TRUE
[13:20:09.426] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.426] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:20:09.426] Packages: <none>
[13:20:09.426] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.426] Resolved: TRUE
[13:20:09.426] Value: 56 bytes of class ‘list’
[13:20:09.426] Early signaling: FALSE
[13:20:09.426] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.426] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.427] Chunk #1 of 1 ... DONE
[13:20:09.427] Launching 1 futures (chunks) ... DONE
[13:20:09.427] Resolving 1 futures (chunks) ...
[13:20:09.427]  - Number of value chunks collected: 1
[13:20:09.427] Resolving 1 futures (chunks) ... DONE
[13:20:09.427] Reducing values from 1 chunks ...
[13:20:09.427]  - Number of values collected after concatenation: 1
[13:20:09.428]  - Number of values expected: 1
[13:20:09.428] Reducing values from 1 chunks ... DONE
[13:20:09.428] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[13:20:09.428] future_lapply() ...
[13:20:09.429] Number of chunks: 1
[13:20:09.429] getGlobalsAndPackagesXApply() ...
[13:20:09.429]  - future.globals: TRUE
[13:20:09.431]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:20:09.431]  - needed namespaces: [n=0] 
[13:20:09.431] Finding globals ... DONE
[13:20:09.431]  - use_args: TRUE
[13:20:09.431]  - Getting '...' globals ...
[13:20:09.432]    - '...' content: [n=0] 
[13:20:09.432] List of 1
[13:20:09.432]  $ ...: list()
[13:20:09.432]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.432]  - attr(*, "where")=List of 1
[13:20:09.432]   ..$ ...:<environment: 0x5604849ce858> 
[13:20:09.432]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.432]  - attr(*, "resolved")= logi TRUE
[13:20:09.432]  - attr(*, "total_size")= num NA
[13:20:09.434]  - Getting '...' globals ... DONE
[13:20:09.434] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:20:09.435] List of 3
[13:20:09.435]  $ ...future.FUN:function (ii)  
[13:20:09.435]  $ a            : num 1
[13:20:09.435]  $ ...          : list()
[13:20:09.435]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.435]  - attr(*, "where")=List of 3
[13:20:09.435]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.435]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:09.435]   ..$ ...          :<environment: 0x5604849ce858> 
[13:20:09.435]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.435]  - attr(*, "resolved")= logi FALSE
[13:20:09.435]  - attr(*, "total_size")= num 2984
[13:20:09.438] Packages to be attached in all futures: [n=0] 
[13:20:09.438] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.438] Number of futures (= number of chunks): 1
[13:20:09.438] Launching 1 futures (chunks) ...
[13:20:09.438] Chunk #1 of 1 ...
[13:20:09.438]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.439]    + additional globals found: [n=0] 
[13:20:09.439]    + additional namespaces needed: [n=0] 
[13:20:09.439]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.439]  - seeds: <none>
[13:20:09.439]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.441] Created future:
[13:20:09.442] SequentialFuture:
[13:20:09.442] Label: ‘future_lapply-1’
[13:20:09.442] Expression:
[13:20:09.442] {
[13:20:09.442]     do.call(function(...) {
[13:20:09.442]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.442]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.442]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.442]             on.exit(options(oopts), add = TRUE)
[13:20:09.442]         }
[13:20:09.442]         {
[13:20:09.442]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.442]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.442]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.442]             })
[13:20:09.442]         }
[13:20:09.442]     }, args = future.call.arguments)
[13:20:09.442] }
[13:20:09.442] Lazy evaluation: FALSE
[13:20:09.442] Asynchronous evaluation: FALSE
[13:20:09.442] Local evaluation: TRUE
[13:20:09.442] Environment: R_GlobalEnv
[13:20:09.442] Capture standard output: TRUE
[13:20:09.442] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.442] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:20:09.442] Packages: <none>
[13:20:09.442] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.442] Resolved: TRUE
[13:20:09.442] Value: 56 bytes of class ‘list’
[13:20:09.442] Early signaling: FALSE
[13:20:09.442] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.442] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.443] Chunk #1 of 1 ... DONE
[13:20:09.443] Launching 1 futures (chunks) ... DONE
[13:20:09.443] Resolving 1 futures (chunks) ...
[13:20:09.443]  - Number of value chunks collected: 1
[13:20:09.443] Resolving 1 futures (chunks) ... DONE
[13:20:09.443] Reducing values from 1 chunks ...
[13:20:09.443]  - Number of values collected after concatenation: 1
[13:20:09.443]  - Number of values expected: 1
[13:20:09.444] Reducing values from 1 chunks ... DONE
[13:20:09.444] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[13:20:09.444] future_lapply() ...
[13:20:09.444] Number of chunks: 1
[13:20:09.445] getGlobalsAndPackagesXApply() ...
[13:20:09.445]  - future.globals: <name-value list> with names ‘42’
[13:20:09.445]  - use_args: TRUE
[13:20:09.445]  - Getting '...' globals ...
[13:20:09.445]    - '...' content: [n=0] 
[13:20:09.445] List of 1
[13:20:09.445]  $ ...: list()
[13:20:09.445]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.445]  - attr(*, "where")=List of 1
[13:20:09.445]   ..$ ...:<environment: 0x56048773f7c8> 
[13:20:09.445]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.445]  - attr(*, "resolved")= logi TRUE
[13:20:09.445]  - attr(*, "total_size")= num NA
[13:20:09.448]  - Getting '...' globals ... DONE
[13:20:09.448] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[13:20:09.448] List of 3
[13:20:09.448]  $ a            : num 42
[13:20:09.448]  $ ...future.FUN:function (x)  
[13:20:09.448]  $ ...          : list()
[13:20:09.448]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.448]  - attr(*, "where")=List of 3
[13:20:09.448]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:09.448]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:20:09.448]   ..$ ...          :<environment: 0x56048773f7c8> 
[13:20:09.448]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.448]  - attr(*, "resolved")= logi FALSE
[13:20:09.448]  - attr(*, "total_size")= num NA
[13:20:09.453] Packages to be attached in all futures: [n=0] 
[13:20:09.453] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.453] Number of futures (= number of chunks): 1
[13:20:09.453] Launching 1 futures (chunks) ...
[13:20:09.454] Chunk #1 of 1 ...
[13:20:09.454]  - seeds: <none>
[13:20:09.454]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.457] Created future:
[13:20:09.457] SequentialFuture:
[13:20:09.457] Label: ‘future_lapply-1’
[13:20:09.457] Expression:
[13:20:09.457] {
[13:20:09.457]     do.call(function(...) {
[13:20:09.457]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.457]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.457]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.457]             on.exit(options(oopts), add = TRUE)
[13:20:09.457]         }
[13:20:09.457]         {
[13:20:09.457]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.457]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.457]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.457]             })
[13:20:09.457]         }
[13:20:09.457]     }, args = future.call.arguments)
[13:20:09.457] }
[13:20:09.457] Lazy evaluation: FALSE
[13:20:09.457] Asynchronous evaluation: FALSE
[13:20:09.457] Local evaluation: TRUE
[13:20:09.457] Environment: R_GlobalEnv
[13:20:09.457] Capture standard output: TRUE
[13:20:09.457] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.457] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:20:09.457] Packages: <none>
[13:20:09.457] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.457] Resolved: TRUE
[13:20:09.457] Value: 56 bytes of class ‘list’
[13:20:09.457] Early signaling: FALSE
[13:20:09.457] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.457] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[13:20:09.458] Chunk #1 of 1 ... DONE
[13:20:09.458] Launching 1 futures (chunks) ... DONE
[13:20:09.458] Resolving 1 futures (chunks) ...
[13:20:09.458]  - Number of value chunks collected: 1
[13:20:09.459] Resolving 1 futures (chunks) ... DONE
[13:20:09.459] Reducing values from 1 chunks ...
[13:20:09.459]  - Number of values collected after concatenation: 1
[13:20:09.459]  - Number of values expected: 1
[13:20:09.459] Reducing values from 1 chunks ... DONE
[13:20:09.459] future_lapply() ... DONE
List of 1
 $ : num 42
[13:20:09.467] future_lapply() ...
[13:20:09.472] Number of chunks: 2
[13:20:09.472] getGlobalsAndPackagesXApply() ...
[13:20:09.473]  - future.globals: TRUE
[13:20:09.477]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[13:20:09.477]  - needed namespaces: [n=0] 
[13:20:09.478] Finding globals ... DONE
[13:20:09.478]  - use_args: TRUE
[13:20:09.478]  - Getting '...' globals ...
[13:20:09.478]    - '...' content: [n=0] 
[13:20:09.478] List of 1
[13:20:09.478]  $ ...: list()
[13:20:09.478]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.478]  - attr(*, "where")=List of 1
[13:20:09.478]   ..$ ...:<environment: 0x560486090aa0> 
[13:20:09.478]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.478]  - attr(*, "resolved")= logi TRUE
[13:20:09.478]  - attr(*, "total_size")= num NA
[13:20:09.481]  - Getting '...' globals ... DONE
[13:20:09.481] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[13:20:09.481] List of 6
[13:20:09.481]  $ ...future.FUN:function (i)  
[13:20:09.481]  $ caller       :function (a, b, FUN = call_my_add)  
[13:20:09.481]  $ args         :List of 1
[13:20:09.481]   ..$ FUN:function (a, b)  
[13:20:09.481]  $ call_my_add  :function (a, b)  
[13:20:09.481]  $ my_add       :function (a, b)  
[13:20:09.481]  $ ...          : list()
[13:20:09.481]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.481]  - attr(*, "where")=List of 6
[13:20:09.481]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.481]   ..$ caller       :<environment: R_EmptyEnv> 
[13:20:09.481]   ..$ args         :<environment: R_EmptyEnv> 
[13:20:09.481]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[13:20:09.481]   ..$ my_add       :<environment: R_EmptyEnv> 
[13:20:09.481]   ..$ ...          :<environment: 0x560486090aa0> 
[13:20:09.481]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.481]  - attr(*, "resolved")= logi FALSE
[13:20:09.481]  - attr(*, "total_size")= num 24120
[13:20:09.486] Packages to be attached in all futures: [n=0] 
[13:20:09.486] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.486] Number of futures (= number of chunks): 2
[13:20:09.486] Launching 2 futures (chunks) ...
[13:20:09.486] Chunk #1 of 2 ...
[13:20:09.486]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.487]    + additional globals found: [n=0] 
[13:20:09.487]    + additional namespaces needed: [n=0] 
[13:20:09.487]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.487]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:09.487]  - seeds: <none>
[13:20:09.487]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.496] Created future:
[13:20:09.497] MulticoreFuture:
[13:20:09.497] Label: ‘future_lapply-1’
[13:20:09.497] Expression:
[13:20:09.497] {
[13:20:09.497]     do.call(function(...) {
[13:20:09.497]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.497]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.497]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.497]             on.exit(options(oopts), add = TRUE)
[13:20:09.497]         }
[13:20:09.497]         {
[13:20:09.497]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.497]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.497]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.497]             })
[13:20:09.497]         }
[13:20:09.497]     }, args = future.call.arguments)
[13:20:09.497] }
[13:20:09.497] Lazy evaluation: FALSE
[13:20:09.497] Asynchronous evaluation: TRUE
[13:20:09.497] Local evaluation: TRUE
[13:20:09.497] Environment: 0x560486365370
[13:20:09.497] Capture standard output: TRUE
[13:20:09.497] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.497] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:20:09.497] Packages: <none>
[13:20:09.497] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.497] Resolved: TRUE
[13:20:09.497] Value: <not collected>
[13:20:09.497] Conditions captured: <none>
[13:20:09.497] Early signaling: FALSE
[13:20:09.497] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.497] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.505] Chunk #1 of 2 ... DONE
[13:20:09.505] Chunk #2 of 2 ...
[13:20:09.506]  - Finding globals in 'X' for chunk #2 ...
[13:20:09.506]    + additional globals found: [n=0] 
[13:20:09.506]    + additional namespaces needed: [n=0] 
[13:20:09.507]  - Finding globals in 'X' for chunk #2 ... DONE
[13:20:09.507]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:09.507]  - seeds: <none>
[13:20:09.507]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.517] Created future:
[13:20:09.517] MulticoreFuture:
[13:20:09.517] Label: ‘future_lapply-2’
[13:20:09.517] Expression:
[13:20:09.517] {
[13:20:09.517]     do.call(function(...) {
[13:20:09.517]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.517]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.517]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.517]             on.exit(options(oopts), add = TRUE)
[13:20:09.517]         }
[13:20:09.517]         {
[13:20:09.517]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.517]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.517]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.517]             })
[13:20:09.517]         }
[13:20:09.517]     }, args = future.call.arguments)
[13:20:09.517] }
[13:20:09.517] Lazy evaluation: FALSE
[13:20:09.517] Asynchronous evaluation: TRUE
[13:20:09.517] Local evaluation: TRUE
[13:20:09.517] Environment: 0x560486365370
[13:20:09.517] Capture standard output: TRUE
[13:20:09.517] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.517] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:20:09.517] Packages: <none>
[13:20:09.517] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.517] Resolved: TRUE
[13:20:09.517] Value: <not collected>
[13:20:09.517] Conditions captured: <none>
[13:20:09.517] Early signaling: FALSE
[13:20:09.517] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.517] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.525] Chunk #2 of 2 ... DONE
[13:20:09.525] Launching 2 futures (chunks) ... DONE
[13:20:09.526] Resolving 2 futures (chunks) ...
[13:20:09.530]  - Number of value chunks collected: 2
[13:20:09.530] Resolving 2 futures (chunks) ... DONE
[13:20:09.530] Reducing values from 2 chunks ...
[13:20:09.530]  - Number of values collected after concatenation: 3
[13:20:09.530]  - Number of values expected: 3
[13:20:09.530] Reducing values from 2 chunks ... DONE
[13:20:09.530] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[13:20:09.531] future_lapply() ...
[13:20:09.537] Number of chunks: 1
[13:20:09.540] getGlobalsAndPackagesXApply() ...
[13:20:09.540]  - future.globals: TRUE
[13:20:09.543]  - globals found/used: [n=1] ‘FUN’
[13:20:09.543]  - needed namespaces: [n=0] 
[13:20:09.544] Finding globals ... DONE
[13:20:09.544]  - use_args: TRUE
[13:20:09.544]  - Getting '...' globals ...
[13:20:09.544]    - '...' content: [n=1] ‘what’
[13:20:09.544] List of 1
[13:20:09.544]  $ ...:List of 1
[13:20:09.544]   ..$ what:function (x)  
[13:20:09.544]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.544]  - attr(*, "where")=List of 1
[13:20:09.544]   ..$ ...:<environment: 0x5604878ed770> 
[13:20:09.544]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.544]  - attr(*, "resolved")= logi TRUE
[13:20:09.544]  - attr(*, "total_size")= num NA
[13:20:09.548]  - Getting '...' globals ... DONE
[13:20:09.548] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.548] List of 2
[13:20:09.548]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:20:09.548]  $ ...          :List of 1
[13:20:09.548]   ..$ what:function (x)  
[13:20:09.548]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.548]  - attr(*, "where")=List of 2
[13:20:09.548]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.548]   ..$ ...          :<environment: 0x5604878ed770> 
[13:20:09.548]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.548]  - attr(*, "resolved")= logi FALSE
[13:20:09.548]  - attr(*, "total_size")= num 12192
[13:20:09.552] Packages to be attached in all futures: [n=0] 
[13:20:09.552] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.552] Number of futures (= number of chunks): 1
[13:20:09.552] Launching 1 futures (chunks) ...
[13:20:09.552] Chunk #1 of 1 ...
[13:20:09.552]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.553]    + additional globals found: [n=0] 
[13:20:09.553]    + additional namespaces needed: [n=0] 
[13:20:09.553]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.553]  - seeds: <none>
[13:20:09.553]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.561] Created future:
[13:20:09.562] MulticoreFuture:
[13:20:09.562] Label: ‘future_lapply-1’
[13:20:09.562] Expression:
[13:20:09.562] {
[13:20:09.562]     do.call(function(...) {
[13:20:09.562]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.562]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.562]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.562]             on.exit(options(oopts), add = TRUE)
[13:20:09.562]         }
[13:20:09.562]         {
[13:20:09.562]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.562]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.562]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.562]             })
[13:20:09.562]         }
[13:20:09.562]     }, args = future.call.arguments)
[13:20:09.562] }
[13:20:09.562] Lazy evaluation: FALSE
[13:20:09.562] Asynchronous evaluation: TRUE
[13:20:09.562] Local evaluation: TRUE
[13:20:09.562] Environment: R_GlobalEnv
[13:20:09.562] Capture standard output: TRUE
[13:20:09.562] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.562] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.562] Packages: <none>
[13:20:09.562] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.562] Resolved: TRUE
[13:20:09.562] Value: <not collected>
[13:20:09.562] Conditions captured: <none>
[13:20:09.562] Early signaling: FALSE
[13:20:09.562] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.562] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.571] Chunk #1 of 1 ... DONE
[13:20:09.571] Launching 1 futures (chunks) ... DONE
[13:20:09.571] Resolving 1 futures (chunks) ...
[13:20:09.573]  - Number of value chunks collected: 1
[13:20:09.573] Resolving 1 futures (chunks) ... DONE
[13:20:09.573] Reducing values from 1 chunks ...
[13:20:09.573]  - Number of values collected after concatenation: 1
[13:20:09.573]  - Number of values expected: 1
[13:20:09.573] Reducing values from 1 chunks ... DONE
[13:20:09.574] future_lapply() ... DONE
[13:20:09.574] future_lapply() ...
[13:20:09.580] Number of chunks: 1
[13:20:09.580] getGlobalsAndPackagesXApply() ...
[13:20:09.580]  - future.globals: TRUE
[13:20:09.584]  - globals found/used: [n=1] ‘FUN’
[13:20:09.584]  - needed namespaces: [n=0] 
[13:20:09.584] Finding globals ... DONE
[13:20:09.584]  - use_args: TRUE
[13:20:09.584]  - Getting '...' globals ...
[13:20:09.585]    - '...' content: [n=1] ‘what’
[13:20:09.585] List of 1
[13:20:09.585]  $ ...:List of 1
[13:20:09.585]   ..$ what:function (...)  
[13:20:09.585]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.585]  - attr(*, "where")=List of 1
[13:20:09.585]   ..$ ...:<environment: 0x560485996468> 
[13:20:09.585]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.585]  - attr(*, "resolved")= logi TRUE
[13:20:09.585]  - attr(*, "total_size")= num NA
[13:20:09.589]  - Getting '...' globals ... DONE
[13:20:09.589] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.589] List of 2
[13:20:09.589]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:20:09.589]  $ ...          :List of 1
[13:20:09.589]   ..$ what:function (...)  
[13:20:09.589]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.589]  - attr(*, "where")=List of 2
[13:20:09.589]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.589]   ..$ ...          :<environment: 0x560485996468> 
[13:20:09.589]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.589]  - attr(*, "resolved")= logi FALSE
[13:20:09.589]  - attr(*, "total_size")= num 13352
[13:20:09.592] Packages to be attached in all futures: [n=0] 
[13:20:09.593] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.593] Number of futures (= number of chunks): 1
[13:20:09.593] Launching 1 futures (chunks) ...
[13:20:09.593] Chunk #1 of 1 ...
[13:20:09.593]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.594]    + additional globals found: [n=0] 
[13:20:09.594]    + additional namespaces needed: [n=0] 
[13:20:09.594]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.594]  - seeds: <none>
[13:20:09.594]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.603] Created future:
[13:20:09.603] MulticoreFuture:
[13:20:09.603] Label: ‘future_lapply-1’
[13:20:09.603] Expression:
[13:20:09.603] {
[13:20:09.603]     do.call(function(...) {
[13:20:09.603]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.603]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.603]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.603]             on.exit(options(oopts), add = TRUE)
[13:20:09.603]         }
[13:20:09.603]         {
[13:20:09.603]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.603]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.603]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.603]             })
[13:20:09.603]         }
[13:20:09.603]     }, args = future.call.arguments)
[13:20:09.603] }
[13:20:09.603] Lazy evaluation: FALSE
[13:20:09.603] Asynchronous evaluation: TRUE
[13:20:09.603] Local evaluation: TRUE
[13:20:09.603] Environment: R_GlobalEnv
[13:20:09.603] Capture standard output: TRUE
[13:20:09.603] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.603] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.603] Packages: <none>
[13:20:09.603] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.603] Resolved: TRUE
[13:20:09.603] Value: <not collected>
[13:20:09.603] Conditions captured: <none>
[13:20:09.603] Early signaling: FALSE
[13:20:09.603] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.603] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.612] Chunk #1 of 1 ... DONE
[13:20:09.612] Launching 1 futures (chunks) ... DONE
[13:20:09.612] Resolving 1 futures (chunks) ...
[13:20:09.614]  - Number of value chunks collected: 1
[13:20:09.614] Resolving 1 futures (chunks) ... DONE
[13:20:09.614] Reducing values from 1 chunks ...
[13:20:09.615]  - Number of values collected after concatenation: 1
[13:20:09.615]  - Number of values expected: 1
[13:20:09.615] Reducing values from 1 chunks ... DONE
[13:20:09.615] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[13:20:09.616] future_lapply() ...
[13:20:09.621] Number of chunks: 1
[13:20:09.621] getGlobalsAndPackagesXApply() ...
[13:20:09.621]  - future.globals: TRUE
[13:20:09.624]  - globals found/used: [n=1] ‘FUN’
[13:20:09.624]  - needed namespaces: [n=0] 
[13:20:09.624] Finding globals ... DONE
[13:20:09.624]  - use_args: TRUE
[13:20:09.624]  - Getting '...' globals ...
[13:20:09.625]    - '...' content: [n=1] ‘b’
[13:20:09.625] List of 1
[13:20:09.625]  $ ...:List of 1
[13:20:09.625]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:20:09.625]   .. ..$ a: int [1:2] 1 2
[13:20:09.625]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.625]  - attr(*, "where")=List of 1
[13:20:09.625]   ..$ ...:<environment: 0x560487612300> 
[13:20:09.625]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.625]  - attr(*, "resolved")= logi TRUE
[13:20:09.625]  - attr(*, "total_size")= num NA
[13:20:09.629]  - Getting '...' globals ... DONE
[13:20:09.629] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.629] List of 2
[13:20:09.629]  $ ...future.FUN:function (a, b)  
[13:20:09.629]  $ ...          :List of 1
[13:20:09.629]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:20:09.629]   .. ..$ a: int [1:2] 1 2
[13:20:09.629]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.629]  - attr(*, "where")=List of 2
[13:20:09.629]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.629]   ..$ ...          :<environment: 0x560487612300> 
[13:20:09.629]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.629]  - attr(*, "resolved")= logi FALSE
[13:20:09.629]  - attr(*, "total_size")= num 1440
[13:20:09.636] Packages to be attached in all futures: [n=0] 
[13:20:09.636] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.636] Number of futures (= number of chunks): 1
[13:20:09.636] Launching 1 futures (chunks) ...
[13:20:09.636] Chunk #1 of 1 ...
[13:20:09.636]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.637]    + additional globals found: [n=0] 
[13:20:09.637]    + additional namespaces needed: [n=0] 
[13:20:09.637]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.637]  - seeds: <none>
[13:20:09.637]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.646] Created future:
[13:20:09.647] MulticoreFuture:
[13:20:09.647] Label: ‘future_lapply-1’
[13:20:09.647] Expression:
[13:20:09.647] {
[13:20:09.647]     do.call(function(...) {
[13:20:09.647]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.647]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.647]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.647]             on.exit(options(oopts), add = TRUE)
[13:20:09.647]         }
[13:20:09.647]         {
[13:20:09.647]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.647]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.647]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.647]             })
[13:20:09.647]         }
[13:20:09.647]     }, args = future.call.arguments)
[13:20:09.647] }
[13:20:09.647] Lazy evaluation: FALSE
[13:20:09.647] Asynchronous evaluation: TRUE
[13:20:09.647] Local evaluation: TRUE
[13:20:09.647] Environment: R_GlobalEnv
[13:20:09.647] Capture standard output: TRUE
[13:20:09.647] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.647] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.647] Packages: <none>
[13:20:09.647] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.647] Resolved: TRUE
[13:20:09.647] Value: <not collected>
[13:20:09.647] Conditions captured: <none>
[13:20:09.647] Early signaling: FALSE
[13:20:09.647] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.647] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.655] Chunk #1 of 1 ... DONE
[13:20:09.656] Launching 1 futures (chunks) ... DONE
[13:20:09.656] Resolving 1 futures (chunks) ...
[13:20:09.658]  - Number of value chunks collected: 1
[13:20:09.658] Resolving 1 futures (chunks) ... DONE
[13:20:09.658] Reducing values from 1 chunks ...
[13:20:09.658]  - Number of values collected after concatenation: 1
[13:20:09.658]  - Number of values expected: 1
[13:20:09.658] Reducing values from 1 chunks ... DONE
[13:20:09.658] future_lapply() ... DONE
[13:20:09.659] future_lapply() ...
[13:20:09.663] Number of chunks: 1
[13:20:09.664] getGlobalsAndPackagesXApply() ...
[13:20:09.664]  - future.globals: TRUE
[13:20:09.666]  - globals found/used: [n=1] ‘FUN’
[13:20:09.666]  - needed namespaces: [n=0] 
[13:20:09.666] Finding globals ... DONE
[13:20:09.667]  - use_args: TRUE
[13:20:09.667]  - Getting '...' globals ...
[13:20:09.667]    - '...' content: [n=1] ‘b’
[13:20:09.667] List of 1
[13:20:09.667]  $ ...:List of 1
[13:20:09.667]   ..$ b:<environment: 0x5604862206e0> 
[13:20:09.667]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.667]  - attr(*, "where")=List of 1
[13:20:09.667]   ..$ ...:<environment: 0x56048621b448> 
[13:20:09.667]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.667]  - attr(*, "resolved")= logi TRUE
[13:20:09.667]  - attr(*, "total_size")= num NA
[13:20:09.671]  - Getting '...' globals ... DONE
[13:20:09.671] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.671] List of 2
[13:20:09.671]  $ ...future.FUN:function (a, b)  
[13:20:09.671]  $ ...          :List of 1
[13:20:09.671]   ..$ b:<environment: 0x5604862206e0> 
[13:20:09.671]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.671]  - attr(*, "where")=List of 2
[13:20:09.671]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.671]   ..$ ...          :<environment: 0x56048621b448> 
[13:20:09.671]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.671]  - attr(*, "resolved")= logi FALSE
[13:20:09.671]  - attr(*, "total_size")= num 1440
[13:20:09.675] Packages to be attached in all futures: [n=0] 
[13:20:09.675] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.675] Number of futures (= number of chunks): 1
[13:20:09.676] Launching 1 futures (chunks) ...
[13:20:09.676] Chunk #1 of 1 ...
[13:20:09.676]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.676]    + additional globals found: [n=0] 
[13:20:09.676]    + additional namespaces needed: [n=0] 
[13:20:09.677]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.677]  - seeds: <none>
[13:20:09.677]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.686] Created future:
[13:20:09.686] MulticoreFuture:
[13:20:09.686] Label: ‘future_lapply-1’
[13:20:09.686] Expression:
[13:20:09.686] {
[13:20:09.686]     do.call(function(...) {
[13:20:09.686]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.686]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.686]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.686]             on.exit(options(oopts), add = TRUE)
[13:20:09.686]         }
[13:20:09.686]         {
[13:20:09.686]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.686]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.686]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.686]             })
[13:20:09.686]         }
[13:20:09.686]     }, args = future.call.arguments)
[13:20:09.686] }
[13:20:09.686] Lazy evaluation: FALSE
[13:20:09.686] Asynchronous evaluation: TRUE
[13:20:09.686] Local evaluation: TRUE
[13:20:09.686] Environment: R_GlobalEnv
[13:20:09.686] Capture standard output: TRUE
[13:20:09.686] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.686] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.686] Packages: <none>
[13:20:09.686] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.686] Resolved: TRUE
[13:20:09.686] Value: <not collected>
[13:20:09.686] Conditions captured: <none>
[13:20:09.686] Early signaling: FALSE
[13:20:09.686] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.686] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.695] Chunk #1 of 1 ... DONE
[13:20:09.695] Launching 1 futures (chunks) ... DONE
[13:20:09.695] Resolving 1 futures (chunks) ...
[13:20:09.697]  - Number of value chunks collected: 1
[13:20:09.697] Resolving 1 futures (chunks) ... DONE
[13:20:09.697] Reducing values from 1 chunks ...
[13:20:09.697]  - Number of values collected after concatenation: 1
[13:20:09.698]  - Number of values expected: 1
[13:20:09.698] Reducing values from 1 chunks ... DONE
[13:20:09.698] future_lapply() ... DONE
[13:20:09.698] future_lapply() ...
[13:20:09.703] Number of chunks: 1
[13:20:09.703] getGlobalsAndPackagesXApply() ...
[13:20:09.703]  - future.globals: TRUE
[13:20:09.706]  - globals found/used: [n=1] ‘FUN’
[13:20:09.706]  - needed namespaces: [n=0] 
[13:20:09.706] Finding globals ... DONE
[13:20:09.706]  - use_args: TRUE
[13:20:09.706]  - Getting '...' globals ...
[13:20:09.707]    - '...' content: [n=1] ‘b’
[13:20:09.707] List of 1
[13:20:09.707]  $ ...:List of 1
[13:20:09.707]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:20:09.707]   .. .. ..@ slots     :List of 4
[13:20:09.707]   .. .. .. ..$ .Data  : chr "function"
[13:20:09.707]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. ..$ target : chr "signature"
[13:20:09.707]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. ..$ defined: chr "signature"
[13:20:09.707]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. ..$ generic: chr "character"
[13:20:09.707]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. ..@ contains  :List of 3
[13:20:09.707]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.707]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ superClass: chr "function"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.707]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.707]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.707]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.707]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.707]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.707]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.707]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.707]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.707]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.707]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.707]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.707]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.707]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.707]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.707]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.707]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ by        : chr "function"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.707]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.707]   .. .. ..@ virtual   : logi FALSE
[13:20:09.707]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:20:09.707]  list()
[13:20:09.707]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:20:09.707]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:09.707]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:09.707]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:09.707]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:20:09.707]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:09.707]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:09.707]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:09.707]   .. .. .. .. ..$ generic: chr(0) 
[13:20:09.707]   .. .. ..@ validity  : NULL
[13:20:09.707]   .. .. ..@ access    : list()
[13:20:09.707]   .. .. ..@ className : chr "MethodDefinition"
[13:20:09.707]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. ..@ subclasses:List of 7
[13:20:09.707]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.707]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.707]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.707]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.707]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.707]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.707]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.707]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.707]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.707]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.707]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.707]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.707]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.707]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.707]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.707]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.707]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.707]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.707]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.707]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.707]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.707]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.707]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.707]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.707]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.707]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.707]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.707]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.707]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.707]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.707]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.707]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.707]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.707]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.707]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.707]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.707]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.707]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.707]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.707]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.707]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.707]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.707]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.707]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.707]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.707]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:09.707]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.707]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.707]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.707]   .. .. ..@ versionKey:<externalptr> 
[13:20:09.707]   .. .. ..@ sealed    : logi TRUE
[13:20:09.707]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.707]  - attr(*, "where")=List of 1
[13:20:09.707]   ..$ ...:<environment: 0x560486ff7ca8> 
[13:20:09.707]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.707]  - attr(*, "resolved")= logi TRUE
[13:20:09.707]  - attr(*, "total_size")= num NA
[13:20:09.763]  - Getting '...' globals ... DONE
[13:20:09.763] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.763] List of 2
[13:20:09.763]  $ ...future.FUN:function (a, b)  
[13:20:09.763]  $ ...          :List of 1
[13:20:09.763]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:20:09.763]   .. .. ..@ slots     :List of 4
[13:20:09.763]   .. .. .. ..$ .Data  : chr "function"
[13:20:09.763]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. ..$ target : chr "signature"
[13:20:09.763]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. ..$ defined: chr "signature"
[13:20:09.763]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. ..$ generic: chr "character"
[13:20:09.763]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. ..@ contains  :List of 3
[13:20:09.763]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.763]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ superClass: chr "function"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.763]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.763]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.763]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.763]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.763]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.763]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.763]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.763]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.763]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.763]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.763]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.763]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.763]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.763]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.763]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.763]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ by        : chr "function"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.763]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.763]   .. .. ..@ virtual   : logi FALSE
[13:20:09.763]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:20:09.763]  list()
[13:20:09.763]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:20:09.763]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:09.763]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:09.763]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:09.763]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:20:09.763]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:09.763]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:09.763]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:09.763]   .. .. .. .. ..$ generic: chr(0) 
[13:20:09.763]   .. .. ..@ validity  : NULL
[13:20:09.763]   .. .. ..@ access    : list()
[13:20:09.763]   .. .. ..@ className : chr "MethodDefinition"
[13:20:09.763]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. ..@ subclasses:List of 7
[13:20:09.763]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.763]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.763]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.763]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.763]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.763]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.763]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.763]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.763]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.763]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.763]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.763]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.763]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.763]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.763]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.763]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.763]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.763]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.763]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.763]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.763]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.763]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.763]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.763]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.763]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.763]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:09.763]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.763]   .. .. .. .. .. ..@ distance  : num 1
[13:20:09.763]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.763]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.763]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.763]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.763]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.763]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.763]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.763]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.763]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.763]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.763]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.763]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.763]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:09.763]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:09.763]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:09.763]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:09.763]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:09.763]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:09.763]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:09.763]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:09.763]   .. .. .. .. .. ..@ distance  : num 2
[13:20:09.763]   .. .. ..@ versionKey:<externalptr> 
[13:20:09.763]   .. .. ..@ sealed    : logi TRUE
[13:20:09.763]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.763]  - attr(*, "where")=List of 2
[13:20:09.763]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.763]   ..$ ...          :<environment: 0x560486ff7ca8> 
[13:20:09.763]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.763]  - attr(*, "resolved")= logi FALSE
[13:20:09.763]  - attr(*, "total_size")= num 312512
[13:20:09.814] Packages to be attached in all futures: [n=0] 
[13:20:09.814] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.814] Number of futures (= number of chunks): 1
[13:20:09.814] Launching 1 futures (chunks) ...
[13:20:09.814] Chunk #1 of 1 ...
[13:20:09.815]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.815]    + additional globals found: [n=0] 
[13:20:09.815]    + additional namespaces needed: [n=0] 
[13:20:09.815]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.815]  - seeds: <none>
[13:20:09.815]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.823] Created future:
[13:20:09.824] MulticoreFuture:
[13:20:09.824] Label: ‘future_lapply-1’
[13:20:09.824] Expression:
[13:20:09.824] {
[13:20:09.824]     do.call(function(...) {
[13:20:09.824]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.824]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.824]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.824]             on.exit(options(oopts), add = TRUE)
[13:20:09.824]         }
[13:20:09.824]         {
[13:20:09.824]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.824]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.824]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.824]             })
[13:20:09.824]         }
[13:20:09.824]     }, args = future.call.arguments)
[13:20:09.824] }
[13:20:09.824] Lazy evaluation: FALSE
[13:20:09.824] Asynchronous evaluation: TRUE
[13:20:09.824] Local evaluation: TRUE
[13:20:09.824] Environment: R_GlobalEnv
[13:20:09.824] Capture standard output: TRUE
[13:20:09.824] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.824] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.824] Packages: <none>
[13:20:09.824] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.824] Resolved: TRUE
[13:20:09.824] Value: <not collected>
[13:20:09.824] Conditions captured: <none>
[13:20:09.824] Early signaling: FALSE
[13:20:09.824] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.824] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.833] Chunk #1 of 1 ... DONE
[13:20:09.833] Launching 1 futures (chunks) ... DONE
[13:20:09.833] Resolving 1 futures (chunks) ...
[13:20:09.835]  - Number of value chunks collected: 1
[13:20:09.836] Resolving 1 futures (chunks) ... DONE
[13:20:09.836] Reducing values from 1 chunks ...
[13:20:09.836]  - Number of values collected after concatenation: 1
[13:20:09.836]  - Number of values expected: 1
[13:20:09.836] Reducing values from 1 chunks ... DONE
[13:20:09.837] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[13:20:09.840] future_lapply() ...
[13:20:09.845] Number of chunks: 2
[13:20:09.845] getGlobalsAndPackagesXApply() ...
[13:20:09.845]  - future.globals: TRUE
[13:20:09.847]  - globals found/used: [n=1] ‘FUN’
[13:20:09.847]  - needed namespaces: [n=0] 
[13:20:09.847] Finding globals ... DONE
[13:20:09.847]  - use_args: TRUE
[13:20:09.847]  - Getting '...' globals ...
[13:20:09.848]    - '...' content: [n=0] 
[13:20:09.848] List of 1
[13:20:09.848]  $ ...: list()
[13:20:09.848]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.848]  - attr(*, "where")=List of 1
[13:20:09.848]   ..$ ...:<environment: 0x560485954f48> 
[13:20:09.848]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.848]  - attr(*, "resolved")= logi TRUE
[13:20:09.848]  - attr(*, "total_size")= num NA
[13:20:09.851]  - Getting '...' globals ... DONE
[13:20:09.852] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:09.852] List of 2
[13:20:09.852]  $ ...future.FUN:function (f)  
[13:20:09.852]  $ ...          : list()
[13:20:09.852]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.852]  - attr(*, "where")=List of 2
[13:20:09.852]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.852]   ..$ ...          :<environment: 0x560485954f48> 
[13:20:09.852]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.852]  - attr(*, "resolved")= logi FALSE
[13:20:09.852]  - attr(*, "total_size")= num 1008
[13:20:09.855] Packages to be attached in all futures: [n=0] 
[13:20:09.855] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.855] Number of futures (= number of chunks): 2
[13:20:09.856] Launching 2 futures (chunks) ...
[13:20:09.856] Chunk #1 of 2 ...
[13:20:09.856]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.858]    + additional globals found: [n=2] ‘a’, ‘b’
[13:20:09.858]    + additional namespaces needed: [n=0] 
[13:20:09.858]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.858]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:09.858]  - seeds: <none>
[13:20:09.859]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[13:20:09.867] Created future:
[13:20:09.868] MulticoreFuture:
[13:20:09.868] Label: ‘future_lapply-1’
[13:20:09.868] Expression:
[13:20:09.868] {
[13:20:09.868]     do.call(function(...) {
[13:20:09.868]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.868]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.868]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.868]             on.exit(options(oopts), add = TRUE)
[13:20:09.868]         }
[13:20:09.868]         {
[13:20:09.868]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.868]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.868]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.868]             })
[13:20:09.868]         }
[13:20:09.868]     }, args = future.call.arguments)
[13:20:09.868] }
[13:20:09.868] Lazy evaluation: FALSE
[13:20:09.868] Asynchronous evaluation: TRUE
[13:20:09.868] Local evaluation: TRUE
[13:20:09.868] Environment: R_GlobalEnv
[13:20:09.868] Capture standard output: TRUE
[13:20:09.868] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.868] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:20:09.868] Packages: <none>
[13:20:09.868] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.868] Resolved: TRUE
[13:20:09.868] Value: <not collected>
[13:20:09.868] Conditions captured: <none>
[13:20:09.868] Early signaling: FALSE
[13:20:09.868] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.868] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.876] Chunk #1 of 2 ... DONE
[13:20:09.876] Chunk #2 of 2 ...
[13:20:09.877]  - Finding globals in 'X' for chunk #2 ...
[13:20:09.880]    + additional globals found: [n=2] ‘a’, ‘b’
[13:20:09.880]    + additional namespaces needed: [n=1] ‘tools’
[13:20:09.881]  - Finding globals in 'X' for chunk #2 ... DONE
[13:20:09.881]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:09.881]  - seeds: <none>
[13:20:09.881]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[13:20:09.891] Created future:
[13:20:09.891] MulticoreFuture:
[13:20:09.891] Label: ‘future_lapply-2’
[13:20:09.891] Expression:
[13:20:09.891] {
[13:20:09.891]     do.call(function(...) {
[13:20:09.891]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.891]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.891]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.891]             on.exit(options(oopts), add = TRUE)
[13:20:09.891]         }
[13:20:09.891]         {
[13:20:09.891]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.891]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.891]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.891]             })
[13:20:09.891]         }
[13:20:09.891]     }, args = future.call.arguments)
[13:20:09.891] }
[13:20:09.891] Lazy evaluation: FALSE
[13:20:09.891] Asynchronous evaluation: TRUE
[13:20:09.891] Local evaluation: TRUE
[13:20:09.891] Environment: R_GlobalEnv
[13:20:09.891] Capture standard output: TRUE
[13:20:09.891] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.891] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:20:09.891] Packages: 1 packages (‘tools’)
[13:20:09.891] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.891] Resolved: TRUE
[13:20:09.891] Value: <not collected>
[13:20:09.891] Conditions captured: <none>
[13:20:09.891] Early signaling: FALSE
[13:20:09.891] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.891] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.901] Chunk #2 of 2 ... DONE
[13:20:09.901] Launching 2 futures (chunks) ... DONE
[13:20:09.901] Resolving 2 futures (chunks) ...
[13:20:09.904]  - Number of value chunks collected: 2
[13:20:09.905] Resolving 2 futures (chunks) ... DONE
[13:20:09.905] Reducing values from 2 chunks ...
[13:20:09.905]  - Number of values collected after concatenation: 4
[13:20:09.905]  - Number of values expected: 4
[13:20:09.905] Reducing values from 2 chunks ... DONE
[13:20:09.906] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[13:20:09.912] future_lapply() ...
[13:20:09.917] Number of chunks: 1
[13:20:09.917] getGlobalsAndPackagesXApply() ...
[13:20:09.917]  - future.globals: TRUE
[13:20:09.920]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:20:09.920]  - needed namespaces: [n=0] 
[13:20:09.920] Finding globals ... DONE
[13:20:09.921]  - use_args: TRUE
[13:20:09.921]  - Getting '...' globals ...
[13:20:09.921]    - '...' content: [n=0] 
[13:20:09.921] List of 1
[13:20:09.921]  $ ...: list()
[13:20:09.921]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.921]  - attr(*, "where")=List of 1
[13:20:09.921]   ..$ ...:<environment: 0x5604869b2448> 
[13:20:09.921]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.921]  - attr(*, "resolved")= logi TRUE
[13:20:09.921]  - attr(*, "total_size")= num NA
[13:20:09.924]  - Getting '...' globals ... DONE
[13:20:09.925] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:20:09.925] List of 3
[13:20:09.925]  $ ...future.FUN        :function (x)  
[13:20:09.925]  $ future.call.arguments:List of 1
[13:20:09.925]   ..$ a: num 1
[13:20:09.925]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.925]  $ ...                  : list()
[13:20:09.925]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.925]  - attr(*, "where")=List of 3
[13:20:09.925]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:20:09.925]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:20:09.925]   ..$ ...                  :<environment: 0x5604869b2448> 
[13:20:09.925]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.925]  - attr(*, "resolved")= logi FALSE
[13:20:09.925]  - attr(*, "total_size")= num 1272
[13:20:09.929] Packages to be attached in all futures: [n=0] 
[13:20:09.929] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.930] Number of futures (= number of chunks): 1
[13:20:09.930] Launching 1 futures (chunks) ...
[13:20:09.930] Chunk #1 of 1 ...
[13:20:09.930]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.930]    + additional globals found: [n=0] 
[13:20:09.930]    + additional namespaces needed: [n=0] 
[13:20:09.931]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.931]  - seeds: <none>
[13:20:09.931]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.940] Created future:
[13:20:09.940] MulticoreFuture:
[13:20:09.940] Label: ‘future_lapply-1’
[13:20:09.940] Expression:
[13:20:09.940] {
[13:20:09.940]     do.call(function(...) {
[13:20:09.940]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.940]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.940]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.940]             on.exit(options(oopts), add = TRUE)
[13:20:09.940]         }
[13:20:09.940]         {
[13:20:09.940]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.940]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.940]                 ...future.FUN(...future.X_jj)
[13:20:09.940]             })
[13:20:09.940]         }
[13:20:09.940]     }, args = future.call.arguments)
[13:20:09.940] }
[13:20:09.940] Lazy evaluation: FALSE
[13:20:09.940] Asynchronous evaluation: TRUE
[13:20:09.940] Local evaluation: TRUE
[13:20:09.940] Environment: 0x5604869b1f40
[13:20:09.940] Capture standard output: TRUE
[13:20:09.940] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.940] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:09.940] Packages: <none>
[13:20:09.940] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.940] Resolved: TRUE
[13:20:09.940] Value: <not collected>
[13:20:09.940] Conditions captured: <none>
[13:20:09.940] Early signaling: FALSE
[13:20:09.940] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.940] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.949] Chunk #1 of 1 ... DONE
[13:20:09.950] Launching 1 futures (chunks) ... DONE
[13:20:09.950] Resolving 1 futures (chunks) ...
[13:20:09.951]  - Number of value chunks collected: 1
[13:20:09.952] Resolving 1 futures (chunks) ... DONE
[13:20:09.952] Reducing values from 1 chunks ...
[13:20:09.952]  - Number of values collected after concatenation: 1
[13:20:09.952]  - Number of values expected: 1
[13:20:09.952] Reducing values from 1 chunks ... DONE
[13:20:09.952] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[13:20:09.954] future_lapply() ...
[13:20:09.959] Number of chunks: 1
[13:20:09.960] getGlobalsAndPackagesXApply() ...
[13:20:09.960]  - future.globals: TRUE
[13:20:09.963]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:20:09.963]  - needed namespaces: [n=0] 
[13:20:09.963] Finding globals ... DONE
[13:20:09.963]  - use_args: TRUE
[13:20:09.963]  - Getting '...' globals ...
[13:20:09.964]    - '...' content: [n=0] 
[13:20:09.964] List of 1
[13:20:09.964]  $ ...: list()
[13:20:09.964]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.964]  - attr(*, "where")=List of 1
[13:20:09.964]   ..$ ...:<environment: 0x5604856b14b0> 
[13:20:09.964]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.964]  - attr(*, "resolved")= logi TRUE
[13:20:09.964]  - attr(*, "total_size")= num NA
[13:20:09.967]  - Getting '...' globals ... DONE
[13:20:09.967] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:20:09.967] List of 3
[13:20:09.967]  $ ...future.FUN:function (ii)  
[13:20:09.967]  $ a            : num 1
[13:20:09.967]  $ ...          : list()
[13:20:09.967]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:09.967]  - attr(*, "where")=List of 3
[13:20:09.967]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:09.967]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:09.967]   ..$ ...          :<environment: 0x5604856b14b0> 
[13:20:09.967]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:09.967]  - attr(*, "resolved")= logi FALSE
[13:20:09.967]  - attr(*, "total_size")= num 2984
[13:20:09.971] Packages to be attached in all futures: [n=0] 
[13:20:09.971] getGlobalsAndPackagesXApply() ... DONE
[13:20:09.972] Number of futures (= number of chunks): 1
[13:20:09.972] Launching 1 futures (chunks) ...
[13:20:09.972] Chunk #1 of 1 ...
[13:20:09.972]  - Finding globals in 'X' for chunk #1 ...
[13:20:09.972]    + additional globals found: [n=0] 
[13:20:09.973]    + additional namespaces needed: [n=0] 
[13:20:09.973]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:09.973]  - seeds: <none>
[13:20:09.973]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:09.981] Created future:
[13:20:09.982] MulticoreFuture:
[13:20:09.982] Label: ‘future_lapply-1’
[13:20:09.982] Expression:
[13:20:09.982] {
[13:20:09.982]     do.call(function(...) {
[13:20:09.982]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:09.982]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:09.982]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:09.982]             on.exit(options(oopts), add = TRUE)
[13:20:09.982]         }
[13:20:09.982]         {
[13:20:09.982]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:09.982]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:09.982]                 ...future.FUN(...future.X_jj, ...)
[13:20:09.982]             })
[13:20:09.982]         }
[13:20:09.982]     }, args = future.call.arguments)
[13:20:09.982] }
[13:20:09.982] Lazy evaluation: FALSE
[13:20:09.982] Asynchronous evaluation: TRUE
[13:20:09.982] Local evaluation: TRUE
[13:20:09.982] Environment: R_GlobalEnv
[13:20:09.982] Capture standard output: TRUE
[13:20:09.982] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:09.982] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:20:09.982] Packages: <none>
[13:20:09.982] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:09.982] Resolved: TRUE
[13:20:09.982] Value: <not collected>
[13:20:09.982] Conditions captured: <none>
[13:20:09.982] Early signaling: FALSE
[13:20:09.982] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:09.982] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:09.990] Chunk #1 of 1 ... DONE
[13:20:09.990] Launching 1 futures (chunks) ... DONE
[13:20:09.990] Resolving 1 futures (chunks) ...
[13:20:09.992]  - Number of value chunks collected: 1
[13:20:09.992] Resolving 1 futures (chunks) ... DONE
[13:20:09.992] Reducing values from 1 chunks ...
[13:20:09.993]  - Number of values collected after concatenation: 1
[13:20:09.993]  - Number of values expected: 1
[13:20:09.993] Reducing values from 1 chunks ... DONE
[13:20:09.993] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[13:20:09.993] future_lapply() ...
[13:20:09.999] Number of chunks: 1
[13:20:09.999] getGlobalsAndPackagesXApply() ...
[13:20:09.999]  - future.globals: TRUE
[13:20:10.002]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:20:10.002]  - needed namespaces: [n=0] 
[13:20:10.002] Finding globals ... DONE
[13:20:10.002]  - use_args: TRUE
[13:20:10.004]  - Getting '...' globals ...
[13:20:10.005]    - '...' content: [n=0] 
[13:20:10.005] List of 1
[13:20:10.005]  $ ...: list()
[13:20:10.005]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.005]  - attr(*, "where")=List of 1
[13:20:10.005]   ..$ ...:<environment: 0x560487771b78> 
[13:20:10.005]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.005]  - attr(*, "resolved")= logi TRUE
[13:20:10.005]  - attr(*, "total_size")= num NA
[13:20:10.008]  - Getting '...' globals ... DONE
[13:20:10.009] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:20:10.009] List of 3
[13:20:10.009]  $ ...future.FUN:function (ii)  
[13:20:10.009]  $ a            : num 1
[13:20:10.009]  $ ...          : list()
[13:20:10.009]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.009]  - attr(*, "where")=List of 3
[13:20:10.009]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:10.009]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:10.009]   ..$ ...          :<environment: 0x560487771b78> 
[13:20:10.009]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.009]  - attr(*, "resolved")= logi FALSE
[13:20:10.009]  - attr(*, "total_size")= num 2984
[13:20:10.013] Packages to be attached in all futures: [n=0] 
[13:20:10.013] getGlobalsAndPackagesXApply() ... DONE
[13:20:10.013] Number of futures (= number of chunks): 1
[13:20:10.013] Launching 1 futures (chunks) ...
[13:20:10.013] Chunk #1 of 1 ...
[13:20:10.013]  - Finding globals in 'X' for chunk #1 ...
[13:20:10.014]    + additional globals found: [n=0] 
[13:20:10.014]    + additional namespaces needed: [n=0] 
[13:20:10.014]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:10.014]  - seeds: <none>
[13:20:10.014]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:10.023] Created future:
[13:20:10.023] MulticoreFuture:
[13:20:10.023] Label: ‘future_lapply-1’
[13:20:10.023] Expression:
[13:20:10.023] {
[13:20:10.023]     do.call(function(...) {
[13:20:10.023]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:10.023]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:10.023]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:10.023]             on.exit(options(oopts), add = TRUE)
[13:20:10.023]         }
[13:20:10.023]         {
[13:20:10.023]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:10.023]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:10.023]                 ...future.FUN(...future.X_jj, ...)
[13:20:10.023]             })
[13:20:10.023]         }
[13:20:10.023]     }, args = future.call.arguments)
[13:20:10.023] }
[13:20:10.023] Lazy evaluation: FALSE
[13:20:10.023] Asynchronous evaluation: TRUE
[13:20:10.023] Local evaluation: TRUE
[13:20:10.023] Environment: R_GlobalEnv
[13:20:10.023] Capture standard output: TRUE
[13:20:10.023] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:10.023] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:20:10.023] Packages: <none>
[13:20:10.023] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:10.023] Resolved: TRUE
[13:20:10.023] Value: <not collected>
[13:20:10.023] Conditions captured: <none>
[13:20:10.023] Early signaling: FALSE
[13:20:10.023] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:10.023] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:10.032] Chunk #1 of 1 ... DONE
[13:20:10.032] Launching 1 futures (chunks) ... DONE
[13:20:10.032] Resolving 1 futures (chunks) ...
[13:20:10.034]  - Number of value chunks collected: 1
[13:20:10.034] Resolving 1 futures (chunks) ... DONE
[13:20:10.034] Reducing values from 1 chunks ...
[13:20:10.034]  - Number of values collected after concatenation: 1
[13:20:10.034]  - Number of values expected: 1
[13:20:10.034] Reducing values from 1 chunks ... DONE
[13:20:10.034] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[13:20:10.035] future_lapply() ...
[13:20:10.040] Number of chunks: 1
[13:20:10.040] getGlobalsAndPackagesXApply() ...
[13:20:10.040]  - future.globals: <name-value list> with names ‘42’
[13:20:10.040]  - use_args: TRUE
[13:20:10.040]  - Getting '...' globals ...
[13:20:10.041]    - '...' content: [n=0] 
[13:20:10.041] List of 1
[13:20:10.041]  $ ...: list()
[13:20:10.041]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.041]  - attr(*, "where")=List of 1
[13:20:10.041]   ..$ ...:<environment: 0x56048601a0e8> 
[13:20:10.041]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.041]  - attr(*, "resolved")= logi TRUE
[13:20:10.041]  - attr(*, "total_size")= num NA
[13:20:10.044]  - Getting '...' globals ... DONE
[13:20:10.045] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[13:20:10.045] List of 3
[13:20:10.045]  $ a            : num 42
[13:20:10.045]  $ ...future.FUN:function (x)  
[13:20:10.045]  $ ...          : list()
[13:20:10.045]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.045]  - attr(*, "where")=List of 3
[13:20:10.045]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:10.045]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:20:10.045]   ..$ ...          :<environment: 0x56048601a0e8> 
[13:20:10.045]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.045]  - attr(*, "resolved")= logi FALSE
[13:20:10.045]  - attr(*, "total_size")= num NA
[13:20:10.049] Packages to be attached in all futures: [n=0] 
[13:20:10.049] getGlobalsAndPackagesXApply() ... DONE
[13:20:10.049] Number of futures (= number of chunks): 1
[13:20:10.049] Launching 1 futures (chunks) ...
[13:20:10.049] Chunk #1 of 1 ...
[13:20:10.050]  - seeds: <none>
[13:20:10.050]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:10.059] Created future:
[13:20:10.059] MulticoreFuture:
[13:20:10.059] Label: ‘future_lapply-1’
[13:20:10.059] Expression:
[13:20:10.059] {
[13:20:10.059]     do.call(function(...) {
[13:20:10.059]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:10.059]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:10.059]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:10.059]             on.exit(options(oopts), add = TRUE)
[13:20:10.059]         }
[13:20:10.059]         {
[13:20:10.059]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:10.059]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:10.059]                 ...future.FUN(...future.X_jj, ...)
[13:20:10.059]             })
[13:20:10.059]         }
[13:20:10.059]     }, args = future.call.arguments)
[13:20:10.059] }
[13:20:10.059] Lazy evaluation: FALSE
[13:20:10.059] Asynchronous evaluation: TRUE
[13:20:10.059] Local evaluation: TRUE
[13:20:10.059] Environment: R_GlobalEnv
[13:20:10.059] Capture standard output: TRUE
[13:20:10.059] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:10.059] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:20:10.059] Packages: <none>
[13:20:10.059] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:10.059] Resolved: TRUE
[13:20:10.059] Value: <not collected>
[13:20:10.059] Conditions captured: <none>
[13:20:10.059] Early signaling: FALSE
[13:20:10.059] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:10.059] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:10.068] Chunk #1 of 1 ... DONE
[13:20:10.068] Launching 1 futures (chunks) ... DONE
[13:20:10.068] Resolving 1 futures (chunks) ...
[13:20:10.070]  - Number of value chunks collected: 1
[13:20:10.070] Resolving 1 futures (chunks) ... DONE
[13:20:10.070] Reducing values from 1 chunks ...
[13:20:10.070]  - Number of values collected after concatenation: 1
[13:20:10.070]  - Number of values expected: 1
[13:20:10.070] Reducing values from 1 chunks ... DONE
[13:20:10.071] future_lapply() ... DONE
List of 1
 $ : num 42
[13:20:10.452] future_lapply() ...
[13:20:10.457] Number of chunks: 2
[13:20:10.457] getGlobalsAndPackagesXApply() ...
[13:20:10.457]  - future.globals: TRUE
[13:20:10.465]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[13:20:10.465]  - needed namespaces: [n=0] 
[13:20:10.465] Finding globals ... DONE
[13:20:10.465]  - use_args: TRUE
[13:20:10.465]  - Getting '...' globals ...
[13:20:10.466]    - '...' content: [n=0] 
[13:20:10.466] List of 1
[13:20:10.466]  $ ...: list()
[13:20:10.466]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.466]  - attr(*, "where")=List of 1
[13:20:10.466]   ..$ ...:<environment: 0x560487655f08> 
[13:20:10.466]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.466]  - attr(*, "resolved")= logi TRUE
[13:20:10.466]  - attr(*, "total_size")= num NA
[13:20:10.469]  - Getting '...' globals ... DONE
[13:20:10.469] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[13:20:10.469] List of 6
[13:20:10.469]  $ ...future.FUN:function (i)  
[13:20:10.469]  $ caller       :function (a, b, FUN = call_my_add)  
[13:20:10.469]  $ args         :List of 1
[13:20:10.469]   ..$ FUN:function (a, b)  
[13:20:10.469]  $ call_my_add  :function (a, b)  
[13:20:10.469]  $ my_add       :function (a, b)  
[13:20:10.469]  $ ...          : list()
[13:20:10.469]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.469]  - attr(*, "where")=List of 6
[13:20:10.469]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:10.469]   ..$ caller       :<environment: R_EmptyEnv> 
[13:20:10.469]   ..$ args         :<environment: R_EmptyEnv> 
[13:20:10.469]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[13:20:10.469]   ..$ my_add       :<environment: R_EmptyEnv> 
[13:20:10.469]   ..$ ...          :<environment: 0x560487655f08> 
[13:20:10.469]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.469]  - attr(*, "resolved")= logi FALSE
[13:20:10.469]  - attr(*, "total_size")= num 24120
[13:20:10.475] Packages to be attached in all futures: [n=0] 
[13:20:10.475] getGlobalsAndPackagesXApply() ... DONE
[13:20:10.475] Number of futures (= number of chunks): 2
[13:20:10.475] Launching 2 futures (chunks) ...
[13:20:10.475] Chunk #1 of 2 ...
[13:20:10.476]  - Finding globals in 'X' for chunk #1 ...
[13:20:10.476]    + additional globals found: [n=0] 
[13:20:10.476]    + additional namespaces needed: [n=0] 
[13:20:10.476]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:10.476]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:10.476]  - seeds: <none>
[13:20:10.476]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:10.539] Created future:
[13:20:10.539] MultisessionFuture:
[13:20:10.539] Label: ‘future_lapply-1’
[13:20:10.539] Expression:
[13:20:10.539] {
[13:20:10.539]     do.call(function(...) {
[13:20:10.539]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:10.539]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:10.539]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:10.539]             on.exit(options(oopts), add = TRUE)
[13:20:10.539]         }
[13:20:10.539]         {
[13:20:10.539]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:10.539]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:10.539]                 ...future.FUN(...future.X_jj, ...)
[13:20:10.539]             })
[13:20:10.539]         }
[13:20:10.539]     }, args = future.call.arguments)
[13:20:10.539] }
[13:20:10.539] Lazy evaluation: FALSE
[13:20:10.539] Asynchronous evaluation: TRUE
[13:20:10.539] Local evaluation: TRUE
[13:20:10.539] Environment: 0x560487656330
[13:20:10.539] Capture standard output: TRUE
[13:20:10.539] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:10.539] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:20:10.539] Packages: <none>
[13:20:10.539] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:10.539] Resolved: FALSE
[13:20:10.539] Value: <not collected>
[13:20:10.539] Conditions captured: <none>
[13:20:10.539] Early signaling: FALSE
[13:20:10.539] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:10.539] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:10.552] Chunk #1 of 2 ... DONE
[13:20:10.552] Chunk #2 of 2 ...
[13:20:10.552]  - Finding globals in 'X' for chunk #2 ...
[13:20:10.552]    + additional globals found: [n=0] 
[13:20:10.552]    + additional namespaces needed: [n=0] 
[13:20:10.553]  - Finding globals in 'X' for chunk #2 ... DONE
[13:20:10.553]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:10.553]  - seeds: <none>
[13:20:10.553]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:10.625] Created future:
[13:20:10.625] MultisessionFuture:
[13:20:10.625] Label: ‘future_lapply-2’
[13:20:10.625] Expression:
[13:20:10.625] {
[13:20:10.625]     do.call(function(...) {
[13:20:10.625]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:10.625]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:10.625]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:10.625]             on.exit(options(oopts), add = TRUE)
[13:20:10.625]         }
[13:20:10.625]         {
[13:20:10.625]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:10.625]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:10.625]                 ...future.FUN(...future.X_jj, ...)
[13:20:10.625]             })
[13:20:10.625]         }
[13:20:10.625]     }, args = future.call.arguments)
[13:20:10.625] }
[13:20:10.625] Lazy evaluation: FALSE
[13:20:10.625] Asynchronous evaluation: TRUE
[13:20:10.625] Local evaluation: TRUE
[13:20:10.625] Environment: 0x560487656330
[13:20:10.625] Capture standard output: TRUE
[13:20:10.625] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:10.625] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[13:20:10.625] Packages: <none>
[13:20:10.625] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:10.625] Resolved: FALSE
[13:20:10.625] Value: <not collected>
[13:20:10.625] Conditions captured: <none>
[13:20:10.625] Early signaling: FALSE
[13:20:10.625] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:10.625] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:10.637] Chunk #2 of 2 ... DONE
[13:20:10.638] Launching 2 futures (chunks) ... DONE
[13:20:10.638] Resolving 2 futures (chunks) ...
[13:20:10.722]  - Number of value chunks collected: 2
[13:20:10.723] Resolving 2 futures (chunks) ... DONE
[13:20:10.723] Reducing values from 2 chunks ...
[13:20:10.723]  - Number of values collected after concatenation: 3
[13:20:10.723]  - Number of values expected: 3
[13:20:10.723] Reducing values from 2 chunks ... DONE
[13:20:10.723] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[13:20:10.723] future_lapply() ...
[13:20:10.728] Number of chunks: 1
[13:20:10.728] getGlobalsAndPackagesXApply() ...
[13:20:10.728]  - future.globals: TRUE
[13:20:10.731]  - globals found/used: [n=1] ‘FUN’
[13:20:10.731]  - needed namespaces: [n=0] 
[13:20:10.731] Finding globals ... DONE
[13:20:10.731]  - use_args: TRUE
[13:20:10.732]  - Getting '...' globals ...
[13:20:10.732]    - '...' content: [n=1] ‘what’
[13:20:10.732] List of 1
[13:20:10.732]  $ ...:List of 1
[13:20:10.732]   ..$ what:function (x)  
[13:20:10.732]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.732]  - attr(*, "where")=List of 1
[13:20:10.732]   ..$ ...:<environment: 0x5604870a41e0> 
[13:20:10.732]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.732]  - attr(*, "resolved")= logi TRUE
[13:20:10.732]  - attr(*, "total_size")= num NA
[13:20:10.735]  - Getting '...' globals ... DONE
[13:20:10.735] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:10.735] List of 2
[13:20:10.735]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:20:10.735]  $ ...          :List of 1
[13:20:10.735]   ..$ what:function (x)  
[13:20:10.735]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.735]  - attr(*, "where")=List of 2
[13:20:10.735]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:10.735]   ..$ ...          :<environment: 0x5604870a41e0> 
[13:20:10.735]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.735]  - attr(*, "resolved")= logi FALSE
[13:20:10.735]  - attr(*, "total_size")= num 12192
[13:20:10.738] Packages to be attached in all futures: [n=0] 
[13:20:10.738] getGlobalsAndPackagesXApply() ... DONE
[13:20:10.739] Number of futures (= number of chunks): 1
[13:20:10.739] Launching 1 futures (chunks) ...
[13:20:10.739] Chunk #1 of 1 ...
[13:20:10.739]  - Finding globals in 'X' for chunk #1 ...
[13:20:10.739]    + additional globals found: [n=0] 
[13:20:10.739]    + additional namespaces needed: [n=0] 
[13:20:10.740]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:10.740]  - seeds: <none>
[13:20:10.740]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:10.768] Created future:
[13:20:10.768] MultisessionFuture:
[13:20:10.768] Label: ‘future_lapply-1’
[13:20:10.768] Expression:
[13:20:10.768] {
[13:20:10.768]     do.call(function(...) {
[13:20:10.768]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:10.768]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:10.768]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:10.768]             on.exit(options(oopts), add = TRUE)
[13:20:10.768]         }
[13:20:10.768]         {
[13:20:10.768]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:10.768]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:10.768]                 ...future.FUN(...future.X_jj, ...)
[13:20:10.768]             })
[13:20:10.768]         }
[13:20:10.768]     }, args = future.call.arguments)
[13:20:10.768] }
[13:20:10.768] Lazy evaluation: FALSE
[13:20:10.768] Asynchronous evaluation: TRUE
[13:20:10.768] Local evaluation: TRUE
[13:20:10.768] Environment: R_GlobalEnv
[13:20:10.768] Capture standard output: TRUE
[13:20:10.768] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:10.768] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:10.768] Packages: <none>
[13:20:10.768] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:10.768] Resolved: FALSE
[13:20:10.768] Value: <not collected>
[13:20:10.768] Conditions captured: <none>
[13:20:10.768] Early signaling: FALSE
[13:20:10.768] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:10.768] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:10.780] Chunk #1 of 1 ... DONE
[13:20:10.780] Launching 1 futures (chunks) ... DONE
[13:20:10.780] Resolving 1 futures (chunks) ...
[13:20:10.822]  - Number of value chunks collected: 1
[13:20:10.822] Resolving 1 futures (chunks) ... DONE
[13:20:10.822] Reducing values from 1 chunks ...
[13:20:10.823]  - Number of values collected after concatenation: 1
[13:20:10.823]  - Number of values expected: 1
[13:20:10.823] Reducing values from 1 chunks ... DONE
[13:20:10.823] future_lapply() ... DONE
[13:20:10.823] future_lapply() ...
[13:20:10.827] Number of chunks: 1
[13:20:10.828] getGlobalsAndPackagesXApply() ...
[13:20:10.828]  - future.globals: TRUE
[13:20:10.830]  - globals found/used: [n=1] ‘FUN’
[13:20:10.831]  - needed namespaces: [n=0] 
[13:20:10.831] Finding globals ... DONE
[13:20:10.831]  - use_args: TRUE
[13:20:10.831]  - Getting '...' globals ...
[13:20:10.831]    - '...' content: [n=1] ‘what’
[13:20:10.831] List of 1
[13:20:10.831]  $ ...:List of 1
[13:20:10.831]   ..$ what:function (...)  
[13:20:10.831]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.831]  - attr(*, "where")=List of 1
[13:20:10.831]   ..$ ...:<environment: 0x56048634c7a0> 
[13:20:10.831]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.831]  - attr(*, "resolved")= logi TRUE
[13:20:10.831]  - attr(*, "total_size")= num NA
[13:20:10.834]  - Getting '...' globals ... DONE
[13:20:10.834] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:10.835] List of 2
[13:20:10.835]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[13:20:10.835]  $ ...          :List of 1
[13:20:10.835]   ..$ what:function (...)  
[13:20:10.835]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.835]  - attr(*, "where")=List of 2
[13:20:10.835]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:10.835]   ..$ ...          :<environment: 0x56048634c7a0> 
[13:20:10.835]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.835]  - attr(*, "resolved")= logi FALSE
[13:20:10.835]  - attr(*, "total_size")= num 13352
[13:20:10.837] Packages to be attached in all futures: [n=0] 
[13:20:10.838] getGlobalsAndPackagesXApply() ... DONE
[13:20:10.838] Number of futures (= number of chunks): 1
[13:20:10.838] Launching 1 futures (chunks) ...
[13:20:10.838] Chunk #1 of 1 ...
[13:20:10.838]  - Finding globals in 'X' for chunk #1 ...
[13:20:10.838]    + additional globals found: [n=0] 
[13:20:10.839]    + additional namespaces needed: [n=0] 
[13:20:10.839]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:10.839]  - seeds: <none>
[13:20:10.839]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:10.857] Created future:
[13:20:10.857] MultisessionFuture:
[13:20:10.857] Label: ‘future_lapply-1’
[13:20:10.857] Expression:
[13:20:10.857] {
[13:20:10.857]     do.call(function(...) {
[13:20:10.857]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:10.857]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:10.857]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:10.857]             on.exit(options(oopts), add = TRUE)
[13:20:10.857]         }
[13:20:10.857]         {
[13:20:10.857]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:10.857]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:10.857]                 ...future.FUN(...future.X_jj, ...)
[13:20:10.857]             })
[13:20:10.857]         }
[13:20:10.857]     }, args = future.call.arguments)
[13:20:10.857] }
[13:20:10.857] Lazy evaluation: FALSE
[13:20:10.857] Asynchronous evaluation: TRUE
[13:20:10.857] Local evaluation: TRUE
[13:20:10.857] Environment: R_GlobalEnv
[13:20:10.857] Capture standard output: TRUE
[13:20:10.857] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:10.857] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:10.857] Packages: <none>
[13:20:10.857] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:10.857] Resolved: FALSE
[13:20:10.857] Value: <not collected>
[13:20:10.857] Conditions captured: <none>
[13:20:10.857] Early signaling: FALSE
[13:20:10.857] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:10.857] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:10.868] Chunk #1 of 1 ... DONE
[13:20:10.869] Launching 1 futures (chunks) ... DONE
[13:20:10.869] Resolving 1 futures (chunks) ...
[13:20:10.911]  - Number of value chunks collected: 1
[13:20:10.911] Resolving 1 futures (chunks) ... DONE
[13:20:10.911] Reducing values from 1 chunks ...
[13:20:10.911]  - Number of values collected after concatenation: 1
[13:20:10.911]  - Number of values expected: 1
[13:20:10.911] Reducing values from 1 chunks ... DONE
[13:20:10.911] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[13:20:10.912] future_lapply() ...
[13:20:10.915] Number of chunks: 1
[13:20:10.916] getGlobalsAndPackagesXApply() ...
[13:20:10.916]  - future.globals: TRUE
[13:20:10.917]  - globals found/used: [n=1] ‘FUN’
[13:20:10.918]  - needed namespaces: [n=0] 
[13:20:10.918] Finding globals ... DONE
[13:20:10.918]  - use_args: TRUE
[13:20:10.918]  - Getting '...' globals ...
[13:20:10.918]    - '...' content: [n=1] ‘b’
[13:20:10.918] List of 1
[13:20:10.918]  $ ...:List of 1
[13:20:10.918]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:20:10.918]   .. ..$ a: int [1:2] 1 2
[13:20:10.918]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.918]  - attr(*, "where")=List of 1
[13:20:10.918]   ..$ ...:<environment: 0x560485f85218> 
[13:20:10.918]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.918]  - attr(*, "resolved")= logi TRUE
[13:20:10.918]  - attr(*, "total_size")= num NA
[13:20:10.922]  - Getting '...' globals ... DONE
[13:20:10.922] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:10.922] List of 2
[13:20:10.922]  $ ...future.FUN:function (a, b)  
[13:20:10.922]  $ ...          :List of 1
[13:20:10.922]   ..$ b:'data.frame':	2 obs. of  1 variable:
[13:20:10.922]   .. ..$ a: int [1:2] 1 2
[13:20:10.922]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:10.922]  - attr(*, "where")=List of 2
[13:20:10.922]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:10.922]   ..$ ...          :<environment: 0x560485f85218> 
[13:20:10.922]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:10.922]  - attr(*, "resolved")= logi FALSE
[13:20:10.922]  - attr(*, "total_size")= num 1440
[13:20:10.926] Packages to be attached in all futures: [n=0] 
[13:20:10.926] getGlobalsAndPackagesXApply() ... DONE
[13:20:10.926] Number of futures (= number of chunks): 1
[13:20:10.926] Launching 1 futures (chunks) ...
[13:20:10.926] Chunk #1 of 1 ...
[13:20:10.926]  - Finding globals in 'X' for chunk #1 ...
[13:20:10.927]    + additional globals found: [n=0] 
[13:20:10.927]    + additional namespaces needed: [n=0] 
[13:20:10.927]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:10.927]  - seeds: <none>
[13:20:10.927]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:10.946] Created future:
[13:20:10.946] MultisessionFuture:
[13:20:10.946] Label: ‘future_lapply-1’
[13:20:10.946] Expression:
[13:20:10.946] {
[13:20:10.946]     do.call(function(...) {
[13:20:10.946]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:10.946]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:10.946]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:10.946]             on.exit(options(oopts), add = TRUE)
[13:20:10.946]         }
[13:20:10.946]         {
[13:20:10.946]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:10.946]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:10.946]                 ...future.FUN(...future.X_jj, ...)
[13:20:10.946]             })
[13:20:10.946]         }
[13:20:10.946]     }, args = future.call.arguments)
[13:20:10.946] }
[13:20:10.946] Lazy evaluation: FALSE
[13:20:10.946] Asynchronous evaluation: TRUE
[13:20:10.946] Local evaluation: TRUE
[13:20:10.946] Environment: R_GlobalEnv
[13:20:10.946] Capture standard output: TRUE
[13:20:10.946] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:10.946] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:10.946] Packages: <none>
[13:20:10.946] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:10.946] Resolved: FALSE
[13:20:10.946] Value: <not collected>
[13:20:10.946] Conditions captured: <none>
[13:20:10.946] Early signaling: FALSE
[13:20:10.946] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:10.946] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:10.958] Chunk #1 of 1 ... DONE
[13:20:10.958] Launching 1 futures (chunks) ... DONE
[13:20:10.958] Resolving 1 futures (chunks) ...
[13:20:11.001]  - Number of value chunks collected: 1
[13:20:11.001] Resolving 1 futures (chunks) ... DONE
[13:20:11.001] Reducing values from 1 chunks ...
[13:20:11.001]  - Number of values collected after concatenation: 1
[13:20:11.001]  - Number of values expected: 1
[13:20:11.001] Reducing values from 1 chunks ... DONE
[13:20:11.002] future_lapply() ... DONE
[13:20:11.002] future_lapply() ...
[13:20:11.005] Number of chunks: 1
[13:20:11.006] getGlobalsAndPackagesXApply() ...
[13:20:11.006]  - future.globals: TRUE
[13:20:11.007]  - globals found/used: [n=1] ‘FUN’
[13:20:11.007]  - needed namespaces: [n=0] 
[13:20:11.007] Finding globals ... DONE
[13:20:11.008]  - use_args: TRUE
[13:20:11.008]  - Getting '...' globals ...
[13:20:11.008]    - '...' content: [n=1] ‘b’
[13:20:11.008] List of 1
[13:20:11.008]  $ ...:List of 1
[13:20:11.008]   ..$ b:<environment: 0x56048665a100> 
[13:20:11.008]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.008]  - attr(*, "where")=List of 1
[13:20:11.008]   ..$ ...:<environment: 0x56048665af70> 
[13:20:11.008]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.008]  - attr(*, "resolved")= logi TRUE
[13:20:11.008]  - attr(*, "total_size")= num NA
[13:20:11.011]  - Getting '...' globals ... DONE
[13:20:11.011] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:11.011] List of 2
[13:20:11.011]  $ ...future.FUN:function (a, b)  
[13:20:11.011]  $ ...          :List of 1
[13:20:11.011]   ..$ b:<environment: 0x56048665a100> 
[13:20:11.011]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.011]  - attr(*, "where")=List of 2
[13:20:11.011]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:11.011]   ..$ ...          :<environment: 0x56048665af70> 
[13:20:11.011]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.011]  - attr(*, "resolved")= logi FALSE
[13:20:11.011]  - attr(*, "total_size")= num 1440
[13:20:11.014] Packages to be attached in all futures: [n=0] 
[13:20:11.014] getGlobalsAndPackagesXApply() ... DONE
[13:20:11.014] Number of futures (= number of chunks): 1
[13:20:11.015] Launching 1 futures (chunks) ...
[13:20:11.015] Chunk #1 of 1 ...
[13:20:11.015]  - Finding globals in 'X' for chunk #1 ...
[13:20:11.015]    + additional globals found: [n=0] 
[13:20:11.015]    + additional namespaces needed: [n=0] 
[13:20:11.015]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:11.015]  - seeds: <none>
[13:20:11.015]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:11.034] Created future:
[13:20:11.034] MultisessionFuture:
[13:20:11.034] Label: ‘future_lapply-1’
[13:20:11.034] Expression:
[13:20:11.034] {
[13:20:11.034]     do.call(function(...) {
[13:20:11.034]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.034]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.034]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.034]             on.exit(options(oopts), add = TRUE)
[13:20:11.034]         }
[13:20:11.034]         {
[13:20:11.034]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.034]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.034]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.034]             })
[13:20:11.034]         }
[13:20:11.034]     }, args = future.call.arguments)
[13:20:11.034] }
[13:20:11.034] Lazy evaluation: FALSE
[13:20:11.034] Asynchronous evaluation: TRUE
[13:20:11.034] Local evaluation: TRUE
[13:20:11.034] Environment: R_GlobalEnv
[13:20:11.034] Capture standard output: TRUE
[13:20:11.034] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.034] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:11.034] Packages: <none>
[13:20:11.034] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.034] Resolved: FALSE
[13:20:11.034] Value: <not collected>
[13:20:11.034] Conditions captured: <none>
[13:20:11.034] Early signaling: FALSE
[13:20:11.034] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.034] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.045] Chunk #1 of 1 ... DONE
[13:20:11.045] Launching 1 futures (chunks) ... DONE
[13:20:11.045] Resolving 1 futures (chunks) ...
[13:20:11.088]  - Number of value chunks collected: 1
[13:20:11.088] Resolving 1 futures (chunks) ... DONE
[13:20:11.088] Reducing values from 1 chunks ...
[13:20:11.088]  - Number of values collected after concatenation: 1
[13:20:11.088]  - Number of values expected: 1
[13:20:11.088] Reducing values from 1 chunks ... DONE
[13:20:11.089] future_lapply() ... DONE
[13:20:11.089] future_lapply() ...
[13:20:11.092] Number of chunks: 1
[13:20:11.092] getGlobalsAndPackagesXApply() ...
[13:20:11.093]  - future.globals: TRUE
[13:20:11.095]  - globals found/used: [n=1] ‘FUN’
[13:20:11.095]  - needed namespaces: [n=0] 
[13:20:11.095] Finding globals ... DONE
[13:20:11.095]  - use_args: TRUE
[13:20:11.095]  - Getting '...' globals ...
[13:20:11.095]    - '...' content: [n=1] ‘b’
[13:20:11.096] List of 1
[13:20:11.096]  $ ...:List of 1
[13:20:11.096]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:20:11.096]   .. .. ..@ slots     :List of 4
[13:20:11.096]   .. .. .. ..$ .Data  : chr "function"
[13:20:11.096]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. ..$ target : chr "signature"
[13:20:11.096]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. ..$ defined: chr "signature"
[13:20:11.096]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. ..$ generic: chr "character"
[13:20:11.096]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. ..@ contains  :List of 3
[13:20:11.096]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.096]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ superClass: chr "function"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.096]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.096]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.096]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.096]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.096]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.096]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.096]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.096]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.096]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.096]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.096]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.096]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.096]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.096]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.096]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.096]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ by        : chr "function"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.096]   .. .. .. .. .. ..@ distance  : num 2
[13:20:11.096]   .. .. ..@ virtual   : logi FALSE
[13:20:11.096]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:20:11.096]  list()
[13:20:11.096]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:20:11.096]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:11.096]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:11.096]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:11.096]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:20:11.096]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:11.096]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:11.096]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:11.096]   .. .. .. .. ..$ generic: chr(0) 
[13:20:11.096]   .. .. ..@ validity  : NULL
[13:20:11.096]   .. .. ..@ access    : list()
[13:20:11.096]   .. .. ..@ className : chr "MethodDefinition"
[13:20:11.096]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. ..@ subclasses:List of 7
[13:20:11.096]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.096]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.096]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.096]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.096]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.096]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.096]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.096]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.096]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.096]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.096]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.096]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.096]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.096]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.096]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.096]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.096]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.096]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.096]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.096]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.096]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.096]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.096]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.096]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.096]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.096]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.096]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.096]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.096]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.096]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.096]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.096]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.096]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.096]   .. .. .. .. .. ..@ distance  : num 2
[13:20:11.096]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.096]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.096]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.096]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.096]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.096]   .. .. .. .. .. ..@ distance  : num 2
[13:20:11.096]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.096]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.096]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.096]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.096]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.096]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:11.096]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.096]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.096]   .. .. .. .. .. ..@ distance  : num 2
[13:20:11.096]   .. .. ..@ versionKey:<externalptr> 
[13:20:11.096]   .. .. ..@ sealed    : logi TRUE
[13:20:11.096]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.096]  - attr(*, "where")=List of 1
[13:20:11.096]   ..$ ...:<environment: 0x5604873e1a70> 
[13:20:11.096]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.096]  - attr(*, "resolved")= logi TRUE
[13:20:11.096]  - attr(*, "total_size")= num NA
[13:20:11.145]  - Getting '...' globals ... DONE
[13:20:11.145] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:11.145] List of 2
[13:20:11.145]  $ ...future.FUN:function (a, b)  
[13:20:11.145]  $ ...          :List of 1
[13:20:11.145]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[13:20:11.145]   .. .. ..@ slots     :List of 4
[13:20:11.145]   .. .. .. ..$ .Data  : chr "function"
[13:20:11.145]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. ..$ target : chr "signature"
[13:20:11.145]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. ..$ defined: chr "signature"
[13:20:11.145]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. ..$ generic: chr "character"
[13:20:11.145]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. ..@ contains  :List of 3
[13:20:11.145]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.145]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ superClass: chr "function"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.145]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.145]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.145]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.145]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.145]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.145]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.145]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.145]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.145]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.145]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.145]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.145]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.145]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.145]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.145]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.145]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ by        : chr "function"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.145]   .. .. .. .. .. ..@ distance  : num 2
[13:20:11.145]   .. .. ..@ virtual   : logi FALSE
[13:20:11.145]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[13:20:11.145]  list()
[13:20:11.145]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[13:20:11.145]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:11.145]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:11.145]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:11.145]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[13:20:11.145]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[13:20:11.145]   .. .. .. .. .. .. ..@ names  : chr(0) 
[13:20:11.145]   .. .. .. .. .. .. ..@ package: chr(0) 
[13:20:11.145]   .. .. .. .. ..$ generic: chr(0) 
[13:20:11.145]   .. .. ..@ validity  : NULL
[13:20:11.145]   .. .. ..@ access    : list()
[13:20:11.145]   .. .. ..@ className : chr "MethodDefinition"
[13:20:11.145]   .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. ..@ subclasses:List of 7
[13:20:11.145]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.145]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.145]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.145]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.145]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.145]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.145]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.145]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.145]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.145]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.145]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.145]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.145]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.145]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.145]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.145]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.145]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.145]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.145]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.145]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.145]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.145]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.145]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.145]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.145]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.145]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ by        : chr(0) 
[13:20:11.145]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.145]   .. .. .. .. .. ..@ distance  : num 1
[13:20:11.145]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.145]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.145]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.145]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.145]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.145]   .. .. .. .. .. ..@ distance  : num 2
[13:20:11.145]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.145]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.145]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.145]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.145]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.145]   .. .. .. .. .. ..@ distance  : num 2
[13:20:11.145]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[13:20:11.145]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ package   : chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[13:20:11.145]   .. .. .. .. .. ..@ test      :function (object)  
[13:20:11.145]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[13:20:11.145]   .. .. .. .. .. ..@ simple    : logi TRUE
[13:20:11.145]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[13:20:11.145]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[13:20:11.145]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[13:20:11.145]   .. .. .. .. .. ..@ distance  : num 2
[13:20:11.145]   .. .. ..@ versionKey:<externalptr> 
[13:20:11.145]   .. .. ..@ sealed    : logi TRUE
[13:20:11.145]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.145]  - attr(*, "where")=List of 2
[13:20:11.145]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:11.145]   ..$ ...          :<environment: 0x5604873e1a70> 
[13:20:11.145]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.145]  - attr(*, "resolved")= logi FALSE
[13:20:11.145]  - attr(*, "total_size")= num 312512
[13:20:11.195] Packages to be attached in all futures: [n=0] 
[13:20:11.195] getGlobalsAndPackagesXApply() ... DONE
[13:20:11.195] Number of futures (= number of chunks): 1
[13:20:11.195] Launching 1 futures (chunks) ...
[13:20:11.195] Chunk #1 of 1 ...
[13:20:11.196]  - Finding globals in 'X' for chunk #1 ...
[13:20:11.196]    + additional globals found: [n=0] 
[13:20:11.196]    + additional namespaces needed: [n=0] 
[13:20:11.196]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:11.196]  - seeds: <none>
[13:20:11.196]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:11.258] Created future:
[13:20:11.258] MultisessionFuture:
[13:20:11.258] Label: ‘future_lapply-1’
[13:20:11.258] Expression:
[13:20:11.258] {
[13:20:11.258]     do.call(function(...) {
[13:20:11.258]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.258]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.258]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.258]             on.exit(options(oopts), add = TRUE)
[13:20:11.258]         }
[13:20:11.258]         {
[13:20:11.258]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.258]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.258]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.258]             })
[13:20:11.258]         }
[13:20:11.258]     }, args = future.call.arguments)
[13:20:11.258] }
[13:20:11.258] Lazy evaluation: FALSE
[13:20:11.258] Asynchronous evaluation: TRUE
[13:20:11.258] Local evaluation: TRUE
[13:20:11.258] Environment: R_GlobalEnv
[13:20:11.258] Capture standard output: TRUE
[13:20:11.258] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.258] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:11.258] Packages: <none>
[13:20:11.258] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.258] Resolved: FALSE
[13:20:11.258] Value: <not collected>
[13:20:11.258] Conditions captured: <none>
[13:20:11.258] Early signaling: FALSE
[13:20:11.258] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.258] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.270] Chunk #1 of 1 ... DONE
[13:20:11.270] Launching 1 futures (chunks) ... DONE
[13:20:11.270] Resolving 1 futures (chunks) ...
[13:20:11.312]  - Number of value chunks collected: 1
[13:20:11.313] Resolving 1 futures (chunks) ... DONE
[13:20:11.313] Reducing values from 1 chunks ...
[13:20:11.313]  - Number of values collected after concatenation: 1
[13:20:11.313]  - Number of values expected: 1
[13:20:11.313] Reducing values from 1 chunks ... DONE
[13:20:11.313] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[13:20:11.315] future_lapply() ...
[13:20:11.319] Number of chunks: 2
[13:20:11.319] getGlobalsAndPackagesXApply() ...
[13:20:11.319]  - future.globals: TRUE
[13:20:11.321]  - globals found/used: [n=1] ‘FUN’
[13:20:11.321]  - needed namespaces: [n=0] 
[13:20:11.321] Finding globals ... DONE
[13:20:11.321]  - use_args: TRUE
[13:20:11.321]  - Getting '...' globals ...
[13:20:11.321]    - '...' content: [n=0] 
[13:20:11.321] List of 1
[13:20:11.321]  $ ...: list()
[13:20:11.321]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.321]  - attr(*, "where")=List of 1
[13:20:11.321]   ..$ ...:<environment: 0x5604859915e8> 
[13:20:11.321]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.321]  - attr(*, "resolved")= logi TRUE
[13:20:11.321]  - attr(*, "total_size")= num NA
[13:20:11.324]  - Getting '...' globals ... DONE
[13:20:11.324] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:11.324] List of 2
[13:20:11.324]  $ ...future.FUN:function (f)  
[13:20:11.324]  $ ...          : list()
[13:20:11.324]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.324]  - attr(*, "where")=List of 2
[13:20:11.324]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:11.324]   ..$ ...          :<environment: 0x5604859915e8> 
[13:20:11.324]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.324]  - attr(*, "resolved")= logi FALSE
[13:20:11.324]  - attr(*, "total_size")= num 1008
[13:20:11.327] Packages to be attached in all futures: [n=0] 
[13:20:11.327] getGlobalsAndPackagesXApply() ... DONE
[13:20:11.327] Number of futures (= number of chunks): 2
[13:20:11.327] Launching 2 futures (chunks) ...
[13:20:11.327] Chunk #1 of 2 ...
[13:20:11.328]  - Finding globals in 'X' for chunk #1 ...
[13:20:11.329]    + additional globals found: [n=2] ‘a’, ‘b’
[13:20:11.329]    + additional namespaces needed: [n=0] 
[13:20:11.329]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:11.330]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:11.330]  - seeds: <none>
[13:20:11.330]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[13:20:11.348] Created future:
[13:20:11.348] MultisessionFuture:
[13:20:11.348] Label: ‘future_lapply-1’
[13:20:11.348] Expression:
[13:20:11.348] {
[13:20:11.348]     do.call(function(...) {
[13:20:11.348]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.348]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.348]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.348]             on.exit(options(oopts), add = TRUE)
[13:20:11.348]         }
[13:20:11.348]         {
[13:20:11.348]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.348]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.348]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.348]             })
[13:20:11.348]         }
[13:20:11.348]     }, args = future.call.arguments)
[13:20:11.348] }
[13:20:11.348] Lazy evaluation: FALSE
[13:20:11.348] Asynchronous evaluation: TRUE
[13:20:11.348] Local evaluation: TRUE
[13:20:11.348] Environment: R_GlobalEnv
[13:20:11.348] Capture standard output: TRUE
[13:20:11.348] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.348] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:20:11.348] Packages: <none>
[13:20:11.348] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.348] Resolved: FALSE
[13:20:11.348] Value: <not collected>
[13:20:11.348] Conditions captured: <none>
[13:20:11.348] Early signaling: FALSE
[13:20:11.348] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.348] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.360] Chunk #1 of 2 ... DONE
[13:20:11.360] Chunk #2 of 2 ...
[13:20:11.360]  - Finding globals in 'X' for chunk #2 ...
[13:20:11.362]    + additional globals found: [n=2] ‘a’, ‘b’
[13:20:11.362]    + additional namespaces needed: [n=1] ‘tools’
[13:20:11.362]  - Finding globals in 'X' for chunk #2 ... DONE
[13:20:11.362]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:11.362]  - seeds: <none>
[13:20:11.362]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[13:20:11.380] Created future:
[13:20:11.380] MultisessionFuture:
[13:20:11.380] Label: ‘future_lapply-2’
[13:20:11.380] Expression:
[13:20:11.380] {
[13:20:11.380]     do.call(function(...) {
[13:20:11.380]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.380]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.380]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.380]             on.exit(options(oopts), add = TRUE)
[13:20:11.380]         }
[13:20:11.380]         {
[13:20:11.380]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.380]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.380]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.380]             })
[13:20:11.380]         }
[13:20:11.380]     }, args = future.call.arguments)
[13:20:11.380] }
[13:20:11.380] Lazy evaluation: FALSE
[13:20:11.380] Asynchronous evaluation: TRUE
[13:20:11.380] Local evaluation: TRUE
[13:20:11.380] Environment: R_GlobalEnv
[13:20:11.380] Capture standard output: TRUE
[13:20:11.380] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.380] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[13:20:11.380] Packages: 1 packages (‘tools’)
[13:20:11.380] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.380] Resolved: FALSE
[13:20:11.380] Value: <not collected>
[13:20:11.380] Conditions captured: <none>
[13:20:11.380] Early signaling: FALSE
[13:20:11.380] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.380] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.392] Chunk #2 of 2 ... DONE
[13:20:11.392] Launching 2 futures (chunks) ... DONE
[13:20:11.392] Resolving 2 futures (chunks) ...
[13:20:11.437]  - Number of value chunks collected: 2
[13:20:11.437] Resolving 2 futures (chunks) ... DONE
[13:20:11.437] Reducing values from 2 chunks ...
[13:20:11.437]  - Number of values collected after concatenation: 4
[13:20:11.437]  - Number of values expected: 4
[13:20:11.437] Reducing values from 2 chunks ... DONE
[13:20:11.437] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[13:20:11.442] future_lapply() ...
[13:20:11.446] Number of chunks: 1
[13:20:11.446] getGlobalsAndPackagesXApply() ...
[13:20:11.446]  - future.globals: TRUE
[13:20:11.449]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[13:20:11.449]  - needed namespaces: [n=0] 
[13:20:11.449] Finding globals ... DONE
[13:20:11.449]  - use_args: TRUE
[13:20:11.449]  - Getting '...' globals ...
[13:20:11.449]    - '...' content: [n=0] 
[13:20:11.449] List of 1
[13:20:11.449]  $ ...: list()
[13:20:11.449]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.449]  - attr(*, "where")=List of 1
[13:20:11.449]   ..$ ...:<environment: 0x56048695f5b8> 
[13:20:11.449]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.449]  - attr(*, "resolved")= logi TRUE
[13:20:11.449]  - attr(*, "total_size")= num NA
[13:20:11.452]  - Getting '...' globals ... DONE
[13:20:11.452] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[13:20:11.452] List of 3
[13:20:11.452]  $ ...future.FUN        :function (x)  
[13:20:11.452]  $ future.call.arguments:List of 1
[13:20:11.452]   ..$ a: num 1
[13:20:11.452]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.452]  $ ...                  : list()
[13:20:11.452]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.452]  - attr(*, "where")=List of 3
[13:20:11.452]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[13:20:11.452]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[13:20:11.452]   ..$ ...                  :<environment: 0x56048695f5b8> 
[13:20:11.452]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.452]  - attr(*, "resolved")= logi FALSE
[13:20:11.452]  - attr(*, "total_size")= num 1272
[13:20:11.456] Packages to be attached in all futures: [n=0] 
[13:20:11.456] getGlobalsAndPackagesXApply() ... DONE
[13:20:11.456] Number of futures (= number of chunks): 1
[13:20:11.456] Launching 1 futures (chunks) ...
[13:20:11.456] Chunk #1 of 1 ...
[13:20:11.456]  - Finding globals in 'X' for chunk #1 ...
[13:20:11.457]    + additional globals found: [n=0] 
[13:20:11.457]    + additional namespaces needed: [n=0] 
[13:20:11.457]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:11.457]  - seeds: <none>
[13:20:11.457]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:11.475] Created future:
[13:20:11.475] MultisessionFuture:
[13:20:11.475] Label: ‘future_lapply-1’
[13:20:11.475] Expression:
[13:20:11.475] {
[13:20:11.475]     do.call(function(...) {
[13:20:11.475]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.475]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.475]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.475]             on.exit(options(oopts), add = TRUE)
[13:20:11.475]         }
[13:20:11.475]         {
[13:20:11.475]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.475]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.475]                 ...future.FUN(...future.X_jj)
[13:20:11.475]             })
[13:20:11.475]         }
[13:20:11.475]     }, args = future.call.arguments)
[13:20:11.475] }
[13:20:11.475] Lazy evaluation: FALSE
[13:20:11.475] Asynchronous evaluation: TRUE
[13:20:11.475] Local evaluation: TRUE
[13:20:11.475] Environment: 0x56048695f238
[13:20:11.475] Capture standard output: TRUE
[13:20:11.475] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.475] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:11.475] Packages: <none>
[13:20:11.475] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.475] Resolved: FALSE
[13:20:11.475] Value: <not collected>
[13:20:11.475] Conditions captured: <none>
[13:20:11.475] Early signaling: FALSE
[13:20:11.475] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.475] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.487] Chunk #1 of 1 ... DONE
[13:20:11.487] Launching 1 futures (chunks) ... DONE
[13:20:11.487] Resolving 1 futures (chunks) ...
[13:20:11.529]  - Number of value chunks collected: 1
[13:20:11.529] Resolving 1 futures (chunks) ... DONE
[13:20:11.530] Reducing values from 1 chunks ...
[13:20:11.530]  - Number of values collected after concatenation: 1
[13:20:11.530]  - Number of values expected: 1
[13:20:11.530] Reducing values from 1 chunks ... DONE
[13:20:11.530] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[13:20:11.531] future_lapply() ...
[13:20:11.535] Number of chunks: 1
[13:20:11.535] getGlobalsAndPackagesXApply() ...
[13:20:11.535]  - future.globals: TRUE
[13:20:11.538]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:20:11.538]  - needed namespaces: [n=0] 
[13:20:11.538] Finding globals ... DONE
[13:20:11.538]  - use_args: TRUE
[13:20:11.538]  - Getting '...' globals ...
[13:20:11.538]    - '...' content: [n=0] 
[13:20:11.538] List of 1
[13:20:11.538]  $ ...: list()
[13:20:11.538]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.538]  - attr(*, "where")=List of 1
[13:20:11.538]   ..$ ...:<environment: 0x560487270d18> 
[13:20:11.538]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.538]  - attr(*, "resolved")= logi TRUE
[13:20:11.538]  - attr(*, "total_size")= num NA
[13:20:11.541]  - Getting '...' globals ... DONE
[13:20:11.541] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:20:11.541] List of 3
[13:20:11.541]  $ ...future.FUN:function (ii)  
[13:20:11.541]  $ a            : num 1
[13:20:11.541]  $ ...          : list()
[13:20:11.541]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.541]  - attr(*, "where")=List of 3
[13:20:11.541]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:11.541]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:11.541]   ..$ ...          :<environment: 0x560487270d18> 
[13:20:11.541]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.541]  - attr(*, "resolved")= logi FALSE
[13:20:11.541]  - attr(*, "total_size")= num 2984
[13:20:11.544] Packages to be attached in all futures: [n=0] 
[13:20:11.545] getGlobalsAndPackagesXApply() ... DONE
[13:20:11.545] Number of futures (= number of chunks): 1
[13:20:11.545] Launching 1 futures (chunks) ...
[13:20:11.545] Chunk #1 of 1 ...
[13:20:11.545]  - Finding globals in 'X' for chunk #1 ...
[13:20:11.545]    + additional globals found: [n=0] 
[13:20:11.545]    + additional namespaces needed: [n=0] 
[13:20:11.546]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:11.546]  - seeds: <none>
[13:20:11.546]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:11.563] Created future:
[13:20:11.563] MultisessionFuture:
[13:20:11.563] Label: ‘future_lapply-1’
[13:20:11.563] Expression:
[13:20:11.563] {
[13:20:11.563]     do.call(function(...) {
[13:20:11.563]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.563]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.563]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.563]             on.exit(options(oopts), add = TRUE)
[13:20:11.563]         }
[13:20:11.563]         {
[13:20:11.563]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.563]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.563]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.563]             })
[13:20:11.563]         }
[13:20:11.563]     }, args = future.call.arguments)
[13:20:11.563] }
[13:20:11.563] Lazy evaluation: FALSE
[13:20:11.563] Asynchronous evaluation: TRUE
[13:20:11.563] Local evaluation: TRUE
[13:20:11.563] Environment: R_GlobalEnv
[13:20:11.563] Capture standard output: TRUE
[13:20:11.563] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.563] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:20:11.563] Packages: <none>
[13:20:11.563] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.563] Resolved: FALSE
[13:20:11.563] Value: <not collected>
[13:20:11.563] Conditions captured: <none>
[13:20:11.563] Early signaling: FALSE
[13:20:11.563] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.563] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.574] Chunk #1 of 1 ... DONE
[13:20:11.574] Launching 1 futures (chunks) ... DONE
[13:20:11.575] Resolving 1 futures (chunks) ...
[13:20:11.617]  - Number of value chunks collected: 1
[13:20:11.617] Resolving 1 futures (chunks) ... DONE
[13:20:11.617] Reducing values from 1 chunks ...
[13:20:11.618]  - Number of values collected after concatenation: 1
[13:20:11.618]  - Number of values expected: 1
[13:20:11.618] Reducing values from 1 chunks ... DONE
[13:20:11.618] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[13:20:11.618] future_lapply() ...
[13:20:11.624] Number of chunks: 1
[13:20:11.624] getGlobalsAndPackagesXApply() ...
[13:20:11.625]  - future.globals: TRUE
[13:20:11.627]  - globals found/used: [n=2] ‘FUN’, ‘a’
[13:20:11.627]  - needed namespaces: [n=0] 
[13:20:11.628] Finding globals ... DONE
[13:20:11.628]  - use_args: TRUE
[13:20:11.628]  - Getting '...' globals ...
[13:20:11.628]    - '...' content: [n=0] 
[13:20:11.628] List of 1
[13:20:11.628]  $ ...: list()
[13:20:11.628]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.628]  - attr(*, "where")=List of 1
[13:20:11.628]   ..$ ...:<environment: 0x560486cf6a10> 
[13:20:11.628]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.628]  - attr(*, "resolved")= logi TRUE
[13:20:11.628]  - attr(*, "total_size")= num NA
[13:20:11.631]  - Getting '...' globals ... DONE
[13:20:11.631] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[13:20:11.631] List of 3
[13:20:11.631]  $ ...future.FUN:function (ii)  
[13:20:11.631]  $ a            : num 1
[13:20:11.631]  $ ...          : list()
[13:20:11.631]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.631]  - attr(*, "where")=List of 3
[13:20:11.631]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:11.631]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:11.631]   ..$ ...          :<environment: 0x560486cf6a10> 
[13:20:11.631]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.631]  - attr(*, "resolved")= logi FALSE
[13:20:11.631]  - attr(*, "total_size")= num 2984
[13:20:11.634] Packages to be attached in all futures: [n=0] 
[13:20:11.634] getGlobalsAndPackagesXApply() ... DONE
[13:20:11.634] Number of futures (= number of chunks): 1
[13:20:11.635] Launching 1 futures (chunks) ...
[13:20:11.635] Chunk #1 of 1 ...
[13:20:11.635]  - Finding globals in 'X' for chunk #1 ...
[13:20:11.635]    + additional globals found: [n=0] 
[13:20:11.635]    + additional namespaces needed: [n=0] 
[13:20:11.635]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:11.635]  - seeds: <none>
[13:20:11.635]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:11.658] Created future:
[13:20:11.658] MultisessionFuture:
[13:20:11.658] Label: ‘future_lapply-1’
[13:20:11.658] Expression:
[13:20:11.658] {
[13:20:11.658]     do.call(function(...) {
[13:20:11.658]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.658]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.658]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.658]             on.exit(options(oopts), add = TRUE)
[13:20:11.658]         }
[13:20:11.658]         {
[13:20:11.658]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.658]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.658]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.658]             })
[13:20:11.658]         }
[13:20:11.658]     }, args = future.call.arguments)
[13:20:11.658] }
[13:20:11.658] Lazy evaluation: FALSE
[13:20:11.658] Asynchronous evaluation: TRUE
[13:20:11.658] Local evaluation: TRUE
[13:20:11.658] Environment: R_GlobalEnv
[13:20:11.658] Capture standard output: TRUE
[13:20:11.658] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.658] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:20:11.658] Packages: <none>
[13:20:11.658] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.658] Resolved: FALSE
[13:20:11.658] Value: <not collected>
[13:20:11.658] Conditions captured: <none>
[13:20:11.658] Early signaling: FALSE
[13:20:11.658] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.658] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.670] Chunk #1 of 1 ... DONE
[13:20:11.670] Launching 1 futures (chunks) ... DONE
[13:20:11.670] Resolving 1 futures (chunks) ...
[13:20:11.713]  - Number of value chunks collected: 1
[13:20:11.713] Resolving 1 futures (chunks) ... DONE
[13:20:11.713] Reducing values from 1 chunks ...
[13:20:11.713]  - Number of values collected after concatenation: 1
[13:20:11.713]  - Number of values expected: 1
[13:20:11.713] Reducing values from 1 chunks ... DONE
[13:20:11.714] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[13:20:11.714] future_lapply() ...
[13:20:11.718] Number of chunks: 1
[13:20:11.718] getGlobalsAndPackagesXApply() ...
[13:20:11.718]  - future.globals: <name-value list> with names ‘42’
[13:20:11.718]  - use_args: TRUE
[13:20:11.718]  - Getting '...' globals ...
[13:20:11.719]    - '...' content: [n=0] 
[13:20:11.719] List of 1
[13:20:11.719]  $ ...: list()
[13:20:11.719]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.719]  - attr(*, "where")=List of 1
[13:20:11.719]   ..$ ...:<environment: 0x5604847c2238> 
[13:20:11.719]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.719]  - attr(*, "resolved")= logi TRUE
[13:20:11.719]  - attr(*, "total_size")= num NA
[13:20:11.721]  - Getting '...' globals ... DONE
[13:20:11.722] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[13:20:11.722] List of 3
[13:20:11.722]  $ a            : num 42
[13:20:11.722]  $ ...future.FUN:function (x)  
[13:20:11.722]  $ ...          : list()
[13:20:11.722]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.722]  - attr(*, "where")=List of 3
[13:20:11.722]   ..$ a            :<environment: R_EmptyEnv> 
[13:20:11.722]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[13:20:11.722]   ..$ ...          :<environment: 0x5604847c2238> 
[13:20:11.722]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.722]  - attr(*, "resolved")= logi FALSE
[13:20:11.722]  - attr(*, "total_size")= num NA
[13:20:11.725] Packages to be attached in all futures: [n=0] 
[13:20:11.725] getGlobalsAndPackagesXApply() ... DONE
[13:20:11.725] Number of futures (= number of chunks): 1
[13:20:11.725] Launching 1 futures (chunks) ...
[13:20:11.725] Chunk #1 of 1 ...
[13:20:11.726]  - seeds: <none>
[13:20:11.726]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:11.744] Created future:
[13:20:11.744] MultisessionFuture:
[13:20:11.744] Label: ‘future_lapply-1’
[13:20:11.744] Expression:
[13:20:11.744] {
[13:20:11.744]     do.call(function(...) {
[13:20:11.744]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.744]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.744]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.744]             on.exit(options(oopts), add = TRUE)
[13:20:11.744]         }
[13:20:11.744]         {
[13:20:11.744]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.744]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.744]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.744]             })
[13:20:11.744]         }
[13:20:11.744]     }, args = future.call.arguments)
[13:20:11.744] }
[13:20:11.744] Lazy evaluation: FALSE
[13:20:11.744] Asynchronous evaluation: TRUE
[13:20:11.744] Local evaluation: TRUE
[13:20:11.744] Environment: R_GlobalEnv
[13:20:11.744] Capture standard output: TRUE
[13:20:11.744] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.744] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[13:20:11.744] Packages: <none>
[13:20:11.744] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.744] Resolved: FALSE
[13:20:11.744] Value: <not collected>
[13:20:11.744] Conditions captured: <none>
[13:20:11.744] Early signaling: FALSE
[13:20:11.744] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.744] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.756] Chunk #1 of 1 ... DONE
[13:20:11.756] Launching 1 futures (chunks) ... DONE
[13:20:11.756] Resolving 1 futures (chunks) ...
[13:20:11.799]  - Number of value chunks collected: 1
[13:20:11.799] Resolving 1 futures (chunks) ... DONE
[13:20:11.799] Reducing values from 1 chunks ...
[13:20:11.799]  - Number of values collected after concatenation: 1
[13:20:11.799]  - Number of values expected: 1
[13:20:11.799] Reducing values from 1 chunks ... DONE
[13:20:11.799] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[13:20:11.800] future_lapply() ...
[13:20:11.805] Number of chunks: 2
[13:20:11.805] getGlobalsAndPackagesXApply() ...
[13:20:11.805]  - future.globals: TRUE
[13:20:11.806]  - globals found/used: [n=1] ‘FUN’
[13:20:11.807]  - needed namespaces: [n=0] 
[13:20:11.807] Finding globals ... DONE
[13:20:11.807]  - use_args: TRUE
[13:20:11.807]  - Getting '...' globals ...
[13:20:11.807]    - '...' content: [n=0] 
[13:20:11.807] List of 1
[13:20:11.807]  $ ...: list()
[13:20:11.807]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.807]  - attr(*, "where")=List of 1
[13:20:11.807]   ..$ ...:<environment: 0x560487936720> 
[13:20:11.807]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.807]  - attr(*, "resolved")= logi TRUE
[13:20:11.807]  - attr(*, "total_size")= num NA
[13:20:11.812]  - Getting '...' globals ... DONE
[13:20:11.812] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:11.813] List of 2
[13:20:11.813]  $ ...future.FUN:function (y)  
[13:20:11.813]  $ ...          : list()
[13:20:11.813]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.813]  - attr(*, "where")=List of 2
[13:20:11.813]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:11.813]   ..$ ...          :<environment: 0x560487936720> 
[13:20:11.813]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.813]  - attr(*, "resolved")= logi FALSE
[13:20:11.813]  - attr(*, "total_size")= num 280
[13:20:11.815] Packages to be attached in all futures: [n=0] 
[13:20:11.815] getGlobalsAndPackagesXApply() ... DONE
[13:20:11.816] Number of futures (= number of chunks): 2
[13:20:11.816] Launching 2 futures (chunks) ...
[13:20:11.816] Chunk #1 of 2 ...
[13:20:11.816]  - Finding globals in 'X' for chunk #1 ...
[13:20:11.816]    + additional globals found: [n=0] 
[13:20:11.816]    + additional namespaces needed: [n=0] 
[13:20:11.816]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:11.817]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:11.817]  - seeds: <none>
[13:20:11.817]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:11.835] Created future:
[13:20:11.835] MultisessionFuture:
[13:20:11.835] Label: ‘future_lapply-1’
[13:20:11.835] Expression:
[13:20:11.835] {
[13:20:11.835]     do.call(function(...) {
[13:20:11.835]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.835]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.835]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.835]             on.exit(options(oopts), add = TRUE)
[13:20:11.835]         }
[13:20:11.835]         {
[13:20:11.835]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.835]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.835]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.835]             })
[13:20:11.835]         }
[13:20:11.835]     }, args = future.call.arguments)
[13:20:11.835] }
[13:20:11.835] Lazy evaluation: FALSE
[13:20:11.835] Asynchronous evaluation: TRUE
[13:20:11.835] Local evaluation: TRUE
[13:20:11.835] Environment: 0x560487936b10
[13:20:11.835] Capture standard output: TRUE
[13:20:11.835] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.835] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:11.835] Packages: <none>
[13:20:11.835] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.835] Resolved: FALSE
[13:20:11.835] Value: <not collected>
[13:20:11.835] Conditions captured: <none>
[13:20:11.835] Early signaling: FALSE
[13:20:11.835] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.835] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.847] Chunk #1 of 2 ... DONE
[13:20:11.847] Chunk #2 of 2 ...
[13:20:11.847]  - Finding globals in 'X' for chunk #2 ...
[13:20:11.848]    + additional globals found: [n=0] 
[13:20:11.848]    + additional namespaces needed: [n=0] 
[13:20:11.848]  - Finding globals in 'X' for chunk #2 ... DONE
[13:20:11.848]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:11.848]  - seeds: <none>
[13:20:11.848]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:11.866] Created future:
[13:20:11.866] MultisessionFuture:
[13:20:11.866] Label: ‘future_lapply-2’
[13:20:11.866] Expression:
[13:20:11.866] {
[13:20:11.866]     do.call(function(...) {
[13:20:11.866]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.866]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.866]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.866]             on.exit(options(oopts), add = TRUE)
[13:20:11.866]         }
[13:20:11.866]         {
[13:20:11.866]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.866]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.866]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.866]             })
[13:20:11.866]         }
[13:20:11.866]     }, args = future.call.arguments)
[13:20:11.866] }
[13:20:11.866] Lazy evaluation: FALSE
[13:20:11.866] Asynchronous evaluation: TRUE
[13:20:11.866] Local evaluation: TRUE
[13:20:11.866] Environment: 0x560487936b10
[13:20:11.866] Capture standard output: TRUE
[13:20:11.866] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.866] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:11.866] Packages: <none>
[13:20:11.866] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.866] Resolved: FALSE
[13:20:11.866] Value: <not collected>
[13:20:11.866] Conditions captured: <none>
[13:20:11.866] Early signaling: FALSE
[13:20:11.866] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.866] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.878] Chunk #2 of 2 ... DONE
[13:20:11.878] Launching 2 futures (chunks) ... DONE
[13:20:11.879] Resolving 2 futures (chunks) ...
[13:20:11.914]  - Number of value chunks collected: 2
[13:20:11.914] Resolving 2 futures (chunks) ... DONE
[13:20:11.914] Reducing values from 2 chunks ...
[13:20:11.914]  - Number of values collected after concatenation: 2
[13:20:11.914]  - Number of values expected: 2
[13:20:11.914] Reducing values from 2 chunks ... DONE
[13:20:11.914] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[13:20:11.915] future_lapply() ...
[13:20:11.919] Number of chunks: 2
[13:20:11.919] getGlobalsAndPackagesXApply() ...
[13:20:11.919]  - future.globals: TRUE
[13:20:11.921]  - globals found/used: [n=1] ‘FUN’
[13:20:11.921]  - needed namespaces: [n=0] 
[13:20:11.921] Finding globals ... DONE
[13:20:11.921]  - use_args: TRUE
[13:20:11.921]  - Getting '...' globals ...
[13:20:11.921]    - '...' content: [n=0] 
[13:20:11.922] List of 1
[13:20:11.922]  $ ...: list()
[13:20:11.922]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.922]  - attr(*, "where")=List of 1
[13:20:11.922]   ..$ ...:<environment: 0x560484852a18> 
[13:20:11.922]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.922]  - attr(*, "resolved")= logi TRUE
[13:20:11.922]  - attr(*, "total_size")= num NA
[13:20:11.924]  - Getting '...' globals ... DONE
[13:20:11.924] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:11.924] List of 2
[13:20:11.924]  $ ...future.FUN:function (y)  
[13:20:11.924]  $ ...          : list()
[13:20:11.924]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:11.924]  - attr(*, "where")=List of 2
[13:20:11.924]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:11.924]   ..$ ...          :<environment: 0x560484852a18> 
[13:20:11.924]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:11.924]  - attr(*, "resolved")= logi FALSE
[13:20:11.924]  - attr(*, "total_size")= num 280
[13:20:11.927] Packages to be attached in all futures: [n=0] 
[13:20:11.927] getGlobalsAndPackagesXApply() ... DONE
[13:20:11.927] Number of futures (= number of chunks): 2
[13:20:11.927] Launching 2 futures (chunks) ...
[13:20:11.928] Chunk #1 of 2 ...
[13:20:11.928]  - Finding globals in 'X' for chunk #1 ...
[13:20:11.928]    + additional globals found: [n=0] 
[13:20:11.928]    + additional namespaces needed: [n=0] 
[13:20:11.928]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:11.928]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:11.928]  - seeds: <none>
[13:20:11.929]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:11.945] Created future:
[13:20:11.946] MultisessionFuture:
[13:20:11.946] Label: ‘future_lapply-1’
[13:20:11.946] Expression:
[13:20:11.946] {
[13:20:11.946]     do.call(function(...) {
[13:20:11.946]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.946]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.946]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.946]             on.exit(options(oopts), add = TRUE)
[13:20:11.946]         }
[13:20:11.946]         {
[13:20:11.946]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.946]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.946]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.946]             })
[13:20:11.946]         }
[13:20:11.946]     }, args = future.call.arguments)
[13:20:11.946] }
[13:20:11.946] Lazy evaluation: FALSE
[13:20:11.946] Asynchronous evaluation: TRUE
[13:20:11.946] Local evaluation: TRUE
[13:20:11.946] Environment: 0x560484851c18
[13:20:11.946] Capture standard output: TRUE
[13:20:11.946] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.946] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:11.946] Packages: <none>
[13:20:11.946] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.946] Resolved: FALSE
[13:20:11.946] Value: <not collected>
[13:20:11.946] Conditions captured: <none>
[13:20:11.946] Early signaling: FALSE
[13:20:11.946] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.946] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.957] Chunk #1 of 2 ... DONE
[13:20:11.957] Chunk #2 of 2 ...
[13:20:11.957]  - Finding globals in 'X' for chunk #2 ...
[13:20:11.958]    + additional globals found: [n=0] 
[13:20:11.958]    + additional namespaces needed: [n=0] 
[13:20:11.958]  - Finding globals in 'X' for chunk #2 ... DONE
[13:20:11.958]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:11.958]  - seeds: <none>
[13:20:11.958]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:11.976] Created future:
[13:20:11.976] MultisessionFuture:
[13:20:11.976] Label: ‘future_lapply-2’
[13:20:11.976] Expression:
[13:20:11.976] {
[13:20:11.976]     do.call(function(...) {
[13:20:11.976]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:11.976]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:11.976]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:11.976]             on.exit(options(oopts), add = TRUE)
[13:20:11.976]         }
[13:20:11.976]         {
[13:20:11.976]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:11.976]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:11.976]                 ...future.FUN(...future.X_jj, ...)
[13:20:11.976]             })
[13:20:11.976]         }
[13:20:11.976]     }, args = future.call.arguments)
[13:20:11.976] }
[13:20:11.976] Lazy evaluation: FALSE
[13:20:11.976] Asynchronous evaluation: TRUE
[13:20:11.976] Local evaluation: TRUE
[13:20:11.976] Environment: 0x560484851c18
[13:20:11.976] Capture standard output: TRUE
[13:20:11.976] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:11.976] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:11.976] Packages: <none>
[13:20:11.976] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:11.976] Resolved: FALSE
[13:20:11.976] Value: <not collected>
[13:20:11.976] Conditions captured: <none>
[13:20:11.976] Early signaling: FALSE
[13:20:11.976] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:11.976] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:11.988] Chunk #2 of 2 ... DONE
[13:20:11.988] Launching 2 futures (chunks) ... DONE
[13:20:11.988] Resolving 2 futures (chunks) ...
[13:20:12.022]  - Number of value chunks collected: 2
[13:20:12.022] Resolving 2 futures (chunks) ... DONE
[13:20:12.022] Reducing values from 2 chunks ...
[13:20:12.022]  - Number of values collected after concatenation: 2
[13:20:12.022]  - Number of values expected: 2
[13:20:12.022] Reducing values from 2 chunks ... DONE
[13:20:12.023] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[13:20:12.025] future_lapply() ...
[13:20:12.029] Number of chunks: 2
[13:20:12.029] getGlobalsAndPackagesXApply() ...
[13:20:12.029]  - future.globals: TRUE
[13:20:12.031] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[13:20:12.031] future_lapply() ...
[13:20:12.035] Number of chunks: 2
[13:20:12.035] getGlobalsAndPackagesXApply() ...
[13:20:12.035]  - future.globals: TRUE
[13:20:12.037]  - globals found/used: [n=1] ‘FUN’
[13:20:12.037]  - needed namespaces: [n=0] 
[13:20:12.037] Finding globals ... DONE
[13:20:12.037]  - use_args: TRUE
[13:20:12.037]  - Getting '...' globals ...
[13:20:12.037]    - '...' content: [n=0] 
[13:20:12.037] List of 1
[13:20:12.037]  $ ...: list()
[13:20:12.037]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:12.037]  - attr(*, "where")=List of 1
[13:20:12.037]   ..$ ...:<environment: 0x560486203470> 
[13:20:12.037]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:12.037]  - attr(*, "resolved")= logi TRUE
[13:20:12.037]  - attr(*, "total_size")= num NA
[13:20:12.040]  - Getting '...' globals ... DONE
[13:20:12.040] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:12.040] List of 2
[13:20:12.040]  $ ...future.FUN:function (x)  
[13:20:12.040]  $ ...          : list()
[13:20:12.040]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:12.040]  - attr(*, "where")=List of 2
[13:20:12.040]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:12.040]   ..$ ...          :<environment: 0x560486203470> 
[13:20:12.040]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:12.040]  - attr(*, "resolved")= logi FALSE
[13:20:12.040]  - attr(*, "total_size")= num 1840
[13:20:12.043] Packages to be attached in all futures: [n=0] 
[13:20:12.043] getGlobalsAndPackagesXApply() ... DONE
[13:20:12.043] Number of futures (= number of chunks): 2
[13:20:12.043] Launching 2 futures (chunks) ...
[13:20:12.044] Chunk #1 of 2 ...
[13:20:12.044]  - Finding globals in 'X' for chunk #1 ...
[13:20:12.044]    + additional globals found: [n=0] 
[13:20:12.044]    + additional namespaces needed: [n=0] 
[13:20:12.044]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:12.044]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:12.044]  - seeds: <none>
[13:20:12.044]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.066] Created future:
[13:20:12.066] MultisessionFuture:
[13:20:12.066] Label: ‘future_lapply-1’
[13:20:12.066] Expression:
[13:20:12.066] {
[13:20:12.066]     do.call(function(...) {
[13:20:12.066]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.066]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.066]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.066]             on.exit(options(oopts), add = TRUE)
[13:20:12.066]         }
[13:20:12.066]         {
[13:20:12.066]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.066]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.066]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.066]             })
[13:20:12.066]         }
[13:20:12.066]     }, args = future.call.arguments)
[13:20:12.066] }
[13:20:12.066] Lazy evaluation: FALSE
[13:20:12.066] Asynchronous evaluation: TRUE
[13:20:12.066] Local evaluation: TRUE
[13:20:12.066] Environment: R_GlobalEnv
[13:20:12.066] Capture standard output: TRUE
[13:20:12.066] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.066] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:12.066] Packages: <none>
[13:20:12.066] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.066] Resolved: FALSE
[13:20:12.066] Value: <not collected>
[13:20:12.066] Conditions captured: <none>
[13:20:12.066] Early signaling: FALSE
[13:20:12.066] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.066] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.078] Chunk #1 of 2 ... DONE
[13:20:12.078] Chunk #2 of 2 ...
[13:20:12.078]  - Finding globals in 'X' for chunk #2 ...
[13:20:12.078]    + additional globals found: [n=0] 
[13:20:12.078]    + additional namespaces needed: [n=0] 
[13:20:12.078]  - Finding globals in 'X' for chunk #2 ... DONE
[13:20:12.079]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[13:20:12.079]  - seeds: <none>
[13:20:12.079]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.096] Created future:
[13:20:12.097] MultisessionFuture:
[13:20:12.097] Label: ‘future_lapply-2’
[13:20:12.097] Expression:
[13:20:12.097] {
[13:20:12.097]     do.call(function(...) {
[13:20:12.097]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.097]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.097]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.097]             on.exit(options(oopts), add = TRUE)
[13:20:12.097]         }
[13:20:12.097]         {
[13:20:12.097]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.097]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.097]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.097]             })
[13:20:12.097]         }
[13:20:12.097]     }, args = future.call.arguments)
[13:20:12.097] }
[13:20:12.097] Lazy evaluation: FALSE
[13:20:12.097] Asynchronous evaluation: TRUE
[13:20:12.097] Local evaluation: TRUE
[13:20:12.097] Environment: R_GlobalEnv
[13:20:12.097] Capture standard output: TRUE
[13:20:12.097] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.097] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[13:20:12.097] Packages: <none>
[13:20:12.097] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.097] Resolved: FALSE
[13:20:12.097] Value: <not collected>
[13:20:12.097] Conditions captured: <none>
[13:20:12.097] Early signaling: FALSE
[13:20:12.097] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.097] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.108] Chunk #2 of 2 ... DONE
[13:20:12.108] Launching 2 futures (chunks) ... DONE
[13:20:12.108] Resolving 2 futures (chunks) ...
[13:20:12.156]  - Number of value chunks collected: 2
[13:20:12.156] Resolving 2 futures (chunks) ... DONE
[13:20:12.156] Reducing values from 2 chunks ...
[13:20:12.156]  - Number of values collected after concatenation: 10
[13:20:12.156]  - Number of values expected: 10
[13:20:12.156] Reducing values from 2 chunks ... DONE
[13:20:12.156] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[13:20:12.164] future_lapply() ...
[13:20:12.170] Number of chunks: 10
[13:20:12.170] getGlobalsAndPackagesXApply() ...
[13:20:12.170]  - future.globals: TRUE
[13:20:12.172]  - globals found/used: [n=1] ‘FUN’
[13:20:12.172]  - needed namespaces: [n=0] 
[13:20:12.172] Finding globals ... DONE
[13:20:12.172]  - use_args: TRUE
[13:20:12.172]  - Getting '...' globals ...
[13:20:12.173]    - '...' content: [n=0] 
[13:20:12.173] List of 1
[13:20:12.173]  $ ...: list()
[13:20:12.173]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:12.173]  - attr(*, "where")=List of 1
[13:20:12.173]   ..$ ...:<environment: 0x560487770620> 
[13:20:12.173]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:12.173]  - attr(*, "resolved")= logi TRUE
[13:20:12.173]  - attr(*, "total_size")= num NA
[13:20:12.175]  - Getting '...' globals ... DONE
[13:20:12.175] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:12.175] List of 2
[13:20:12.175]  $ ...future.FUN:function (x)  
[13:20:12.175]  $ ...          : list()
[13:20:12.175]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:12.175]  - attr(*, "where")=List of 2
[13:20:12.175]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:12.175]   ..$ ...          :<environment: 0x560487770620> 
[13:20:12.175]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:12.175]  - attr(*, "resolved")= logi FALSE
[13:20:12.175]  - attr(*, "total_size")= num 1840
[13:20:12.178] Packages to be attached in all futures: [n=0] 
[13:20:12.178] getGlobalsAndPackagesXApply() ... DONE
[13:20:12.178] Number of futures (= number of chunks): 10
[13:20:12.178] Launching 10 futures (chunks) ...
[13:20:12.178] Chunk #1 of 10 ...
[13:20:12.179]  - Finding globals in 'X' for chunk #1 ...
[13:20:12.179]    + additional globals found: [n=0] 
[13:20:12.179]    + additional namespaces needed: [n=0] 
[13:20:12.179]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:12.179]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:20:12.179]  - seeds: <none>
[13:20:12.179]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.196] Created future:
[13:20:12.197] MultisessionFuture:
[13:20:12.197] Label: ‘future_lapply-1’
[13:20:12.197] Expression:
[13:20:12.197] {
[13:20:12.197]     do.call(function(...) {
[13:20:12.197]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.197]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.197]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.197]             on.exit(options(oopts), add = TRUE)
[13:20:12.197]         }
[13:20:12.197]         {
[13:20:12.197]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.197]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.197]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.197]             })
[13:20:12.197]         }
[13:20:12.197]     }, args = future.call.arguments)
[13:20:12.197] }
[13:20:12.197] Lazy evaluation: FALSE
[13:20:12.197] Asynchronous evaluation: TRUE
[13:20:12.197] Local evaluation: TRUE
[13:20:12.197] Environment: R_GlobalEnv
[13:20:12.197] Capture standard output: TRUE
[13:20:12.197] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.197] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.197] Packages: <none>
[13:20:12.197] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.197] Resolved: FALSE
[13:20:12.197] Value: <not collected>
[13:20:12.197] Conditions captured: <none>
[13:20:12.197] Early signaling: FALSE
[13:20:12.197] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.197] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.208] Chunk #1 of 10 ... DONE
[13:20:12.208] Chunk #2 of 10 ...
[13:20:12.208]  - Finding globals in 'X' for chunk #2 ...
[13:20:12.209]    + additional globals found: [n=0] 
[13:20:12.209]    + additional namespaces needed: [n=0] 
[13:20:12.209]  - Finding globals in 'X' for chunk #2 ... DONE
[13:20:12.209]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:20:12.209]  - seeds: <none>
[13:20:12.209]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.228] Created future:
[13:20:12.228] MultisessionFuture:
[13:20:12.228] Label: ‘future_lapply-2’
[13:20:12.228] Expression:
[13:20:12.228] {
[13:20:12.228]     do.call(function(...) {
[13:20:12.228]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.228]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.228]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.228]             on.exit(options(oopts), add = TRUE)
[13:20:12.228]         }
[13:20:12.228]         {
[13:20:12.228]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.228]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.228]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.228]             })
[13:20:12.228]         }
[13:20:12.228]     }, args = future.call.arguments)
[13:20:12.228] }
[13:20:12.228] Lazy evaluation: FALSE
[13:20:12.228] Asynchronous evaluation: TRUE
[13:20:12.228] Local evaluation: TRUE
[13:20:12.228] Environment: R_GlobalEnv
[13:20:12.228] Capture standard output: TRUE
[13:20:12.228] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.228] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.228] Packages: <none>
[13:20:12.228] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.228] Resolved: FALSE
[13:20:12.228] Value: <not collected>
[13:20:12.228] Conditions captured: <none>
[13:20:12.228] Early signaling: FALSE
[13:20:12.228] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.228] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.240] Chunk #2 of 10 ... DONE
[13:20:12.240] Chunk #3 of 10 ...
[13:20:12.240]  - Finding globals in 'X' for chunk #3 ...
[13:20:12.240]    + additional globals found: [n=0] 
[13:20:12.240]    + additional namespaces needed: [n=0] 
[13:20:12.240]  - Finding globals in 'X' for chunk #3 ... DONE
[13:20:12.241]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:20:12.241]  - seeds: <none>
[13:20:12.241]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.270] Created future:
[13:20:12.270] MultisessionFuture:
[13:20:12.270] Label: ‘future_lapply-3’
[13:20:12.270] Expression:
[13:20:12.270] {
[13:20:12.270]     do.call(function(...) {
[13:20:12.270]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.270]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.270]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.270]             on.exit(options(oopts), add = TRUE)
[13:20:12.270]         }
[13:20:12.270]         {
[13:20:12.270]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.270]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.270]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.270]             })
[13:20:12.270]         }
[13:20:12.270]     }, args = future.call.arguments)
[13:20:12.270] }
[13:20:12.270] Lazy evaluation: FALSE
[13:20:12.270] Asynchronous evaluation: TRUE
[13:20:12.270] Local evaluation: TRUE
[13:20:12.270] Environment: R_GlobalEnv
[13:20:12.270] Capture standard output: TRUE
[13:20:12.270] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.270] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.270] Packages: <none>
[13:20:12.270] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.270] Resolved: FALSE
[13:20:12.270] Value: <not collected>
[13:20:12.270] Conditions captured: <none>
[13:20:12.270] Early signaling: FALSE
[13:20:12.270] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.270] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.282] Chunk #3 of 10 ... DONE
[13:20:12.282] Chunk #4 of 10 ...
[13:20:12.282]  - Finding globals in 'X' for chunk #4 ...
[13:20:12.282]    + additional globals found: [n=0] 
[13:20:12.283]    + additional namespaces needed: [n=0] 
[13:20:12.283]  - Finding globals in 'X' for chunk #4 ... DONE
[13:20:12.283]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:20:12.283]  - seeds: <none>
[13:20:12.283]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.324] Created future:
[13:20:12.324] MultisessionFuture:
[13:20:12.324] Label: ‘future_lapply-4’
[13:20:12.324] Expression:
[13:20:12.324] {
[13:20:12.324]     do.call(function(...) {
[13:20:12.324]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.324]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.324]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.324]             on.exit(options(oopts), add = TRUE)
[13:20:12.324]         }
[13:20:12.324]         {
[13:20:12.324]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.324]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.324]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.324]             })
[13:20:12.324]         }
[13:20:12.324]     }, args = future.call.arguments)
[13:20:12.324] }
[13:20:12.324] Lazy evaluation: FALSE
[13:20:12.324] Asynchronous evaluation: TRUE
[13:20:12.324] Local evaluation: TRUE
[13:20:12.324] Environment: R_GlobalEnv
[13:20:12.324] Capture standard output: TRUE
[13:20:12.324] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.324] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.324] Packages: <none>
[13:20:12.324] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.324] Resolved: FALSE
[13:20:12.324] Value: <not collected>
[13:20:12.324] Conditions captured: <none>
[13:20:12.324] Early signaling: FALSE
[13:20:12.324] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.324] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.335] Chunk #4 of 10 ... DONE
[13:20:12.336] Chunk #5 of 10 ...
[13:20:12.336]  - Finding globals in 'X' for chunk #5 ...
[13:20:12.336]    + additional globals found: [n=0] 
[13:20:12.336]    + additional namespaces needed: [n=0] 
[13:20:12.336]  - Finding globals in 'X' for chunk #5 ... DONE
[13:20:12.336]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:20:12.337]  - seeds: <none>
[13:20:12.337]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.366] Created future:
[13:20:12.366] MultisessionFuture:
[13:20:12.366] Label: ‘future_lapply-5’
[13:20:12.366] Expression:
[13:20:12.366] {
[13:20:12.366]     do.call(function(...) {
[13:20:12.366]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.366]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.366]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.366]             on.exit(options(oopts), add = TRUE)
[13:20:12.366]         }
[13:20:12.366]         {
[13:20:12.366]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.366]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.366]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.366]             })
[13:20:12.366]         }
[13:20:12.366]     }, args = future.call.arguments)
[13:20:12.366] }
[13:20:12.366] Lazy evaluation: FALSE
[13:20:12.366] Asynchronous evaluation: TRUE
[13:20:12.366] Local evaluation: TRUE
[13:20:12.366] Environment: R_GlobalEnv
[13:20:12.366] Capture standard output: TRUE
[13:20:12.366] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.366] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.366] Packages: <none>
[13:20:12.366] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.366] Resolved: FALSE
[13:20:12.366] Value: <not collected>
[13:20:12.366] Conditions captured: <none>
[13:20:12.366] Early signaling: FALSE
[13:20:12.366] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.366] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.378] Chunk #5 of 10 ... DONE
[13:20:12.378] Chunk #6 of 10 ...
[13:20:12.378]  - Finding globals in 'X' for chunk #6 ...
[13:20:12.378]    + additional globals found: [n=0] 
[13:20:12.378]    + additional namespaces needed: [n=0] 
[13:20:12.378]  - Finding globals in 'X' for chunk #6 ... DONE
[13:20:12.379]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:20:12.379]  - seeds: <none>
[13:20:12.379]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.407] Created future:
[13:20:12.407] MultisessionFuture:
[13:20:12.407] Label: ‘future_lapply-6’
[13:20:12.407] Expression:
[13:20:12.407] {
[13:20:12.407]     do.call(function(...) {
[13:20:12.407]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.407]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.407]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.407]             on.exit(options(oopts), add = TRUE)
[13:20:12.407]         }
[13:20:12.407]         {
[13:20:12.407]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.407]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.407]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.407]             })
[13:20:12.407]         }
[13:20:12.407]     }, args = future.call.arguments)
[13:20:12.407] }
[13:20:12.407] Lazy evaluation: FALSE
[13:20:12.407] Asynchronous evaluation: TRUE
[13:20:12.407] Local evaluation: TRUE
[13:20:12.407] Environment: R_GlobalEnv
[13:20:12.407] Capture standard output: TRUE
[13:20:12.407] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.407] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.407] Packages: <none>
[13:20:12.407] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.407] Resolved: FALSE
[13:20:12.407] Value: <not collected>
[13:20:12.407] Conditions captured: <none>
[13:20:12.407] Early signaling: FALSE
[13:20:12.407] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.407] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.419] Chunk #6 of 10 ... DONE
[13:20:12.419] Chunk #7 of 10 ...
[13:20:12.419]  - Finding globals in 'X' for chunk #7 ...
[13:20:12.419]    + additional globals found: [n=0] 
[13:20:12.419]    + additional namespaces needed: [n=0] 
[13:20:12.419]  - Finding globals in 'X' for chunk #7 ... DONE
[13:20:12.420]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:20:12.420]  - seeds: <none>
[13:20:12.420]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.448] Created future:
[13:20:12.449] MultisessionFuture:
[13:20:12.449] Label: ‘future_lapply-7’
[13:20:12.449] Expression:
[13:20:12.449] {
[13:20:12.449]     do.call(function(...) {
[13:20:12.449]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.449]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.449]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.449]             on.exit(options(oopts), add = TRUE)
[13:20:12.449]         }
[13:20:12.449]         {
[13:20:12.449]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.449]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.449]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.449]             })
[13:20:12.449]         }
[13:20:12.449]     }, args = future.call.arguments)
[13:20:12.449] }
[13:20:12.449] Lazy evaluation: FALSE
[13:20:12.449] Asynchronous evaluation: TRUE
[13:20:12.449] Local evaluation: TRUE
[13:20:12.449] Environment: R_GlobalEnv
[13:20:12.449] Capture standard output: TRUE
[13:20:12.449] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.449] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.449] Packages: <none>
[13:20:12.449] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.449] Resolved: FALSE
[13:20:12.449] Value: <not collected>
[13:20:12.449] Conditions captured: <none>
[13:20:12.449] Early signaling: FALSE
[13:20:12.449] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.449] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.460] Chunk #7 of 10 ... DONE
[13:20:12.460] Chunk #8 of 10 ...
[13:20:12.460]  - Finding globals in 'X' for chunk #8 ...
[13:20:12.461]    + additional globals found: [n=0] 
[13:20:12.461]    + additional namespaces needed: [n=0] 
[13:20:12.461]  - Finding globals in 'X' for chunk #8 ... DONE
[13:20:12.461]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:20:12.461]  - seeds: <none>
[13:20:12.461]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.490] Created future:
[13:20:12.490] MultisessionFuture:
[13:20:12.490] Label: ‘future_lapply-8’
[13:20:12.490] Expression:
[13:20:12.490] {
[13:20:12.490]     do.call(function(...) {
[13:20:12.490]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.490]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.490]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.490]             on.exit(options(oopts), add = TRUE)
[13:20:12.490]         }
[13:20:12.490]         {
[13:20:12.490]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.490]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.490]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.490]             })
[13:20:12.490]         }
[13:20:12.490]     }, args = future.call.arguments)
[13:20:12.490] }
[13:20:12.490] Lazy evaluation: FALSE
[13:20:12.490] Asynchronous evaluation: TRUE
[13:20:12.490] Local evaluation: TRUE
[13:20:12.490] Environment: R_GlobalEnv
[13:20:12.490] Capture standard output: TRUE
[13:20:12.490] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.490] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.490] Packages: <none>
[13:20:12.490] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.490] Resolved: FALSE
[13:20:12.490] Value: <not collected>
[13:20:12.490] Conditions captured: <none>
[13:20:12.490] Early signaling: FALSE
[13:20:12.490] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.490] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.501] Chunk #8 of 10 ... DONE
[13:20:12.501] Chunk #9 of 10 ...
[13:20:12.502]  - Finding globals in 'X' for chunk #9 ...
[13:20:12.502]    + additional globals found: [n=0] 
[13:20:12.502]    + additional namespaces needed: [n=0] 
[13:20:12.502]  - Finding globals in 'X' for chunk #9 ... DONE
[13:20:12.502]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:20:12.502]  - seeds: <none>
[13:20:12.502]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.530] Created future:
[13:20:12.530] MultisessionFuture:
[13:20:12.530] Label: ‘future_lapply-9’
[13:20:12.530] Expression:
[13:20:12.530] {
[13:20:12.530]     do.call(function(...) {
[13:20:12.530]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.530]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.530]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.530]             on.exit(options(oopts), add = TRUE)
[13:20:12.530]         }
[13:20:12.530]         {
[13:20:12.530]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.530]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.530]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.530]             })
[13:20:12.530]         }
[13:20:12.530]     }, args = future.call.arguments)
[13:20:12.530] }
[13:20:12.530] Lazy evaluation: FALSE
[13:20:12.530] Asynchronous evaluation: TRUE
[13:20:12.530] Local evaluation: TRUE
[13:20:12.530] Environment: R_GlobalEnv
[13:20:12.530] Capture standard output: TRUE
[13:20:12.530] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.530] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.530] Packages: <none>
[13:20:12.530] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.530] Resolved: FALSE
[13:20:12.530] Value: <not collected>
[13:20:12.530] Conditions captured: <none>
[13:20:12.530] Early signaling: FALSE
[13:20:12.530] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.530] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.542] Chunk #9 of 10 ... DONE
[13:20:12.542] Chunk #10 of 10 ...
[13:20:12.542]  - Finding globals in 'X' for chunk #10 ...
[13:20:12.542]    + additional globals found: [n=0] 
[13:20:12.542]    + additional namespaces needed: [n=0] 
[13:20:12.543]  - Finding globals in 'X' for chunk #10 ... DONE
[13:20:12.543]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[13:20:12.543]  - seeds: <none>
[13:20:12.543]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.573] Created future:
[13:20:12.573] MultisessionFuture:
[13:20:12.573] Label: ‘future_lapply-10’
[13:20:12.573] Expression:
[13:20:12.573] {
[13:20:12.573]     do.call(function(...) {
[13:20:12.573]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.573]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.573]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.573]             on.exit(options(oopts), add = TRUE)
[13:20:12.573]         }
[13:20:12.573]         {
[13:20:12.573]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.573]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.573]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.573]             })
[13:20:12.573]         }
[13:20:12.573]     }, args = future.call.arguments)
[13:20:12.573] }
[13:20:12.573] Lazy evaluation: FALSE
[13:20:12.573] Asynchronous evaluation: TRUE
[13:20:12.573] Local evaluation: TRUE
[13:20:12.573] Environment: R_GlobalEnv
[13:20:12.573] Capture standard output: TRUE
[13:20:12.573] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.573] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.573] Packages: <none>
[13:20:12.573] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.573] Resolved: FALSE
[13:20:12.573] Value: <not collected>
[13:20:12.573] Conditions captured: <none>
[13:20:12.573] Early signaling: FALSE
[13:20:12.573] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.573] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.585] Chunk #10 of 10 ... DONE
[13:20:12.585] Launching 10 futures (chunks) ... DONE
[13:20:12.585] Resolving 10 futures (chunks) ...
[13:20:12.630]  - Number of value chunks collected: 10
[13:20:12.630] Resolving 10 futures (chunks) ... DONE
[13:20:12.630] Reducing values from 10 chunks ...
[13:20:12.630]  - Number of values collected after concatenation: 10
[13:20:12.630]  - Number of values expected: 10
[13:20:12.630] Reducing values from 10 chunks ... DONE
[13:20:12.630] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[13:20:12.634] future_lapply() ...
[13:20:12.638] Number of chunks: 5
[13:20:12.638] getGlobalsAndPackagesXApply() ...
[13:20:12.638]  - future.globals: TRUE
[13:20:12.639]  - globals found/used: [n=1] ‘FUN’
[13:20:12.640]  - needed namespaces: [n=0] 
[13:20:12.640] Finding globals ... DONE
[13:20:12.640]  - use_args: TRUE
[13:20:12.640]  - Getting '...' globals ...
[13:20:12.640]    - '...' content: [n=0] 
[13:20:12.640] List of 1
[13:20:12.640]  $ ...: list()
[13:20:12.640]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:12.640]  - attr(*, "where")=List of 1
[13:20:12.640]   ..$ ...:<environment: 0x560485fd3c38> 
[13:20:12.640]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:12.640]  - attr(*, "resolved")= logi TRUE
[13:20:12.640]  - attr(*, "total_size")= num NA
[13:20:12.643]  - Getting '...' globals ... DONE
[13:20:12.643] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:12.643] List of 2
[13:20:12.643]  $ ...future.FUN:function (x)  
[13:20:12.643]  $ ...          : list()
[13:20:12.643]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:12.643]  - attr(*, "where")=List of 2
[13:20:12.643]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:12.643]   ..$ ...          :<environment: 0x560485fd3c38> 
[13:20:12.643]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:12.643]  - attr(*, "resolved")= logi FALSE
[13:20:12.643]  - attr(*, "total_size")= num 1840
[13:20:12.646] Packages to be attached in all futures: [n=0] 
[13:20:12.646] getGlobalsAndPackagesXApply() ... DONE
[13:20:12.646] Number of futures (= number of chunks): 5
[13:20:12.646] Launching 5 futures (chunks) ...
[13:20:12.646] Chunk #1 of 5 ...
[13:20:12.646]  - Finding globals in 'X' for chunk #1 ...
[13:20:12.647]    + additional globals found: [n=0] 
[13:20:12.647]    + additional namespaces needed: [n=0] 
[13:20:12.647]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:12.647]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:20:12.647]  - seeds: <none>
[13:20:12.647]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.664] Created future:
[13:20:12.665] MultisessionFuture:
[13:20:12.665] Label: ‘future_lapply-1’
[13:20:12.665] Expression:
[13:20:12.665] {
[13:20:12.665]     do.call(function(...) {
[13:20:12.665]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.665]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.665]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.665]             on.exit(options(oopts), add = TRUE)
[13:20:12.665]         }
[13:20:12.665]         {
[13:20:12.665]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.665]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.665]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.665]             })
[13:20:12.665]         }
[13:20:12.665]     }, args = future.call.arguments)
[13:20:12.665] }
[13:20:12.665] Lazy evaluation: FALSE
[13:20:12.665] Asynchronous evaluation: TRUE
[13:20:12.665] Local evaluation: TRUE
[13:20:12.665] Environment: R_GlobalEnv
[13:20:12.665] Capture standard output: TRUE
[13:20:12.665] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.665] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.665] Packages: <none>
[13:20:12.665] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.665] Resolved: FALSE
[13:20:12.665] Value: <not collected>
[13:20:12.665] Conditions captured: <none>
[13:20:12.665] Early signaling: FALSE
[13:20:12.665] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.665] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.676] Chunk #1 of 5 ... DONE
[13:20:12.676] Chunk #2 of 5 ...
[13:20:12.676]  - Finding globals in 'X' for chunk #2 ...
[13:20:12.677]    + additional globals found: [n=0] 
[13:20:12.677]    + additional namespaces needed: [n=0] 
[13:20:12.677]  - Finding globals in 'X' for chunk #2 ... DONE
[13:20:12.677]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:20:12.677]  - seeds: <none>
[13:20:12.677]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.694] Created future:
[13:20:12.694] MultisessionFuture:
[13:20:12.694] Label: ‘future_lapply-2’
[13:20:12.694] Expression:
[13:20:12.694] {
[13:20:12.694]     do.call(function(...) {
[13:20:12.694]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.694]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.694]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.694]             on.exit(options(oopts), add = TRUE)
[13:20:12.694]         }
[13:20:12.694]         {
[13:20:12.694]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.694]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.694]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.694]             })
[13:20:12.694]         }
[13:20:12.694]     }, args = future.call.arguments)
[13:20:12.694] }
[13:20:12.694] Lazy evaluation: FALSE
[13:20:12.694] Asynchronous evaluation: TRUE
[13:20:12.694] Local evaluation: TRUE
[13:20:12.694] Environment: R_GlobalEnv
[13:20:12.694] Capture standard output: TRUE
[13:20:12.694] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.694] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.694] Packages: <none>
[13:20:12.694] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.694] Resolved: FALSE
[13:20:12.694] Value: <not collected>
[13:20:12.694] Conditions captured: <none>
[13:20:12.694] Early signaling: FALSE
[13:20:12.694] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.694] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.705] Chunk #2 of 5 ... DONE
[13:20:12.705] Chunk #3 of 5 ...
[13:20:12.705]  - Finding globals in 'X' for chunk #3 ...
[13:20:12.706]    + additional globals found: [n=0] 
[13:20:12.706]    + additional namespaces needed: [n=0] 
[13:20:12.706]  - Finding globals in 'X' for chunk #3 ... DONE
[13:20:12.706]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:20:12.706]  - seeds: <none>
[13:20:12.706]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.735] Created future:
[13:20:12.735] MultisessionFuture:
[13:20:12.735] Label: ‘future_lapply-3’
[13:20:12.735] Expression:
[13:20:12.735] {
[13:20:12.735]     do.call(function(...) {
[13:20:12.735]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.735]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.735]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.735]             on.exit(options(oopts), add = TRUE)
[13:20:12.735]         }
[13:20:12.735]         {
[13:20:12.735]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.735]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.735]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.735]             })
[13:20:12.735]         }
[13:20:12.735]     }, args = future.call.arguments)
[13:20:12.735] }
[13:20:12.735] Lazy evaluation: FALSE
[13:20:12.735] Asynchronous evaluation: TRUE
[13:20:12.735] Local evaluation: TRUE
[13:20:12.735] Environment: R_GlobalEnv
[13:20:12.735] Capture standard output: TRUE
[13:20:12.735] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.735] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.735] Packages: <none>
[13:20:12.735] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.735] Resolved: FALSE
[13:20:12.735] Value: <not collected>
[13:20:12.735] Conditions captured: <none>
[13:20:12.735] Early signaling: FALSE
[13:20:12.735] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.735] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.746] Chunk #3 of 5 ... DONE
[13:20:12.747] Chunk #4 of 5 ...
[13:20:12.747]  - Finding globals in 'X' for chunk #4 ...
[13:20:12.747]    + additional globals found: [n=0] 
[13:20:12.747]    + additional namespaces needed: [n=0] 
[13:20:12.747]  - Finding globals in 'X' for chunk #4 ... DONE
[13:20:12.747]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:20:12.747]  - seeds: <none>
[13:20:12.748]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.778] Created future:
[13:20:12.778] MultisessionFuture:
[13:20:12.778] Label: ‘future_lapply-4’
[13:20:12.778] Expression:
[13:20:12.778] {
[13:20:12.778]     do.call(function(...) {
[13:20:12.778]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.778]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.778]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.778]             on.exit(options(oopts), add = TRUE)
[13:20:12.778]         }
[13:20:12.778]         {
[13:20:12.778]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.778]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.778]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.778]             })
[13:20:12.778]         }
[13:20:12.778]     }, args = future.call.arguments)
[13:20:12.778] }
[13:20:12.778] Lazy evaluation: FALSE
[13:20:12.778] Asynchronous evaluation: TRUE
[13:20:12.778] Local evaluation: TRUE
[13:20:12.778] Environment: R_GlobalEnv
[13:20:12.778] Capture standard output: TRUE
[13:20:12.778] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.778] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.778] Packages: <none>
[13:20:12.778] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.778] Resolved: FALSE
[13:20:12.778] Value: <not collected>
[13:20:12.778] Conditions captured: <none>
[13:20:12.778] Early signaling: FALSE
[13:20:12.778] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.778] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.790] Chunk #4 of 5 ... DONE
[13:20:12.790] Chunk #5 of 5 ...
[13:20:12.790]  - Finding globals in 'X' for chunk #5 ...
[13:20:12.790]    + additional globals found: [n=0] 
[13:20:12.791]    + additional namespaces needed: [n=0] 
[13:20:12.791]  - Finding globals in 'X' for chunk #5 ... DONE
[13:20:12.791]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[13:20:12.791]  - seeds: <none>
[13:20:12.791]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.819] Created future:
[13:20:12.819] MultisessionFuture:
[13:20:12.819] Label: ‘future_lapply-5’
[13:20:12.819] Expression:
[13:20:12.819] {
[13:20:12.819]     do.call(function(...) {
[13:20:12.819]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.819]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.819]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.819]             on.exit(options(oopts), add = TRUE)
[13:20:12.819]         }
[13:20:12.819]         {
[13:20:12.819]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.819]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.819]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.819]             })
[13:20:12.819]         }
[13:20:12.819]     }, args = future.call.arguments)
[13:20:12.819] }
[13:20:12.819] Lazy evaluation: FALSE
[13:20:12.819] Asynchronous evaluation: TRUE
[13:20:12.819] Local evaluation: TRUE
[13:20:12.819] Environment: R_GlobalEnv
[13:20:12.819] Capture standard output: TRUE
[13:20:12.819] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.819] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.819] Packages: <none>
[13:20:12.819] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.819] Resolved: FALSE
[13:20:12.819] Value: <not collected>
[13:20:12.819] Conditions captured: <none>
[13:20:12.819] Early signaling: FALSE
[13:20:12.819] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.819] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.831] Chunk #5 of 5 ... DONE
[13:20:12.831] Launching 5 futures (chunks) ... DONE
[13:20:12.831] Resolving 5 futures (chunks) ...
[13:20:12.875]  - Number of value chunks collected: 5
[13:20:12.875] Resolving 5 futures (chunks) ... DONE
[13:20:12.876] Reducing values from 5 chunks ...
[13:20:12.876]  - Number of values collected after concatenation: 10
[13:20:12.876]  - Number of values expected: 10
[13:20:12.876] Reducing values from 5 chunks ... DONE
[13:20:12.876] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[13:20:12.880] future_lapply() ...
[13:20:12.883] Number of chunks: 2
[13:20:12.884] getGlobalsAndPackagesXApply() ...
[13:20:12.884]  - future.globals: TRUE
[13:20:12.885]  - globals found/used: [n=1] ‘FUN’
[13:20:12.886]  - needed namespaces: [n=0] 
[13:20:12.886] Finding globals ... DONE
[13:20:12.886]  - use_args: TRUE
[13:20:12.886]  - Getting '...' globals ...
[13:20:12.886]    - '...' content: [n=0] 
[13:20:12.886] List of 1
[13:20:12.886]  $ ...: list()
[13:20:12.886]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:12.886]  - attr(*, "where")=List of 1
[13:20:12.886]   ..$ ...:<environment: 0x560484ac38b8> 
[13:20:12.886]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:12.886]  - attr(*, "resolved")= logi TRUE
[13:20:12.886]  - attr(*, "total_size")= num NA
[13:20:12.889]  - Getting '...' globals ... DONE
[13:20:12.889] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:12.889] List of 2
[13:20:12.889]  $ ...future.FUN:function (x)  
[13:20:12.889]  $ ...          : list()
[13:20:12.889]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:12.889]  - attr(*, "where")=List of 2
[13:20:12.889]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:12.889]   ..$ ...          :<environment: 0x560484ac38b8> 
[13:20:12.889]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:12.889]  - attr(*, "resolved")= logi FALSE
[13:20:12.889]  - attr(*, "total_size")= num 1840
[13:20:12.892] Packages to be attached in all futures: [n=0] 
[13:20:12.892] getGlobalsAndPackagesXApply() ... DONE
[13:20:12.892] Number of futures (= number of chunks): 2
[13:20:12.892] Launching 2 futures (chunks) ...
[13:20:12.892] Chunk #1 of 2 ...
[13:20:12.892]  - Finding globals in 'X' for chunk #1 ...
[13:20:12.893]    + additional globals found: [n=0] 
[13:20:12.893]    + additional namespaces needed: [n=0] 
[13:20:12.893]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:12.893]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[13:20:12.893]  - seeds: <none>
[13:20:12.893]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.910] Created future:
[13:20:12.910] MultisessionFuture:
[13:20:12.910] Label: ‘future_lapply-1’
[13:20:12.910] Expression:
[13:20:12.910] {
[13:20:12.910]     do.call(function(...) {
[13:20:12.910]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.910]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.910]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.910]             on.exit(options(oopts), add = TRUE)
[13:20:12.910]         }
[13:20:12.910]         {
[13:20:12.910]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.910]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.910]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.910]             })
[13:20:12.910]         }
[13:20:12.910]     }, args = future.call.arguments)
[13:20:12.910] }
[13:20:12.910] Lazy evaluation: FALSE
[13:20:12.910] Asynchronous evaluation: TRUE
[13:20:12.910] Local evaluation: TRUE
[13:20:12.910] Environment: R_GlobalEnv
[13:20:12.910] Capture standard output: TRUE
[13:20:12.910] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.910] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.910] Packages: <none>
[13:20:12.910] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.910] Resolved: FALSE
[13:20:12.910] Value: <not collected>
[13:20:12.910] Conditions captured: <none>
[13:20:12.910] Early signaling: FALSE
[13:20:12.910] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.910] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.922] Chunk #1 of 2 ... DONE
[13:20:12.922] Chunk #2 of 2 ...
[13:20:12.922]  - Finding globals in 'X' for chunk #2 ...
[13:20:12.922]    + additional globals found: [n=0] 
[13:20:12.922]    + additional namespaces needed: [n=0] 
[13:20:12.922]  - Finding globals in 'X' for chunk #2 ... DONE
[13:20:12.922]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[13:20:12.923]  - seeds: <none>
[13:20:12.923]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:12.940] Created future:
[13:20:12.940] MultisessionFuture:
[13:20:12.940] Label: ‘future_lapply-2’
[13:20:12.940] Expression:
[13:20:12.940] {
[13:20:12.940]     do.call(function(...) {
[13:20:12.940]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:12.940]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:12.940]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:12.940]             on.exit(options(oopts), add = TRUE)
[13:20:12.940]         }
[13:20:12.940]         {
[13:20:12.940]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:12.940]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:12.940]                 ...future.FUN(...future.X_jj, ...)
[13:20:12.940]             })
[13:20:12.940]         }
[13:20:12.940]     }, args = future.call.arguments)
[13:20:12.940] }
[13:20:12.940] Lazy evaluation: FALSE
[13:20:12.940] Asynchronous evaluation: TRUE
[13:20:12.940] Local evaluation: TRUE
[13:20:12.940] Environment: R_GlobalEnv
[13:20:12.940] Capture standard output: TRUE
[13:20:12.940] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:12.940] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:12.940] Packages: <none>
[13:20:12.940] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:12.940] Resolved: FALSE
[13:20:12.940] Value: <not collected>
[13:20:12.940] Conditions captured: <none>
[13:20:12.940] Early signaling: FALSE
[13:20:12.940] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:12.940] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:12.951] Chunk #2 of 2 ... DONE
[13:20:12.952] Launching 2 futures (chunks) ... DONE
[13:20:12.952] Resolving 2 futures (chunks) ...
[13:20:12.985]  - Number of value chunks collected: 2
[13:20:12.985] Resolving 2 futures (chunks) ... DONE
[13:20:12.986] Reducing values from 2 chunks ...
[13:20:12.986]  - Number of values collected after concatenation: 10
[13:20:12.986]  - Number of values expected: 10
[13:20:12.986] Reducing values from 2 chunks ... DONE
[13:20:12.986] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[13:20:12.990] future_lapply() ...
[13:20:12.993] Number of chunks: 1
[13:20:12.994] getGlobalsAndPackagesXApply() ...
[13:20:12.994]  - future.globals: TRUE
[13:20:12.995]  - globals found/used: [n=1] ‘FUN’
[13:20:12.995]  - needed namespaces: [n=0] 
[13:20:12.996] Finding globals ... DONE
[13:20:12.996]  - use_args: TRUE
[13:20:12.996]  - Getting '...' globals ...
[13:20:12.996]    - '...' content: [n=0] 
[13:20:12.996] List of 1
[13:20:12.996]  $ ...: list()
[13:20:12.996]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:12.996]  - attr(*, "where")=List of 1
[13:20:12.996]   ..$ ...:<environment: 0x5604864a9cf8> 
[13:20:12.996]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:12.996]  - attr(*, "resolved")= logi TRUE
[13:20:12.996]  - attr(*, "total_size")= num NA
[13:20:12.999]  - Getting '...' globals ... DONE
[13:20:12.999] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:12.999] List of 2
[13:20:12.999]  $ ...future.FUN:function (x)  
[13:20:12.999]  $ ...          : list()
[13:20:12.999]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:12.999]  - attr(*, "where")=List of 2
[13:20:12.999]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:12.999]   ..$ ...          :<environment: 0x5604864a9cf8> 
[13:20:12.999]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:12.999]  - attr(*, "resolved")= logi FALSE
[13:20:12.999]  - attr(*, "total_size")= num 1840
[13:20:13.002] Packages to be attached in all futures: [n=0] 
[13:20:13.002] getGlobalsAndPackagesXApply() ... DONE
[13:20:13.002] Number of futures (= number of chunks): 1
[13:20:13.002] Launching 1 futures (chunks) ...
[13:20:13.002] Chunk #1 of 1 ...
[13:20:13.002]  - Finding globals in 'X' for chunk #1 ...
[13:20:13.002]    + additional globals found: [n=0] 
[13:20:13.003]    + additional namespaces needed: [n=0] 
[13:20:13.003]  - Finding globals in 'X' for chunk #1 ... DONE
[13:20:13.003]  - seeds: <none>
[13:20:13.003]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[13:20:13.021] Created future:
[13:20:13.021] MultisessionFuture:
[13:20:13.021] Label: ‘future_lapply-1’
[13:20:13.021] Expression:
[13:20:13.021] {
[13:20:13.021]     do.call(function(...) {
[13:20:13.021]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[13:20:13.021]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[13:20:13.021]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[13:20:13.021]             on.exit(options(oopts), add = TRUE)
[13:20:13.021]         }
[13:20:13.021]         {
[13:20:13.021]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[13:20:13.021]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[13:20:13.021]                 ...future.FUN(...future.X_jj, ...)
[13:20:13.021]             })
[13:20:13.021]         }
[13:20:13.021]     }, args = future.call.arguments)
[13:20:13.021] }
[13:20:13.021] Lazy evaluation: FALSE
[13:20:13.021] Asynchronous evaluation: TRUE
[13:20:13.021] Local evaluation: TRUE
[13:20:13.021] Environment: R_GlobalEnv
[13:20:13.021] Capture standard output: TRUE
[13:20:13.021] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[13:20:13.021] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[13:20:13.021] Packages: <none>
[13:20:13.021] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[13:20:13.021] Resolved: FALSE
[13:20:13.021] Value: <not collected>
[13:20:13.021] Conditions captured: <none>
[13:20:13.021] Early signaling: FALSE
[13:20:13.021] Owner process: 8b4ada2e-9310-5373-f43f-28c8706483b5
[13:20:13.021] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[13:20:13.032] Chunk #1 of 1 ... DONE
[13:20:13.033] Launching 1 futures (chunks) ... DONE
[13:20:13.033] Resolving 1 futures (chunks) ...
[13:20:13.075]  - Number of value chunks collected: 1
[13:20:13.075] Resolving 1 futures (chunks) ... DONE
[13:20:13.075] Reducing values from 1 chunks ...
[13:20:13.075]  - Number of values collected after concatenation: 10
[13:20:13.075]  - Number of values expected: 10
[13:20:13.076] Reducing values from 1 chunks ... DONE
[13:20:13.076] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[13:20:13.080] future_lapply() ...
[13:20:13.083] Number of chunks: 1
[13:20:13.083] getGlobalsAndPackagesXApply() ...
[13:20:13.083] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[13:20:13.084] future_lapply() ...
[13:20:13.087] Number of chunks: 1
[13:20:13.087] getGlobalsAndPackagesXApply() ...
[13:20:13.087]  - future.globals: <name-value list> with names ‘1’
[13:20:13.087] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[13:20:13.087] future_lapply() ...
[13:20:13.091] Number of chunks: 1
[13:20:13.091] getGlobalsAndPackagesXApply() ...
[13:20:13.091]  - future.globals: ‘...future.FUN’
[13:20:13.091]  - use_args: TRUE
[13:20:13.091] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[13:20:13.091] future_lapply() ...
[13:20:13.095] Number of chunks: 1
[13:20:13.095] getGlobalsAndPackagesXApply() ...
[13:20:13.095]  - future.globals: ‘...future.FUN’
[13:20:13.095]  - use_args: TRUE
[13:20:13.095] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[13:20:13.095] future_lapply() ...
[13:20:13.099] Number of chunks: 1
[13:20:13.099] getGlobalsAndPackagesXApply() ...
[13:20:13.099]  - future.globals: TRUE
[13:20:13.100]  - globals found/used: [n=1] ‘FUN’
[13:20:13.100]  - needed namespaces: [n=0] 
[13:20:13.101] Finding globals ... DONE
[13:20:13.101]  - use_args: TRUE
[13:20:13.101]  - Getting '...' globals ...
[13:20:13.101]    - '...' content: [n=0] 
[13:20:13.101] List of 1
[13:20:13.101]  $ ...: list()
[13:20:13.101]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:13.101]  - attr(*, "where")=List of 1
[13:20:13.101]   ..$ ...:<environment: 0x560487416e40> 
[13:20:13.101]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:13.101]  - attr(*, "resolved")= logi TRUE
[13:20:13.101]  - attr(*, "total_size")= num NA
[13:20:13.104]  - Getting '...' globals ... DONE
[13:20:13.104] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[13:20:13.104] List of 2
[13:20:13.104]  $ ...future.FUN:function (f)  
[13:20:13.104]  $ ...          : list()
[13:20:13.104]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[13:20:13.104]  - attr(*, "where")=List of 2
[13:20:13.104]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[13:20:13.104]   ..$ ...          :<environment: 0x560487416e40> 
[13:20:13.104]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[13:20:13.104]  - attr(*, "resolved")= logi FALSE
[13:20:13.104]  - attr(*, "total_size")= num 336
[13:20:13.109] Packages to be attached in all futures: [n=0] 
[13:20:13.109] getGlobalsAndPackagesXApply() ... DONE
[13:20:13.109] Number of futures (= number of chunks): 1
[13:20:13.109] Launching 1 futures (chunks) ...
[13:20:13.109] Chunk #1 of 1 ...
[13:20:13.109]  - Finding globals in 'X' for chunk #1 ...
[13:20:13.110]    + additional globals found: [n=1] ‘...future.elements_ii’
[13:20:13.110]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
