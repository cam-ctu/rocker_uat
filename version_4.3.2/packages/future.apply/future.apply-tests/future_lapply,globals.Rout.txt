
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[16:01:51.070] plan(): Setting new future strategy stack:
[16:01:51.070] List of future strategies:
[16:01:51.070] 1. sequential:
[16:01:51.070]    - args: function (..., envir = parent.frame())
[16:01:51.070]    - tweaked: FALSE
[16:01:51.070]    - call: future::plan("sequential")
[16:01:51.085] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[16:01:51.638] future_lapply() ...
[16:01:51.643] Number of chunks: 1
[16:01:51.644] getGlobalsAndPackagesXApply() ...
[16:01:51.644]  - future.globals: FALSE
[16:01:51.646]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:01:51.647]  - needed namespaces: [n=0] 
[16:01:51.647] Finding globals ... DONE
[16:01:51.647]  - use_args: TRUE
[16:01:51.647]  - Getting '...' globals ...
[16:01:51.648]    - '...' content: [n=0] 
[16:01:51.648] List of 1
[16:01:51.648]  $ ...: list()
[16:01:51.648]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.648]  - attr(*, "where")=List of 1
[16:01:51.648]   ..$ ...:<environment: 0x55d6ccab9a68> 
[16:01:51.648]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:51.648]  - attr(*, "resolved")= logi TRUE
[16:01:51.648]  - attr(*, "total_size")= num NA
[16:01:51.651]  - Getting '...' globals ... DONE
[16:01:51.651] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:01:51.651] List of 3
[16:01:51.651]  $ ...future.FUN        :function (x)  
[16:01:51.651]  $ future.call.arguments: list()
[16:01:51.651]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.651]  $ ...                  : list()
[16:01:51.651]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.651]  - attr(*, "where")=List of 3
[16:01:51.651]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:01:51.651]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:01:51.651]   ..$ ...                  :<environment: 0x55d6ccab9a68> 
[16:01:51.651]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:51.651]  - attr(*, "resolved")= logi FALSE
[16:01:51.651]  - attr(*, "total_size")= num 3824
[16:01:51.655] Packages to be attached in all futures: [n=1] ‘utils’
[16:01:51.655] getGlobalsAndPackagesXApply() ... DONE
[16:01:51.656] Number of futures (= number of chunks): 1
[16:01:51.656] Launching 1 futures (chunks) ...
[16:01:51.656] Chunk #1 of 1 ...
[16:01:51.656]  - seeds: <none>
[16:01:51.656]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:51.667] Created future:
[16:01:51.667] ClusterFuture:
[16:01:51.667] Label: ‘future_lapply-1’
[16:01:51.667] Expression:
[16:01:51.667] {
[16:01:51.667]     do.call(function(...) {
[16:01:51.667]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:51.667]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:51.667]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:51.667]             on.exit(options(oopts), add = TRUE)
[16:01:51.667]         }
[16:01:51.667]         {
[16:01:51.667]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:51.667]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:51.667]                 ...future.FUN(...future.X_jj, ...)
[16:01:51.667]             })
[16:01:51.667]         }
[16:01:51.667]     }, args = future.call.arguments)
[16:01:51.667] }
[16:01:51.667] Lazy evaluation: FALSE
[16:01:51.667] Asynchronous evaluation: TRUE
[16:01:51.667] Local evaluation: TRUE
[16:01:51.667] Environment: R_GlobalEnv
[16:01:51.667] Capture standard output: TRUE
[16:01:51.667] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:51.667] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:51.667] Packages: 1 packages (‘utils’)
[16:01:51.667] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:51.667] Resolved: FALSE
[16:01:51.667] Value: <not collected>
[16:01:51.667] Conditions captured: <none>
[16:01:51.667] Early signaling: FALSE
[16:01:51.667] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:51.667] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:51.680] Chunk #1 of 1 ... DONE
[16:01:51.680] Launching 1 futures (chunks) ... DONE
[16:01:51.680] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[16:01:51.724] future_lapply() ...
[16:01:51.725] Number of chunks: 1
[16:01:51.725] getGlobalsAndPackagesXApply() ...
[16:01:51.725]  - future.globals: TRUE
[16:01:51.728]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[16:01:51.729]  - needed namespaces: [n=1] ‘stats’
[16:01:51.729] Finding globals ... DONE
[16:01:51.729]  - use_args: TRUE
[16:01:51.729]  - Getting '...' globals ...
[16:01:51.729]    - '...' content: [n=0] 
[16:01:51.729] List of 1
[16:01:51.729]  $ ...: list()
[16:01:51.729]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.729]  - attr(*, "where")=List of 1
[16:01:51.729]   ..$ ...:<environment: 0x55d6cfee2758> 
[16:01:51.729]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:51.729]  - attr(*, "resolved")= logi TRUE
[16:01:51.729]  - attr(*, "total_size")= num NA
[16:01:51.733]  - Getting '...' globals ... DONE
[16:01:51.733] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[16:01:51.733] List of 4
[16:01:51.733]  $ ...future.FUN:function (x)  
[16:01:51.733]  $ a            : num 1
[16:01:51.733]  $ b            : num 2
[16:01:51.733]  $ ...          : list()
[16:01:51.733]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.733]  - attr(*, "where")=List of 4
[16:01:51.733]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:51.733]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:51.733]   ..$ b            :<environment: R_EmptyEnv> 
[16:01:51.733]   ..$ ...          :<environment: 0x55d6cfee2758> 
[16:01:51.733]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:51.733]  - attr(*, "resolved")= logi FALSE
[16:01:51.733]  - attr(*, "total_size")= num 3936
[16:01:51.738] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[16:01:51.741] getGlobalsAndPackagesXApply() ... DONE
[16:01:51.741] Number of futures (= number of chunks): 1
[16:01:51.741] Launching 1 futures (chunks) ...
[16:01:51.741] Chunk #1 of 1 ...
[16:01:51.741]  - Finding globals in 'X' for chunk #1 ...
[16:01:51.742]    + additional globals found: [n=0] 
[16:01:51.742]    + additional namespaces needed: [n=0] 
[16:01:51.742]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:51.742]  - seeds: <none>
[16:01:51.742]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:51.751] Created future:
[16:01:51.751] ClusterFuture:
[16:01:51.751] Label: ‘future_lapply-1’
[16:01:51.751] Expression:
[16:01:51.751] {
[16:01:51.751]     do.call(function(...) {
[16:01:51.751]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:51.751]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:51.751]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:51.751]             on.exit(options(oopts), add = TRUE)
[16:01:51.751]         }
[16:01:51.751]         {
[16:01:51.751]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:51.751]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:51.751]                 ...future.FUN(...future.X_jj, ...)
[16:01:51.751]             })
[16:01:51.751]         }
[16:01:51.751]     }, args = future.call.arguments)
[16:01:51.751] }
[16:01:51.751] Lazy evaluation: FALSE
[16:01:51.751] Asynchronous evaluation: TRUE
[16:01:51.751] Local evaluation: TRUE
[16:01:51.751] Environment: R_GlobalEnv
[16:01:51.751] Capture standard output: TRUE
[16:01:51.751] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:51.751] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:01:51.751] Packages: 2 packages (‘stats’, ‘utils’)
[16:01:51.751] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:51.751] Resolved: FALSE
[16:01:51.751] Value: <not collected>
[16:01:51.751] Conditions captured: <none>
[16:01:51.751] Early signaling: FALSE
[16:01:51.751] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:51.751] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:51.763] Chunk #1 of 1 ... DONE
[16:01:51.763] Launching 1 futures (chunks) ... DONE
[16:01:51.763] Resolving 1 futures (chunks) ...
[16:01:51.806]  - Number of value chunks collected: 1
[16:01:51.806] Resolving 1 futures (chunks) ... DONE
[16:01:51.806] Reducing values from 1 chunks ...
[16:01:51.806]  - Number of values collected after concatenation: 1
[16:01:51.806]  - Number of values expected: 1
[16:01:51.806] Reducing values from 1 chunks ... DONE
[16:01:51.806] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[16:01:51.807] future_lapply() ...
[16:01:51.807] Number of chunks: 1
[16:01:51.807] getGlobalsAndPackagesXApply() ...
[16:01:51.808]  - future.globals: ‘a’, ‘b’
[16:01:51.808]  - use_args: TRUE
[16:01:51.808] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[16:01:51.808] List of 4
[16:01:51.808]  $ a            : num 1
[16:01:51.808]  $ b            : num 2
[16:01:51.808]  $ ...future.FUN:function (x)  
[16:01:51.808]  $ ...          : list()
[16:01:51.808]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.808]  - attr(*, "where")=List of 4
[16:01:51.808]   ..$ a            :<environment: R_GlobalEnv> 
[16:01:51.808]   ..$ b            :<environment: R_GlobalEnv> 
[16:01:51.808]   ..$ ...future.FUN:<environment: 0x55d6cee91398> 
[16:01:51.808]   ..$ ...          :<environment: 0x55d6cee91398> 
[16:01:51.808]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:51.808]  - attr(*, "resolved")= logi FALSE
[16:01:51.808]  - attr(*, "total_size")= num NA
[16:01:51.812] Packages to be attached in all futures: [n=1] ‘utils’
[16:01:51.812] getGlobalsAndPackagesXApply() ... DONE
[16:01:51.812] Number of futures (= number of chunks): 1
[16:01:51.812] Launching 1 futures (chunks) ...
[16:01:51.812] Chunk #1 of 1 ...
[16:01:51.813]  - seeds: <none>
[16:01:51.813]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:51.823] Created future:
[16:01:51.823] ClusterFuture:
[16:01:51.823] Label: ‘future_lapply-1’
[16:01:51.823] Expression:
[16:01:51.823] {
[16:01:51.823]     do.call(function(...) {
[16:01:51.823]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:51.823]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:51.823]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:51.823]             on.exit(options(oopts), add = TRUE)
[16:01:51.823]         }
[16:01:51.823]         {
[16:01:51.823]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:51.823]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:51.823]                 ...future.FUN(...future.X_jj, ...)
[16:01:51.823]             })
[16:01:51.823]         }
[16:01:51.823]     }, args = future.call.arguments)
[16:01:51.823] }
[16:01:51.823] Lazy evaluation: FALSE
[16:01:51.823] Asynchronous evaluation: TRUE
[16:01:51.823] Local evaluation: TRUE
[16:01:51.823] Environment: R_GlobalEnv
[16:01:51.823] Capture standard output: TRUE
[16:01:51.823] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:51.823] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:01:51.823] Packages: 1 packages (‘utils’)
[16:01:51.823] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:51.823] Resolved: FALSE
[16:01:51.823] Value: <not collected>
[16:01:51.823] Conditions captured: <none>
[16:01:51.823] Early signaling: FALSE
[16:01:51.823] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:51.823] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:51.834] Chunk #1 of 1 ... DONE
[16:01:51.834] Launching 1 futures (chunks) ... DONE
[16:01:51.835] Resolving 1 futures (chunks) ...
[16:01:51.865]  - Number of value chunks collected: 1
[16:01:51.865] Resolving 1 futures (chunks) ... DONE
[16:01:51.866] Reducing values from 1 chunks ...
[16:01:51.866]  - Number of values collected after concatenation: 1
[16:01:51.866]  - Number of values expected: 1
[16:01:51.866] Reducing values from 1 chunks ... DONE
[16:01:51.866] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[16:01:51.866] future_lapply() ...
[16:01:51.867] Number of chunks: 1
[16:01:51.867] getGlobalsAndPackagesXApply() ...
[16:01:51.868]  - future.globals: <name-value list> with names ‘2’, ‘3’
[16:01:51.868]  - use_args: TRUE
[16:01:51.868]  - Getting '...' globals ...
[16:01:51.868]    - '...' content: [n=0] 
[16:01:51.868] List of 1
[16:01:51.868]  $ ...: list()
[16:01:51.868]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.868]  - attr(*, "where")=List of 1
[16:01:51.868]   ..$ ...:<environment: 0x55d6cd0f9510> 
[16:01:51.868]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:51.868]  - attr(*, "resolved")= logi TRUE
[16:01:51.868]  - attr(*, "total_size")= num NA
[16:01:51.871]  - Getting '...' globals ... DONE
[16:01:51.871] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[16:01:51.871] List of 4
[16:01:51.871]  $ a            : num 2
[16:01:51.871]  $ b            : num 3
[16:01:51.871]  $ ...future.FUN:function (x)  
[16:01:51.871]  $ ...          : list()
[16:01:51.871]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.871]  - attr(*, "where")=List of 4
[16:01:51.871]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:51.871]   ..$ b            :<environment: R_EmptyEnv> 
[16:01:51.871]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:01:51.871]   ..$ ...          :<environment: 0x55d6cd0f9510> 
[16:01:51.871]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:51.871]  - attr(*, "resolved")= logi FALSE
[16:01:51.871]  - attr(*, "total_size")= num NA
[16:01:51.875] Packages to be attached in all futures: [n=1] ‘utils’
[16:01:51.875] getGlobalsAndPackagesXApply() ... DONE
[16:01:51.875] Number of futures (= number of chunks): 1
[16:01:51.876] Launching 1 futures (chunks) ...
[16:01:51.876] Chunk #1 of 1 ...
[16:01:51.876]  - seeds: <none>
[16:01:51.876]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:51.886] Created future:
[16:01:51.886] ClusterFuture:
[16:01:51.886] Label: ‘future_lapply-1’
[16:01:51.886] Expression:
[16:01:51.886] {
[16:01:51.886]     do.call(function(...) {
[16:01:51.886]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:51.886]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:51.886]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:51.886]             on.exit(options(oopts), add = TRUE)
[16:01:51.886]         }
[16:01:51.886]         {
[16:01:51.886]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:51.886]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:51.886]                 ...future.FUN(...future.X_jj, ...)
[16:01:51.886]             })
[16:01:51.886]         }
[16:01:51.886]     }, args = future.call.arguments)
[16:01:51.886] }
[16:01:51.886] Lazy evaluation: FALSE
[16:01:51.886] Asynchronous evaluation: TRUE
[16:01:51.886] Local evaluation: TRUE
[16:01:51.886] Environment: R_GlobalEnv
[16:01:51.886] Capture standard output: TRUE
[16:01:51.886] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:51.886] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:01:51.886] Packages: 1 packages (‘utils’)
[16:01:51.886] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:51.886] Resolved: FALSE
[16:01:51.886] Value: <not collected>
[16:01:51.886] Conditions captured: <none>
[16:01:51.886] Early signaling: FALSE
[16:01:51.886] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:51.886] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:51.898] Chunk #1 of 1 ... DONE
[16:01:51.898] Launching 1 futures (chunks) ... DONE
[16:01:51.898] Resolving 1 futures (chunks) ...
[16:01:51.929]  - Number of value chunks collected: 1
[16:01:51.929] Resolving 1 futures (chunks) ... DONE
[16:01:51.929] Reducing values from 1 chunks ...
[16:01:51.930]  - Number of values collected after concatenation: 1
[16:01:51.930]  - Number of values expected: 1
[16:01:51.930] Reducing values from 1 chunks ... DONE
[16:01:51.930] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[16:01:51.930] future_lapply() ...
[16:01:51.931] Number of chunks: 1
[16:01:51.931] getGlobalsAndPackagesXApply() ...
[16:01:51.931]  - future.globals: FALSE
[16:01:51.932]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[16:01:51.932]  - needed namespaces: [n=0] 
[16:01:51.932] Finding globals ... DONE
[16:01:51.932]  - use_args: TRUE
[16:01:51.932]  - Getting '...' globals ...
[16:01:51.933]    - '...' content: [n=0] 
[16:01:51.933] List of 1
[16:01:51.933]  $ ...: list()
[16:01:51.933]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.933]  - attr(*, "where")=List of 1
[16:01:51.933]   ..$ ...:<environment: 0x55d6cfeb6768> 
[16:01:51.933]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:51.933]  - attr(*, "resolved")= logi TRUE
[16:01:51.933]  - attr(*, "total_size")= num NA
[16:01:51.935]  - Getting '...' globals ... DONE
[16:01:51.936] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:01:51.936] List of 4
[16:01:51.936]  $ d                    : num 42
[16:01:51.936]  $ ...future.FUN        :function (x)  
[16:01:51.936]  $ future.call.arguments: list()
[16:01:51.936]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.936]  $ ...                  : list()
[16:01:51.936]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.936]  - attr(*, "where")=List of 4
[16:01:51.936]   ..$ d                    :<environment: R_EmptyEnv> 
[16:01:51.936]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:01:51.936]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:01:51.936]   ..$ ...                  :<environment: 0x55d6cfeb6768> 
[16:01:51.936]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:51.936]  - attr(*, "resolved")= logi FALSE
[16:01:51.936]  - attr(*, "total_size")= num 784
[16:01:51.939] Packages to be attached in all futures: [n=0] 
[16:01:51.940] getGlobalsAndPackagesXApply() ... DONE
[16:01:51.940] Number of futures (= number of chunks): 1
[16:01:51.940] Launching 1 futures (chunks) ...
[16:01:51.940] Chunk #1 of 1 ...
[16:01:51.940]  - seeds: <none>
[16:01:51.940]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:51.951] Created future:
[16:01:51.951] ClusterFuture:
[16:01:51.951] Label: ‘future_lapply-1’
[16:01:51.951] Expression:
[16:01:51.951] {
[16:01:51.951]     do.call(function(...) {
[16:01:51.951]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:51.951]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:51.951]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:51.951]             on.exit(options(oopts), add = TRUE)
[16:01:51.951]         }
[16:01:51.951]         {
[16:01:51.951]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:51.951]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:51.951]                 ...future.FUN(...future.X_jj, ...)
[16:01:51.951]             })
[16:01:51.951]         }
[16:01:51.951]     }, args = future.call.arguments)
[16:01:51.951] }
[16:01:51.951] Lazy evaluation: FALSE
[16:01:51.951] Asynchronous evaluation: TRUE
[16:01:51.951] Local evaluation: TRUE
[16:01:51.951] Environment: R_GlobalEnv
[16:01:51.951] Capture standard output: TRUE
[16:01:51.951] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:51.951] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:01:51.951] Packages: <none>
[16:01:51.951] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:51.951] Resolved: FALSE
[16:01:51.951] Value: <not collected>
[16:01:51.951] Conditions captured: <none>
[16:01:51.951] Early signaling: FALSE
[16:01:51.951] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:51.951] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:51.963] Chunk #1 of 1 ... DONE
[16:01:51.963] Launching 1 futures (chunks) ... DONE
[16:01:51.963] Resolving 1 futures (chunks) ...
[16:01:51.994]  - Number of value chunks collected: 1
[16:01:51.994] Resolving 1 futures (chunks) ... DONE
[16:01:51.994] Reducing values from 1 chunks ...
[16:01:51.994]  - Number of values collected after concatenation: 2
[16:01:51.994]  - Number of values expected: 2
[16:01:51.995] Reducing values from 1 chunks ... DONE
[16:01:51.995] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[16:01:51.995] future_lapply() ...
[16:01:51.996] Number of chunks: 1
[16:01:51.996] getGlobalsAndPackagesXApply() ...
[16:01:51.996]  - future.globals: TRUE
[16:01:51.997]  - globals found/used: [n=1] ‘FUN’
[16:01:51.998]  - needed namespaces: [n=0] 
[16:01:51.998] Finding globals ... DONE
[16:01:51.998]  - use_args: TRUE
[16:01:51.998]  - Getting '...' globals ...
[16:01:51.998]    - '...' content: [n=0] 
[16:01:51.998] List of 1
[16:01:51.998]  $ ...: list()
[16:01:51.998]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:51.998]  - attr(*, "where")=List of 1
[16:01:51.998]   ..$ ...:<environment: 0x55d6cf0b9308> 
[16:01:51.998]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:51.998]  - attr(*, "resolved")= logi TRUE
[16:01:51.998]  - attr(*, "total_size")= num NA
[16:01:52.001]  - Getting '...' globals ... DONE
[16:01:52.001] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.001] List of 2
[16:01:52.001]  $ ...future.FUN:function (x)  
[16:01:52.001]  $ ...          : list()
[16:01:52.001]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.001]  - attr(*, "where")=List of 2
[16:01:52.001]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.001]   ..$ ...          :<environment: 0x55d6cf0b9308> 
[16:01:52.001]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.001]  - attr(*, "resolved")= logi FALSE
[16:01:52.001]  - attr(*, "total_size")= num 728
[16:01:52.004] Packages to be attached in all futures: [n=0] 
[16:01:52.004] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.004] Number of futures (= number of chunks): 1
[16:01:52.004] Launching 1 futures (chunks) ...
[16:01:52.004] Chunk #1 of 1 ...
[16:01:52.004]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.005]    + additional globals found: [n=0] 
[16:01:52.005]    + additional namespaces needed: [n=0] 
[16:01:52.005]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.005]  - seeds: <none>
[16:01:52.005]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.014] Created future:
[16:01:52.014] ClusterFuture:
[16:01:52.014] Label: ‘future_lapply-1’
[16:01:52.014] Expression:
[16:01:52.014] {
[16:01:52.014]     do.call(function(...) {
[16:01:52.014]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.014]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.014]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.014]             on.exit(options(oopts), add = TRUE)
[16:01:52.014]         }
[16:01:52.014]         {
[16:01:52.014]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.014]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.014]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.014]             })
[16:01:52.014]         }
[16:01:52.014]     }, args = future.call.arguments)
[16:01:52.014] }
[16:01:52.014] Lazy evaluation: FALSE
[16:01:52.014] Asynchronous evaluation: TRUE
[16:01:52.014] Local evaluation: TRUE
[16:01:52.014] Environment: R_GlobalEnv
[16:01:52.014] Capture standard output: TRUE
[16:01:52.014] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.014] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.014] Packages: <none>
[16:01:52.014] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.014] Resolved: FALSE
[16:01:52.014] Value: <not collected>
[16:01:52.014] Conditions captured: <none>
[16:01:52.014] Early signaling: FALSE
[16:01:52.014] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.014] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.026] Chunk #1 of 1 ... DONE
[16:01:52.026] Launching 1 futures (chunks) ... DONE
[16:01:52.026] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[16:01:52.109] future_lapply() ...
[16:01:52.110] Number of chunks: 1
[16:01:52.110] getGlobalsAndPackagesXApply() ...
[16:01:52.110]  - future.globals: TRUE
[16:01:52.116]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:01:52.117]  - needed namespaces: [n=0] 
[16:01:52.117] Finding globals ... DONE
[16:01:52.117]  - use_args: TRUE
[16:01:52.117]  - Getting '...' globals ...
[16:01:52.117]    - '...' content: [n=0] 
[16:01:52.118] List of 1
[16:01:52.118]  $ ...: list()
[16:01:52.118]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.118]  - attr(*, "where")=List of 1
[16:01:52.118]   ..$ ...:<environment: 0x55d6cfebd958> 
[16:01:52.118]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.118]  - attr(*, "resolved")= logi TRUE
[16:01:52.118]  - attr(*, "total_size")= num NA
[16:01:52.120]  - Getting '...' globals ... DONE
[16:01:52.121] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:01:52.121] List of 6
[16:01:52.121]  $ ...future.FUN:function (i)  
[16:01:52.121]  $ caller       :function (a, b, FUN = call_my_add)  
[16:01:52.121]  $ args         :List of 1
[16:01:52.121]   ..$ FUN:function (a, b)  
[16:01:52.121]  $ call_my_add  :function (a, b)  
[16:01:52.121]  $ my_add       :function (a, b)  
[16:01:52.121]  $ ...          : list()
[16:01:52.121]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.121]  - attr(*, "where")=List of 6
[16:01:52.121]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.121]   ..$ caller       :<environment: R_EmptyEnv> 
[16:01:52.121]   ..$ args         :<environment: R_EmptyEnv> 
[16:01:52.121]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:01:52.121]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:01:52.121]   ..$ ...          :<environment: 0x55d6cfebd958> 
[16:01:52.121]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.121]  - attr(*, "resolved")= logi FALSE
[16:01:52.121]  - attr(*, "total_size")= num 6664
[16:01:52.127] Packages to be attached in all futures: [n=0] 
[16:01:52.127] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.127] Number of futures (= number of chunks): 1
[16:01:52.127] Launching 1 futures (chunks) ...
[16:01:52.127] Chunk #1 of 1 ...
[16:01:52.127]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.128]    + additional globals found: [n=0] 
[16:01:52.128]    + additional namespaces needed: [n=0] 
[16:01:52.128]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.128]  - seeds: <none>
[16:01:52.128]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.134] Created future:
[16:01:52.134] SequentialFuture:
[16:01:52.134] Label: ‘future_lapply-1’
[16:01:52.134] Expression:
[16:01:52.134] {
[16:01:52.134]     do.call(function(...) {
[16:01:52.134]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.134]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.134]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.134]             on.exit(options(oopts), add = TRUE)
[16:01:52.134]         }
[16:01:52.134]         {
[16:01:52.134]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.134]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.134]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.134]             })
[16:01:52.134]         }
[16:01:52.134]     }, args = future.call.arguments)
[16:01:52.134] }
[16:01:52.134] Lazy evaluation: FALSE
[16:01:52.134] Asynchronous evaluation: FALSE
[16:01:52.134] Local evaluation: TRUE
[16:01:52.134] Environment: 0x55d6cfeb8068
[16:01:52.134] Capture standard output: TRUE
[16:01:52.134] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.134] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:01:52.134] Packages: <none>
[16:01:52.134] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.134] Resolved: TRUE
[16:01:52.134] Value: 168 bytes of class ‘list’
[16:01:52.134] Early signaling: FALSE
[16:01:52.134] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.134] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.135] Chunk #1 of 1 ... DONE
[16:01:52.135] Launching 1 futures (chunks) ... DONE
[16:01:52.135] Resolving 1 futures (chunks) ...
[16:01:52.136]  - Number of value chunks collected: 1
[16:01:52.136] Resolving 1 futures (chunks) ... DONE
[16:01:52.136] Reducing values from 1 chunks ...
[16:01:52.136]  - Number of values collected after concatenation: 3
[16:01:52.136]  - Number of values expected: 3
[16:01:52.136] Reducing values from 1 chunks ... DONE
[16:01:52.137] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:01:52.137] future_lapply() ...
[16:01:52.140] Number of chunks: 1
[16:01:52.140] getGlobalsAndPackagesXApply() ...
[16:01:52.141]  - future.globals: TRUE
[16:01:52.143]  - globals found/used: [n=1] ‘FUN’
[16:01:52.143]  - needed namespaces: [n=0] 
[16:01:52.143] Finding globals ... DONE
[16:01:52.143]  - use_args: TRUE
[16:01:52.144]  - Getting '...' globals ...
[16:01:52.144]    - '...' content: [n=1] ‘what’
[16:01:52.144] List of 1
[16:01:52.144]  $ ...:List of 1
[16:01:52.144]   ..$ what:function (x)  
[16:01:52.144]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.144]  - attr(*, "where")=List of 1
[16:01:52.144]   ..$ ...:<environment: 0x55d6ceaa0f38> 
[16:01:52.144]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.144]  - attr(*, "resolved")= logi TRUE
[16:01:52.144]  - attr(*, "total_size")= num NA
[16:01:52.147]  - Getting '...' globals ... DONE
[16:01:52.147] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.147] List of 2
[16:01:52.147]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:01:52.147]  $ ...          :List of 1
[16:01:52.147]   ..$ what:function (x)  
[16:01:52.147]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.147]  - attr(*, "where")=List of 2
[16:01:52.147]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.147]   ..$ ...          :<environment: 0x55d6ceaa0f38> 
[16:01:52.147]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.147]  - attr(*, "resolved")= logi FALSE
[16:01:52.147]  - attr(*, "total_size")= num 12192
[16:01:52.150] Packages to be attached in all futures: [n=0] 
[16:01:52.150] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.150] Number of futures (= number of chunks): 1
[16:01:52.150] Launching 1 futures (chunks) ...
[16:01:52.150] Chunk #1 of 1 ...
[16:01:52.151]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.151]    + additional globals found: [n=0] 
[16:01:52.151]    + additional namespaces needed: [n=0] 
[16:01:52.151]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.151]  - seeds: <none>
[16:01:52.151]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.154] Created future:
[16:01:52.154] SequentialFuture:
[16:01:52.154] Label: ‘future_lapply-1’
[16:01:52.154] Expression:
[16:01:52.154] {
[16:01:52.154]     do.call(function(...) {
[16:01:52.154]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.154]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.154]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.154]             on.exit(options(oopts), add = TRUE)
[16:01:52.154]         }
[16:01:52.154]         {
[16:01:52.154]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.154]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.154]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.154]             })
[16:01:52.154]         }
[16:01:52.154]     }, args = future.call.arguments)
[16:01:52.154] }
[16:01:52.154] Lazy evaluation: FALSE
[16:01:52.154] Asynchronous evaluation: FALSE
[16:01:52.154] Local evaluation: TRUE
[16:01:52.154] Environment: R_GlobalEnv
[16:01:52.154] Capture standard output: TRUE
[16:01:52.154] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.154] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.154] Packages: <none>
[16:01:52.154] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.154] Resolved: TRUE
[16:01:52.154] Value: 56 bytes of class ‘list’
[16:01:52.154] Early signaling: FALSE
[16:01:52.154] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.154] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.155] Chunk #1 of 1 ... DONE
[16:01:52.155] Launching 1 futures (chunks) ... DONE
[16:01:52.155] Resolving 1 futures (chunks) ...
[16:01:52.155]  - Number of value chunks collected: 1
[16:01:52.155] Resolving 1 futures (chunks) ... DONE
[16:01:52.156] Reducing values from 1 chunks ...
[16:01:52.156]  - Number of values collected after concatenation: 1
[16:01:52.156]  - Number of values expected: 1
[16:01:52.156] Reducing values from 1 chunks ... DONE
[16:01:52.156] future_lapply() ... DONE
[16:01:52.156] future_lapply() ...
[16:01:52.157] Number of chunks: 1
[16:01:52.157] getGlobalsAndPackagesXApply() ...
[16:01:52.157]  - future.globals: TRUE
[16:01:52.160]  - globals found/used: [n=1] ‘FUN’
[16:01:52.160]  - needed namespaces: [n=0] 
[16:01:52.160] Finding globals ... DONE
[16:01:52.160]  - use_args: TRUE
[16:01:52.160]  - Getting '...' globals ...
[16:01:52.161]    - '...' content: [n=1] ‘what’
[16:01:52.161] List of 1
[16:01:52.161]  $ ...:List of 1
[16:01:52.161]   ..$ what:function (...)  
[16:01:52.161]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.161]  - attr(*, "where")=List of 1
[16:01:52.161]   ..$ ...:<environment: 0x55d6cfbd9a28> 
[16:01:52.161]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.161]  - attr(*, "resolved")= logi TRUE
[16:01:52.161]  - attr(*, "total_size")= num NA
[16:01:52.164]  - Getting '...' globals ... DONE
[16:01:52.164] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.164] List of 2
[16:01:52.164]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:01:52.164]  $ ...          :List of 1
[16:01:52.164]   ..$ what:function (...)  
[16:01:52.164]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.164]  - attr(*, "where")=List of 2
[16:01:52.164]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.164]   ..$ ...          :<environment: 0x55d6cfbd9a28> 
[16:01:52.164]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.164]  - attr(*, "resolved")= logi FALSE
[16:01:52.164]  - attr(*, "total_size")= num 12584
[16:01:52.167] Packages to be attached in all futures: [n=0] 
[16:01:52.167] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.167] Number of futures (= number of chunks): 1
[16:01:52.167] Launching 1 futures (chunks) ...
[16:01:52.167] Chunk #1 of 1 ...
[16:01:52.167]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.168]    + additional globals found: [n=0] 
[16:01:52.168]    + additional namespaces needed: [n=0] 
[16:01:52.168]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.168]  - seeds: <none>
[16:01:52.168]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.173] Created future:
[16:01:52.173] SequentialFuture:
[16:01:52.173] Label: ‘future_lapply-1’
[16:01:52.173] Expression:
[16:01:52.173] {
[16:01:52.173]     do.call(function(...) {
[16:01:52.173]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.173]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.173]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.173]             on.exit(options(oopts), add = TRUE)
[16:01:52.173]         }
[16:01:52.173]         {
[16:01:52.173]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.173]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.173]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.173]             })
[16:01:52.173]         }
[16:01:52.173]     }, args = future.call.arguments)
[16:01:52.173] }
[16:01:52.173] Lazy evaluation: FALSE
[16:01:52.173] Asynchronous evaluation: FALSE
[16:01:52.173] Local evaluation: TRUE
[16:01:52.173] Environment: R_GlobalEnv
[16:01:52.173] Capture standard output: TRUE
[16:01:52.173] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.173] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.173] Packages: <none>
[16:01:52.173] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.173] Resolved: TRUE
[16:01:52.173] Value: 56 bytes of class ‘list’
[16:01:52.173] Early signaling: FALSE
[16:01:52.173] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.173] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.174] Chunk #1 of 1 ... DONE
[16:01:52.174] Launching 1 futures (chunks) ... DONE
[16:01:52.174] Resolving 1 futures (chunks) ...
[16:01:52.174]  - Number of value chunks collected: 1
[16:01:52.174] Resolving 1 futures (chunks) ... DONE
[16:01:52.175] Reducing values from 1 chunks ...
[16:01:52.175]  - Number of values collected after concatenation: 1
[16:01:52.175]  - Number of values expected: 1
[16:01:52.175] Reducing values from 1 chunks ... DONE
[16:01:52.175] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:01:52.175] future_lapply() ...
[16:01:52.176] Number of chunks: 1
[16:01:52.176] getGlobalsAndPackagesXApply() ...
[16:01:52.176]  - future.globals: TRUE
[16:01:52.177]  - globals found/used: [n=1] ‘FUN’
[16:01:52.178]  - needed namespaces: [n=0] 
[16:01:52.178] Finding globals ... DONE
[16:01:52.178]  - use_args: TRUE
[16:01:52.178]  - Getting '...' globals ...
[16:01:52.178]    - '...' content: [n=1] ‘b’
[16:01:52.178] List of 1
[16:01:52.178]  $ ...:List of 1
[16:01:52.178]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:01:52.178]   .. ..$ a: int [1:2] 1 2
[16:01:52.178]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.178]  - attr(*, "where")=List of 1
[16:01:52.178]   ..$ ...:<environment: 0x55d6cf1d2198> 
[16:01:52.178]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.178]  - attr(*, "resolved")= logi TRUE
[16:01:52.178]  - attr(*, "total_size")= num NA
[16:01:52.181]  - Getting '...' globals ... DONE
[16:01:52.182] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.182] List of 2
[16:01:52.182]  $ ...future.FUN:function (a, b)  
[16:01:52.182]  $ ...          :List of 1
[16:01:52.182]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:01:52.182]   .. ..$ a: int [1:2] 1 2
[16:01:52.182]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.182]  - attr(*, "where")=List of 2
[16:01:52.182]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.182]   ..$ ...          :<environment: 0x55d6cf1d2198> 
[16:01:52.182]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.182]  - attr(*, "resolved")= logi FALSE
[16:01:52.182]  - attr(*, "total_size")= num 1440
[16:01:52.185] Packages to be attached in all futures: [n=0] 
[16:01:52.185] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.185] Number of futures (= number of chunks): 1
[16:01:52.185] Launching 1 futures (chunks) ...
[16:01:52.186] Chunk #1 of 1 ...
[16:01:52.186]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.186]    + additional globals found: [n=0] 
[16:01:52.186]    + additional namespaces needed: [n=0] 
[16:01:52.186]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.186]  - seeds: <none>
[16:01:52.186]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.188] Created future:
[16:01:52.189] SequentialFuture:
[16:01:52.189] Label: ‘future_lapply-1’
[16:01:52.189] Expression:
[16:01:52.189] {
[16:01:52.189]     do.call(function(...) {
[16:01:52.189]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.189]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.189]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.189]             on.exit(options(oopts), add = TRUE)
[16:01:52.189]         }
[16:01:52.189]         {
[16:01:52.189]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.189]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.189]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.189]             })
[16:01:52.189]         }
[16:01:52.189]     }, args = future.call.arguments)
[16:01:52.189] }
[16:01:52.189] Lazy evaluation: FALSE
[16:01:52.189] Asynchronous evaluation: FALSE
[16:01:52.189] Local evaluation: TRUE
[16:01:52.189] Environment: R_GlobalEnv
[16:01:52.189] Capture standard output: TRUE
[16:01:52.189] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.189] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.189] Packages: <none>
[16:01:52.189] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.189] Resolved: TRUE
[16:01:52.189] Value: 112 bytes of class ‘list’
[16:01:52.189] Early signaling: FALSE
[16:01:52.189] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.189] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.189] Chunk #1 of 1 ... DONE
[16:01:52.190] Launching 1 futures (chunks) ... DONE
[16:01:52.190] Resolving 1 futures (chunks) ...
[16:01:52.190]  - Number of value chunks collected: 1
[16:01:52.190] Resolving 1 futures (chunks) ... DONE
[16:01:52.190] Reducing values from 1 chunks ...
[16:01:52.190]  - Number of values collected after concatenation: 1
[16:01:52.190]  - Number of values expected: 1
[16:01:52.191] Reducing values from 1 chunks ... DONE
[16:01:52.191] future_lapply() ... DONE
[16:01:52.191] future_lapply() ...
[16:01:52.191] Number of chunks: 1
[16:01:52.191] getGlobalsAndPackagesXApply() ...
[16:01:52.191]  - future.globals: TRUE
[16:01:52.193]  - globals found/used: [n=1] ‘FUN’
[16:01:52.193]  - needed namespaces: [n=0] 
[16:01:52.193] Finding globals ... DONE
[16:01:52.193]  - use_args: TRUE
[16:01:52.193]  - Getting '...' globals ...
[16:01:52.194]    - '...' content: [n=1] ‘b’
[16:01:52.194] List of 1
[16:01:52.194]  $ ...:List of 1
[16:01:52.194]   ..$ b:<environment: 0x55d6cced91b0> 
[16:01:52.194]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.194]  - attr(*, "where")=List of 1
[16:01:52.194]   ..$ ...:<environment: 0x55d6cced5e38> 
[16:01:52.194]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.194]  - attr(*, "resolved")= logi TRUE
[16:01:52.194]  - attr(*, "total_size")= num NA
[16:01:52.196]  - Getting '...' globals ... DONE
[16:01:52.197] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.197] List of 2
[16:01:52.197]  $ ...future.FUN:function (a, b)  
[16:01:52.197]  $ ...          :List of 1
[16:01:52.197]   ..$ b:<environment: 0x55d6cced91b0> 
[16:01:52.197]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.197]  - attr(*, "where")=List of 2
[16:01:52.197]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.197]   ..$ ...          :<environment: 0x55d6cced5e38> 
[16:01:52.197]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.197]  - attr(*, "resolved")= logi FALSE
[16:01:52.197]  - attr(*, "total_size")= num 1440
[16:01:52.200] Packages to be attached in all futures: [n=0] 
[16:01:52.200] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.200] Number of futures (= number of chunks): 1
[16:01:52.200] Launching 1 futures (chunks) ...
[16:01:52.200] Chunk #1 of 1 ...
[16:01:52.200]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.200]    + additional globals found: [n=0] 
[16:01:52.201]    + additional namespaces needed: [n=0] 
[16:01:52.201]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.201]  - seeds: <none>
[16:01:52.201]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.203] Created future:
[16:01:52.203] SequentialFuture:
[16:01:52.203] Label: ‘future_lapply-1’
[16:01:52.203] Expression:
[16:01:52.203] {
[16:01:52.203]     do.call(function(...) {
[16:01:52.203]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.203]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.203]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.203]             on.exit(options(oopts), add = TRUE)
[16:01:52.203]         }
[16:01:52.203]         {
[16:01:52.203]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.203]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.203]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.203]             })
[16:01:52.203]         }
[16:01:52.203]     }, args = future.call.arguments)
[16:01:52.203] }
[16:01:52.203] Lazy evaluation: FALSE
[16:01:52.203] Asynchronous evaluation: FALSE
[16:01:52.203] Local evaluation: TRUE
[16:01:52.203] Environment: R_GlobalEnv
[16:01:52.203] Capture standard output: TRUE
[16:01:52.203] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.203] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.203] Packages: <none>
[16:01:52.203] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.203] Resolved: TRUE
[16:01:52.203] Value: 120 bytes of class ‘list’
[16:01:52.203] Early signaling: FALSE
[16:01:52.203] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.203] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.204] Chunk #1 of 1 ... DONE
[16:01:52.204] Launching 1 futures (chunks) ... DONE
[16:01:52.204] Resolving 1 futures (chunks) ...
[16:01:52.205]  - Number of value chunks collected: 1
[16:01:52.205] Resolving 1 futures (chunks) ... DONE
[16:01:52.205] Reducing values from 1 chunks ...
[16:01:52.205]  - Number of values collected after concatenation: 1
[16:01:52.205]  - Number of values expected: 1
[16:01:52.205] Reducing values from 1 chunks ... DONE
[16:01:52.205] future_lapply() ... DONE
[16:01:52.205] future_lapply() ...
[16:01:52.206] Number of chunks: 1
[16:01:52.206] getGlobalsAndPackagesXApply() ...
[16:01:52.206]  - future.globals: TRUE
[16:01:52.208]  - globals found/used: [n=1] ‘FUN’
[16:01:52.208]  - needed namespaces: [n=0] 
[16:01:52.208] Finding globals ... DONE
[16:01:52.208]  - use_args: TRUE
[16:01:52.208]  - Getting '...' globals ...
[16:01:52.209]    - '...' content: [n=1] ‘b’
[16:01:52.209] List of 1
[16:01:52.209]  $ ...:List of 1
[16:01:52.209]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:01:52.209]   .. .. ..@ slots     :List of 4
[16:01:52.209]   .. .. .. ..$ .Data  : chr "function"
[16:01:52.209]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. ..$ target : chr "signature"
[16:01:52.209]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. ..$ defined: chr "signature"
[16:01:52.209]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. ..$ generic: chr "character"
[16:01:52.209]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. ..@ contains  :List of 3
[16:01:52.209]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.209]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ superClass: chr "function"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.209]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.209]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.209]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.209]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.209]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.209]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.209]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.209]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.209]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.209]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.209]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.209]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.209]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.209]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.209]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.209]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ by        : chr "function"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.209]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.209]   .. .. ..@ virtual   : logi FALSE
[16:01:52.209]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:01:52.209]  list()
[16:01:52.209]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:01:52.209]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:52.209]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:52.209]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:52.209]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:01:52.209]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:52.209]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:52.209]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:52.209]   .. .. .. .. ..$ generic: chr(0) 
[16:01:52.209]   .. .. ..@ validity  : NULL
[16:01:52.209]   .. .. ..@ access    : list()
[16:01:52.209]   .. .. ..@ className : chr "MethodDefinition"
[16:01:52.209]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. ..@ subclasses:List of 7
[16:01:52.209]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.209]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.209]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.209]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.209]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.209]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.209]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.209]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.209]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.209]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.209]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.209]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.209]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.209]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.209]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.209]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.209]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.209]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.209]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.209]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.209]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.209]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.209]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.209]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.209]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.209]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.209]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.209]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.209]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.209]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.209]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.209]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.209]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.209]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.209]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.209]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.209]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.209]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.209]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.209]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.209]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.209]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.209]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.209]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.209]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.209]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:52.209]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.209]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.209]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.209]   .. .. ..@ versionKey:<externalptr> 
[16:01:52.209]   .. .. ..@ sealed    : logi TRUE
[16:01:52.209]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.209]  - attr(*, "where")=List of 1
[16:01:52.209]   ..$ ...:<environment: 0x55d6cfe0e5f8> 
[16:01:52.209]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.209]  - attr(*, "resolved")= logi TRUE
[16:01:52.209]  - attr(*, "total_size")= num NA
[16:01:52.256]  - Getting '...' globals ... DONE
[16:01:52.256] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.258] List of 2
[16:01:52.258]  $ ...future.FUN:function (a, b)  
[16:01:52.258]  $ ...          :List of 1
[16:01:52.258]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:01:52.258]   .. .. ..@ slots     :List of 4
[16:01:52.258]   .. .. .. ..$ .Data  : chr "function"
[16:01:52.258]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. ..$ target : chr "signature"
[16:01:52.258]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. ..$ defined: chr "signature"
[16:01:52.258]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. ..$ generic: chr "character"
[16:01:52.258]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. ..@ contains  :List of 3
[16:01:52.258]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.258]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ superClass: chr "function"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.258]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.258]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.258]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.258]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.258]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.258]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.258]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.258]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.258]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.258]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.258]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.258]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.258]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.258]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.258]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.258]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ by        : chr "function"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.258]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.258]   .. .. ..@ virtual   : logi FALSE
[16:01:52.258]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:01:52.258]  list()
[16:01:52.258]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:01:52.258]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:52.258]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:52.258]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:52.258]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:01:52.258]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:52.258]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:52.258]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:52.258]   .. .. .. .. ..$ generic: chr(0) 
[16:01:52.258]   .. .. ..@ validity  : NULL
[16:01:52.258]   .. .. ..@ access    : list()
[16:01:52.258]   .. .. ..@ className : chr "MethodDefinition"
[16:01:52.258]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. ..@ subclasses:List of 7
[16:01:52.258]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.258]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.258]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.258]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.258]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.258]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.258]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.258]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.258]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.258]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.258]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.258]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.258]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.258]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.258]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.258]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.258]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.258]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.258]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.258]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.258]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.258]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.258]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.258]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.258]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.258]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.258]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.258]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.258]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.258]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.258]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.258]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.258]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.258]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.258]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.258]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.258]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.258]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.258]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.258]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.258]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.258]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.258]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.258]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.258]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.258]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:52.258]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.258]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.258]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.258]   .. .. ..@ versionKey:<externalptr> 
[16:01:52.258]   .. .. ..@ sealed    : logi TRUE
[16:01:52.258]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.258]  - attr(*, "where")=List of 2
[16:01:52.258]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.258]   ..$ ...          :<environment: 0x55d6cfe0e5f8> 
[16:01:52.258]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.258]  - attr(*, "resolved")= logi FALSE
[16:01:52.258]  - attr(*, "total_size")= num 312512
[16:01:52.304] Packages to be attached in all futures: [n=0] 
[16:01:52.305] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.305] Number of futures (= number of chunks): 1
[16:01:52.305] Launching 1 futures (chunks) ...
[16:01:52.305] Chunk #1 of 1 ...
[16:01:52.305]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.305]    + additional globals found: [n=0] 
[16:01:52.305]    + additional namespaces needed: [n=0] 
[16:01:52.306]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.306]  - seeds: <none>
[16:01:52.306]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.308] Created future:
[16:01:52.308] SequentialFuture:
[16:01:52.308] Label: ‘future_lapply-1’
[16:01:52.308] Expression:
[16:01:52.308] {
[16:01:52.308]     do.call(function(...) {
[16:01:52.308]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.308]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.308]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.308]             on.exit(options(oopts), add = TRUE)
[16:01:52.308]         }
[16:01:52.308]         {
[16:01:52.308]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.308]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.308]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.308]             })
[16:01:52.308]         }
[16:01:52.308]     }, args = future.call.arguments)
[16:01:52.308] }
[16:01:52.308] Lazy evaluation: FALSE
[16:01:52.308] Asynchronous evaluation: FALSE
[16:01:52.308] Local evaluation: TRUE
[16:01:52.308] Environment: R_GlobalEnv
[16:01:52.308] Capture standard output: TRUE
[16:01:52.308] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.308] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.308] Packages: <none>
[16:01:52.308] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.308] Resolved: TRUE
[16:01:52.308] Value: 112 bytes of class ‘list’
[16:01:52.308] Early signaling: FALSE
[16:01:52.308] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.308] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.309] Chunk #1 of 1 ... DONE
[16:01:52.309] Launching 1 futures (chunks) ... DONE
[16:01:52.310] Resolving 1 futures (chunks) ...
[16:01:52.310]  - Number of value chunks collected: 1
[16:01:52.310] Resolving 1 futures (chunks) ... DONE
[16:01:52.310] Reducing values from 1 chunks ...
[16:01:52.310]  - Number of values collected after concatenation: 1
[16:01:52.310]  - Number of values expected: 1
[16:01:52.310] Reducing values from 1 chunks ... DONE
[16:01:52.311] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:01:52.312] future_lapply() ...
[16:01:52.313] Number of chunks: 1
[16:01:52.313] getGlobalsAndPackagesXApply() ...
[16:01:52.313]  - future.globals: TRUE
[16:01:52.314]  - globals found/used: [n=1] ‘FUN’
[16:01:52.315]  - needed namespaces: [n=0] 
[16:01:52.315] Finding globals ... DONE
[16:01:52.315]  - use_args: TRUE
[16:01:52.315]  - Getting '...' globals ...
[16:01:52.315]    - '...' content: [n=0] 
[16:01:52.315] List of 1
[16:01:52.315]  $ ...: list()
[16:01:52.315]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.315]  - attr(*, "where")=List of 1
[16:01:52.315]   ..$ ...:<environment: 0x55d6ce837560> 
[16:01:52.315]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.315]  - attr(*, "resolved")= logi TRUE
[16:01:52.315]  - attr(*, "total_size")= num NA
[16:01:52.318]  - Getting '...' globals ... DONE
[16:01:52.318] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.318] List of 2
[16:01:52.318]  $ ...future.FUN:function (f)  
[16:01:52.318]  $ ...          : list()
[16:01:52.318]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.318]  - attr(*, "where")=List of 2
[16:01:52.318]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.318]   ..$ ...          :<environment: 0x55d6ce837560> 
[16:01:52.318]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.318]  - attr(*, "resolved")= logi FALSE
[16:01:52.318]  - attr(*, "total_size")= num 1008
[16:01:52.321] Packages to be attached in all futures: [n=0] 
[16:01:52.321] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.321] Number of futures (= number of chunks): 1
[16:01:52.321] Launching 1 futures (chunks) ...
[16:01:52.321] Chunk #1 of 1 ...
[16:01:52.321]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.323]    + additional globals found: [n=2] ‘a’, ‘b’
[16:01:52.324]    + additional namespaces needed: [n=1] ‘tools’
[16:01:52.324]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.324]  - seeds: <none>
[16:01:52.324]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:01:52.327] Created future:
[16:01:52.327] SequentialFuture:
[16:01:52.327] Label: ‘future_lapply-1’
[16:01:52.327] Expression:
[16:01:52.327] {
[16:01:52.327]     do.call(function(...) {
[16:01:52.327]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.327]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.327]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.327]             on.exit(options(oopts), add = TRUE)
[16:01:52.327]         }
[16:01:52.327]         {
[16:01:52.327]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.327]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.327]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.327]             })
[16:01:52.327]         }
[16:01:52.327]     }, args = future.call.arguments)
[16:01:52.327] }
[16:01:52.327] Lazy evaluation: FALSE
[16:01:52.327] Asynchronous evaluation: FALSE
[16:01:52.327] Local evaluation: TRUE
[16:01:52.327] Environment: R_GlobalEnv
[16:01:52.327] Capture standard output: TRUE
[16:01:52.327] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.327] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:01:52.327] Packages: 1 packages (‘tools’)
[16:01:52.327] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.327] Resolved: TRUE
[16:01:52.327] Value: 224 bytes of class ‘list’
[16:01:52.327] Early signaling: FALSE
[16:01:52.327] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.327] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.328] Chunk #1 of 1 ... DONE
[16:01:52.328] Launching 1 futures (chunks) ... DONE
[16:01:52.328] Resolving 1 futures (chunks) ...
[16:01:52.328]  - Number of value chunks collected: 1
[16:01:52.329] Resolving 1 futures (chunks) ... DONE
[16:01:52.329] Reducing values from 1 chunks ...
[16:01:52.329]  - Number of values collected after concatenation: 4
[16:01:52.329]  - Number of values expected: 4
[16:01:52.329] Reducing values from 1 chunks ... DONE
[16:01:52.329] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:01:52.332] future_lapply() ...
[16:01:52.332] Number of chunks: 1
[16:01:52.333] getGlobalsAndPackagesXApply() ...
[16:01:52.333]  - future.globals: TRUE
[16:01:52.335]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:01:52.335]  - needed namespaces: [n=0] 
[16:01:52.335] Finding globals ... DONE
[16:01:52.335]  - use_args: TRUE
[16:01:52.335]  - Getting '...' globals ...
[16:01:52.335]    - '...' content: [n=0] 
[16:01:52.335] List of 1
[16:01:52.335]  $ ...: list()
[16:01:52.335]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.335]  - attr(*, "where")=List of 1
[16:01:52.335]   ..$ ...:<environment: 0x55d6cfe80a20> 
[16:01:52.335]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.335]  - attr(*, "resolved")= logi TRUE
[16:01:52.335]  - attr(*, "total_size")= num NA
[16:01:52.338]  - Getting '...' globals ... DONE
[16:01:52.338] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:01:52.338] List of 3
[16:01:52.338]  $ ...future.FUN        :function (x)  
[16:01:52.338]  $ future.call.arguments:List of 1
[16:01:52.338]   ..$ a: num 1
[16:01:52.338]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.338]  $ ...                  : list()
[16:01:52.338]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.338]  - attr(*, "where")=List of 3
[16:01:52.338]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:01:52.338]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:01:52.338]   ..$ ...                  :<environment: 0x55d6cfe80a20> 
[16:01:52.338]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.338]  - attr(*, "resolved")= logi FALSE
[16:01:52.338]  - attr(*, "total_size")= num 1272
[16:01:52.343] Packages to be attached in all futures: [n=0] 
[16:01:52.344] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.344] Number of futures (= number of chunks): 1
[16:01:52.344] Launching 1 futures (chunks) ...
[16:01:52.344] Chunk #1 of 1 ...
[16:01:52.344]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.344]    + additional globals found: [n=0] 
[16:01:52.344]    + additional namespaces needed: [n=0] 
[16:01:52.344]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.345]  - seeds: <none>
[16:01:52.345]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.347] Created future:
[16:01:52.347] SequentialFuture:
[16:01:52.347] Label: ‘future_lapply-1’
[16:01:52.347] Expression:
[16:01:52.347] {
[16:01:52.347]     do.call(function(...) {
[16:01:52.347]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.347]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.347]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.347]             on.exit(options(oopts), add = TRUE)
[16:01:52.347]         }
[16:01:52.347]         {
[16:01:52.347]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.347]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.347]                 ...future.FUN(...future.X_jj)
[16:01:52.347]             })
[16:01:52.347]         }
[16:01:52.347]     }, args = future.call.arguments)
[16:01:52.347] }
[16:01:52.347] Lazy evaluation: FALSE
[16:01:52.347] Asynchronous evaluation: FALSE
[16:01:52.347] Local evaluation: TRUE
[16:01:52.347] Environment: 0x55d6cfe80da0
[16:01:52.347] Capture standard output: TRUE
[16:01:52.347] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.347] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.347] Packages: <none>
[16:01:52.347] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.347] Resolved: TRUE
[16:01:52.347] Value: 56 bytes of class ‘list’
[16:01:52.347] Early signaling: FALSE
[16:01:52.347] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.347] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.348] Chunk #1 of 1 ... DONE
[16:01:52.348] Launching 1 futures (chunks) ... DONE
[16:01:52.348] Resolving 1 futures (chunks) ...
[16:01:52.349]  - Number of value chunks collected: 1
[16:01:52.349] Resolving 1 futures (chunks) ... DONE
[16:01:52.349] Reducing values from 1 chunks ...
[16:01:52.349]  - Number of values collected after concatenation: 1
[16:01:52.349]  - Number of values expected: 1
[16:01:52.349] Reducing values from 1 chunks ... DONE
[16:01:52.349] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:01:52.350] future_lapply() ...
[16:01:52.351] Number of chunks: 1
[16:01:52.351] getGlobalsAndPackagesXApply() ...
[16:01:52.351]  - future.globals: TRUE
[16:01:52.353]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:01:52.353]  - needed namespaces: [n=0] 
[16:01:52.353] Finding globals ... DONE
[16:01:52.354]  - use_args: TRUE
[16:01:52.354]  - Getting '...' globals ...
[16:01:52.354]    - '...' content: [n=0] 
[16:01:52.354] List of 1
[16:01:52.354]  $ ...: list()
[16:01:52.354]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.354]  - attr(*, "where")=List of 1
[16:01:52.354]   ..$ ...:<environment: 0x55d6ceebd6b8> 
[16:01:52.354]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.354]  - attr(*, "resolved")= logi TRUE
[16:01:52.354]  - attr(*, "total_size")= num NA
[16:01:52.356]  - Getting '...' globals ... DONE
[16:01:52.357] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:01:52.357] List of 3
[16:01:52.357]  $ ...future.FUN:function (ii)  
[16:01:52.357]  $ a            : num 1
[16:01:52.357]  $ ...          : list()
[16:01:52.357]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.357]  - attr(*, "where")=List of 3
[16:01:52.357]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.357]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:52.357]   ..$ ...          :<environment: 0x55d6ceebd6b8> 
[16:01:52.357]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.357]  - attr(*, "resolved")= logi FALSE
[16:01:52.357]  - attr(*, "total_size")= num 2984
[16:01:52.360] Packages to be attached in all futures: [n=0] 
[16:01:52.360] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.360] Number of futures (= number of chunks): 1
[16:01:52.360] Launching 1 futures (chunks) ...
[16:01:52.360] Chunk #1 of 1 ...
[16:01:52.360]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.361]    + additional globals found: [n=0] 
[16:01:52.361]    + additional namespaces needed: [n=0] 
[16:01:52.361]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.361]  - seeds: <none>
[16:01:52.361]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.364] Created future:
[16:01:52.364] SequentialFuture:
[16:01:52.364] Label: ‘future_lapply-1’
[16:01:52.364] Expression:
[16:01:52.364] {
[16:01:52.364]     do.call(function(...) {
[16:01:52.364]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.364]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.364]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.364]             on.exit(options(oopts), add = TRUE)
[16:01:52.364]         }
[16:01:52.364]         {
[16:01:52.364]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.364]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.364]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.364]             })
[16:01:52.364]         }
[16:01:52.364]     }, args = future.call.arguments)
[16:01:52.364] }
[16:01:52.364] Lazy evaluation: FALSE
[16:01:52.364] Asynchronous evaluation: FALSE
[16:01:52.364] Local evaluation: TRUE
[16:01:52.364] Environment: R_GlobalEnv
[16:01:52.364] Capture standard output: TRUE
[16:01:52.364] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.364] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:01:52.364] Packages: <none>
[16:01:52.364] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.364] Resolved: TRUE
[16:01:52.364] Value: 56 bytes of class ‘list’
[16:01:52.364] Early signaling: FALSE
[16:01:52.364] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.364] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.365] Chunk #1 of 1 ... DONE
[16:01:52.365] Launching 1 futures (chunks) ... DONE
[16:01:52.365] Resolving 1 futures (chunks) ...
[16:01:52.365]  - Number of value chunks collected: 1
[16:01:52.365] Resolving 1 futures (chunks) ... DONE
[16:01:52.365] Reducing values from 1 chunks ...
[16:01:52.365]  - Number of values collected after concatenation: 1
[16:01:52.366]  - Number of values expected: 1
[16:01:52.366] Reducing values from 1 chunks ... DONE
[16:01:52.366] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:01:52.366] future_lapply() ...
[16:01:52.367] Number of chunks: 1
[16:01:52.367] getGlobalsAndPackagesXApply() ...
[16:01:52.367]  - future.globals: TRUE
[16:01:52.369]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:01:52.369]  - needed namespaces: [n=0] 
[16:01:52.369] Finding globals ... DONE
[16:01:52.369]  - use_args: TRUE
[16:01:52.369]  - Getting '...' globals ...
[16:01:52.370]    - '...' content: [n=0] 
[16:01:52.370] List of 1
[16:01:52.370]  $ ...: list()
[16:01:52.370]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.370]  - attr(*, "where")=List of 1
[16:01:52.370]   ..$ ...:<environment: 0x55d6cd33b708> 
[16:01:52.370]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.370]  - attr(*, "resolved")= logi TRUE
[16:01:52.370]  - attr(*, "total_size")= num NA
[16:01:52.372]  - Getting '...' globals ... DONE
[16:01:52.372] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:01:52.372] List of 3
[16:01:52.372]  $ ...future.FUN:function (ii)  
[16:01:52.372]  $ a            : num 1
[16:01:52.372]  $ ...          : list()
[16:01:52.372]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.372]  - attr(*, "where")=List of 3
[16:01:52.372]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.372]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:52.372]   ..$ ...          :<environment: 0x55d6cd33b708> 
[16:01:52.372]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.372]  - attr(*, "resolved")= logi FALSE
[16:01:52.372]  - attr(*, "total_size")= num 2984
[16:01:52.376] Packages to be attached in all futures: [n=0] 
[16:01:52.376] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.376] Number of futures (= number of chunks): 1
[16:01:52.376] Launching 1 futures (chunks) ...
[16:01:52.376] Chunk #1 of 1 ...
[16:01:52.376]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.376]    + additional globals found: [n=0] 
[16:01:52.377]    + additional namespaces needed: [n=0] 
[16:01:52.377]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.377]  - seeds: <none>
[16:01:52.377]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.379] Created future:
[16:01:52.379] SequentialFuture:
[16:01:52.379] Label: ‘future_lapply-1’
[16:01:52.379] Expression:
[16:01:52.379] {
[16:01:52.379]     do.call(function(...) {
[16:01:52.379]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.379]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.379]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.379]             on.exit(options(oopts), add = TRUE)
[16:01:52.379]         }
[16:01:52.379]         {
[16:01:52.379]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.379]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.379]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.379]             })
[16:01:52.379]         }
[16:01:52.379]     }, args = future.call.arguments)
[16:01:52.379] }
[16:01:52.379] Lazy evaluation: FALSE
[16:01:52.379] Asynchronous evaluation: FALSE
[16:01:52.379] Local evaluation: TRUE
[16:01:52.379] Environment: R_GlobalEnv
[16:01:52.379] Capture standard output: TRUE
[16:01:52.379] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.379] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:01:52.379] Packages: <none>
[16:01:52.379] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.379] Resolved: TRUE
[16:01:52.379] Value: 56 bytes of class ‘list’
[16:01:52.379] Early signaling: FALSE
[16:01:52.379] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.379] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.380] Chunk #1 of 1 ... DONE
[16:01:52.380] Launching 1 futures (chunks) ... DONE
[16:01:52.380] Resolving 1 futures (chunks) ...
[16:01:52.381]  - Number of value chunks collected: 1
[16:01:52.381] Resolving 1 futures (chunks) ... DONE
[16:01:52.381] Reducing values from 1 chunks ...
[16:01:52.381]  - Number of values collected after concatenation: 1
[16:01:52.381]  - Number of values expected: 1
[16:01:52.381] Reducing values from 1 chunks ... DONE
[16:01:52.381] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:01:52.382] future_lapply() ...
[16:01:52.382] Number of chunks: 1
[16:01:52.382] getGlobalsAndPackagesXApply() ...
[16:01:52.382]  - future.globals: <name-value list> with names ‘42’
[16:01:52.382]  - use_args: TRUE
[16:01:52.382]  - Getting '...' globals ...
[16:01:52.383]    - '...' content: [n=0] 
[16:01:52.383] List of 1
[16:01:52.383]  $ ...: list()
[16:01:52.383]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.383]  - attr(*, "where")=List of 1
[16:01:52.383]   ..$ ...:<environment: 0x55d6d0120830> 
[16:01:52.383]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.383]  - attr(*, "resolved")= logi TRUE
[16:01:52.383]  - attr(*, "total_size")= num NA
[16:01:52.385]  - Getting '...' globals ... DONE
[16:01:52.386] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:01:52.386] List of 3
[16:01:52.386]  $ a            : num 42
[16:01:52.386]  $ ...future.FUN:function (x)  
[16:01:52.386]  $ ...          : list()
[16:01:52.386]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.386]  - attr(*, "where")=List of 3
[16:01:52.386]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:52.386]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:01:52.386]   ..$ ...          :<environment: 0x55d6d0120830> 
[16:01:52.386]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.386]  - attr(*, "resolved")= logi FALSE
[16:01:52.386]  - attr(*, "total_size")= num NA
[16:01:52.391] Packages to be attached in all futures: [n=0] 
[16:01:52.391] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.391] Number of futures (= number of chunks): 1
[16:01:52.391] Launching 1 futures (chunks) ...
[16:01:52.391] Chunk #1 of 1 ...
[16:01:52.391]  - seeds: <none>
[16:01:52.391]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.394] Created future:
[16:01:52.394] SequentialFuture:
[16:01:52.394] Label: ‘future_lapply-1’
[16:01:52.394] Expression:
[16:01:52.394] {
[16:01:52.394]     do.call(function(...) {
[16:01:52.394]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.394]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.394]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.394]             on.exit(options(oopts), add = TRUE)
[16:01:52.394]         }
[16:01:52.394]         {
[16:01:52.394]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.394]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.394]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.394]             })
[16:01:52.394]         }
[16:01:52.394]     }, args = future.call.arguments)
[16:01:52.394] }
[16:01:52.394] Lazy evaluation: FALSE
[16:01:52.394] Asynchronous evaluation: FALSE
[16:01:52.394] Local evaluation: TRUE
[16:01:52.394] Environment: R_GlobalEnv
[16:01:52.394] Capture standard output: TRUE
[16:01:52.394] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.394] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:01:52.394] Packages: <none>
[16:01:52.394] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.394] Resolved: TRUE
[16:01:52.394] Value: 56 bytes of class ‘list’
[16:01:52.394] Early signaling: FALSE
[16:01:52.394] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.394] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:01:52.395] Chunk #1 of 1 ... DONE
[16:01:52.395] Launching 1 futures (chunks) ... DONE
[16:01:52.395] Resolving 1 futures (chunks) ...
[16:01:52.396]  - Number of value chunks collected: 1
[16:01:52.396] Resolving 1 futures (chunks) ... DONE
[16:01:52.396] Reducing values from 1 chunks ...
[16:01:52.396]  - Number of values collected after concatenation: 1
[16:01:52.396]  - Number of values expected: 1
[16:01:52.396] Reducing values from 1 chunks ... DONE
[16:01:52.396] future_lapply() ... DONE
List of 1
 $ : num 42
[16:01:52.404] future_lapply() ...
[16:01:52.409] Number of chunks: 2
[16:01:52.409] getGlobalsAndPackagesXApply() ...
[16:01:52.409]  - future.globals: TRUE
[16:01:52.414]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:01:52.414]  - needed namespaces: [n=0] 
[16:01:52.414] Finding globals ... DONE
[16:01:52.414]  - use_args: TRUE
[16:01:52.414]  - Getting '...' globals ...
[16:01:52.414]    - '...' content: [n=0] 
[16:01:52.415] List of 1
[16:01:52.415]  $ ...: list()
[16:01:52.415]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.415]  - attr(*, "where")=List of 1
[16:01:52.415]   ..$ ...:<environment: 0x55d6cea355f0> 
[16:01:52.415]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.415]  - attr(*, "resolved")= logi TRUE
[16:01:52.415]  - attr(*, "total_size")= num NA
[16:01:52.417]  - Getting '...' globals ... DONE
[16:01:52.417] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:01:52.417] List of 6
[16:01:52.417]  $ ...future.FUN:function (i)  
[16:01:52.417]  $ caller       :function (a, b, FUN = call_my_add)  
[16:01:52.417]  $ args         :List of 1
[16:01:52.417]   ..$ FUN:function (a, b)  
[16:01:52.417]  $ call_my_add  :function (a, b)  
[16:01:52.417]  $ my_add       :function (a, b)  
[16:01:52.417]  $ ...          : list()
[16:01:52.417]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.417]  - attr(*, "where")=List of 6
[16:01:52.417]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.417]   ..$ caller       :<environment: R_EmptyEnv> 
[16:01:52.417]   ..$ args         :<environment: R_EmptyEnv> 
[16:01:52.417]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:01:52.417]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:01:52.417]   ..$ ...          :<environment: 0x55d6cea355f0> 
[16:01:52.417]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.417]  - attr(*, "resolved")= logi FALSE
[16:01:52.417]  - attr(*, "total_size")= num 24120
[16:01:52.422] Packages to be attached in all futures: [n=0] 
[16:01:52.422] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.422] Number of futures (= number of chunks): 2
[16:01:52.423] Launching 2 futures (chunks) ...
[16:01:52.423] Chunk #1 of 2 ...
[16:01:52.423]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.423]    + additional globals found: [n=0] 
[16:01:52.423]    + additional namespaces needed: [n=0] 
[16:01:52.423]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.423]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:52.423]  - seeds: <none>
[16:01:52.424]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.433] Created future:
[16:01:52.433] MulticoreFuture:
[16:01:52.433] Label: ‘future_lapply-1’
[16:01:52.433] Expression:
[16:01:52.433] {
[16:01:52.433]     do.call(function(...) {
[16:01:52.433]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.433]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.433]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.433]             on.exit(options(oopts), add = TRUE)
[16:01:52.433]         }
[16:01:52.433]         {
[16:01:52.433]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.433]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.433]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.433]             })
[16:01:52.433]         }
[16:01:52.433]     }, args = future.call.arguments)
[16:01:52.433] }
[16:01:52.433] Lazy evaluation: FALSE
[16:01:52.433] Asynchronous evaluation: TRUE
[16:01:52.433] Local evaluation: TRUE
[16:01:52.433] Environment: 0x55d6cece80a0
[16:01:52.433] Capture standard output: TRUE
[16:01:52.433] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.433] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:01:52.433] Packages: <none>
[16:01:52.433] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.433] Resolved: TRUE
[16:01:52.433] Value: <not collected>
[16:01:52.433] Conditions captured: <none>
[16:01:52.433] Early signaling: FALSE
[16:01:52.433] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.433] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.440] Chunk #1 of 2 ... DONE
[16:01:52.441] Chunk #2 of 2 ...
[16:01:52.441]  - Finding globals in 'X' for chunk #2 ...
[16:01:52.441]    + additional globals found: [n=0] 
[16:01:52.442]    + additional namespaces needed: [n=0] 
[16:01:52.442]  - Finding globals in 'X' for chunk #2 ... DONE
[16:01:52.442]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:52.442]  - seeds: <none>
[16:01:52.442]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.451] Created future:
[16:01:52.452] MulticoreFuture:
[16:01:52.452] Label: ‘future_lapply-2’
[16:01:52.452] Expression:
[16:01:52.452] {
[16:01:52.452]     do.call(function(...) {
[16:01:52.452]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.452]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.452]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.452]             on.exit(options(oopts), add = TRUE)
[16:01:52.452]         }
[16:01:52.452]         {
[16:01:52.452]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.452]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.452]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.452]             })
[16:01:52.452]         }
[16:01:52.452]     }, args = future.call.arguments)
[16:01:52.452] }
[16:01:52.452] Lazy evaluation: FALSE
[16:01:52.452] Asynchronous evaluation: TRUE
[16:01:52.452] Local evaluation: TRUE
[16:01:52.452] Environment: 0x55d6cece80a0
[16:01:52.452] Capture standard output: TRUE
[16:01:52.452] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.452] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:01:52.452] Packages: <none>
[16:01:52.452] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.452] Resolved: TRUE
[16:01:52.452] Value: <not collected>
[16:01:52.452] Conditions captured: <none>
[16:01:52.452] Early signaling: FALSE
[16:01:52.452] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.452] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.460] Chunk #2 of 2 ... DONE
[16:01:52.460] Launching 2 futures (chunks) ... DONE
[16:01:52.460] Resolving 2 futures (chunks) ...
[16:01:52.464]  - Number of value chunks collected: 2
[16:01:52.464] Resolving 2 futures (chunks) ... DONE
[16:01:52.464] Reducing values from 2 chunks ...
[16:01:52.465]  - Number of values collected after concatenation: 3
[16:01:52.465]  - Number of values expected: 3
[16:01:52.465] Reducing values from 2 chunks ... DONE
[16:01:52.465] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:01:52.465] future_lapply() ...
[16:01:52.474] Number of chunks: 1
[16:01:52.474] getGlobalsAndPackagesXApply() ...
[16:01:52.474]  - future.globals: TRUE
[16:01:52.477]  - globals found/used: [n=1] ‘FUN’
[16:01:52.477]  - needed namespaces: [n=0] 
[16:01:52.477] Finding globals ... DONE
[16:01:52.477]  - use_args: TRUE
[16:01:52.478]  - Getting '...' globals ...
[16:01:52.478]    - '...' content: [n=1] ‘what’
[16:01:52.478] List of 1
[16:01:52.478]  $ ...:List of 1
[16:01:52.478]   ..$ what:function (x)  
[16:01:52.478]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.478]  - attr(*, "where")=List of 1
[16:01:52.478]   ..$ ...:<environment: 0x55d6d02dc770> 
[16:01:52.478]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.478]  - attr(*, "resolved")= logi TRUE
[16:01:52.478]  - attr(*, "total_size")= num NA
[16:01:52.482]  - Getting '...' globals ... DONE
[16:01:52.482] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.482] List of 2
[16:01:52.482]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:01:52.482]  $ ...          :List of 1
[16:01:52.482]   ..$ what:function (x)  
[16:01:52.482]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.482]  - attr(*, "where")=List of 2
[16:01:52.482]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.482]   ..$ ...          :<environment: 0x55d6d02dc770> 
[16:01:52.482]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.482]  - attr(*, "resolved")= logi FALSE
[16:01:52.482]  - attr(*, "total_size")= num 12192
[16:01:52.486] Packages to be attached in all futures: [n=0] 
[16:01:52.486] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.486] Number of futures (= number of chunks): 1
[16:01:52.486] Launching 1 futures (chunks) ...
[16:01:52.486] Chunk #1 of 1 ...
[16:01:52.486]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.487]    + additional globals found: [n=0] 
[16:01:52.487]    + additional namespaces needed: [n=0] 
[16:01:52.487]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.487]  - seeds: <none>
[16:01:52.487]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.495] Created future:
[16:01:52.495] MulticoreFuture:
[16:01:52.495] Label: ‘future_lapply-1’
[16:01:52.495] Expression:
[16:01:52.495] {
[16:01:52.495]     do.call(function(...) {
[16:01:52.495]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.495]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.495]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.495]             on.exit(options(oopts), add = TRUE)
[16:01:52.495]         }
[16:01:52.495]         {
[16:01:52.495]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.495]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.495]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.495]             })
[16:01:52.495]         }
[16:01:52.495]     }, args = future.call.arguments)
[16:01:52.495] }
[16:01:52.495] Lazy evaluation: FALSE
[16:01:52.495] Asynchronous evaluation: TRUE
[16:01:52.495] Local evaluation: TRUE
[16:01:52.495] Environment: R_GlobalEnv
[16:01:52.495] Capture standard output: TRUE
[16:01:52.495] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.495] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.495] Packages: <none>
[16:01:52.495] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.495] Resolved: TRUE
[16:01:52.495] Value: <not collected>
[16:01:52.495] Conditions captured: <none>
[16:01:52.495] Early signaling: FALSE
[16:01:52.495] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.495] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.503] Chunk #1 of 1 ... DONE
[16:01:52.503] Launching 1 futures (chunks) ... DONE
[16:01:52.503] Resolving 1 futures (chunks) ...
[16:01:52.505]  - Number of value chunks collected: 1
[16:01:52.505] Resolving 1 futures (chunks) ... DONE
[16:01:52.505] Reducing values from 1 chunks ...
[16:01:52.505]  - Number of values collected after concatenation: 1
[16:01:52.506]  - Number of values expected: 1
[16:01:52.506] Reducing values from 1 chunks ... DONE
[16:01:52.506] future_lapply() ... DONE
[16:01:52.506] future_lapply() ...
[16:01:52.512] Number of chunks: 1
[16:01:52.512] getGlobalsAndPackagesXApply() ...
[16:01:52.512]  - future.globals: TRUE
[16:01:52.515]  - globals found/used: [n=1] ‘FUN’
[16:01:52.515]  - needed namespaces: [n=0] 
[16:01:52.516] Finding globals ... DONE
[16:01:52.516]  - use_args: TRUE
[16:01:52.516]  - Getting '...' globals ...
[16:01:52.516]    - '...' content: [n=1] ‘what’
[16:01:52.516] List of 1
[16:01:52.516]  $ ...:List of 1
[16:01:52.516]   ..$ what:function (...)  
[16:01:52.516]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.516]  - attr(*, "where")=List of 1
[16:01:52.516]   ..$ ...:<environment: 0x55d6ce324420> 
[16:01:52.516]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.516]  - attr(*, "resolved")= logi TRUE
[16:01:52.516]  - attr(*, "total_size")= num NA
[16:01:52.520]  - Getting '...' globals ... DONE
[16:01:52.520] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.520] List of 2
[16:01:52.520]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:01:52.520]  $ ...          :List of 1
[16:01:52.520]   ..$ what:function (...)  
[16:01:52.520]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.520]  - attr(*, "where")=List of 2
[16:01:52.520]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.520]   ..$ ...          :<environment: 0x55d6ce324420> 
[16:01:52.520]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.520]  - attr(*, "resolved")= logi FALSE
[16:01:52.520]  - attr(*, "total_size")= num 13352
[16:01:52.524] Packages to be attached in all futures: [n=0] 
[16:01:52.524] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.524] Number of futures (= number of chunks): 1
[16:01:52.524] Launching 1 futures (chunks) ...
[16:01:52.524] Chunk #1 of 1 ...
[16:01:52.525]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.525]    + additional globals found: [n=0] 
[16:01:52.525]    + additional namespaces needed: [n=0] 
[16:01:52.525]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.525]  - seeds: <none>
[16:01:52.525]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.533] Created future:
[16:01:52.533] MulticoreFuture:
[16:01:52.533] Label: ‘future_lapply-1’
[16:01:52.533] Expression:
[16:01:52.533] {
[16:01:52.533]     do.call(function(...) {
[16:01:52.533]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.533]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.533]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.533]             on.exit(options(oopts), add = TRUE)
[16:01:52.533]         }
[16:01:52.533]         {
[16:01:52.533]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.533]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.533]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.533]             })
[16:01:52.533]         }
[16:01:52.533]     }, args = future.call.arguments)
[16:01:52.533] }
[16:01:52.533] Lazy evaluation: FALSE
[16:01:52.533] Asynchronous evaluation: TRUE
[16:01:52.533] Local evaluation: TRUE
[16:01:52.533] Environment: R_GlobalEnv
[16:01:52.533] Capture standard output: TRUE
[16:01:52.533] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.533] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.533] Packages: <none>
[16:01:52.533] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.533] Resolved: TRUE
[16:01:52.533] Value: <not collected>
[16:01:52.533] Conditions captured: <none>
[16:01:52.533] Early signaling: FALSE
[16:01:52.533] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.533] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.541] Chunk #1 of 1 ... DONE
[16:01:52.542] Launching 1 futures (chunks) ... DONE
[16:01:52.542] Resolving 1 futures (chunks) ...
[16:01:52.543]  - Number of value chunks collected: 1
[16:01:52.544] Resolving 1 futures (chunks) ... DONE
[16:01:52.544] Reducing values from 1 chunks ...
[16:01:52.544]  - Number of values collected after concatenation: 1
[16:01:52.544]  - Number of values expected: 1
[16:01:52.544] Reducing values from 1 chunks ... DONE
[16:01:52.544] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:01:52.545] future_lapply() ...
[16:01:52.549] Number of chunks: 1
[16:01:52.549] getGlobalsAndPackagesXApply() ...
[16:01:52.549]  - future.globals: TRUE
[16:01:52.551]  - globals found/used: [n=1] ‘FUN’
[16:01:52.552]  - needed namespaces: [n=0] 
[16:01:52.552] Finding globals ... DONE
[16:01:52.552]  - use_args: TRUE
[16:01:52.552]  - Getting '...' globals ...
[16:01:52.552]    - '...' content: [n=1] ‘b’
[16:01:52.552] List of 1
[16:01:52.552]  $ ...:List of 1
[16:01:52.552]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:01:52.552]   .. ..$ a: int [1:2] 1 2
[16:01:52.552]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.552]  - attr(*, "where")=List of 1
[16:01:52.552]   ..$ ...:<environment: 0x55d6d0015ca8> 
[16:01:52.552]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.552]  - attr(*, "resolved")= logi TRUE
[16:01:52.552]  - attr(*, "total_size")= num NA
[16:01:52.559]  - Getting '...' globals ... DONE
[16:01:52.559] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.559] List of 2
[16:01:52.559]  $ ...future.FUN:function (a, b)  
[16:01:52.559]  $ ...          :List of 1
[16:01:52.559]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:01:52.559]   .. ..$ a: int [1:2] 1 2
[16:01:52.559]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.559]  - attr(*, "where")=List of 2
[16:01:52.559]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.559]   ..$ ...          :<environment: 0x55d6d0015ca8> 
[16:01:52.559]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.559]  - attr(*, "resolved")= logi FALSE
[16:01:52.559]  - attr(*, "total_size")= num 1440
[16:01:52.563] Packages to be attached in all futures: [n=0] 
[16:01:52.563] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.564] Number of futures (= number of chunks): 1
[16:01:52.564] Launching 1 futures (chunks) ...
[16:01:52.564] Chunk #1 of 1 ...
[16:01:52.564]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.564]    + additional globals found: [n=0] 
[16:01:52.564]    + additional namespaces needed: [n=0] 
[16:01:52.565]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.565]  - seeds: <none>
[16:01:52.565]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.573] Created future:
[16:01:52.573] MulticoreFuture:
[16:01:52.573] Label: ‘future_lapply-1’
[16:01:52.573] Expression:
[16:01:52.573] {
[16:01:52.573]     do.call(function(...) {
[16:01:52.573]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.573]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.573]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.573]             on.exit(options(oopts), add = TRUE)
[16:01:52.573]         }
[16:01:52.573]         {
[16:01:52.573]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.573]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.573]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.573]             })
[16:01:52.573]         }
[16:01:52.573]     }, args = future.call.arguments)
[16:01:52.573] }
[16:01:52.573] Lazy evaluation: FALSE
[16:01:52.573] Asynchronous evaluation: TRUE
[16:01:52.573] Local evaluation: TRUE
[16:01:52.573] Environment: R_GlobalEnv
[16:01:52.573] Capture standard output: TRUE
[16:01:52.573] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.573] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.573] Packages: <none>
[16:01:52.573] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.573] Resolved: TRUE
[16:01:52.573] Value: <not collected>
[16:01:52.573] Conditions captured: <none>
[16:01:52.573] Early signaling: FALSE
[16:01:52.573] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.573] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.581] Chunk #1 of 1 ... DONE
[16:01:52.581] Launching 1 futures (chunks) ... DONE
[16:01:52.582] Resolving 1 futures (chunks) ...
[16:01:52.583]  - Number of value chunks collected: 1
[16:01:52.583] Resolving 1 futures (chunks) ... DONE
[16:01:52.584] Reducing values from 1 chunks ...
[16:01:52.584]  - Number of values collected after concatenation: 1
[16:01:52.584]  - Number of values expected: 1
[16:01:52.584] Reducing values from 1 chunks ... DONE
[16:01:52.584] future_lapply() ... DONE
[16:01:52.584] future_lapply() ...
[16:01:52.589] Number of chunks: 1
[16:01:52.589] getGlobalsAndPackagesXApply() ...
[16:01:52.589]  - future.globals: TRUE
[16:01:52.591]  - globals found/used: [n=1] ‘FUN’
[16:01:52.591]  - needed namespaces: [n=0] 
[16:01:52.592] Finding globals ... DONE
[16:01:52.592]  - use_args: TRUE
[16:01:52.592]  - Getting '...' globals ...
[16:01:52.592]    - '...' content: [n=1] ‘b’
[16:01:52.592] List of 1
[16:01:52.592]  $ ...:List of 1
[16:01:52.592]   ..$ b:<environment: 0x55d6ceb81e90> 
[16:01:52.592]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.592]  - attr(*, "where")=List of 1
[16:01:52.592]   ..$ ...:<environment: 0x55d6ceb7cbf8> 
[16:01:52.592]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.592]  - attr(*, "resolved")= logi TRUE
[16:01:52.592]  - attr(*, "total_size")= num NA
[16:01:52.596]  - Getting '...' globals ... DONE
[16:01:52.596] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.596] List of 2
[16:01:52.596]  $ ...future.FUN:function (a, b)  
[16:01:52.596]  $ ...          :List of 1
[16:01:52.596]   ..$ b:<environment: 0x55d6ceb81e90> 
[16:01:52.596]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.596]  - attr(*, "where")=List of 2
[16:01:52.596]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.596]   ..$ ...          :<environment: 0x55d6ceb7cbf8> 
[16:01:52.596]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.596]  - attr(*, "resolved")= logi FALSE
[16:01:52.596]  - attr(*, "total_size")= num 1440
[16:01:52.600] Packages to be attached in all futures: [n=0] 
[16:01:52.600] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.600] Number of futures (= number of chunks): 1
[16:01:52.601] Launching 1 futures (chunks) ...
[16:01:52.601] Chunk #1 of 1 ...
[16:01:52.601]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.601]    + additional globals found: [n=0] 
[16:01:52.601]    + additional namespaces needed: [n=0] 
[16:01:52.601]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.601]  - seeds: <none>
[16:01:52.602]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.609] Created future:
[16:01:52.610] MulticoreFuture:
[16:01:52.610] Label: ‘future_lapply-1’
[16:01:52.610] Expression:
[16:01:52.610] {
[16:01:52.610]     do.call(function(...) {
[16:01:52.610]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.610]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.610]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.610]             on.exit(options(oopts), add = TRUE)
[16:01:52.610]         }
[16:01:52.610]         {
[16:01:52.610]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.610]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.610]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.610]             })
[16:01:52.610]         }
[16:01:52.610]     }, args = future.call.arguments)
[16:01:52.610] }
[16:01:52.610] Lazy evaluation: FALSE
[16:01:52.610] Asynchronous evaluation: TRUE
[16:01:52.610] Local evaluation: TRUE
[16:01:52.610] Environment: R_GlobalEnv
[16:01:52.610] Capture standard output: TRUE
[16:01:52.610] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.610] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.610] Packages: <none>
[16:01:52.610] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.610] Resolved: TRUE
[16:01:52.610] Value: <not collected>
[16:01:52.610] Conditions captured: <none>
[16:01:52.610] Early signaling: FALSE
[16:01:52.610] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.610] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.618] Chunk #1 of 1 ... DONE
[16:01:52.618] Launching 1 futures (chunks) ... DONE
[16:01:52.619] Resolving 1 futures (chunks) ...
[16:01:52.620]  - Number of value chunks collected: 1
[16:01:52.620] Resolving 1 futures (chunks) ... DONE
[16:01:52.621] Reducing values from 1 chunks ...
[16:01:52.621]  - Number of values collected after concatenation: 1
[16:01:52.621]  - Number of values expected: 1
[16:01:52.621] Reducing values from 1 chunks ... DONE
[16:01:52.621] future_lapply() ... DONE
[16:01:52.621] future_lapply() ...
[16:01:52.626] Number of chunks: 1
[16:01:52.626] getGlobalsAndPackagesXApply() ...
[16:01:52.626]  - future.globals: TRUE
[16:01:52.629]  - globals found/used: [n=1] ‘FUN’
[16:01:52.629]  - needed namespaces: [n=0] 
[16:01:52.629] Finding globals ... DONE
[16:01:52.630]  - use_args: TRUE
[16:01:52.630]  - Getting '...' globals ...
[16:01:52.630]    - '...' content: [n=1] ‘b’
[16:01:52.630] List of 1
[16:01:52.630]  $ ...:List of 1
[16:01:52.630]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:01:52.630]   .. .. ..@ slots     :List of 4
[16:01:52.630]   .. .. .. ..$ .Data  : chr "function"
[16:01:52.630]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. ..$ target : chr "signature"
[16:01:52.630]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. ..$ defined: chr "signature"
[16:01:52.630]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. ..$ generic: chr "character"
[16:01:52.630]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. ..@ contains  :List of 3
[16:01:52.630]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.630]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ superClass: chr "function"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.630]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.630]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.630]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.630]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.630]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.630]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.630]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.630]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.630]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.630]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.630]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.630]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.630]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.630]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.630]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.630]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ by        : chr "function"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.630]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.630]   .. .. ..@ virtual   : logi FALSE
[16:01:52.630]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:01:52.630]  list()
[16:01:52.630]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:01:52.630]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:52.630]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:52.630]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:52.630]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:01:52.630]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:52.630]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:52.630]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:52.630]   .. .. .. .. ..$ generic: chr(0) 
[16:01:52.630]   .. .. ..@ validity  : NULL
[16:01:52.630]   .. .. ..@ access    : list()
[16:01:52.630]   .. .. ..@ className : chr "MethodDefinition"
[16:01:52.630]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. ..@ subclasses:List of 7
[16:01:52.630]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.630]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.630]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.630]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.630]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.630]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.630]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.630]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.630]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.630]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.630]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.630]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.630]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.630]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.630]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.630]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.630]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.630]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.630]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.630]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.630]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.630]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.630]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.630]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.630]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.630]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.630]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.630]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.630]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.630]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.630]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.630]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.630]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.630]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.630]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.630]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.630]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.630]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.630]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.630]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.630]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.630]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.630]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.630]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.630]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.630]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:52.630]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.630]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.630]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.630]   .. .. ..@ versionKey:<externalptr> 
[16:01:52.630]   .. .. ..@ sealed    : logi TRUE
[16:01:52.630]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.630]  - attr(*, "where")=List of 1
[16:01:52.630]   ..$ ...:<environment: 0x55d6cfa1baf8> 
[16:01:52.630]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.630]  - attr(*, "resolved")= logi TRUE
[16:01:52.630]  - attr(*, "total_size")= num NA
[16:01:52.686]  - Getting '...' globals ... DONE
[16:01:52.687] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.687] List of 2
[16:01:52.687]  $ ...future.FUN:function (a, b)  
[16:01:52.687]  $ ...          :List of 1
[16:01:52.687]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:01:52.687]   .. .. ..@ slots     :List of 4
[16:01:52.687]   .. .. .. ..$ .Data  : chr "function"
[16:01:52.687]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. ..$ target : chr "signature"
[16:01:52.687]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. ..$ defined: chr "signature"
[16:01:52.687]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. ..$ generic: chr "character"
[16:01:52.687]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. ..@ contains  :List of 3
[16:01:52.687]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.687]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ superClass: chr "function"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.687]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.687]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.687]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.687]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.687]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.687]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.687]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.687]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.687]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ by        : chr "function"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.687]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.687]   .. .. ..@ virtual   : logi FALSE
[16:01:52.687]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:01:52.687]  list()
[16:01:52.687]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:01:52.687]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:52.687]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:52.687]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:52.687]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:01:52.687]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:52.687]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:52.687]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:52.687]   .. .. .. .. ..$ generic: chr(0) 
[16:01:52.687]   .. .. ..@ validity  : NULL
[16:01:52.687]   .. .. ..@ access    : list()
[16:01:52.687]   .. .. ..@ className : chr "MethodDefinition"
[16:01:52.687]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. ..@ subclasses:List of 7
[16:01:52.687]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.687]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.687]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.687]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.687]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.687]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.687]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.687]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.687]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.687]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.687]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.687]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.687]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.687]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.687]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:52.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.687]   .. .. .. .. .. ..@ distance  : num 1
[16:01:52.687]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.687]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.687]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.687]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.687]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.687]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.687]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.687]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.687]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:52.687]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:52.687]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:52.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:52.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:52.687]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:52.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:52.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:52.687]   .. .. .. .. .. ..@ distance  : num 2
[16:01:52.687]   .. .. ..@ versionKey:<externalptr> 
[16:01:52.687]   .. .. ..@ sealed    : logi TRUE
[16:01:52.687]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.687]  - attr(*, "where")=List of 2
[16:01:52.687]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.687]   ..$ ...          :<environment: 0x55d6cfa1baf8> 
[16:01:52.687]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.687]  - attr(*, "resolved")= logi FALSE
[16:01:52.687]  - attr(*, "total_size")= num 312512
[16:01:52.736] Packages to be attached in all futures: [n=0] 
[16:01:52.736] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.737] Number of futures (= number of chunks): 1
[16:01:52.737] Launching 1 futures (chunks) ...
[16:01:52.737] Chunk #1 of 1 ...
[16:01:52.737]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.737]    + additional globals found: [n=0] 
[16:01:52.737]    + additional namespaces needed: [n=0] 
[16:01:52.738]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.738]  - seeds: <none>
[16:01:52.738]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.746] Created future:
[16:01:52.746] MulticoreFuture:
[16:01:52.746] Label: ‘future_lapply-1’
[16:01:52.746] Expression:
[16:01:52.746] {
[16:01:52.746]     do.call(function(...) {
[16:01:52.746]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.746]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.746]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.746]             on.exit(options(oopts), add = TRUE)
[16:01:52.746]         }
[16:01:52.746]         {
[16:01:52.746]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.746]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.746]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.746]             })
[16:01:52.746]         }
[16:01:52.746]     }, args = future.call.arguments)
[16:01:52.746] }
[16:01:52.746] Lazy evaluation: FALSE
[16:01:52.746] Asynchronous evaluation: TRUE
[16:01:52.746] Local evaluation: TRUE
[16:01:52.746] Environment: R_GlobalEnv
[16:01:52.746] Capture standard output: TRUE
[16:01:52.746] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.746] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.746] Packages: <none>
[16:01:52.746] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.746] Resolved: TRUE
[16:01:52.746] Value: <not collected>
[16:01:52.746] Conditions captured: <none>
[16:01:52.746] Early signaling: FALSE
[16:01:52.746] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.746] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.755] Chunk #1 of 1 ... DONE
[16:01:52.755] Launching 1 futures (chunks) ... DONE
[16:01:52.755] Resolving 1 futures (chunks) ...
[16:01:52.757]  - Number of value chunks collected: 1
[16:01:52.757] Resolving 1 futures (chunks) ... DONE
[16:01:52.757] Reducing values from 1 chunks ...
[16:01:52.757]  - Number of values collected after concatenation: 1
[16:01:52.758]  - Number of values expected: 1
[16:01:52.758] Reducing values from 1 chunks ... DONE
[16:01:52.758] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:01:52.761] future_lapply() ...
[16:01:52.766] Number of chunks: 2
[16:01:52.766] getGlobalsAndPackagesXApply() ...
[16:01:52.766]  - future.globals: TRUE
[16:01:52.768]  - globals found/used: [n=1] ‘FUN’
[16:01:52.768]  - needed namespaces: [n=0] 
[16:01:52.768] Finding globals ... DONE
[16:01:52.768]  - use_args: TRUE
[16:01:52.768]  - Getting '...' globals ...
[16:01:52.769]    - '...' content: [n=0] 
[16:01:52.769] List of 1
[16:01:52.769]  $ ...: list()
[16:01:52.769]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.769]  - attr(*, "where")=List of 1
[16:01:52.769]   ..$ ...:<environment: 0x55d6cd44c758> 
[16:01:52.769]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.769]  - attr(*, "resolved")= logi TRUE
[16:01:52.769]  - attr(*, "total_size")= num NA
[16:01:52.772]  - Getting '...' globals ... DONE
[16:01:52.773] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:52.773] List of 2
[16:01:52.773]  $ ...future.FUN:function (f)  
[16:01:52.773]  $ ...          : list()
[16:01:52.773]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.773]  - attr(*, "where")=List of 2
[16:01:52.773]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.773]   ..$ ...          :<environment: 0x55d6cd44c758> 
[16:01:52.773]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.773]  - attr(*, "resolved")= logi FALSE
[16:01:52.773]  - attr(*, "total_size")= num 1008
[16:01:52.776] Packages to be attached in all futures: [n=0] 
[16:01:52.776] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.776] Number of futures (= number of chunks): 2
[16:01:52.776] Launching 2 futures (chunks) ...
[16:01:52.777] Chunk #1 of 2 ...
[16:01:52.777]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.779]    + additional globals found: [n=2] ‘a’, ‘b’
[16:01:52.779]    + additional namespaces needed: [n=0] 
[16:01:52.779]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.779]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:52.779]  - seeds: <none>
[16:01:52.779]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:01:52.788] Created future:
[16:01:52.789] MulticoreFuture:
[16:01:52.789] Label: ‘future_lapply-1’
[16:01:52.789] Expression:
[16:01:52.789] {
[16:01:52.789]     do.call(function(...) {
[16:01:52.789]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.789]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.789]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.789]             on.exit(options(oopts), add = TRUE)
[16:01:52.789]         }
[16:01:52.789]         {
[16:01:52.789]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.789]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.789]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.789]             })
[16:01:52.789]         }
[16:01:52.789]     }, args = future.call.arguments)
[16:01:52.789] }
[16:01:52.789] Lazy evaluation: FALSE
[16:01:52.789] Asynchronous evaluation: TRUE
[16:01:52.789] Local evaluation: TRUE
[16:01:52.789] Environment: R_GlobalEnv
[16:01:52.789] Capture standard output: TRUE
[16:01:52.789] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.789] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:01:52.789] Packages: <none>
[16:01:52.789] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.789] Resolved: TRUE
[16:01:52.789] Value: <not collected>
[16:01:52.789] Conditions captured: <none>
[16:01:52.789] Early signaling: FALSE
[16:01:52.789] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.789] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.797] Chunk #1 of 2 ... DONE
[16:01:52.798] Chunk #2 of 2 ...
[16:01:52.798]  - Finding globals in 'X' for chunk #2 ...
[16:01:52.801]    + additional globals found: [n=2] ‘a’, ‘b’
[16:01:52.802]    + additional namespaces needed: [n=1] ‘tools’
[16:01:52.802]  - Finding globals in 'X' for chunk #2 ... DONE
[16:01:52.802]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:52.802]  - seeds: <none>
[16:01:52.802]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:01:52.812] Created future:
[16:01:52.813] MulticoreFuture:
[16:01:52.813] Label: ‘future_lapply-2’
[16:01:52.813] Expression:
[16:01:52.813] {
[16:01:52.813]     do.call(function(...) {
[16:01:52.813]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.813]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.813]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.813]             on.exit(options(oopts), add = TRUE)
[16:01:52.813]         }
[16:01:52.813]         {
[16:01:52.813]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.813]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.813]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.813]             })
[16:01:52.813]         }
[16:01:52.813]     }, args = future.call.arguments)
[16:01:52.813] }
[16:01:52.813] Lazy evaluation: FALSE
[16:01:52.813] Asynchronous evaluation: TRUE
[16:01:52.813] Local evaluation: TRUE
[16:01:52.813] Environment: R_GlobalEnv
[16:01:52.813] Capture standard output: TRUE
[16:01:52.813] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.813] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:01:52.813] Packages: 1 packages (‘tools’)
[16:01:52.813] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.813] Resolved: TRUE
[16:01:52.813] Value: <not collected>
[16:01:52.813] Conditions captured: <none>
[16:01:52.813] Early signaling: FALSE
[16:01:52.813] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.813] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.822] Chunk #2 of 2 ... DONE
[16:01:52.822] Launching 2 futures (chunks) ... DONE
[16:01:52.823] Resolving 2 futures (chunks) ...
[16:01:52.826]  - Number of value chunks collected: 2
[16:01:52.826] Resolving 2 futures (chunks) ... DONE
[16:01:52.826] Reducing values from 2 chunks ...
[16:01:52.826]  - Number of values collected after concatenation: 4
[16:01:52.826]  - Number of values expected: 4
[16:01:52.827] Reducing values from 2 chunks ... DONE
[16:01:52.827] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:01:52.833] future_lapply() ...
[16:01:52.838] Number of chunks: 1
[16:01:52.838] getGlobalsAndPackagesXApply() ...
[16:01:52.838]  - future.globals: TRUE
[16:01:52.841]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:01:52.841]  - needed namespaces: [n=0] 
[16:01:52.841] Finding globals ... DONE
[16:01:52.841]  - use_args: TRUE
[16:01:52.842]  - Getting '...' globals ...
[16:01:52.842]    - '...' content: [n=0] 
[16:01:52.842] List of 1
[16:01:52.842]  $ ...: list()
[16:01:52.842]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.842]  - attr(*, "where")=List of 1
[16:01:52.842]   ..$ ...:<environment: 0x55d6cf2bc458> 
[16:01:52.842]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.842]  - attr(*, "resolved")= logi TRUE
[16:01:52.842]  - attr(*, "total_size")= num NA
[16:01:52.845]  - Getting '...' globals ... DONE
[16:01:52.845] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:01:52.846] List of 3
[16:01:52.846]  $ ...future.FUN        :function (x)  
[16:01:52.846]  $ future.call.arguments:List of 1
[16:01:52.846]   ..$ a: num 1
[16:01:52.846]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.846]  $ ...                  : list()
[16:01:52.846]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.846]  - attr(*, "where")=List of 3
[16:01:52.846]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:01:52.846]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:01:52.846]   ..$ ...                  :<environment: 0x55d6cf2bc458> 
[16:01:52.846]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.846]  - attr(*, "resolved")= logi FALSE
[16:01:52.846]  - attr(*, "total_size")= num 1272
[16:01:52.850] Packages to be attached in all futures: [n=0] 
[16:01:52.850] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.851] Number of futures (= number of chunks): 1
[16:01:52.851] Launching 1 futures (chunks) ...
[16:01:52.851] Chunk #1 of 1 ...
[16:01:52.851]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.851]    + additional globals found: [n=0] 
[16:01:52.851]    + additional namespaces needed: [n=0] 
[16:01:52.852]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.852]  - seeds: <none>
[16:01:52.852]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.861] Created future:
[16:01:52.861] MulticoreFuture:
[16:01:52.861] Label: ‘future_lapply-1’
[16:01:52.861] Expression:
[16:01:52.861] {
[16:01:52.861]     do.call(function(...) {
[16:01:52.861]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.861]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.861]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.861]             on.exit(options(oopts), add = TRUE)
[16:01:52.861]         }
[16:01:52.861]         {
[16:01:52.861]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.861]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.861]                 ...future.FUN(...future.X_jj)
[16:01:52.861]             })
[16:01:52.861]         }
[16:01:52.861]     }, args = future.call.arguments)
[16:01:52.861] }
[16:01:52.861] Lazy evaluation: FALSE
[16:01:52.861] Asynchronous evaluation: TRUE
[16:01:52.861] Local evaluation: TRUE
[16:01:52.861] Environment: 0x55d6cf2bc0d8
[16:01:52.861] Capture standard output: TRUE
[16:01:52.861] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.861] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:52.861] Packages: <none>
[16:01:52.861] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.861] Resolved: TRUE
[16:01:52.861] Value: <not collected>
[16:01:52.861] Conditions captured: <none>
[16:01:52.861] Early signaling: FALSE
[16:01:52.861] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.861] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.870] Chunk #1 of 1 ... DONE
[16:01:52.870] Launching 1 futures (chunks) ... DONE
[16:01:52.870] Resolving 1 futures (chunks) ...
[16:01:52.872]  - Number of value chunks collected: 1
[16:01:52.872] Resolving 1 futures (chunks) ... DONE
[16:01:52.872] Reducing values from 1 chunks ...
[16:01:52.872]  - Number of values collected after concatenation: 1
[16:01:52.872]  - Number of values expected: 1
[16:01:52.872] Reducing values from 1 chunks ... DONE
[16:01:52.873] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:01:52.875] future_lapply() ...
[16:01:52.880] Number of chunks: 1
[16:01:52.880] getGlobalsAndPackagesXApply() ...
[16:01:52.880]  - future.globals: TRUE
[16:01:52.883]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:01:52.884]  - needed namespaces: [n=0] 
[16:01:52.884] Finding globals ... DONE
[16:01:52.884]  - use_args: TRUE
[16:01:52.884]  - Getting '...' globals ...
[16:01:52.884]    - '...' content: [n=0] 
[16:01:52.884] List of 1
[16:01:52.884]  $ ...: list()
[16:01:52.884]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.884]  - attr(*, "where")=List of 1
[16:01:52.884]   ..$ ...:<environment: 0x55d6cd731320> 
[16:01:52.884]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.884]  - attr(*, "resolved")= logi TRUE
[16:01:52.884]  - attr(*, "total_size")= num NA
[16:01:52.887]  - Getting '...' globals ... DONE
[16:01:52.888] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:01:52.888] List of 3
[16:01:52.888]  $ ...future.FUN:function (ii)  
[16:01:52.888]  $ a            : num 1
[16:01:52.888]  $ ...          : list()
[16:01:52.888]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.888]  - attr(*, "where")=List of 3
[16:01:52.888]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.888]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:52.888]   ..$ ...          :<environment: 0x55d6cd731320> 
[16:01:52.888]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.888]  - attr(*, "resolved")= logi FALSE
[16:01:52.888]  - attr(*, "total_size")= num 2984
[16:01:52.892] Packages to be attached in all futures: [n=0] 
[16:01:52.892] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.892] Number of futures (= number of chunks): 1
[16:01:52.892] Launching 1 futures (chunks) ...
[16:01:52.892] Chunk #1 of 1 ...
[16:01:52.892]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.893]    + additional globals found: [n=0] 
[16:01:52.893]    + additional namespaces needed: [n=0] 
[16:01:52.893]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.893]  - seeds: <none>
[16:01:52.893]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.901] Created future:
[16:01:52.902] MulticoreFuture:
[16:01:52.902] Label: ‘future_lapply-1’
[16:01:52.902] Expression:
[16:01:52.902] {
[16:01:52.902]     do.call(function(...) {
[16:01:52.902]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.902]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.902]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.902]             on.exit(options(oopts), add = TRUE)
[16:01:52.902]         }
[16:01:52.902]         {
[16:01:52.902]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.902]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.902]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.902]             })
[16:01:52.902]         }
[16:01:52.902]     }, args = future.call.arguments)
[16:01:52.902] }
[16:01:52.902] Lazy evaluation: FALSE
[16:01:52.902] Asynchronous evaluation: TRUE
[16:01:52.902] Local evaluation: TRUE
[16:01:52.902] Environment: R_GlobalEnv
[16:01:52.902] Capture standard output: TRUE
[16:01:52.902] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.902] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:01:52.902] Packages: <none>
[16:01:52.902] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.902] Resolved: TRUE
[16:01:52.902] Value: <not collected>
[16:01:52.902] Conditions captured: <none>
[16:01:52.902] Early signaling: FALSE
[16:01:52.902] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.902] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.910] Chunk #1 of 1 ... DONE
[16:01:52.910] Launching 1 futures (chunks) ... DONE
[16:01:52.910] Resolving 1 futures (chunks) ...
[16:01:52.912]  - Number of value chunks collected: 1
[16:01:52.912] Resolving 1 futures (chunks) ... DONE
[16:01:52.912] Reducing values from 1 chunks ...
[16:01:52.912]  - Number of values collected after concatenation: 1
[16:01:52.913]  - Number of values expected: 1
[16:01:52.913] Reducing values from 1 chunks ... DONE
[16:01:52.913] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:01:52.913] future_lapply() ...
[16:01:52.918] Number of chunks: 1
[16:01:52.918] getGlobalsAndPackagesXApply() ...
[16:01:52.918]  - future.globals: TRUE
[16:01:52.923]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:01:52.924]  - needed namespaces: [n=0] 
[16:01:52.924] Finding globals ... DONE
[16:01:52.924]  - use_args: TRUE
[16:01:52.924]  - Getting '...' globals ...
[16:01:52.924]    - '...' content: [n=0] 
[16:01:52.924] List of 1
[16:01:52.924]  $ ...: list()
[16:01:52.924]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.924]  - attr(*, "where")=List of 1
[16:01:52.924]   ..$ ...:<environment: 0x55d6d0197a48> 
[16:01:52.924]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.924]  - attr(*, "resolved")= logi TRUE
[16:01:52.924]  - attr(*, "total_size")= num NA
[16:01:52.928]  - Getting '...' globals ... DONE
[16:01:52.928] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:01:52.928] List of 3
[16:01:52.928]  $ ...future.FUN:function (ii)  
[16:01:52.928]  $ a            : num 1
[16:01:52.928]  $ ...          : list()
[16:01:52.928]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.928]  - attr(*, "where")=List of 3
[16:01:52.928]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:52.928]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:52.928]   ..$ ...          :<environment: 0x55d6d0197a48> 
[16:01:52.928]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.928]  - attr(*, "resolved")= logi FALSE
[16:01:52.928]  - attr(*, "total_size")= num 2984
[16:01:52.932] Packages to be attached in all futures: [n=0] 
[16:01:52.932] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.932] Number of futures (= number of chunks): 1
[16:01:52.933] Launching 1 futures (chunks) ...
[16:01:52.933] Chunk #1 of 1 ...
[16:01:52.933]  - Finding globals in 'X' for chunk #1 ...
[16:01:52.933]    + additional globals found: [n=0] 
[16:01:52.933]    + additional namespaces needed: [n=0] 
[16:01:52.933]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:52.933]  - seeds: <none>
[16:01:52.934]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.942] Created future:
[16:01:52.942] MulticoreFuture:
[16:01:52.942] Label: ‘future_lapply-1’
[16:01:52.942] Expression:
[16:01:52.942] {
[16:01:52.942]     do.call(function(...) {
[16:01:52.942]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.942]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.942]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.942]             on.exit(options(oopts), add = TRUE)
[16:01:52.942]         }
[16:01:52.942]         {
[16:01:52.942]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.942]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.942]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.942]             })
[16:01:52.942]         }
[16:01:52.942]     }, args = future.call.arguments)
[16:01:52.942] }
[16:01:52.942] Lazy evaluation: FALSE
[16:01:52.942] Asynchronous evaluation: TRUE
[16:01:52.942] Local evaluation: TRUE
[16:01:52.942] Environment: R_GlobalEnv
[16:01:52.942] Capture standard output: TRUE
[16:01:52.942] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.942] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:01:52.942] Packages: <none>
[16:01:52.942] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.942] Resolved: TRUE
[16:01:52.942] Value: <not collected>
[16:01:52.942] Conditions captured: <none>
[16:01:52.942] Early signaling: FALSE
[16:01:52.942] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.942] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.951] Chunk #1 of 1 ... DONE
[16:01:52.951] Launching 1 futures (chunks) ... DONE
[16:01:52.951] Resolving 1 futures (chunks) ...
[16:01:52.953]  - Number of value chunks collected: 1
[16:01:52.953] Resolving 1 futures (chunks) ... DONE
[16:01:52.953] Reducing values from 1 chunks ...
[16:01:52.953]  - Number of values collected after concatenation: 1
[16:01:52.953]  - Number of values expected: 1
[16:01:52.953] Reducing values from 1 chunks ... DONE
[16:01:52.954] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:01:52.954] future_lapply() ...
[16:01:52.958] Number of chunks: 1
[16:01:52.959] getGlobalsAndPackagesXApply() ...
[16:01:52.959]  - future.globals: <name-value list> with names ‘42’
[16:01:52.959]  - use_args: TRUE
[16:01:52.959]  - Getting '...' globals ...
[16:01:52.960]    - '...' content: [n=0] 
[16:01:52.960] List of 1
[16:01:52.960]  $ ...: list()
[16:01:52.960]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.960]  - attr(*, "where")=List of 1
[16:01:52.960]   ..$ ...:<environment: 0x55d6ce947f10> 
[16:01:52.960]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.960]  - attr(*, "resolved")= logi TRUE
[16:01:52.960]  - attr(*, "total_size")= num NA
[16:01:52.963]  - Getting '...' globals ... DONE
[16:01:52.963] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:01:52.964] List of 3
[16:01:52.964]  $ a            : num 42
[16:01:52.964]  $ ...future.FUN:function (x)  
[16:01:52.964]  $ ...          : list()
[16:01:52.964]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:52.964]  - attr(*, "where")=List of 3
[16:01:52.964]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:52.964]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:01:52.964]   ..$ ...          :<environment: 0x55d6ce947f10> 
[16:01:52.964]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:52.964]  - attr(*, "resolved")= logi FALSE
[16:01:52.964]  - attr(*, "total_size")= num NA
[16:01:52.968] Packages to be attached in all futures: [n=0] 
[16:01:52.968] getGlobalsAndPackagesXApply() ... DONE
[16:01:52.968] Number of futures (= number of chunks): 1
[16:01:52.968] Launching 1 futures (chunks) ...
[16:01:52.968] Chunk #1 of 1 ...
[16:01:52.968]  - seeds: <none>
[16:01:52.969]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:52.977] Created future:
[16:01:52.978] MulticoreFuture:
[16:01:52.978] Label: ‘future_lapply-1’
[16:01:52.978] Expression:
[16:01:52.978] {
[16:01:52.978]     do.call(function(...) {
[16:01:52.978]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:52.978]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:52.978]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:52.978]             on.exit(options(oopts), add = TRUE)
[16:01:52.978]         }
[16:01:52.978]         {
[16:01:52.978]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:52.978]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:52.978]                 ...future.FUN(...future.X_jj, ...)
[16:01:52.978]             })
[16:01:52.978]         }
[16:01:52.978]     }, args = future.call.arguments)
[16:01:52.978] }
[16:01:52.978] Lazy evaluation: FALSE
[16:01:52.978] Asynchronous evaluation: TRUE
[16:01:52.978] Local evaluation: TRUE
[16:01:52.978] Environment: R_GlobalEnv
[16:01:52.978] Capture standard output: TRUE
[16:01:52.978] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:52.978] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:01:52.978] Packages: <none>
[16:01:52.978] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:52.978] Resolved: TRUE
[16:01:52.978] Value: <not collected>
[16:01:52.978] Conditions captured: <none>
[16:01:52.978] Early signaling: FALSE
[16:01:52.978] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:52.978] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:52.986] Chunk #1 of 1 ... DONE
[16:01:52.987] Launching 1 futures (chunks) ... DONE
[16:01:52.987] Resolving 1 futures (chunks) ...
[16:01:52.988]  - Number of value chunks collected: 1
[16:01:52.989] Resolving 1 futures (chunks) ... DONE
[16:01:52.989] Reducing values from 1 chunks ...
[16:01:52.989]  - Number of values collected after concatenation: 1
[16:01:52.989]  - Number of values expected: 1
[16:01:52.989] Reducing values from 1 chunks ... DONE
[16:01:52.989] future_lapply() ... DONE
List of 1
 $ : num 42
[16:01:53.370] future_lapply() ...
[16:01:53.375] Number of chunks: 2
[16:01:53.375] getGlobalsAndPackagesXApply() ...
[16:01:53.375]  - future.globals: TRUE
[16:01:53.383]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:01:53.383]  - needed namespaces: [n=0] 
[16:01:53.384] Finding globals ... DONE
[16:01:53.384]  - use_args: TRUE
[16:01:53.384]  - Getting '...' globals ...
[16:01:53.384]    - '...' content: [n=0] 
[16:01:53.384] List of 1
[16:01:53.384]  $ ...: list()
[16:01:53.384]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:53.384]  - attr(*, "where")=List of 1
[16:01:53.384]   ..$ ...:<environment: 0x55d6d00a5218> 
[16:01:53.384]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:53.384]  - attr(*, "resolved")= logi TRUE
[16:01:53.384]  - attr(*, "total_size")= num NA
[16:01:53.387]  - Getting '...' globals ... DONE
[16:01:53.388] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:01:53.388] List of 6
[16:01:53.388]  $ ...future.FUN:function (i)  
[16:01:53.388]  $ caller       :function (a, b, FUN = call_my_add)  
[16:01:53.388]  $ args         :List of 1
[16:01:53.388]   ..$ FUN:function (a, b)  
[16:01:53.388]  $ call_my_add  :function (a, b)  
[16:01:53.388]  $ my_add       :function (a, b)  
[16:01:53.388]  $ ...          : list()
[16:01:53.388]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:53.388]  - attr(*, "where")=List of 6
[16:01:53.388]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:53.388]   ..$ caller       :<environment: R_EmptyEnv> 
[16:01:53.388]   ..$ args         :<environment: R_EmptyEnv> 
[16:01:53.388]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:01:53.388]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:01:53.388]   ..$ ...          :<environment: 0x55d6d00a5218> 
[16:01:53.388]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:53.388]  - attr(*, "resolved")= logi FALSE
[16:01:53.388]  - attr(*, "total_size")= num 24120
[16:01:53.393] Packages to be attached in all futures: [n=0] 
[16:01:53.393] getGlobalsAndPackagesXApply() ... DONE
[16:01:53.394] Number of futures (= number of chunks): 2
[16:01:53.394] Launching 2 futures (chunks) ...
[16:01:53.394] Chunk #1 of 2 ...
[16:01:53.394]  - Finding globals in 'X' for chunk #1 ...
[16:01:53.394]    + additional globals found: [n=0] 
[16:01:53.394]    + additional namespaces needed: [n=0] 
[16:01:53.395]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:53.395]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:53.395]  - seeds: <none>
[16:01:53.395]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:53.457] Created future:
[16:01:53.458] MultisessionFuture:
[16:01:53.458] Label: ‘future_lapply-1’
[16:01:53.458] Expression:
[16:01:53.458] {
[16:01:53.458]     do.call(function(...) {
[16:01:53.458]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:53.458]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:53.458]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:53.458]             on.exit(options(oopts), add = TRUE)
[16:01:53.458]         }
[16:01:53.458]         {
[16:01:53.458]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:53.458]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:53.458]                 ...future.FUN(...future.X_jj, ...)
[16:01:53.458]             })
[16:01:53.458]         }
[16:01:53.458]     }, args = future.call.arguments)
[16:01:53.458] }
[16:01:53.458] Lazy evaluation: FALSE
[16:01:53.458] Asynchronous evaluation: TRUE
[16:01:53.458] Local evaluation: TRUE
[16:01:53.458] Environment: 0x55d6d00a5640
[16:01:53.458] Capture standard output: TRUE
[16:01:53.458] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:53.458] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:01:53.458] Packages: <none>
[16:01:53.458] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:53.458] Resolved: FALSE
[16:01:53.458] Value: <not collected>
[16:01:53.458] Conditions captured: <none>
[16:01:53.458] Early signaling: FALSE
[16:01:53.458] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:53.458] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:53.470] Chunk #1 of 2 ... DONE
[16:01:53.470] Chunk #2 of 2 ...
[16:01:53.470]  - Finding globals in 'X' for chunk #2 ...
[16:01:53.470]    + additional globals found: [n=0] 
[16:01:53.471]    + additional namespaces needed: [n=0] 
[16:01:53.471]  - Finding globals in 'X' for chunk #2 ... DONE
[16:01:53.471]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:53.471]  - seeds: <none>
[16:01:53.471]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:53.542] Created future:
[16:01:53.543] MultisessionFuture:
[16:01:53.543] Label: ‘future_lapply-2’
[16:01:53.543] Expression:
[16:01:53.543] {
[16:01:53.543]     do.call(function(...) {
[16:01:53.543]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:53.543]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:53.543]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:53.543]             on.exit(options(oopts), add = TRUE)
[16:01:53.543]         }
[16:01:53.543]         {
[16:01:53.543]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:53.543]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:53.543]                 ...future.FUN(...future.X_jj, ...)
[16:01:53.543]             })
[16:01:53.543]         }
[16:01:53.543]     }, args = future.call.arguments)
[16:01:53.543] }
[16:01:53.543] Lazy evaluation: FALSE
[16:01:53.543] Asynchronous evaluation: TRUE
[16:01:53.543] Local evaluation: TRUE
[16:01:53.543] Environment: 0x55d6d00a5640
[16:01:53.543] Capture standard output: TRUE
[16:01:53.543] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:53.543] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:01:53.543] Packages: <none>
[16:01:53.543] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:53.543] Resolved: FALSE
[16:01:53.543] Value: <not collected>
[16:01:53.543] Conditions captured: <none>
[16:01:53.543] Early signaling: FALSE
[16:01:53.543] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:53.543] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:53.555] Chunk #2 of 2 ... DONE
[16:01:53.555] Launching 2 futures (chunks) ... DONE
[16:01:53.555] Resolving 2 futures (chunks) ...
[16:01:53.640]  - Number of value chunks collected: 2
[16:01:53.640] Resolving 2 futures (chunks) ... DONE
[16:01:53.640] Reducing values from 2 chunks ...
[16:01:53.640]  - Number of values collected after concatenation: 3
[16:01:53.640]  - Number of values expected: 3
[16:01:53.640] Reducing values from 2 chunks ... DONE
[16:01:53.640] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:01:53.641] future_lapply() ...
[16:01:53.645] Number of chunks: 1
[16:01:53.645] getGlobalsAndPackagesXApply() ...
[16:01:53.645]  - future.globals: TRUE
[16:01:53.648]  - globals found/used: [n=1] ‘FUN’
[16:01:53.648]  - needed namespaces: [n=0] 
[16:01:53.648] Finding globals ... DONE
[16:01:53.648]  - use_args: TRUE
[16:01:53.649]  - Getting '...' globals ...
[16:01:53.649]    - '...' content: [n=1] ‘what’
[16:01:53.649] List of 1
[16:01:53.649]  $ ...:List of 1
[16:01:53.649]   ..$ what:function (x)  
[16:01:53.649]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:53.649]  - attr(*, "where")=List of 1
[16:01:53.649]   ..$ ...:<environment: 0x55d6cfab3ef0> 
[16:01:53.649]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:53.649]  - attr(*, "resolved")= logi TRUE
[16:01:53.649]  - attr(*, "total_size")= num NA
[16:01:53.652]  - Getting '...' globals ... DONE
[16:01:53.652] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:53.652] List of 2
[16:01:53.652]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:01:53.652]  $ ...          :List of 1
[16:01:53.652]   ..$ what:function (x)  
[16:01:53.652]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:53.652]  - attr(*, "where")=List of 2
[16:01:53.652]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:53.652]   ..$ ...          :<environment: 0x55d6cfab3ef0> 
[16:01:53.652]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:53.652]  - attr(*, "resolved")= logi FALSE
[16:01:53.652]  - attr(*, "total_size")= num 12192
[16:01:53.655] Packages to be attached in all futures: [n=0] 
[16:01:53.655] getGlobalsAndPackagesXApply() ... DONE
[16:01:53.655] Number of futures (= number of chunks): 1
[16:01:53.656] Launching 1 futures (chunks) ...
[16:01:53.656] Chunk #1 of 1 ...
[16:01:53.656]  - Finding globals in 'X' for chunk #1 ...
[16:01:53.665]    + additional globals found: [n=0] 
[16:01:53.665]    + additional namespaces needed: [n=0] 
[16:01:53.665]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:53.665]  - seeds: <none>
[16:01:53.666]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:53.683] Created future:
[16:01:53.683] MultisessionFuture:
[16:01:53.683] Label: ‘future_lapply-1’
[16:01:53.683] Expression:
[16:01:53.683] {
[16:01:53.683]     do.call(function(...) {
[16:01:53.683]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:53.683]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:53.683]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:53.683]             on.exit(options(oopts), add = TRUE)
[16:01:53.683]         }
[16:01:53.683]         {
[16:01:53.683]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:53.683]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:53.683]                 ...future.FUN(...future.X_jj, ...)
[16:01:53.683]             })
[16:01:53.683]         }
[16:01:53.683]     }, args = future.call.arguments)
[16:01:53.683] }
[16:01:53.683] Lazy evaluation: FALSE
[16:01:53.683] Asynchronous evaluation: TRUE
[16:01:53.683] Local evaluation: TRUE
[16:01:53.683] Environment: R_GlobalEnv
[16:01:53.683] Capture standard output: TRUE
[16:01:53.683] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:53.683] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:53.683] Packages: <none>
[16:01:53.683] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:53.683] Resolved: FALSE
[16:01:53.683] Value: <not collected>
[16:01:53.683] Conditions captured: <none>
[16:01:53.683] Early signaling: FALSE
[16:01:53.683] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:53.683] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:53.694] Chunk #1 of 1 ... DONE
[16:01:53.694] Launching 1 futures (chunks) ... DONE
[16:01:53.695] Resolving 1 futures (chunks) ...
[16:01:53.737]  - Number of value chunks collected: 1
[16:01:53.737] Resolving 1 futures (chunks) ... DONE
[16:01:53.737] Reducing values from 1 chunks ...
[16:01:53.737]  - Number of values collected after concatenation: 1
[16:01:53.737]  - Number of values expected: 1
[16:01:53.737] Reducing values from 1 chunks ... DONE
[16:01:53.737] future_lapply() ... DONE
[16:01:53.737] future_lapply() ...
[16:01:53.742] Number of chunks: 1
[16:01:53.742] getGlobalsAndPackagesXApply() ...
[16:01:53.742]  - future.globals: TRUE
[16:01:53.745]  - globals found/used: [n=1] ‘FUN’
[16:01:53.745]  - needed namespaces: [n=0] 
[16:01:53.745] Finding globals ... DONE
[16:01:53.745]  - use_args: TRUE
[16:01:53.745]  - Getting '...' globals ...
[16:01:53.745]    - '...' content: [n=1] ‘what’
[16:01:53.746] List of 1
[16:01:53.746]  $ ...:List of 1
[16:01:53.746]   ..$ what:function (...)  
[16:01:53.746]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:53.746]  - attr(*, "where")=List of 1
[16:01:53.746]   ..$ ...:<environment: 0x55d6cec48c10> 
[16:01:53.746]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:53.746]  - attr(*, "resolved")= logi TRUE
[16:01:53.746]  - attr(*, "total_size")= num NA
[16:01:53.748]  - Getting '...' globals ... DONE
[16:01:53.749] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:53.749] List of 2
[16:01:53.749]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:01:53.749]  $ ...          :List of 1
[16:01:53.749]   ..$ what:function (...)  
[16:01:53.749]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:53.749]  - attr(*, "where")=List of 2
[16:01:53.749]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:53.749]   ..$ ...          :<environment: 0x55d6cec48c10> 
[16:01:53.749]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:53.749]  - attr(*, "resolved")= logi FALSE
[16:01:53.749]  - attr(*, "total_size")= num 13352
[16:01:53.752] Packages to be attached in all futures: [n=0] 
[16:01:53.752] getGlobalsAndPackagesXApply() ... DONE
[16:01:53.752] Number of futures (= number of chunks): 1
[16:01:53.752] Launching 1 futures (chunks) ...
[16:01:53.752] Chunk #1 of 1 ...
[16:01:53.752]  - Finding globals in 'X' for chunk #1 ...
[16:01:53.753]    + additional globals found: [n=0] 
[16:01:53.753]    + additional namespaces needed: [n=0] 
[16:01:53.753]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:53.753]  - seeds: <none>
[16:01:53.753]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:53.771] Created future:
[16:01:53.771] MultisessionFuture:
[16:01:53.771] Label: ‘future_lapply-1’
[16:01:53.771] Expression:
[16:01:53.771] {
[16:01:53.771]     do.call(function(...) {
[16:01:53.771]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:53.771]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:53.771]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:53.771]             on.exit(options(oopts), add = TRUE)
[16:01:53.771]         }
[16:01:53.771]         {
[16:01:53.771]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:53.771]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:53.771]                 ...future.FUN(...future.X_jj, ...)
[16:01:53.771]             })
[16:01:53.771]         }
[16:01:53.771]     }, args = future.call.arguments)
[16:01:53.771] }
[16:01:53.771] Lazy evaluation: FALSE
[16:01:53.771] Asynchronous evaluation: TRUE
[16:01:53.771] Local evaluation: TRUE
[16:01:53.771] Environment: R_GlobalEnv
[16:01:53.771] Capture standard output: TRUE
[16:01:53.771] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:53.771] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:53.771] Packages: <none>
[16:01:53.771] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:53.771] Resolved: FALSE
[16:01:53.771] Value: <not collected>
[16:01:53.771] Conditions captured: <none>
[16:01:53.771] Early signaling: FALSE
[16:01:53.771] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:53.771] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:53.782] Chunk #1 of 1 ... DONE
[16:01:53.783] Launching 1 futures (chunks) ... DONE
[16:01:53.783] Resolving 1 futures (chunks) ...
[16:01:53.825]  - Number of value chunks collected: 1
[16:01:53.825] Resolving 1 futures (chunks) ... DONE
[16:01:53.825] Reducing values from 1 chunks ...
[16:01:53.825]  - Number of values collected after concatenation: 1
[16:01:53.825]  - Number of values expected: 1
[16:01:53.825] Reducing values from 1 chunks ... DONE
[16:01:53.826] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:01:53.826] future_lapply() ...
[16:01:53.830] Number of chunks: 1
[16:01:53.830] getGlobalsAndPackagesXApply() ...
[16:01:53.830]  - future.globals: TRUE
[16:01:53.832]  - globals found/used: [n=1] ‘FUN’
[16:01:53.832]  - needed namespaces: [n=0] 
[16:01:53.832] Finding globals ... DONE
[16:01:53.832]  - use_args: TRUE
[16:01:53.832]  - Getting '...' globals ...
[16:01:53.832]    - '...' content: [n=1] ‘b’
[16:01:53.833] List of 1
[16:01:53.833]  $ ...:List of 1
[16:01:53.833]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:01:53.833]   .. ..$ a: int [1:2] 1 2
[16:01:53.833]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:53.833]  - attr(*, "where")=List of 1
[16:01:53.833]   ..$ ...:<environment: 0x55d6cf247fe8> 
[16:01:53.833]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:53.833]  - attr(*, "resolved")= logi TRUE
[16:01:53.833]  - attr(*, "total_size")= num NA
[16:01:53.836]  - Getting '...' globals ... DONE
[16:01:53.836] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:53.836] List of 2
[16:01:53.836]  $ ...future.FUN:function (a, b)  
[16:01:53.836]  $ ...          :List of 1
[16:01:53.836]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:01:53.836]   .. ..$ a: int [1:2] 1 2
[16:01:53.836]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:53.836]  - attr(*, "where")=List of 2
[16:01:53.836]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:53.836]   ..$ ...          :<environment: 0x55d6cf247fe8> 
[16:01:53.836]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:53.836]  - attr(*, "resolved")= logi FALSE
[16:01:53.836]  - attr(*, "total_size")= num 1440
[16:01:53.840] Packages to be attached in all futures: [n=0] 
[16:01:53.840] getGlobalsAndPackagesXApply() ... DONE
[16:01:53.840] Number of futures (= number of chunks): 1
[16:01:53.840] Launching 1 futures (chunks) ...
[16:01:53.840] Chunk #1 of 1 ...
[16:01:53.840]  - Finding globals in 'X' for chunk #1 ...
[16:01:53.841]    + additional globals found: [n=0] 
[16:01:53.841]    + additional namespaces needed: [n=0] 
[16:01:53.841]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:53.841]  - seeds: <none>
[16:01:53.841]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:53.864] Created future:
[16:01:53.864] MultisessionFuture:
[16:01:53.864] Label: ‘future_lapply-1’
[16:01:53.864] Expression:
[16:01:53.864] {
[16:01:53.864]     do.call(function(...) {
[16:01:53.864]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:53.864]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:53.864]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:53.864]             on.exit(options(oopts), add = TRUE)
[16:01:53.864]         }
[16:01:53.864]         {
[16:01:53.864]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:53.864]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:53.864]                 ...future.FUN(...future.X_jj, ...)
[16:01:53.864]             })
[16:01:53.864]         }
[16:01:53.864]     }, args = future.call.arguments)
[16:01:53.864] }
[16:01:53.864] Lazy evaluation: FALSE
[16:01:53.864] Asynchronous evaluation: TRUE
[16:01:53.864] Local evaluation: TRUE
[16:01:53.864] Environment: R_GlobalEnv
[16:01:53.864] Capture standard output: TRUE
[16:01:53.864] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:53.864] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:53.864] Packages: <none>
[16:01:53.864] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:53.864] Resolved: FALSE
[16:01:53.864] Value: <not collected>
[16:01:53.864] Conditions captured: <none>
[16:01:53.864] Early signaling: FALSE
[16:01:53.864] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:53.864] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:53.875] Chunk #1 of 1 ... DONE
[16:01:53.875] Launching 1 futures (chunks) ... DONE
[16:01:53.876] Resolving 1 futures (chunks) ...
[16:01:53.918]  - Number of value chunks collected: 1
[16:01:53.918] Resolving 1 futures (chunks) ... DONE
[16:01:53.918] Reducing values from 1 chunks ...
[16:01:53.918]  - Number of values collected after concatenation: 1
[16:01:53.918]  - Number of values expected: 1
[16:01:53.918] Reducing values from 1 chunks ... DONE
[16:01:53.918] future_lapply() ... DONE
[16:01:53.919] future_lapply() ...
[16:01:53.922] Number of chunks: 1
[16:01:53.922] getGlobalsAndPackagesXApply() ...
[16:01:53.923]  - future.globals: TRUE
[16:01:53.924]  - globals found/used: [n=1] ‘FUN’
[16:01:53.924]  - needed namespaces: [n=0] 
[16:01:53.925] Finding globals ... DONE
[16:01:53.925]  - use_args: TRUE
[16:01:53.925]  - Getting '...' globals ...
[16:01:53.925]    - '...' content: [n=1] ‘b’
[16:01:53.925] List of 1
[16:01:53.925]  $ ...:List of 1
[16:01:53.925]   ..$ b:<environment: 0x55d6cef28400> 
[16:01:53.925]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:53.925]  - attr(*, "where")=List of 1
[16:01:53.925]   ..$ ...:<environment: 0x55d6cef28eb8> 
[16:01:53.925]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:53.925]  - attr(*, "resolved")= logi TRUE
[16:01:53.925]  - attr(*, "total_size")= num NA
[16:01:53.928]  - Getting '...' globals ... DONE
[16:01:53.928] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:53.928] List of 2
[16:01:53.928]  $ ...future.FUN:function (a, b)  
[16:01:53.928]  $ ...          :List of 1
[16:01:53.928]   ..$ b:<environment: 0x55d6cef28400> 
[16:01:53.928]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:53.928]  - attr(*, "where")=List of 2
[16:01:53.928]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:53.928]   ..$ ...          :<environment: 0x55d6cef28eb8> 
[16:01:53.928]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:53.928]  - attr(*, "resolved")= logi FALSE
[16:01:53.928]  - attr(*, "total_size")= num 1440
[16:01:53.931] Packages to be attached in all futures: [n=0] 
[16:01:53.931] getGlobalsAndPackagesXApply() ... DONE
[16:01:53.932] Number of futures (= number of chunks): 1
[16:01:53.932] Launching 1 futures (chunks) ...
[16:01:53.932] Chunk #1 of 1 ...
[16:01:53.932]  - Finding globals in 'X' for chunk #1 ...
[16:01:53.932]    + additional globals found: [n=0] 
[16:01:53.932]    + additional namespaces needed: [n=0] 
[16:01:53.932]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:53.933]  - seeds: <none>
[16:01:53.933]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:53.952] Created future:
[16:01:53.952] MultisessionFuture:
[16:01:53.952] Label: ‘future_lapply-1’
[16:01:53.952] Expression:
[16:01:53.952] {
[16:01:53.952]     do.call(function(...) {
[16:01:53.952]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:53.952]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:53.952]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:53.952]             on.exit(options(oopts), add = TRUE)
[16:01:53.952]         }
[16:01:53.952]         {
[16:01:53.952]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:53.952]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:53.952]                 ...future.FUN(...future.X_jj, ...)
[16:01:53.952]             })
[16:01:53.952]         }
[16:01:53.952]     }, args = future.call.arguments)
[16:01:53.952] }
[16:01:53.952] Lazy evaluation: FALSE
[16:01:53.952] Asynchronous evaluation: TRUE
[16:01:53.952] Local evaluation: TRUE
[16:01:53.952] Environment: R_GlobalEnv
[16:01:53.952] Capture standard output: TRUE
[16:01:53.952] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:53.952] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:53.952] Packages: <none>
[16:01:53.952] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:53.952] Resolved: FALSE
[16:01:53.952] Value: <not collected>
[16:01:53.952] Conditions captured: <none>
[16:01:53.952] Early signaling: FALSE
[16:01:53.952] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:53.952] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:53.964] Chunk #1 of 1 ... DONE
[16:01:53.964] Launching 1 futures (chunks) ... DONE
[16:01:53.964] Resolving 1 futures (chunks) ...
[16:01:54.007]  - Number of value chunks collected: 1
[16:01:54.007] Resolving 1 futures (chunks) ... DONE
[16:01:54.007] Reducing values from 1 chunks ...
[16:01:54.007]  - Number of values collected after concatenation: 1
[16:01:54.007]  - Number of values expected: 1
[16:01:54.007] Reducing values from 1 chunks ... DONE
[16:01:54.007] future_lapply() ... DONE
[16:01:54.007] future_lapply() ...
[16:01:54.011] Number of chunks: 1
[16:01:54.011] getGlobalsAndPackagesXApply() ...
[16:01:54.012]  - future.globals: TRUE
[16:01:54.014]  - globals found/used: [n=1] ‘FUN’
[16:01:54.014]  - needed namespaces: [n=0] 
[16:01:54.014] Finding globals ... DONE
[16:01:54.014]  - use_args: TRUE
[16:01:54.014]  - Getting '...' globals ...
[16:01:54.014]    - '...' content: [n=1] ‘b’
[16:01:54.015] List of 1
[16:01:54.015]  $ ...:List of 1
[16:01:54.015]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:01:54.015]   .. .. ..@ slots     :List of 4
[16:01:54.015]   .. .. .. ..$ .Data  : chr "function"
[16:01:54.015]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. ..$ target : chr "signature"
[16:01:54.015]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. ..$ defined: chr "signature"
[16:01:54.015]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. ..$ generic: chr "character"
[16:01:54.015]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. ..@ contains  :List of 3
[16:01:54.015]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.015]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ superClass: chr "function"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.015]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.015]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.015]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.015]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.015]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.015]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.015]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.015]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.015]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.015]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.015]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.015]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.015]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.015]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.015]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.015]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ by        : chr "function"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.015]   .. .. .. .. .. ..@ distance  : num 2
[16:01:54.015]   .. .. ..@ virtual   : logi FALSE
[16:01:54.015]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:01:54.015]  list()
[16:01:54.015]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:01:54.015]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:54.015]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:54.015]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:54.015]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:01:54.015]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:54.015]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:54.015]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:54.015]   .. .. .. .. ..$ generic: chr(0) 
[16:01:54.015]   .. .. ..@ validity  : NULL
[16:01:54.015]   .. .. ..@ access    : list()
[16:01:54.015]   .. .. ..@ className : chr "MethodDefinition"
[16:01:54.015]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. ..@ subclasses:List of 7
[16:01:54.015]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.015]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.015]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.015]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.015]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.015]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.015]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.015]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.015]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.015]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.015]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.015]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.015]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.015]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.015]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.015]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.015]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.015]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.015]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.015]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.015]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.015]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.015]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.015]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.015]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.015]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.015]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.015]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.015]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.015]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.015]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.015]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.015]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.015]   .. .. .. .. .. ..@ distance  : num 2
[16:01:54.015]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.015]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.015]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.015]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.015]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.015]   .. .. .. .. .. ..@ distance  : num 2
[16:01:54.015]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.015]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.015]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.015]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.015]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.015]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:54.015]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.015]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.015]   .. .. .. .. .. ..@ distance  : num 2
[16:01:54.015]   .. .. ..@ versionKey:<externalptr> 
[16:01:54.015]   .. .. ..@ sealed    : logi TRUE
[16:01:54.015]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.015]  - attr(*, "where")=List of 1
[16:01:54.015]   ..$ ...:<environment: 0x55d6cfe6e3b0> 
[16:01:54.015]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.015]  - attr(*, "resolved")= logi TRUE
[16:01:54.015]  - attr(*, "total_size")= num NA
[16:01:54.063]  - Getting '...' globals ... DONE
[16:01:54.063] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:54.063] List of 2
[16:01:54.063]  $ ...future.FUN:function (a, b)  
[16:01:54.063]  $ ...          :List of 1
[16:01:54.063]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:01:54.063]   .. .. ..@ slots     :List of 4
[16:01:54.063]   .. .. .. ..$ .Data  : chr "function"
[16:01:54.063]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. ..$ target : chr "signature"
[16:01:54.063]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. ..$ defined: chr "signature"
[16:01:54.063]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. ..$ generic: chr "character"
[16:01:54.063]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. ..@ contains  :List of 3
[16:01:54.063]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.063]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ superClass: chr "function"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.063]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.063]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.063]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.063]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.063]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.063]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.063]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.063]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.063]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.063]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.063]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.063]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.063]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.063]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.063]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.063]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ by        : chr "function"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.063]   .. .. .. .. .. ..@ distance  : num 2
[16:01:54.063]   .. .. ..@ virtual   : logi FALSE
[16:01:54.063]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:01:54.063]  list()
[16:01:54.063]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:01:54.063]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:54.063]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:54.063]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:54.063]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:01:54.063]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:01:54.063]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:01:54.063]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:01:54.063]   .. .. .. .. ..$ generic: chr(0) 
[16:01:54.063]   .. .. ..@ validity  : NULL
[16:01:54.063]   .. .. ..@ access    : list()
[16:01:54.063]   .. .. ..@ className : chr "MethodDefinition"
[16:01:54.063]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. ..@ subclasses:List of 7
[16:01:54.063]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.063]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.063]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.063]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.063]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.063]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.063]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.063]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.063]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.063]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.063]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.063]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.063]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.063]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.063]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.063]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.063]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.063]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.063]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.063]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.063]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.063]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.063]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.063]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.063]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.063]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ by        : chr(0) 
[16:01:54.063]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.063]   .. .. .. .. .. ..@ distance  : num 1
[16:01:54.063]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.063]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.063]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.063]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.063]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.063]   .. .. .. .. .. ..@ distance  : num 2
[16:01:54.063]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.063]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.063]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.063]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.063]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.063]   .. .. .. .. .. ..@ distance  : num 2
[16:01:54.063]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:01:54.063]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ package   : chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:01:54.063]   .. .. .. .. .. ..@ test      :function (object)  
[16:01:54.063]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:01:54.063]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:01:54.063]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:01:54.063]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:01:54.063]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:01:54.063]   .. .. .. .. .. ..@ distance  : num 2
[16:01:54.063]   .. .. ..@ versionKey:<externalptr> 
[16:01:54.063]   .. .. ..@ sealed    : logi TRUE
[16:01:54.063]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.063]  - attr(*, "where")=List of 2
[16:01:54.063]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:54.063]   ..$ ...          :<environment: 0x55d6cfe6e3b0> 
[16:01:54.063]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.063]  - attr(*, "resolved")= logi FALSE
[16:01:54.063]  - attr(*, "total_size")= num 312512
[16:01:54.113] Packages to be attached in all futures: [n=0] 
[16:01:54.113] getGlobalsAndPackagesXApply() ... DONE
[16:01:54.113] Number of futures (= number of chunks): 1
[16:01:54.113] Launching 1 futures (chunks) ...
[16:01:54.113] Chunk #1 of 1 ...
[16:01:54.113]  - Finding globals in 'X' for chunk #1 ...
[16:01:54.114]    + additional globals found: [n=0] 
[16:01:54.114]    + additional namespaces needed: [n=0] 
[16:01:54.114]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:54.114]  - seeds: <none>
[16:01:54.114]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.132] Created future:
[16:01:54.132] MultisessionFuture:
[16:01:54.132] Label: ‘future_lapply-1’
[16:01:54.132] Expression:
[16:01:54.132] {
[16:01:54.132]     do.call(function(...) {
[16:01:54.132]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.132]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.132]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.132]             on.exit(options(oopts), add = TRUE)
[16:01:54.132]         }
[16:01:54.132]         {
[16:01:54.132]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.132]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.132]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.132]             })
[16:01:54.132]         }
[16:01:54.132]     }, args = future.call.arguments)
[16:01:54.132] }
[16:01:54.132] Lazy evaluation: FALSE
[16:01:54.132] Asynchronous evaluation: TRUE
[16:01:54.132] Local evaluation: TRUE
[16:01:54.132] Environment: R_GlobalEnv
[16:01:54.132] Capture standard output: TRUE
[16:01:54.132] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.132] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:54.132] Packages: <none>
[16:01:54.132] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.132] Resolved: FALSE
[16:01:54.132] Value: <not collected>
[16:01:54.132] Conditions captured: <none>
[16:01:54.132] Early signaling: FALSE
[16:01:54.132] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.132] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.144] Chunk #1 of 1 ... DONE
[16:01:54.144] Launching 1 futures (chunks) ... DONE
[16:01:54.144] Resolving 1 futures (chunks) ...
[16:01:54.187]  - Number of value chunks collected: 1
[16:01:54.187] Resolving 1 futures (chunks) ... DONE
[16:01:54.187] Reducing values from 1 chunks ...
[16:01:54.188]  - Number of values collected after concatenation: 1
[16:01:54.188]  - Number of values expected: 1
[16:01:54.188] Reducing values from 1 chunks ... DONE
[16:01:54.188] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:01:54.190] future_lapply() ...
[16:01:54.194] Number of chunks: 2
[16:01:54.194] getGlobalsAndPackagesXApply() ...
[16:01:54.194]  - future.globals: TRUE
[16:01:54.196]  - globals found/used: [n=1] ‘FUN’
[16:01:54.196]  - needed namespaces: [n=0] 
[16:01:54.196] Finding globals ... DONE
[16:01:54.196]  - use_args: TRUE
[16:01:54.196]  - Getting '...' globals ...
[16:01:54.196]    - '...' content: [n=0] 
[16:01:54.196] List of 1
[16:01:54.196]  $ ...: list()
[16:01:54.196]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.196]  - attr(*, "where")=List of 1
[16:01:54.196]   ..$ ...:<environment: 0x55d6ccb4dfd8> 
[16:01:54.196]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.196]  - attr(*, "resolved")= logi TRUE
[16:01:54.196]  - attr(*, "total_size")= num NA
[16:01:54.199]  - Getting '...' globals ... DONE
[16:01:54.199] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:54.199] List of 2
[16:01:54.199]  $ ...future.FUN:function (f)  
[16:01:54.199]  $ ...          : list()
[16:01:54.199]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.199]  - attr(*, "where")=List of 2
[16:01:54.199]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:54.199]   ..$ ...          :<environment: 0x55d6ccb4dfd8> 
[16:01:54.199]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.199]  - attr(*, "resolved")= logi FALSE
[16:01:54.199]  - attr(*, "total_size")= num 1008
[16:01:54.202] Packages to be attached in all futures: [n=0] 
[16:01:54.202] getGlobalsAndPackagesXApply() ... DONE
[16:01:54.202] Number of futures (= number of chunks): 2
[16:01:54.202] Launching 2 futures (chunks) ...
[16:01:54.202] Chunk #1 of 2 ...
[16:01:54.203]  - Finding globals in 'X' for chunk #1 ...
[16:01:54.204]    + additional globals found: [n=2] ‘a’, ‘b’
[16:01:54.204]    + additional namespaces needed: [n=0] 
[16:01:54.204]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:54.205]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:54.205]  - seeds: <none>
[16:01:54.205]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:01:54.223] Created future:
[16:01:54.223] MultisessionFuture:
[16:01:54.223] Label: ‘future_lapply-1’
[16:01:54.223] Expression:
[16:01:54.223] {
[16:01:54.223]     do.call(function(...) {
[16:01:54.223]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.223]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.223]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.223]             on.exit(options(oopts), add = TRUE)
[16:01:54.223]         }
[16:01:54.223]         {
[16:01:54.223]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.223]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.223]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.223]             })
[16:01:54.223]         }
[16:01:54.223]     }, args = future.call.arguments)
[16:01:54.223] }
[16:01:54.223] Lazy evaluation: FALSE
[16:01:54.223] Asynchronous evaluation: TRUE
[16:01:54.223] Local evaluation: TRUE
[16:01:54.223] Environment: R_GlobalEnv
[16:01:54.223] Capture standard output: TRUE
[16:01:54.223] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.223] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:01:54.223] Packages: <none>
[16:01:54.223] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.223] Resolved: FALSE
[16:01:54.223] Value: <not collected>
[16:01:54.223] Conditions captured: <none>
[16:01:54.223] Early signaling: FALSE
[16:01:54.223] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.223] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.235] Chunk #1 of 2 ... DONE
[16:01:54.235] Chunk #2 of 2 ...
[16:01:54.235]  - Finding globals in 'X' for chunk #2 ...
[16:01:54.237]    + additional globals found: [n=2] ‘a’, ‘b’
[16:01:54.237]    + additional namespaces needed: [n=1] ‘tools’
[16:01:54.237]  - Finding globals in 'X' for chunk #2 ... DONE
[16:01:54.237]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:54.237]  - seeds: <none>
[16:01:54.237]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:01:54.256] Created future:
[16:01:54.256] MultisessionFuture:
[16:01:54.256] Label: ‘future_lapply-2’
[16:01:54.256] Expression:
[16:01:54.256] {
[16:01:54.256]     do.call(function(...) {
[16:01:54.256]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.256]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.256]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.256]             on.exit(options(oopts), add = TRUE)
[16:01:54.256]         }
[16:01:54.256]         {
[16:01:54.256]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.256]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.256]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.256]             })
[16:01:54.256]         }
[16:01:54.256]     }, args = future.call.arguments)
[16:01:54.256] }
[16:01:54.256] Lazy evaluation: FALSE
[16:01:54.256] Asynchronous evaluation: TRUE
[16:01:54.256] Local evaluation: TRUE
[16:01:54.256] Environment: R_GlobalEnv
[16:01:54.256] Capture standard output: TRUE
[16:01:54.256] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.256] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:01:54.256] Packages: 1 packages (‘tools’)
[16:01:54.256] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.256] Resolved: FALSE
[16:01:54.256] Value: <not collected>
[16:01:54.256] Conditions captured: <none>
[16:01:54.256] Early signaling: FALSE
[16:01:54.256] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.256] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.267] Chunk #2 of 2 ... DONE
[16:01:54.267] Launching 2 futures (chunks) ... DONE
[16:01:54.268] Resolving 2 futures (chunks) ...
[16:01:54.313]  - Number of value chunks collected: 2
[16:01:54.313] Resolving 2 futures (chunks) ... DONE
[16:01:54.313] Reducing values from 2 chunks ...
[16:01:54.313]  - Number of values collected after concatenation: 4
[16:01:54.313]  - Number of values expected: 4
[16:01:54.313] Reducing values from 2 chunks ... DONE
[16:01:54.313] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:01:54.316] future_lapply() ...
[16:01:54.320] Number of chunks: 1
[16:01:54.320] getGlobalsAndPackagesXApply() ...
[16:01:54.320]  - future.globals: TRUE
[16:01:54.323]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:01:54.323]  - needed namespaces: [n=0] 
[16:01:54.323] Finding globals ... DONE
[16:01:54.323]  - use_args: TRUE
[16:01:54.323]  - Getting '...' globals ...
[16:01:54.323]    - '...' content: [n=0] 
[16:01:54.323] List of 1
[16:01:54.323]  $ ...: list()
[16:01:54.323]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.323]  - attr(*, "where")=List of 1
[16:01:54.323]   ..$ ...:<environment: 0x55d6ceef9a60> 
[16:01:54.323]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.323]  - attr(*, "resolved")= logi TRUE
[16:01:54.323]  - attr(*, "total_size")= num NA
[16:01:54.326]  - Getting '...' globals ... DONE
[16:01:54.326] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:01:54.326] List of 3
[16:01:54.326]  $ ...future.FUN        :function (x)  
[16:01:54.326]  $ future.call.arguments:List of 1
[16:01:54.326]   ..$ a: num 1
[16:01:54.326]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.326]  $ ...                  : list()
[16:01:54.326]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.326]  - attr(*, "where")=List of 3
[16:01:54.326]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:01:54.326]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:01:54.326]   ..$ ...                  :<environment: 0x55d6ceef9a60> 
[16:01:54.326]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.326]  - attr(*, "resolved")= logi FALSE
[16:01:54.326]  - attr(*, "total_size")= num 1272
[16:01:54.330] Packages to be attached in all futures: [n=0] 
[16:01:54.330] getGlobalsAndPackagesXApply() ... DONE
[16:01:54.330] Number of futures (= number of chunks): 1
[16:01:54.330] Launching 1 futures (chunks) ...
[16:01:54.330] Chunk #1 of 1 ...
[16:01:54.330]  - Finding globals in 'X' for chunk #1 ...
[16:01:54.331]    + additional globals found: [n=0] 
[16:01:54.331]    + additional namespaces needed: [n=0] 
[16:01:54.331]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:54.331]  - seeds: <none>
[16:01:54.331]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.350] Created future:
[16:01:54.350] MultisessionFuture:
[16:01:54.350] Label: ‘future_lapply-1’
[16:01:54.350] Expression:
[16:01:54.350] {
[16:01:54.350]     do.call(function(...) {
[16:01:54.350]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.350]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.350]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.350]             on.exit(options(oopts), add = TRUE)
[16:01:54.350]         }
[16:01:54.350]         {
[16:01:54.350]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.350]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.350]                 ...future.FUN(...future.X_jj)
[16:01:54.350]             })
[16:01:54.350]         }
[16:01:54.350]     }, args = future.call.arguments)
[16:01:54.350] }
[16:01:54.350] Lazy evaluation: FALSE
[16:01:54.350] Asynchronous evaluation: TRUE
[16:01:54.350] Local evaluation: TRUE
[16:01:54.350] Environment: 0x55d6ceef96e0
[16:01:54.350] Capture standard output: TRUE
[16:01:54.350] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.350] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:54.350] Packages: <none>
[16:01:54.350] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.350] Resolved: FALSE
[16:01:54.350] Value: <not collected>
[16:01:54.350] Conditions captured: <none>
[16:01:54.350] Early signaling: FALSE
[16:01:54.350] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.350] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.362] Chunk #1 of 1 ... DONE
[16:01:54.362] Launching 1 futures (chunks) ... DONE
[16:01:54.362] Resolving 1 futures (chunks) ...
[16:01:54.405]  - Number of value chunks collected: 1
[16:01:54.405] Resolving 1 futures (chunks) ... DONE
[16:01:54.405] Reducing values from 1 chunks ...
[16:01:54.405]  - Number of values collected after concatenation: 1
[16:01:54.405]  - Number of values expected: 1
[16:01:54.405] Reducing values from 1 chunks ... DONE
[16:01:54.405] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:01:54.407] future_lapply() ...
[16:01:54.411] Number of chunks: 1
[16:01:54.411] getGlobalsAndPackagesXApply() ...
[16:01:54.411]  - future.globals: TRUE
[16:01:54.413]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:01:54.413]  - needed namespaces: [n=0] 
[16:01:54.413] Finding globals ... DONE
[16:01:54.413]  - use_args: TRUE
[16:01:54.413]  - Getting '...' globals ...
[16:01:54.414]    - '...' content: [n=0] 
[16:01:54.414] List of 1
[16:01:54.414]  $ ...: list()
[16:01:54.414]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.414]  - attr(*, "where")=List of 1
[16:01:54.414]   ..$ ...:<environment: 0x55d6cf0dfa50> 
[16:01:54.414]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.414]  - attr(*, "resolved")= logi TRUE
[16:01:54.414]  - attr(*, "total_size")= num NA
[16:01:54.416]  - Getting '...' globals ... DONE
[16:01:54.417] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:01:54.417] List of 3
[16:01:54.417]  $ ...future.FUN:function (ii)  
[16:01:54.417]  $ a            : num 1
[16:01:54.417]  $ ...          : list()
[16:01:54.417]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.417]  - attr(*, "where")=List of 3
[16:01:54.417]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:54.417]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:54.417]   ..$ ...          :<environment: 0x55d6cf0dfa50> 
[16:01:54.417]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.417]  - attr(*, "resolved")= logi FALSE
[16:01:54.417]  - attr(*, "total_size")= num 2984
[16:01:54.420] Packages to be attached in all futures: [n=0] 
[16:01:54.420] getGlobalsAndPackagesXApply() ... DONE
[16:01:54.420] Number of futures (= number of chunks): 1
[16:01:54.420] Launching 1 futures (chunks) ...
[16:01:54.421] Chunk #1 of 1 ...
[16:01:54.421]  - Finding globals in 'X' for chunk #1 ...
[16:01:54.421]    + additional globals found: [n=0] 
[16:01:54.421]    + additional namespaces needed: [n=0] 
[16:01:54.421]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:54.421]  - seeds: <none>
[16:01:54.421]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.440] Created future:
[16:01:54.441] MultisessionFuture:
[16:01:54.441] Label: ‘future_lapply-1’
[16:01:54.441] Expression:
[16:01:54.441] {
[16:01:54.441]     do.call(function(...) {
[16:01:54.441]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.441]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.441]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.441]             on.exit(options(oopts), add = TRUE)
[16:01:54.441]         }
[16:01:54.441]         {
[16:01:54.441]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.441]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.441]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.441]             })
[16:01:54.441]         }
[16:01:54.441]     }, args = future.call.arguments)
[16:01:54.441] }
[16:01:54.441] Lazy evaluation: FALSE
[16:01:54.441] Asynchronous evaluation: TRUE
[16:01:54.441] Local evaluation: TRUE
[16:01:54.441] Environment: R_GlobalEnv
[16:01:54.441] Capture standard output: TRUE
[16:01:54.441] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.441] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:01:54.441] Packages: <none>
[16:01:54.441] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.441] Resolved: FALSE
[16:01:54.441] Value: <not collected>
[16:01:54.441] Conditions captured: <none>
[16:01:54.441] Early signaling: FALSE
[16:01:54.441] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.441] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.452] Chunk #1 of 1 ... DONE
[16:01:54.452] Launching 1 futures (chunks) ... DONE
[16:01:54.452] Resolving 1 futures (chunks) ...
[16:01:54.495]  - Number of value chunks collected: 1
[16:01:54.495] Resolving 1 futures (chunks) ... DONE
[16:01:54.495] Reducing values from 1 chunks ...
[16:01:54.495]  - Number of values collected after concatenation: 1
[16:01:54.495]  - Number of values expected: 1
[16:01:54.495] Reducing values from 1 chunks ... DONE
[16:01:54.495] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:01:54.496] future_lapply() ...
[16:01:54.500] Number of chunks: 1
[16:01:54.500] getGlobalsAndPackagesXApply() ...
[16:01:54.500]  - future.globals: TRUE
[16:01:54.502]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:01:54.502]  - needed namespaces: [n=0] 
[16:01:54.502] Finding globals ... DONE
[16:01:54.502]  - use_args: TRUE
[16:01:54.503]  - Getting '...' globals ...
[16:01:54.503]    - '...' content: [n=0] 
[16:01:54.503] List of 1
[16:01:54.503]  $ ...: list()
[16:01:54.503]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.503]  - attr(*, "where")=List of 1
[16:01:54.503]   ..$ ...:<environment: 0x55d6cf0868e8> 
[16:01:54.503]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.503]  - attr(*, "resolved")= logi TRUE
[16:01:54.503]  - attr(*, "total_size")= num NA
[16:01:54.506]  - Getting '...' globals ... DONE
[16:01:54.506] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:01:54.506] List of 3
[16:01:54.506]  $ ...future.FUN:function (ii)  
[16:01:54.506]  $ a            : num 1
[16:01:54.506]  $ ...          : list()
[16:01:54.506]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.506]  - attr(*, "where")=List of 3
[16:01:54.506]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:54.506]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:54.506]   ..$ ...          :<environment: 0x55d6cf0868e8> 
[16:01:54.506]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.506]  - attr(*, "resolved")= logi FALSE
[16:01:54.506]  - attr(*, "total_size")= num 2984
[16:01:54.509] Packages to be attached in all futures: [n=0] 
[16:01:54.509] getGlobalsAndPackagesXApply() ... DONE
[16:01:54.509] Number of futures (= number of chunks): 1
[16:01:54.509] Launching 1 futures (chunks) ...
[16:01:54.509] Chunk #1 of 1 ...
[16:01:54.510]  - Finding globals in 'X' for chunk #1 ...
[16:01:54.510]    + additional globals found: [n=0] 
[16:01:54.510]    + additional namespaces needed: [n=0] 
[16:01:54.510]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:54.510]  - seeds: <none>
[16:01:54.510]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.528] Created future:
[16:01:54.528] MultisessionFuture:
[16:01:54.528] Label: ‘future_lapply-1’
[16:01:54.528] Expression:
[16:01:54.528] {
[16:01:54.528]     do.call(function(...) {
[16:01:54.528]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.528]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.528]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.528]             on.exit(options(oopts), add = TRUE)
[16:01:54.528]         }
[16:01:54.528]         {
[16:01:54.528]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.528]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.528]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.528]             })
[16:01:54.528]         }
[16:01:54.528]     }, args = future.call.arguments)
[16:01:54.528] }
[16:01:54.528] Lazy evaluation: FALSE
[16:01:54.528] Asynchronous evaluation: TRUE
[16:01:54.528] Local evaluation: TRUE
[16:01:54.528] Environment: R_GlobalEnv
[16:01:54.528] Capture standard output: TRUE
[16:01:54.528] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.528] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:01:54.528] Packages: <none>
[16:01:54.528] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.528] Resolved: FALSE
[16:01:54.528] Value: <not collected>
[16:01:54.528] Conditions captured: <none>
[16:01:54.528] Early signaling: FALSE
[16:01:54.528] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.528] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.540] Chunk #1 of 1 ... DONE
[16:01:54.540] Launching 1 futures (chunks) ... DONE
[16:01:54.540] Resolving 1 futures (chunks) ...
[16:01:54.583]  - Number of value chunks collected: 1
[16:01:54.583] Resolving 1 futures (chunks) ... DONE
[16:01:54.583] Reducing values from 1 chunks ...
[16:01:54.583]  - Number of values collected after concatenation: 1
[16:01:54.583]  - Number of values expected: 1
[16:01:54.583] Reducing values from 1 chunks ... DONE
[16:01:54.583] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:01:54.583] future_lapply() ...
[16:01:54.587] Number of chunks: 1
[16:01:54.587] getGlobalsAndPackagesXApply() ...
[16:01:54.587]  - future.globals: <name-value list> with names ‘42’
[16:01:54.588]  - use_args: TRUE
[16:01:54.588]  - Getting '...' globals ...
[16:01:54.588]    - '...' content: [n=0] 
[16:01:54.588] List of 1
[16:01:54.588]  $ ...: list()
[16:01:54.588]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.588]  - attr(*, "where")=List of 1
[16:01:54.588]   ..$ ...:<environment: 0x55d6cff2ec08> 
[16:01:54.588]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.588]  - attr(*, "resolved")= logi TRUE
[16:01:54.588]  - attr(*, "total_size")= num NA
[16:01:54.591]  - Getting '...' globals ... DONE
[16:01:54.591] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:01:54.591] List of 3
[16:01:54.591]  $ a            : num 42
[16:01:54.591]  $ ...future.FUN:function (x)  
[16:01:54.591]  $ ...          : list()
[16:01:54.591]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.591]  - attr(*, "where")=List of 3
[16:01:54.591]   ..$ a            :<environment: R_EmptyEnv> 
[16:01:54.591]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:01:54.591]   ..$ ...          :<environment: 0x55d6cff2ec08> 
[16:01:54.591]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.591]  - attr(*, "resolved")= logi FALSE
[16:01:54.591]  - attr(*, "total_size")= num NA
[16:01:54.594] Packages to be attached in all futures: [n=0] 
[16:01:54.594] getGlobalsAndPackagesXApply() ... DONE
[16:01:54.594] Number of futures (= number of chunks): 1
[16:01:54.594] Launching 1 futures (chunks) ...
[16:01:54.595] Chunk #1 of 1 ...
[16:01:54.595]  - seeds: <none>
[16:01:54.595]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.612] Created future:
[16:01:54.612] MultisessionFuture:
[16:01:54.612] Label: ‘future_lapply-1’
[16:01:54.612] Expression:
[16:01:54.612] {
[16:01:54.612]     do.call(function(...) {
[16:01:54.612]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.612]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.612]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.612]             on.exit(options(oopts), add = TRUE)
[16:01:54.612]         }
[16:01:54.612]         {
[16:01:54.612]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.612]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.612]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.612]             })
[16:01:54.612]         }
[16:01:54.612]     }, args = future.call.arguments)
[16:01:54.612] }
[16:01:54.612] Lazy evaluation: FALSE
[16:01:54.612] Asynchronous evaluation: TRUE
[16:01:54.612] Local evaluation: TRUE
[16:01:54.612] Environment: R_GlobalEnv
[16:01:54.612] Capture standard output: TRUE
[16:01:54.612] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.612] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:01:54.612] Packages: <none>
[16:01:54.612] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.612] Resolved: FALSE
[16:01:54.612] Value: <not collected>
[16:01:54.612] Conditions captured: <none>
[16:01:54.612] Early signaling: FALSE
[16:01:54.612] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.612] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.624] Chunk #1 of 1 ... DONE
[16:01:54.624] Launching 1 futures (chunks) ... DONE
[16:01:54.624] Resolving 1 futures (chunks) ...
[16:01:54.666]  - Number of value chunks collected: 1
[16:01:54.666] Resolving 1 futures (chunks) ... DONE
[16:01:54.666] Reducing values from 1 chunks ...
[16:01:54.666]  - Number of values collected after concatenation: 1
[16:01:54.666]  - Number of values expected: 1
[16:01:54.667] Reducing values from 1 chunks ... DONE
[16:01:54.667] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[16:01:54.668] future_lapply() ...
[16:01:54.673] Number of chunks: 2
[16:01:54.674] getGlobalsAndPackagesXApply() ...
[16:01:54.674]  - future.globals: TRUE
[16:01:54.675]  - globals found/used: [n=1] ‘FUN’
[16:01:54.675]  - needed namespaces: [n=0] 
[16:01:54.675] Finding globals ... DONE
[16:01:54.675]  - use_args: TRUE
[16:01:54.676]  - Getting '...' globals ...
[16:01:54.676]    - '...' content: [n=0] 
[16:01:54.676] List of 1
[16:01:54.676]  $ ...: list()
[16:01:54.676]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.676]  - attr(*, "where")=List of 1
[16:01:54.676]   ..$ ...:<environment: 0x55d6cff61bd8> 
[16:01:54.676]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.676]  - attr(*, "resolved")= logi TRUE
[16:01:54.676]  - attr(*, "total_size")= num NA
[16:01:54.678]  - Getting '...' globals ... DONE
[16:01:54.679] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:54.679] List of 2
[16:01:54.679]  $ ...future.FUN:function (y)  
[16:01:54.679]  $ ...          : list()
[16:01:54.679]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.679]  - attr(*, "where")=List of 2
[16:01:54.679]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:54.679]   ..$ ...          :<environment: 0x55d6cff61bd8> 
[16:01:54.679]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.679]  - attr(*, "resolved")= logi FALSE
[16:01:54.679]  - attr(*, "total_size")= num 280
[16:01:54.681] Packages to be attached in all futures: [n=0] 
[16:01:54.681] getGlobalsAndPackagesXApply() ... DONE
[16:01:54.682] Number of futures (= number of chunks): 2
[16:01:54.682] Launching 2 futures (chunks) ...
[16:01:54.682] Chunk #1 of 2 ...
[16:01:54.682]  - Finding globals in 'X' for chunk #1 ...
[16:01:54.682]    + additional globals found: [n=0] 
[16:01:54.682]    + additional namespaces needed: [n=0] 
[16:01:54.682]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:54.682]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:54.683]  - seeds: <none>
[16:01:54.683]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.699] Created future:
[16:01:54.700] MultisessionFuture:
[16:01:54.700] Label: ‘future_lapply-1’
[16:01:54.700] Expression:
[16:01:54.700] {
[16:01:54.700]     do.call(function(...) {
[16:01:54.700]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.700]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.700]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.700]             on.exit(options(oopts), add = TRUE)
[16:01:54.700]         }
[16:01:54.700]         {
[16:01:54.700]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.700]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.700]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.700]             })
[16:01:54.700]         }
[16:01:54.700]     }, args = future.call.arguments)
[16:01:54.700] }
[16:01:54.700] Lazy evaluation: FALSE
[16:01:54.700] Asynchronous evaluation: TRUE
[16:01:54.700] Local evaluation: TRUE
[16:01:54.700] Environment: 0x55d6cff5e208
[16:01:54.700] Capture standard output: TRUE
[16:01:54.700] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.700] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:54.700] Packages: <none>
[16:01:54.700] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.700] Resolved: FALSE
[16:01:54.700] Value: <not collected>
[16:01:54.700] Conditions captured: <none>
[16:01:54.700] Early signaling: FALSE
[16:01:54.700] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.700] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.711] Chunk #1 of 2 ... DONE
[16:01:54.711] Chunk #2 of 2 ...
[16:01:54.711]  - Finding globals in 'X' for chunk #2 ...
[16:01:54.712]    + additional globals found: [n=0] 
[16:01:54.712]    + additional namespaces needed: [n=0] 
[16:01:54.712]  - Finding globals in 'X' for chunk #2 ... DONE
[16:01:54.712]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:54.712]  - seeds: <none>
[16:01:54.712]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.730] Created future:
[16:01:54.730] MultisessionFuture:
[16:01:54.730] Label: ‘future_lapply-2’
[16:01:54.730] Expression:
[16:01:54.730] {
[16:01:54.730]     do.call(function(...) {
[16:01:54.730]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.730]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.730]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.730]             on.exit(options(oopts), add = TRUE)
[16:01:54.730]         }
[16:01:54.730]         {
[16:01:54.730]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.730]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.730]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.730]             })
[16:01:54.730]         }
[16:01:54.730]     }, args = future.call.arguments)
[16:01:54.730] }
[16:01:54.730] Lazy evaluation: FALSE
[16:01:54.730] Asynchronous evaluation: TRUE
[16:01:54.730] Local evaluation: TRUE
[16:01:54.730] Environment: 0x55d6cff5e208
[16:01:54.730] Capture standard output: TRUE
[16:01:54.730] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.730] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:54.730] Packages: <none>
[16:01:54.730] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.730] Resolved: FALSE
[16:01:54.730] Value: <not collected>
[16:01:54.730] Conditions captured: <none>
[16:01:54.730] Early signaling: FALSE
[16:01:54.730] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.730] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.742] Chunk #2 of 2 ... DONE
[16:01:54.742] Launching 2 futures (chunks) ... DONE
[16:01:54.742] Resolving 2 futures (chunks) ...
[16:01:54.777]  - Number of value chunks collected: 2
[16:01:54.777] Resolving 2 futures (chunks) ... DONE
[16:01:54.777] Reducing values from 2 chunks ...
[16:01:54.777]  - Number of values collected after concatenation: 2
[16:01:54.777]  - Number of values expected: 2
[16:01:54.777] Reducing values from 2 chunks ... DONE
[16:01:54.777] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[16:01:54.778] future_lapply() ...
[16:01:54.782] Number of chunks: 2
[16:01:54.782] getGlobalsAndPackagesXApply() ...
[16:01:54.782]  - future.globals: TRUE
[16:01:54.783]  - globals found/used: [n=1] ‘FUN’
[16:01:54.783]  - needed namespaces: [n=0] 
[16:01:54.784] Finding globals ... DONE
[16:01:54.784]  - use_args: TRUE
[16:01:54.784]  - Getting '...' globals ...
[16:01:54.784]    - '...' content: [n=0] 
[16:01:54.784] List of 1
[16:01:54.784]  $ ...: list()
[16:01:54.784]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.784]  - attr(*, "where")=List of 1
[16:01:54.784]   ..$ ...:<environment: 0x55d6d01122b8> 
[16:01:54.784]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.784]  - attr(*, "resolved")= logi TRUE
[16:01:54.784]  - attr(*, "total_size")= num NA
[16:01:54.787]  - Getting '...' globals ... DONE
[16:01:54.787] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:54.787] List of 2
[16:01:54.787]  $ ...future.FUN:function (y)  
[16:01:54.787]  $ ...          : list()
[16:01:54.787]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.787]  - attr(*, "where")=List of 2
[16:01:54.787]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:54.787]   ..$ ...          :<environment: 0x55d6d01122b8> 
[16:01:54.787]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.787]  - attr(*, "resolved")= logi FALSE
[16:01:54.787]  - attr(*, "total_size")= num 280
[16:01:54.790] Packages to be attached in all futures: [n=0] 
[16:01:54.790] getGlobalsAndPackagesXApply() ... DONE
[16:01:54.790] Number of futures (= number of chunks): 2
[16:01:54.790] Launching 2 futures (chunks) ...
[16:01:54.790] Chunk #1 of 2 ...
[16:01:54.790]  - Finding globals in 'X' for chunk #1 ...
[16:01:54.791]    + additional globals found: [n=0] 
[16:01:54.791]    + additional namespaces needed: [n=0] 
[16:01:54.791]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:54.791]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:54.791]  - seeds: <none>
[16:01:54.791]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.808] Created future:
[16:01:54.809] MultisessionFuture:
[16:01:54.809] Label: ‘future_lapply-1’
[16:01:54.809] Expression:
[16:01:54.809] {
[16:01:54.809]     do.call(function(...) {
[16:01:54.809]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.809]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.809]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.809]             on.exit(options(oopts), add = TRUE)
[16:01:54.809]         }
[16:01:54.809]         {
[16:01:54.809]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.809]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.809]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.809]             })
[16:01:54.809]         }
[16:01:54.809]     }, args = future.call.arguments)
[16:01:54.809] }
[16:01:54.809] Lazy evaluation: FALSE
[16:01:54.809] Asynchronous evaluation: TRUE
[16:01:54.809] Local evaluation: TRUE
[16:01:54.809] Environment: 0x55d6d01126a8
[16:01:54.809] Capture standard output: TRUE
[16:01:54.809] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.809] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:54.809] Packages: <none>
[16:01:54.809] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.809] Resolved: FALSE
[16:01:54.809] Value: <not collected>
[16:01:54.809] Conditions captured: <none>
[16:01:54.809] Early signaling: FALSE
[16:01:54.809] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.809] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.820] Chunk #1 of 2 ... DONE
[16:01:54.821] Chunk #2 of 2 ...
[16:01:54.821]  - Finding globals in 'X' for chunk #2 ...
[16:01:54.821]    + additional globals found: [n=0] 
[16:01:54.821]    + additional namespaces needed: [n=0] 
[16:01:54.821]  - Finding globals in 'X' for chunk #2 ... DONE
[16:01:54.821]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:54.821]  - seeds: <none>
[16:01:54.821]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.841] Created future:
[16:01:54.841] MultisessionFuture:
[16:01:54.841] Label: ‘future_lapply-2’
[16:01:54.841] Expression:
[16:01:54.841] {
[16:01:54.841]     do.call(function(...) {
[16:01:54.841]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.841]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.841]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.841]             on.exit(options(oopts), add = TRUE)
[16:01:54.841]         }
[16:01:54.841]         {
[16:01:54.841]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.841]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.841]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.841]             })
[16:01:54.841]         }
[16:01:54.841]     }, args = future.call.arguments)
[16:01:54.841] }
[16:01:54.841] Lazy evaluation: FALSE
[16:01:54.841] Asynchronous evaluation: TRUE
[16:01:54.841] Local evaluation: TRUE
[16:01:54.841] Environment: 0x55d6d01126a8
[16:01:54.841] Capture standard output: TRUE
[16:01:54.841] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.841] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:54.841] Packages: <none>
[16:01:54.841] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.841] Resolved: FALSE
[16:01:54.841] Value: <not collected>
[16:01:54.841] Conditions captured: <none>
[16:01:54.841] Early signaling: FALSE
[16:01:54.841] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.841] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.853] Chunk #2 of 2 ... DONE
[16:01:54.853] Launching 2 futures (chunks) ... DONE
[16:01:54.853] Resolving 2 futures (chunks) ...
[16:01:54.898]  - Number of value chunks collected: 2
[16:01:54.899] Resolving 2 futures (chunks) ... DONE
[16:01:54.899] Reducing values from 2 chunks ...
[16:01:54.899]  - Number of values collected after concatenation: 2
[16:01:54.899]  - Number of values expected: 2
[16:01:54.899] Reducing values from 2 chunks ... DONE
[16:01:54.899] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[16:01:54.902] future_lapply() ...
[16:01:54.906] Number of chunks: 2
[16:01:54.906] getGlobalsAndPackagesXApply() ...
[16:01:54.906]  - future.globals: TRUE
[16:01:54.908] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[16:01:54.908] future_lapply() ...
[16:01:54.912] Number of chunks: 2
[16:01:54.912] getGlobalsAndPackagesXApply() ...
[16:01:54.912]  - future.globals: TRUE
[16:01:54.913]  - globals found/used: [n=1] ‘FUN’
[16:01:54.914]  - needed namespaces: [n=0] 
[16:01:54.914] Finding globals ... DONE
[16:01:54.914]  - use_args: TRUE
[16:01:54.914]  - Getting '...' globals ...
[16:01:54.914]    - '...' content: [n=0] 
[16:01:54.914] List of 1
[16:01:54.914]  $ ...: list()
[16:01:54.914]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.914]  - attr(*, "where")=List of 1
[16:01:54.914]   ..$ ...:<environment: 0x55d6ce2e36f0> 
[16:01:54.914]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.914]  - attr(*, "resolved")= logi TRUE
[16:01:54.914]  - attr(*, "total_size")= num NA
[16:01:54.917]  - Getting '...' globals ... DONE
[16:01:54.917] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:54.917] List of 2
[16:01:54.917]  $ ...future.FUN:function (x)  
[16:01:54.917]  $ ...          : list()
[16:01:54.917]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:54.917]  - attr(*, "where")=List of 2
[16:01:54.917]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:54.917]   ..$ ...          :<environment: 0x55d6ce2e36f0> 
[16:01:54.917]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:54.917]  - attr(*, "resolved")= logi FALSE
[16:01:54.917]  - attr(*, "total_size")= num 1840
[16:01:54.920] Packages to be attached in all futures: [n=0] 
[16:01:54.920] getGlobalsAndPackagesXApply() ... DONE
[16:01:54.920] Number of futures (= number of chunks): 2
[16:01:54.920] Launching 2 futures (chunks) ...
[16:01:54.920] Chunk #1 of 2 ...
[16:01:54.920]  - Finding globals in 'X' for chunk #1 ...
[16:01:54.921]    + additional globals found: [n=0] 
[16:01:54.921]    + additional namespaces needed: [n=0] 
[16:01:54.921]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:54.921]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:54.921]  - seeds: <none>
[16:01:54.921]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.940] Created future:
[16:01:54.940] MultisessionFuture:
[16:01:54.940] Label: ‘future_lapply-1’
[16:01:54.940] Expression:
[16:01:54.940] {
[16:01:54.940]     do.call(function(...) {
[16:01:54.940]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.940]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.940]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.940]             on.exit(options(oopts), add = TRUE)
[16:01:54.940]         }
[16:01:54.940]         {
[16:01:54.940]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.940]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.940]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.940]             })
[16:01:54.940]         }
[16:01:54.940]     }, args = future.call.arguments)
[16:01:54.940] }
[16:01:54.940] Lazy evaluation: FALSE
[16:01:54.940] Asynchronous evaluation: TRUE
[16:01:54.940] Local evaluation: TRUE
[16:01:54.940] Environment: R_GlobalEnv
[16:01:54.940] Capture standard output: TRUE
[16:01:54.940] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.940] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:54.940] Packages: <none>
[16:01:54.940] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.940] Resolved: FALSE
[16:01:54.940] Value: <not collected>
[16:01:54.940] Conditions captured: <none>
[16:01:54.940] Early signaling: FALSE
[16:01:54.940] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.940] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.952] Chunk #1 of 2 ... DONE
[16:01:54.952] Chunk #2 of 2 ...
[16:01:54.952]  - Finding globals in 'X' for chunk #2 ...
[16:01:54.952]    + additional globals found: [n=0] 
[16:01:54.952]    + additional namespaces needed: [n=0] 
[16:01:54.952]  - Finding globals in 'X' for chunk #2 ... DONE
[16:01:54.952]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:01:54.953]  - seeds: <none>
[16:01:54.953]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:54.970] Created future:
[16:01:54.970] MultisessionFuture:
[16:01:54.970] Label: ‘future_lapply-2’
[16:01:54.970] Expression:
[16:01:54.970] {
[16:01:54.970]     do.call(function(...) {
[16:01:54.970]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:54.970]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:54.970]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:54.970]             on.exit(options(oopts), add = TRUE)
[16:01:54.970]         }
[16:01:54.970]         {
[16:01:54.970]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:54.970]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:54.970]                 ...future.FUN(...future.X_jj, ...)
[16:01:54.970]             })
[16:01:54.970]         }
[16:01:54.970]     }, args = future.call.arguments)
[16:01:54.970] }
[16:01:54.970] Lazy evaluation: FALSE
[16:01:54.970] Asynchronous evaluation: TRUE
[16:01:54.970] Local evaluation: TRUE
[16:01:54.970] Environment: R_GlobalEnv
[16:01:54.970] Capture standard output: TRUE
[16:01:54.970] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:54.970] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:01:54.970] Packages: <none>
[16:01:54.970] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:54.970] Resolved: FALSE
[16:01:54.970] Value: <not collected>
[16:01:54.970] Conditions captured: <none>
[16:01:54.970] Early signaling: FALSE
[16:01:54.970] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:54.970] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:54.982] Chunk #2 of 2 ... DONE
[16:01:54.982] Launching 2 futures (chunks) ... DONE
[16:01:54.982] Resolving 2 futures (chunks) ...
[16:01:55.016]  - Number of value chunks collected: 2
[16:01:55.017] Resolving 2 futures (chunks) ... DONE
[16:01:55.017] Reducing values from 2 chunks ...
[16:01:55.017]  - Number of values collected after concatenation: 10
[16:01:55.017]  - Number of values expected: 10
[16:01:55.017] Reducing values from 2 chunks ... DONE
[16:01:55.017] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[16:01:55.027] future_lapply() ...
[16:01:55.031] Number of chunks: 10
[16:01:55.031] getGlobalsAndPackagesXApply() ...
[16:01:55.031]  - future.globals: TRUE
[16:01:55.033]  - globals found/used: [n=1] ‘FUN’
[16:01:55.033]  - needed namespaces: [n=0] 
[16:01:55.033] Finding globals ... DONE
[16:01:55.034]  - use_args: TRUE
[16:01:55.034]  - Getting '...' globals ...
[16:01:55.034]    - '...' content: [n=0] 
[16:01:55.034] List of 1
[16:01:55.034]  $ ...: list()
[16:01:55.034]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:55.034]  - attr(*, "where")=List of 1
[16:01:55.034]   ..$ ...:<environment: 0x55d6ced30fb8> 
[16:01:55.034]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:55.034]  - attr(*, "resolved")= logi TRUE
[16:01:55.034]  - attr(*, "total_size")= num NA
[16:01:55.037]  - Getting '...' globals ... DONE
[16:01:55.037] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:55.037] List of 2
[16:01:55.037]  $ ...future.FUN:function (x)  
[16:01:55.037]  $ ...          : list()
[16:01:55.037]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:55.037]  - attr(*, "where")=List of 2
[16:01:55.037]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:55.037]   ..$ ...          :<environment: 0x55d6ced30fb8> 
[16:01:55.037]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:55.037]  - attr(*, "resolved")= logi FALSE
[16:01:55.037]  - attr(*, "total_size")= num 1840
[16:01:55.040] Packages to be attached in all futures: [n=0] 
[16:01:55.040] getGlobalsAndPackagesXApply() ... DONE
[16:01:55.040] Number of futures (= number of chunks): 10
[16:01:55.040] Launching 10 futures (chunks) ...
[16:01:55.040] Chunk #1 of 10 ...
[16:01:55.040]  - Finding globals in 'X' for chunk #1 ...
[16:01:55.041]    + additional globals found: [n=0] 
[16:01:55.041]    + additional namespaces needed: [n=0] 
[16:01:55.041]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:55.041]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:01:55.041]  - seeds: <none>
[16:01:55.041]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.059] Created future:
[16:01:55.060] MultisessionFuture:
[16:01:55.060] Label: ‘future_lapply-1’
[16:01:55.060] Expression:
[16:01:55.060] {
[16:01:55.060]     do.call(function(...) {
[16:01:55.060]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.060]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.060]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.060]             on.exit(options(oopts), add = TRUE)
[16:01:55.060]         }
[16:01:55.060]         {
[16:01:55.060]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.060]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.060]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.060]             })
[16:01:55.060]         }
[16:01:55.060]     }, args = future.call.arguments)
[16:01:55.060] }
[16:01:55.060] Lazy evaluation: FALSE
[16:01:55.060] Asynchronous evaluation: TRUE
[16:01:55.060] Local evaluation: TRUE
[16:01:55.060] Environment: R_GlobalEnv
[16:01:55.060] Capture standard output: TRUE
[16:01:55.060] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.060] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.060] Packages: <none>
[16:01:55.060] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.060] Resolved: FALSE
[16:01:55.060] Value: <not collected>
[16:01:55.060] Conditions captured: <none>
[16:01:55.060] Early signaling: FALSE
[16:01:55.060] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.060] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.071] Chunk #1 of 10 ... DONE
[16:01:55.071] Chunk #2 of 10 ...
[16:01:55.071]  - Finding globals in 'X' for chunk #2 ...
[16:01:55.072]    + additional globals found: [n=0] 
[16:01:55.072]    + additional namespaces needed: [n=0] 
[16:01:55.072]  - Finding globals in 'X' for chunk #2 ... DONE
[16:01:55.072]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:01:55.072]  - seeds: <none>
[16:01:55.072]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.089] Created future:
[16:01:55.089] MultisessionFuture:
[16:01:55.089] Label: ‘future_lapply-2’
[16:01:55.089] Expression:
[16:01:55.089] {
[16:01:55.089]     do.call(function(...) {
[16:01:55.089]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.089]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.089]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.089]             on.exit(options(oopts), add = TRUE)
[16:01:55.089]         }
[16:01:55.089]         {
[16:01:55.089]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.089]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.089]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.089]             })
[16:01:55.089]         }
[16:01:55.089]     }, args = future.call.arguments)
[16:01:55.089] }
[16:01:55.089] Lazy evaluation: FALSE
[16:01:55.089] Asynchronous evaluation: TRUE
[16:01:55.089] Local evaluation: TRUE
[16:01:55.089] Environment: R_GlobalEnv
[16:01:55.089] Capture standard output: TRUE
[16:01:55.089] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.089] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.089] Packages: <none>
[16:01:55.089] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.089] Resolved: FALSE
[16:01:55.089] Value: <not collected>
[16:01:55.089] Conditions captured: <none>
[16:01:55.089] Early signaling: FALSE
[16:01:55.089] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.089] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.101] Chunk #2 of 10 ... DONE
[16:01:55.101] Chunk #3 of 10 ...
[16:01:55.101]  - Finding globals in 'X' for chunk #3 ...
[16:01:55.102]    + additional globals found: [n=0] 
[16:01:55.102]    + additional namespaces needed: [n=0] 
[16:01:55.102]  - Finding globals in 'X' for chunk #3 ... DONE
[16:01:55.102]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:01:55.102]  - seeds: <none>
[16:01:55.102]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.130] Created future:
[16:01:55.130] MultisessionFuture:
[16:01:55.130] Label: ‘future_lapply-3’
[16:01:55.130] Expression:
[16:01:55.130] {
[16:01:55.130]     do.call(function(...) {
[16:01:55.130]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.130]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.130]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.130]             on.exit(options(oopts), add = TRUE)
[16:01:55.130]         }
[16:01:55.130]         {
[16:01:55.130]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.130]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.130]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.130]             })
[16:01:55.130]         }
[16:01:55.130]     }, args = future.call.arguments)
[16:01:55.130] }
[16:01:55.130] Lazy evaluation: FALSE
[16:01:55.130] Asynchronous evaluation: TRUE
[16:01:55.130] Local evaluation: TRUE
[16:01:55.130] Environment: R_GlobalEnv
[16:01:55.130] Capture standard output: TRUE
[16:01:55.130] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.130] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.130] Packages: <none>
[16:01:55.130] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.130] Resolved: FALSE
[16:01:55.130] Value: <not collected>
[16:01:55.130] Conditions captured: <none>
[16:01:55.130] Early signaling: FALSE
[16:01:55.130] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.130] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.142] Chunk #3 of 10 ... DONE
[16:01:55.142] Chunk #4 of 10 ...
[16:01:55.142]  - Finding globals in 'X' for chunk #4 ...
[16:01:55.143]    + additional globals found: [n=0] 
[16:01:55.143]    + additional namespaces needed: [n=0] 
[16:01:55.143]  - Finding globals in 'X' for chunk #4 ... DONE
[16:01:55.143]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:01:55.143]  - seeds: <none>
[16:01:55.143]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.183] Created future:
[16:01:55.183] MultisessionFuture:
[16:01:55.183] Label: ‘future_lapply-4’
[16:01:55.183] Expression:
[16:01:55.183] {
[16:01:55.183]     do.call(function(...) {
[16:01:55.183]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.183]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.183]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.183]             on.exit(options(oopts), add = TRUE)
[16:01:55.183]         }
[16:01:55.183]         {
[16:01:55.183]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.183]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.183]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.183]             })
[16:01:55.183]         }
[16:01:55.183]     }, args = future.call.arguments)
[16:01:55.183] }
[16:01:55.183] Lazy evaluation: FALSE
[16:01:55.183] Asynchronous evaluation: TRUE
[16:01:55.183] Local evaluation: TRUE
[16:01:55.183] Environment: R_GlobalEnv
[16:01:55.183] Capture standard output: TRUE
[16:01:55.183] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.183] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.183] Packages: <none>
[16:01:55.183] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.183] Resolved: FALSE
[16:01:55.183] Value: <not collected>
[16:01:55.183] Conditions captured: <none>
[16:01:55.183] Early signaling: FALSE
[16:01:55.183] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.183] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.195] Chunk #4 of 10 ... DONE
[16:01:55.195] Chunk #5 of 10 ...
[16:01:55.195]  - Finding globals in 'X' for chunk #5 ...
[16:01:55.196]    + additional globals found: [n=0] 
[16:01:55.196]    + additional namespaces needed: [n=0] 
[16:01:55.196]  - Finding globals in 'X' for chunk #5 ... DONE
[16:01:55.196]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:01:55.196]  - seeds: <none>
[16:01:55.196]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.225] Created future:
[16:01:55.225] MultisessionFuture:
[16:01:55.225] Label: ‘future_lapply-5’
[16:01:55.225] Expression:
[16:01:55.225] {
[16:01:55.225]     do.call(function(...) {
[16:01:55.225]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.225]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.225]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.225]             on.exit(options(oopts), add = TRUE)
[16:01:55.225]         }
[16:01:55.225]         {
[16:01:55.225]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.225]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.225]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.225]             })
[16:01:55.225]         }
[16:01:55.225]     }, args = future.call.arguments)
[16:01:55.225] }
[16:01:55.225] Lazy evaluation: FALSE
[16:01:55.225] Asynchronous evaluation: TRUE
[16:01:55.225] Local evaluation: TRUE
[16:01:55.225] Environment: R_GlobalEnv
[16:01:55.225] Capture standard output: TRUE
[16:01:55.225] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.225] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.225] Packages: <none>
[16:01:55.225] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.225] Resolved: FALSE
[16:01:55.225] Value: <not collected>
[16:01:55.225] Conditions captured: <none>
[16:01:55.225] Early signaling: FALSE
[16:01:55.225] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.225] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.236] Chunk #5 of 10 ... DONE
[16:01:55.236] Chunk #6 of 10 ...
[16:01:55.236]  - Finding globals in 'X' for chunk #6 ...
[16:01:55.237]    + additional globals found: [n=0] 
[16:01:55.237]    + additional namespaces needed: [n=0] 
[16:01:55.237]  - Finding globals in 'X' for chunk #6 ... DONE
[16:01:55.237]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:01:55.237]  - seeds: <none>
[16:01:55.237]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.266] Created future:
[16:01:55.266] MultisessionFuture:
[16:01:55.266] Label: ‘future_lapply-6’
[16:01:55.266] Expression:
[16:01:55.266] {
[16:01:55.266]     do.call(function(...) {
[16:01:55.266]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.266]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.266]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.266]             on.exit(options(oopts), add = TRUE)
[16:01:55.266]         }
[16:01:55.266]         {
[16:01:55.266]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.266]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.266]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.266]             })
[16:01:55.266]         }
[16:01:55.266]     }, args = future.call.arguments)
[16:01:55.266] }
[16:01:55.266] Lazy evaluation: FALSE
[16:01:55.266] Asynchronous evaluation: TRUE
[16:01:55.266] Local evaluation: TRUE
[16:01:55.266] Environment: R_GlobalEnv
[16:01:55.266] Capture standard output: TRUE
[16:01:55.266] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.266] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.266] Packages: <none>
[16:01:55.266] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.266] Resolved: FALSE
[16:01:55.266] Value: <not collected>
[16:01:55.266] Conditions captured: <none>
[16:01:55.266] Early signaling: FALSE
[16:01:55.266] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.266] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.277] Chunk #6 of 10 ... DONE
[16:01:55.277] Chunk #7 of 10 ...
[16:01:55.277]  - Finding globals in 'X' for chunk #7 ...
[16:01:55.278]    + additional globals found: [n=0] 
[16:01:55.278]    + additional namespaces needed: [n=0] 
[16:01:55.278]  - Finding globals in 'X' for chunk #7 ... DONE
[16:01:55.278]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:01:55.278]  - seeds: <none>
[16:01:55.278]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.306] Created future:
[16:01:55.307] MultisessionFuture:
[16:01:55.307] Label: ‘future_lapply-7’
[16:01:55.307] Expression:
[16:01:55.307] {
[16:01:55.307]     do.call(function(...) {
[16:01:55.307]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.307]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.307]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.307]             on.exit(options(oopts), add = TRUE)
[16:01:55.307]         }
[16:01:55.307]         {
[16:01:55.307]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.307]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.307]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.307]             })
[16:01:55.307]         }
[16:01:55.307]     }, args = future.call.arguments)
[16:01:55.307] }
[16:01:55.307] Lazy evaluation: FALSE
[16:01:55.307] Asynchronous evaluation: TRUE
[16:01:55.307] Local evaluation: TRUE
[16:01:55.307] Environment: R_GlobalEnv
[16:01:55.307] Capture standard output: TRUE
[16:01:55.307] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.307] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.307] Packages: <none>
[16:01:55.307] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.307] Resolved: FALSE
[16:01:55.307] Value: <not collected>
[16:01:55.307] Conditions captured: <none>
[16:01:55.307] Early signaling: FALSE
[16:01:55.307] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.307] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.318] Chunk #7 of 10 ... DONE
[16:01:55.318] Chunk #8 of 10 ...
[16:01:55.318]  - Finding globals in 'X' for chunk #8 ...
[16:01:55.319]    + additional globals found: [n=0] 
[16:01:55.319]    + additional namespaces needed: [n=0] 
[16:01:55.319]  - Finding globals in 'X' for chunk #8 ... DONE
[16:01:55.319]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:01:55.319]  - seeds: <none>
[16:01:55.319]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.347] Created future:
[16:01:55.347] MultisessionFuture:
[16:01:55.347] Label: ‘future_lapply-8’
[16:01:55.347] Expression:
[16:01:55.347] {
[16:01:55.347]     do.call(function(...) {
[16:01:55.347]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.347]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.347]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.347]             on.exit(options(oopts), add = TRUE)
[16:01:55.347]         }
[16:01:55.347]         {
[16:01:55.347]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.347]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.347]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.347]             })
[16:01:55.347]         }
[16:01:55.347]     }, args = future.call.arguments)
[16:01:55.347] }
[16:01:55.347] Lazy evaluation: FALSE
[16:01:55.347] Asynchronous evaluation: TRUE
[16:01:55.347] Local evaluation: TRUE
[16:01:55.347] Environment: R_GlobalEnv
[16:01:55.347] Capture standard output: TRUE
[16:01:55.347] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.347] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.347] Packages: <none>
[16:01:55.347] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.347] Resolved: FALSE
[16:01:55.347] Value: <not collected>
[16:01:55.347] Conditions captured: <none>
[16:01:55.347] Early signaling: FALSE
[16:01:55.347] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.347] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.359] Chunk #8 of 10 ... DONE
[16:01:55.359] Chunk #9 of 10 ...
[16:01:55.359]  - Finding globals in 'X' for chunk #9 ...
[16:01:55.360]    + additional globals found: [n=0] 
[16:01:55.360]    + additional namespaces needed: [n=0] 
[16:01:55.360]  - Finding globals in 'X' for chunk #9 ... DONE
[16:01:55.360]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:01:55.360]  - seeds: <none>
[16:01:55.360]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.390] Created future:
[16:01:55.391] MultisessionFuture:
[16:01:55.391] Label: ‘future_lapply-9’
[16:01:55.391] Expression:
[16:01:55.391] {
[16:01:55.391]     do.call(function(...) {
[16:01:55.391]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.391]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.391]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.391]             on.exit(options(oopts), add = TRUE)
[16:01:55.391]         }
[16:01:55.391]         {
[16:01:55.391]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.391]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.391]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.391]             })
[16:01:55.391]         }
[16:01:55.391]     }, args = future.call.arguments)
[16:01:55.391] }
[16:01:55.391] Lazy evaluation: FALSE
[16:01:55.391] Asynchronous evaluation: TRUE
[16:01:55.391] Local evaluation: TRUE
[16:01:55.391] Environment: R_GlobalEnv
[16:01:55.391] Capture standard output: TRUE
[16:01:55.391] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.391] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.391] Packages: <none>
[16:01:55.391] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.391] Resolved: FALSE
[16:01:55.391] Value: <not collected>
[16:01:55.391] Conditions captured: <none>
[16:01:55.391] Early signaling: FALSE
[16:01:55.391] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.391] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.402] Chunk #9 of 10 ... DONE
[16:01:55.402] Chunk #10 of 10 ...
[16:01:55.403]  - Finding globals in 'X' for chunk #10 ...
[16:01:55.403]    + additional globals found: [n=0] 
[16:01:55.403]    + additional namespaces needed: [n=0] 
[16:01:55.403]  - Finding globals in 'X' for chunk #10 ... DONE
[16:01:55.403]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:01:55.403]  - seeds: <none>
[16:01:55.403]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.432] Created future:
[16:01:55.432] MultisessionFuture:
[16:01:55.432] Label: ‘future_lapply-10’
[16:01:55.432] Expression:
[16:01:55.432] {
[16:01:55.432]     do.call(function(...) {
[16:01:55.432]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.432]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.432]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.432]             on.exit(options(oopts), add = TRUE)
[16:01:55.432]         }
[16:01:55.432]         {
[16:01:55.432]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.432]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.432]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.432]             })
[16:01:55.432]         }
[16:01:55.432]     }, args = future.call.arguments)
[16:01:55.432] }
[16:01:55.432] Lazy evaluation: FALSE
[16:01:55.432] Asynchronous evaluation: TRUE
[16:01:55.432] Local evaluation: TRUE
[16:01:55.432] Environment: R_GlobalEnv
[16:01:55.432] Capture standard output: TRUE
[16:01:55.432] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.432] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.432] Packages: <none>
[16:01:55.432] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.432] Resolved: FALSE
[16:01:55.432] Value: <not collected>
[16:01:55.432] Conditions captured: <none>
[16:01:55.432] Early signaling: FALSE
[16:01:55.432] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.432] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.444] Chunk #10 of 10 ... DONE
[16:01:55.444] Launching 10 futures (chunks) ... DONE
[16:01:55.444] Resolving 10 futures (chunks) ...
[16:01:55.489]  - Number of value chunks collected: 10
[16:01:55.489] Resolving 10 futures (chunks) ... DONE
[16:01:55.489] Reducing values from 10 chunks ...
[16:01:55.490]  - Number of values collected after concatenation: 10
[16:01:55.490]  - Number of values expected: 10
[16:01:55.490] Reducing values from 10 chunks ... DONE
[16:01:55.490] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:01:55.494] future_lapply() ...
[16:01:55.498] Number of chunks: 5
[16:01:55.498] getGlobalsAndPackagesXApply() ...
[16:01:55.498]  - future.globals: TRUE
[16:01:55.500]  - globals found/used: [n=1] ‘FUN’
[16:01:55.500]  - needed namespaces: [n=0] 
[16:01:55.500] Finding globals ... DONE
[16:01:55.500]  - use_args: TRUE
[16:01:55.500]  - Getting '...' globals ...
[16:01:55.501]    - '...' content: [n=0] 
[16:01:55.501] List of 1
[16:01:55.501]  $ ...: list()
[16:01:55.501]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:55.501]  - attr(*, "where")=List of 1
[16:01:55.501]   ..$ ...:<environment: 0x55d6cd339f90> 
[16:01:55.501]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:55.501]  - attr(*, "resolved")= logi TRUE
[16:01:55.501]  - attr(*, "total_size")= num NA
[16:01:55.503]  - Getting '...' globals ... DONE
[16:01:55.503] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:55.503] List of 2
[16:01:55.503]  $ ...future.FUN:function (x)  
[16:01:55.503]  $ ...          : list()
[16:01:55.503]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:55.503]  - attr(*, "where")=List of 2
[16:01:55.503]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:55.503]   ..$ ...          :<environment: 0x55d6cd339f90> 
[16:01:55.503]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:55.503]  - attr(*, "resolved")= logi FALSE
[16:01:55.503]  - attr(*, "total_size")= num 1840
[16:01:55.506] Packages to be attached in all futures: [n=0] 
[16:01:55.506] getGlobalsAndPackagesXApply() ... DONE
[16:01:55.506] Number of futures (= number of chunks): 5
[16:01:55.506] Launching 5 futures (chunks) ...
[16:01:55.506] Chunk #1 of 5 ...
[16:01:55.507]  - Finding globals in 'X' for chunk #1 ...
[16:01:55.507]    + additional globals found: [n=0] 
[16:01:55.507]    + additional namespaces needed: [n=0] 
[16:01:55.507]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:55.507]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:01:55.507]  - seeds: <none>
[16:01:55.507]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.525] Created future:
[16:01:55.525] MultisessionFuture:
[16:01:55.525] Label: ‘future_lapply-1’
[16:01:55.525] Expression:
[16:01:55.525] {
[16:01:55.525]     do.call(function(...) {
[16:01:55.525]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.525]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.525]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.525]             on.exit(options(oopts), add = TRUE)
[16:01:55.525]         }
[16:01:55.525]         {
[16:01:55.525]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.525]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.525]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.525]             })
[16:01:55.525]         }
[16:01:55.525]     }, args = future.call.arguments)
[16:01:55.525] }
[16:01:55.525] Lazy evaluation: FALSE
[16:01:55.525] Asynchronous evaluation: TRUE
[16:01:55.525] Local evaluation: TRUE
[16:01:55.525] Environment: R_GlobalEnv
[16:01:55.525] Capture standard output: TRUE
[16:01:55.525] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.525] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.525] Packages: <none>
[16:01:55.525] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.525] Resolved: FALSE
[16:01:55.525] Value: <not collected>
[16:01:55.525] Conditions captured: <none>
[16:01:55.525] Early signaling: FALSE
[16:01:55.525] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.525] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.536] Chunk #1 of 5 ... DONE
[16:01:55.536] Chunk #2 of 5 ...
[16:01:55.537]  - Finding globals in 'X' for chunk #2 ...
[16:01:55.537]    + additional globals found: [n=0] 
[16:01:55.537]    + additional namespaces needed: [n=0] 
[16:01:55.537]  - Finding globals in 'X' for chunk #2 ... DONE
[16:01:55.537]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:01:55.537]  - seeds: <none>
[16:01:55.538]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.554] Created future:
[16:01:55.554] MultisessionFuture:
[16:01:55.554] Label: ‘future_lapply-2’
[16:01:55.554] Expression:
[16:01:55.554] {
[16:01:55.554]     do.call(function(...) {
[16:01:55.554]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.554]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.554]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.554]             on.exit(options(oopts), add = TRUE)
[16:01:55.554]         }
[16:01:55.554]         {
[16:01:55.554]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.554]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.554]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.554]             })
[16:01:55.554]         }
[16:01:55.554]     }, args = future.call.arguments)
[16:01:55.554] }
[16:01:55.554] Lazy evaluation: FALSE
[16:01:55.554] Asynchronous evaluation: TRUE
[16:01:55.554] Local evaluation: TRUE
[16:01:55.554] Environment: R_GlobalEnv
[16:01:55.554] Capture standard output: TRUE
[16:01:55.554] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.554] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.554] Packages: <none>
[16:01:55.554] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.554] Resolved: FALSE
[16:01:55.554] Value: <not collected>
[16:01:55.554] Conditions captured: <none>
[16:01:55.554] Early signaling: FALSE
[16:01:55.554] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.554] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.568] Chunk #2 of 5 ... DONE
[16:01:55.568] Chunk #3 of 5 ...
[16:01:55.568]  - Finding globals in 'X' for chunk #3 ...
[16:01:55.569]    + additional globals found: [n=0] 
[16:01:55.569]    + additional namespaces needed: [n=0] 
[16:01:55.569]  - Finding globals in 'X' for chunk #3 ... DONE
[16:01:55.569]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:01:55.569]  - seeds: <none>
[16:01:55.569]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.598] Created future:
[16:01:55.598] MultisessionFuture:
[16:01:55.598] Label: ‘future_lapply-3’
[16:01:55.598] Expression:
[16:01:55.598] {
[16:01:55.598]     do.call(function(...) {
[16:01:55.598]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.598]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.598]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.598]             on.exit(options(oopts), add = TRUE)
[16:01:55.598]         }
[16:01:55.598]         {
[16:01:55.598]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.598]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.598]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.598]             })
[16:01:55.598]         }
[16:01:55.598]     }, args = future.call.arguments)
[16:01:55.598] }
[16:01:55.598] Lazy evaluation: FALSE
[16:01:55.598] Asynchronous evaluation: TRUE
[16:01:55.598] Local evaluation: TRUE
[16:01:55.598] Environment: R_GlobalEnv
[16:01:55.598] Capture standard output: TRUE
[16:01:55.598] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.598] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.598] Packages: <none>
[16:01:55.598] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.598] Resolved: FALSE
[16:01:55.598] Value: <not collected>
[16:01:55.598] Conditions captured: <none>
[16:01:55.598] Early signaling: FALSE
[16:01:55.598] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.598] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.610] Chunk #3 of 5 ... DONE
[16:01:55.610] Chunk #4 of 5 ...
[16:01:55.610]  - Finding globals in 'X' for chunk #4 ...
[16:01:55.610]    + additional globals found: [n=0] 
[16:01:55.611]    + additional namespaces needed: [n=0] 
[16:01:55.611]  - Finding globals in 'X' for chunk #4 ... DONE
[16:01:55.611]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:01:55.611]  - seeds: <none>
[16:01:55.611]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.639] Created future:
[16:01:55.639] MultisessionFuture:
[16:01:55.639] Label: ‘future_lapply-4’
[16:01:55.639] Expression:
[16:01:55.639] {
[16:01:55.639]     do.call(function(...) {
[16:01:55.639]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.639]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.639]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.639]             on.exit(options(oopts), add = TRUE)
[16:01:55.639]         }
[16:01:55.639]         {
[16:01:55.639]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.639]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.639]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.639]             })
[16:01:55.639]         }
[16:01:55.639]     }, args = future.call.arguments)
[16:01:55.639] }
[16:01:55.639] Lazy evaluation: FALSE
[16:01:55.639] Asynchronous evaluation: TRUE
[16:01:55.639] Local evaluation: TRUE
[16:01:55.639] Environment: R_GlobalEnv
[16:01:55.639] Capture standard output: TRUE
[16:01:55.639] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.639] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.639] Packages: <none>
[16:01:55.639] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.639] Resolved: FALSE
[16:01:55.639] Value: <not collected>
[16:01:55.639] Conditions captured: <none>
[16:01:55.639] Early signaling: FALSE
[16:01:55.639] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.639] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.651] Chunk #4 of 5 ... DONE
[16:01:55.651] Chunk #5 of 5 ...
[16:01:55.651]  - Finding globals in 'X' for chunk #5 ...
[16:01:55.652]    + additional globals found: [n=0] 
[16:01:55.652]    + additional namespaces needed: [n=0] 
[16:01:55.652]  - Finding globals in 'X' for chunk #5 ... DONE
[16:01:55.652]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:01:55.652]  - seeds: <none>
[16:01:55.652]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.682] Created future:
[16:01:55.682] MultisessionFuture:
[16:01:55.682] Label: ‘future_lapply-5’
[16:01:55.682] Expression:
[16:01:55.682] {
[16:01:55.682]     do.call(function(...) {
[16:01:55.682]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.682]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.682]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.682]             on.exit(options(oopts), add = TRUE)
[16:01:55.682]         }
[16:01:55.682]         {
[16:01:55.682]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.682]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.682]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.682]             })
[16:01:55.682]         }
[16:01:55.682]     }, args = future.call.arguments)
[16:01:55.682] }
[16:01:55.682] Lazy evaluation: FALSE
[16:01:55.682] Asynchronous evaluation: TRUE
[16:01:55.682] Local evaluation: TRUE
[16:01:55.682] Environment: R_GlobalEnv
[16:01:55.682] Capture standard output: TRUE
[16:01:55.682] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.682] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.682] Packages: <none>
[16:01:55.682] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.682] Resolved: FALSE
[16:01:55.682] Value: <not collected>
[16:01:55.682] Conditions captured: <none>
[16:01:55.682] Early signaling: FALSE
[16:01:55.682] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.682] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.693] Chunk #5 of 5 ... DONE
[16:01:55.693] Launching 5 futures (chunks) ... DONE
[16:01:55.694] Resolving 5 futures (chunks) ...
[16:01:55.737]  - Number of value chunks collected: 5
[16:01:55.738] Resolving 5 futures (chunks) ... DONE
[16:01:55.738] Reducing values from 5 chunks ...
[16:01:55.738]  - Number of values collected after concatenation: 10
[16:01:55.738]  - Number of values expected: 10
[16:01:55.738] Reducing values from 5 chunks ... DONE
[16:01:55.738] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:01:55.742] future_lapply() ...
[16:01:55.746] Number of chunks: 2
[16:01:55.746] getGlobalsAndPackagesXApply() ...
[16:01:55.746]  - future.globals: TRUE
[16:01:55.748]  - globals found/used: [n=1] ‘FUN’
[16:01:55.748]  - needed namespaces: [n=0] 
[16:01:55.748] Finding globals ... DONE
[16:01:55.748]  - use_args: TRUE
[16:01:55.748]  - Getting '...' globals ...
[16:01:55.749]    - '...' content: [n=0] 
[16:01:55.749] List of 1
[16:01:55.749]  $ ...: list()
[16:01:55.749]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:55.749]  - attr(*, "where")=List of 1
[16:01:55.749]   ..$ ...:<environment: 0x55d6cd54c100> 
[16:01:55.749]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:55.749]  - attr(*, "resolved")= logi TRUE
[16:01:55.749]  - attr(*, "total_size")= num NA
[16:01:55.751]  - Getting '...' globals ... DONE
[16:01:55.751] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:55.751] List of 2
[16:01:55.751]  $ ...future.FUN:function (x)  
[16:01:55.751]  $ ...          : list()
[16:01:55.751]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:55.751]  - attr(*, "where")=List of 2
[16:01:55.751]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:55.751]   ..$ ...          :<environment: 0x55d6cd54c100> 
[16:01:55.751]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:55.751]  - attr(*, "resolved")= logi FALSE
[16:01:55.751]  - attr(*, "total_size")= num 1840
[16:01:55.754] Packages to be attached in all futures: [n=0] 
[16:01:55.754] getGlobalsAndPackagesXApply() ... DONE
[16:01:55.754] Number of futures (= number of chunks): 2
[16:01:55.755] Launching 2 futures (chunks) ...
[16:01:55.755] Chunk #1 of 2 ...
[16:01:55.755]  - Finding globals in 'X' for chunk #1 ...
[16:01:55.755]    + additional globals found: [n=0] 
[16:01:55.755]    + additional namespaces needed: [n=0] 
[16:01:55.755]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:55.755]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:01:55.755]  - seeds: <none>
[16:01:55.756]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.775] Created future:
[16:01:55.775] MultisessionFuture:
[16:01:55.775] Label: ‘future_lapply-1’
[16:01:55.775] Expression:
[16:01:55.775] {
[16:01:55.775]     do.call(function(...) {
[16:01:55.775]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.775]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.775]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.775]             on.exit(options(oopts), add = TRUE)
[16:01:55.775]         }
[16:01:55.775]         {
[16:01:55.775]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.775]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.775]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.775]             })
[16:01:55.775]         }
[16:01:55.775]     }, args = future.call.arguments)
[16:01:55.775] }
[16:01:55.775] Lazy evaluation: FALSE
[16:01:55.775] Asynchronous evaluation: TRUE
[16:01:55.775] Local evaluation: TRUE
[16:01:55.775] Environment: R_GlobalEnv
[16:01:55.775] Capture standard output: TRUE
[16:01:55.775] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.775] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.775] Packages: <none>
[16:01:55.775] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.775] Resolved: FALSE
[16:01:55.775] Value: <not collected>
[16:01:55.775] Conditions captured: <none>
[16:01:55.775] Early signaling: FALSE
[16:01:55.775] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.775] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.787] Chunk #1 of 2 ... DONE
[16:01:55.787] Chunk #2 of 2 ...
[16:01:55.787]  - Finding globals in 'X' for chunk #2 ...
[16:01:55.788]    + additional globals found: [n=0] 
[16:01:55.788]    + additional namespaces needed: [n=0] 
[16:01:55.788]  - Finding globals in 'X' for chunk #2 ... DONE
[16:01:55.788]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:01:55.788]  - seeds: <none>
[16:01:55.788]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.806] Created future:
[16:01:55.806] MultisessionFuture:
[16:01:55.806] Label: ‘future_lapply-2’
[16:01:55.806] Expression:
[16:01:55.806] {
[16:01:55.806]     do.call(function(...) {
[16:01:55.806]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.806]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.806]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.806]             on.exit(options(oopts), add = TRUE)
[16:01:55.806]         }
[16:01:55.806]         {
[16:01:55.806]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.806]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.806]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.806]             })
[16:01:55.806]         }
[16:01:55.806]     }, args = future.call.arguments)
[16:01:55.806] }
[16:01:55.806] Lazy evaluation: FALSE
[16:01:55.806] Asynchronous evaluation: TRUE
[16:01:55.806] Local evaluation: TRUE
[16:01:55.806] Environment: R_GlobalEnv
[16:01:55.806] Capture standard output: TRUE
[16:01:55.806] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.806] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.806] Packages: <none>
[16:01:55.806] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.806] Resolved: FALSE
[16:01:55.806] Value: <not collected>
[16:01:55.806] Conditions captured: <none>
[16:01:55.806] Early signaling: FALSE
[16:01:55.806] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.806] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.818] Chunk #2 of 2 ... DONE
[16:01:55.818] Launching 2 futures (chunks) ... DONE
[16:01:55.818] Resolving 2 futures (chunks) ...
[16:01:55.853]  - Number of value chunks collected: 2
[16:01:55.853] Resolving 2 futures (chunks) ... DONE
[16:01:55.853] Reducing values from 2 chunks ...
[16:01:55.853]  - Number of values collected after concatenation: 10
[16:01:55.853]  - Number of values expected: 10
[16:01:55.853] Reducing values from 2 chunks ... DONE
[16:01:55.853] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:01:55.857] future_lapply() ...
[16:01:55.861] Number of chunks: 1
[16:01:55.861] getGlobalsAndPackagesXApply() ...
[16:01:55.861]  - future.globals: TRUE
[16:01:55.863]  - globals found/used: [n=1] ‘FUN’
[16:01:55.863]  - needed namespaces: [n=0] 
[16:01:55.863] Finding globals ... DONE
[16:01:55.863]  - use_args: TRUE
[16:01:55.863]  - Getting '...' globals ...
[16:01:55.863]    - '...' content: [n=0] 
[16:01:55.864] List of 1
[16:01:55.864]  $ ...: list()
[16:01:55.864]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:55.864]  - attr(*, "where")=List of 1
[16:01:55.864]   ..$ ...:<environment: 0x55d6ce066b70> 
[16:01:55.864]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:55.864]  - attr(*, "resolved")= logi TRUE
[16:01:55.864]  - attr(*, "total_size")= num NA
[16:01:55.866]  - Getting '...' globals ... DONE
[16:01:55.866] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:55.866] List of 2
[16:01:55.866]  $ ...future.FUN:function (x)  
[16:01:55.866]  $ ...          : list()
[16:01:55.866]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:55.866]  - attr(*, "where")=List of 2
[16:01:55.866]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:55.866]   ..$ ...          :<environment: 0x55d6ce066b70> 
[16:01:55.866]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:55.866]  - attr(*, "resolved")= logi FALSE
[16:01:55.866]  - attr(*, "total_size")= num 1840
[16:01:55.869] Packages to be attached in all futures: [n=0] 
[16:01:55.869] getGlobalsAndPackagesXApply() ... DONE
[16:01:55.869] Number of futures (= number of chunks): 1
[16:01:55.869] Launching 1 futures (chunks) ...
[16:01:55.870] Chunk #1 of 1 ...
[16:01:55.870]  - Finding globals in 'X' for chunk #1 ...
[16:01:55.870]    + additional globals found: [n=0] 
[16:01:55.870]    + additional namespaces needed: [n=0] 
[16:01:55.870]  - Finding globals in 'X' for chunk #1 ... DONE
[16:01:55.870]  - seeds: <none>
[16:01:55.870]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:01:55.888] Created future:
[16:01:55.888] MultisessionFuture:
[16:01:55.888] Label: ‘future_lapply-1’
[16:01:55.888] Expression:
[16:01:55.888] {
[16:01:55.888]     do.call(function(...) {
[16:01:55.888]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:01:55.888]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:01:55.888]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:01:55.888]             on.exit(options(oopts), add = TRUE)
[16:01:55.888]         }
[16:01:55.888]         {
[16:01:55.888]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:01:55.888]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:01:55.888]                 ...future.FUN(...future.X_jj, ...)
[16:01:55.888]             })
[16:01:55.888]         }
[16:01:55.888]     }, args = future.call.arguments)
[16:01:55.888] }
[16:01:55.888] Lazy evaluation: FALSE
[16:01:55.888] Asynchronous evaluation: TRUE
[16:01:55.888] Local evaluation: TRUE
[16:01:55.888] Environment: R_GlobalEnv
[16:01:55.888] Capture standard output: TRUE
[16:01:55.888] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:01:55.888] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:01:55.888] Packages: <none>
[16:01:55.888] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:01:55.888] Resolved: FALSE
[16:01:55.888] Value: <not collected>
[16:01:55.888] Conditions captured: <none>
[16:01:55.888] Early signaling: FALSE
[16:01:55.888] Owner process: 9483e213-6440-185f-4d81-78688ea58c22
[16:01:55.888] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:01:55.900] Chunk #1 of 1 ... DONE
[16:01:55.900] Launching 1 futures (chunks) ... DONE
[16:01:55.900] Resolving 1 futures (chunks) ...
[16:01:55.943]  - Number of value chunks collected: 1
[16:01:55.943] Resolving 1 futures (chunks) ... DONE
[16:01:55.943] Reducing values from 1 chunks ...
[16:01:55.943]  - Number of values collected after concatenation: 10
[16:01:55.943]  - Number of values expected: 10
[16:01:55.943] Reducing values from 1 chunks ... DONE
[16:01:55.943] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[16:01:55.947] future_lapply() ...
[16:01:55.952] Number of chunks: 1
[16:01:55.952] getGlobalsAndPackagesXApply() ...
[16:01:55.952] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[16:01:55.952] future_lapply() ...
[16:01:55.958] Number of chunks: 1
[16:01:55.958] getGlobalsAndPackagesXApply() ...
[16:01:55.958]  - future.globals: <name-value list> with names ‘1’
[16:01:55.958] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[16:01:55.958] future_lapply() ...
[16:01:55.962] Number of chunks: 1
[16:01:55.962] getGlobalsAndPackagesXApply() ...
[16:01:55.962]  - future.globals: ‘...future.FUN’
[16:01:55.962]  - use_args: TRUE
[16:01:55.962] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[16:01:55.963] future_lapply() ...
[16:01:55.966] Number of chunks: 1
[16:01:55.966] getGlobalsAndPackagesXApply() ...
[16:01:55.966]  - future.globals: ‘...future.FUN’
[16:01:55.966]  - use_args: TRUE
[16:01:55.967] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[16:01:55.967] future_lapply() ...
[16:01:55.970] Number of chunks: 1
[16:01:55.970] getGlobalsAndPackagesXApply() ...
[16:01:55.970]  - future.globals: TRUE
[16:01:55.972]  - globals found/used: [n=1] ‘FUN’
[16:01:55.972]  - needed namespaces: [n=0] 
[16:01:55.972] Finding globals ... DONE
[16:01:55.972]  - use_args: TRUE
[16:01:55.972]  - Getting '...' globals ...
[16:01:55.973]    - '...' content: [n=0] 
[16:01:55.973] List of 1
[16:01:55.973]  $ ...: list()
[16:01:55.973]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:55.973]  - attr(*, "where")=List of 1
[16:01:55.973]   ..$ ...:<environment: 0x55d6cee3f530> 
[16:01:55.973]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:55.973]  - attr(*, "resolved")= logi TRUE
[16:01:55.973]  - attr(*, "total_size")= num NA
[16:01:55.975]  - Getting '...' globals ... DONE
[16:01:55.975] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:01:55.976] List of 2
[16:01:55.976]  $ ...future.FUN:function (f)  
[16:01:55.976]  $ ...          : list()
[16:01:55.976]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:01:55.976]  - attr(*, "where")=List of 2
[16:01:55.976]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:01:55.976]   ..$ ...          :<environment: 0x55d6cee3f530> 
[16:01:55.976]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:01:55.976]  - attr(*, "resolved")= logi FALSE
[16:01:55.976]  - attr(*, "total_size")= num 336
[16:01:55.978] Packages to be attached in all futures: [n=0] 
[16:01:55.978] getGlobalsAndPackagesXApply() ... DONE
[16:01:55.979] Number of futures (= number of chunks): 1
[16:01:55.979] Launching 1 futures (chunks) ...
[16:01:55.979] Chunk #1 of 1 ...
[16:01:55.979]  - Finding globals in 'X' for chunk #1 ...
[16:01:55.980]    + additional globals found: [n=1] ‘...future.elements_ii’
[16:01:55.980]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
