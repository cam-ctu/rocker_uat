
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[10:22:54.670] plan(): Setting new future strategy stack:
[10:22:54.670] List of future strategies:
[10:22:54.670] 1. sequential:
[10:22:54.670]    - args: function (..., envir = parent.frame())
[10:22:54.670]    - tweaked: FALSE
[10:22:54.670]    - call: future::plan("sequential")
[10:22:54.684] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[10:22:55.233] future_lapply() ...
[10:22:55.237] Number of chunks: 1
[10:22:55.237] getGlobalsAndPackagesXApply() ...
[10:22:55.238]  - future.globals: FALSE
[10:22:55.240]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[10:22:55.240]  - needed namespaces: [n=0] 
[10:22:55.241] Finding globals ... DONE
[10:22:55.241]  - use_args: TRUE
[10:22:55.241]  - Getting '...' globals ...
[10:22:55.242]    - '...' content: [n=0] 
[10:22:55.242] List of 1
[10:22:55.242]  $ ...: list()
[10:22:55.242]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.242]  - attr(*, "where")=List of 1
[10:22:55.242]   ..$ ...:<environment: 0x5646ecf34a68> 
[10:22:55.242]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.242]  - attr(*, "resolved")= logi TRUE
[10:22:55.242]  - attr(*, "total_size")= num NA
[10:22:55.245]  - Getting '...' globals ... DONE
[10:22:55.245] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[10:22:55.245] List of 3
[10:22:55.245]  $ ...future.FUN        :function (x)  
[10:22:55.245]  $ future.call.arguments: list()
[10:22:55.245]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.245]  $ ...                  : list()
[10:22:55.245]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.245]  - attr(*, "where")=List of 3
[10:22:55.245]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[10:22:55.245]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:22:55.245]   ..$ ...                  :<environment: 0x5646ecf34a68> 
[10:22:55.245]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.245]  - attr(*, "resolved")= logi FALSE
[10:22:55.245]  - attr(*, "total_size")= num 3824
[10:22:55.249] Packages to be attached in all futures: [n=1] ‘utils’
[10:22:55.249] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.249] Number of futures (= number of chunks): 1
[10:22:55.250] Launching 1 futures (chunks) ...
[10:22:55.250] Chunk #1 of 1 ...
[10:22:55.250]  - seeds: <none>
[10:22:55.250]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.260] Created future:
[10:22:55.260] ClusterFuture:
[10:22:55.260] Label: ‘future_lapply-1’
[10:22:55.260] Expression:
[10:22:55.260] {
[10:22:55.260]     do.call(function(...) {
[10:22:55.260]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.260]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.260]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.260]             on.exit(options(oopts), add = TRUE)
[10:22:55.260]         }
[10:22:55.260]         {
[10:22:55.260]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.260]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.260]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.260]             })
[10:22:55.260]         }
[10:22:55.260]     }, args = future.call.arguments)
[10:22:55.260] }
[10:22:55.260] Lazy evaluation: FALSE
[10:22:55.260] Asynchronous evaluation: TRUE
[10:22:55.260] Local evaluation: TRUE
[10:22:55.260] Environment: R_GlobalEnv
[10:22:55.260] Capture standard output: TRUE
[10:22:55.260] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.260] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:55.260] Packages: 1 packages (‘utils’)
[10:22:55.260] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.260] Resolved: FALSE
[10:22:55.260] Value: <not collected>
[10:22:55.260] Conditions captured: <none>
[10:22:55.260] Early signaling: FALSE
[10:22:55.260] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.260] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:55.273] Chunk #1 of 1 ... DONE
[10:22:55.273] Launching 1 futures (chunks) ... DONE
[10:22:55.273] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[10:22:55.316] future_lapply() ...
[10:22:55.317] Number of chunks: 1
[10:22:55.317] getGlobalsAndPackagesXApply() ...
[10:22:55.317]  - future.globals: TRUE
[10:22:55.321]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[10:22:55.321]  - needed namespaces: [n=1] ‘stats’
[10:22:55.321] Finding globals ... DONE
[10:22:55.321]  - use_args: TRUE
[10:22:55.321]  - Getting '...' globals ...
[10:22:55.322]    - '...' content: [n=0] 
[10:22:55.322] List of 1
[10:22:55.322]  $ ...: list()
[10:22:55.322]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.322]  - attr(*, "where")=List of 1
[10:22:55.322]   ..$ ...:<environment: 0x5646f035d7e8> 
[10:22:55.322]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.322]  - attr(*, "resolved")= logi TRUE
[10:22:55.322]  - attr(*, "total_size")= num NA
[10:22:55.326]  - Getting '...' globals ... DONE
[10:22:55.326] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[10:22:55.326] List of 4
[10:22:55.326]  $ ...future.FUN:function (x)  
[10:22:55.326]  $ a            : num 1
[10:22:55.326]  $ b            : num 2
[10:22:55.326]  $ ...          : list()
[10:22:55.326]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.326]  - attr(*, "where")=List of 4
[10:22:55.326]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.326]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:55.326]   ..$ b            :<environment: R_EmptyEnv> 
[10:22:55.326]   ..$ ...          :<environment: 0x5646f035d7e8> 
[10:22:55.326]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.326]  - attr(*, "resolved")= logi FALSE
[10:22:55.326]  - attr(*, "total_size")= num 3936
[10:22:55.331] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[10:22:55.334] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.334] Number of futures (= number of chunks): 1
[10:22:55.334] Launching 1 futures (chunks) ...
[10:22:55.334] Chunk #1 of 1 ...
[10:22:55.334]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.335]    + additional globals found: [n=0] 
[10:22:55.335]    + additional namespaces needed: [n=0] 
[10:22:55.335]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.335]  - seeds: <none>
[10:22:55.335]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.344] Created future:
[10:22:55.344] ClusterFuture:
[10:22:55.344] Label: ‘future_lapply-1’
[10:22:55.344] Expression:
[10:22:55.344] {
[10:22:55.344]     do.call(function(...) {
[10:22:55.344]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.344]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.344]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.344]             on.exit(options(oopts), add = TRUE)
[10:22:55.344]         }
[10:22:55.344]         {
[10:22:55.344]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.344]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.344]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.344]             })
[10:22:55.344]         }
[10:22:55.344]     }, args = future.call.arguments)
[10:22:55.344] }
[10:22:55.344] Lazy evaluation: FALSE
[10:22:55.344] Asynchronous evaluation: TRUE
[10:22:55.344] Local evaluation: TRUE
[10:22:55.344] Environment: R_GlobalEnv
[10:22:55.344] Capture standard output: TRUE
[10:22:55.344] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.344] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[10:22:55.344] Packages: 2 packages (‘stats’, ‘utils’)
[10:22:55.344] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.344] Resolved: FALSE
[10:22:55.344] Value: <not collected>
[10:22:55.344] Conditions captured: <none>
[10:22:55.344] Early signaling: FALSE
[10:22:55.344] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.344] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:55.355] Chunk #1 of 1 ... DONE
[10:22:55.356] Launching 1 futures (chunks) ... DONE
[10:22:55.356] Resolving 1 futures (chunks) ...
[10:22:55.398]  - Number of value chunks collected: 1
[10:22:55.398] Resolving 1 futures (chunks) ... DONE
[10:22:55.398] Reducing values from 1 chunks ...
[10:22:55.398]  - Number of values collected after concatenation: 1
[10:22:55.399]  - Number of values expected: 1
[10:22:55.399] Reducing values from 1 chunks ... DONE
[10:22:55.399] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[10:22:55.399] future_lapply() ...
[10:22:55.400] Number of chunks: 1
[10:22:55.400] getGlobalsAndPackagesXApply() ...
[10:22:55.400]  - future.globals: ‘a’, ‘b’
[10:22:55.400]  - use_args: TRUE
[10:22:55.400] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[10:22:55.400] List of 4
[10:22:55.400]  $ a            : num 1
[10:22:55.400]  $ b            : num 2
[10:22:55.400]  $ ...future.FUN:function (x)  
[10:22:55.400]  $ ...          : list()
[10:22:55.400]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.400]  - attr(*, "where")=List of 4
[10:22:55.400]   ..$ a            :<environment: R_GlobalEnv> 
[10:22:55.400]   ..$ b            :<environment: R_GlobalEnv> 
[10:22:55.400]   ..$ ...future.FUN:<environment: 0x5646ef30c328> 
[10:22:55.400]   ..$ ...          :<environment: 0x5646ef30c328> 
[10:22:55.400]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.400]  - attr(*, "resolved")= logi FALSE
[10:22:55.400]  - attr(*, "total_size")= num NA
[10:22:55.404] Packages to be attached in all futures: [n=1] ‘utils’
[10:22:55.404] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.404] Number of futures (= number of chunks): 1
[10:22:55.404] Launching 1 futures (chunks) ...
[10:22:55.405] Chunk #1 of 1 ...
[10:22:55.405]  - seeds: <none>
[10:22:55.405]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.414] Created future:
[10:22:55.414] ClusterFuture:
[10:22:55.414] Label: ‘future_lapply-1’
[10:22:55.414] Expression:
[10:22:55.414] {
[10:22:55.414]     do.call(function(...) {
[10:22:55.414]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.414]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.414]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.414]             on.exit(options(oopts), add = TRUE)
[10:22:55.414]         }
[10:22:55.414]         {
[10:22:55.414]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.414]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.414]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.414]             })
[10:22:55.414]         }
[10:22:55.414]     }, args = future.call.arguments)
[10:22:55.414] }
[10:22:55.414] Lazy evaluation: FALSE
[10:22:55.414] Asynchronous evaluation: TRUE
[10:22:55.414] Local evaluation: TRUE
[10:22:55.414] Environment: R_GlobalEnv
[10:22:55.414] Capture standard output: TRUE
[10:22:55.414] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.414] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[10:22:55.414] Packages: 1 packages (‘utils’)
[10:22:55.414] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.414] Resolved: FALSE
[10:22:55.414] Value: <not collected>
[10:22:55.414] Conditions captured: <none>
[10:22:55.414] Early signaling: FALSE
[10:22:55.414] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.414] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:55.425] Chunk #1 of 1 ... DONE
[10:22:55.425] Launching 1 futures (chunks) ... DONE
[10:22:55.426] Resolving 1 futures (chunks) ...
[10:22:55.468]  - Number of value chunks collected: 1
[10:22:55.468] Resolving 1 futures (chunks) ... DONE
[10:22:55.468] Reducing values from 1 chunks ...
[10:22:55.468]  - Number of values collected after concatenation: 1
[10:22:55.468]  - Number of values expected: 1
[10:22:55.468] Reducing values from 1 chunks ... DONE
[10:22:55.468] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[10:22:55.469] future_lapply() ...
[10:22:55.469] Number of chunks: 1
[10:22:55.469] getGlobalsAndPackagesXApply() ...
[10:22:55.470]  - future.globals: <name-value list> with names ‘2’, ‘3’
[10:22:55.470]  - use_args: TRUE
[10:22:55.470]  - Getting '...' globals ...
[10:22:55.470]    - '...' content: [n=0] 
[10:22:55.470] List of 1
[10:22:55.470]  $ ...: list()
[10:22:55.470]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.470]  - attr(*, "where")=List of 1
[10:22:55.470]   ..$ ...:<environment: 0x5646ed6fe800> 
[10:22:55.470]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.470]  - attr(*, "resolved")= logi TRUE
[10:22:55.470]  - attr(*, "total_size")= num NA
[10:22:55.473]  - Getting '...' globals ... DONE
[10:22:55.473] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[10:22:55.473] List of 4
[10:22:55.473]  $ a            : num 2
[10:22:55.473]  $ b            : num 3
[10:22:55.473]  $ ...future.FUN:function (x)  
[10:22:55.473]  $ ...          : list()
[10:22:55.473]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.473]  - attr(*, "where")=List of 4
[10:22:55.473]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:55.473]   ..$ b            :<environment: R_EmptyEnv> 
[10:22:55.473]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[10:22:55.473]   ..$ ...          :<environment: 0x5646ed6fe800> 
[10:22:55.473]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.473]  - attr(*, "resolved")= logi FALSE
[10:22:55.473]  - attr(*, "total_size")= num NA
[10:22:55.477] Packages to be attached in all futures: [n=1] ‘utils’
[10:22:55.477] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.477] Number of futures (= number of chunks): 1
[10:22:55.477] Launching 1 futures (chunks) ...
[10:22:55.477] Chunk #1 of 1 ...
[10:22:55.477]  - seeds: <none>
[10:22:55.477]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.487] Created future:
[10:22:55.487] ClusterFuture:
[10:22:55.487] Label: ‘future_lapply-1’
[10:22:55.487] Expression:
[10:22:55.487] {
[10:22:55.487]     do.call(function(...) {
[10:22:55.487]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.487]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.487]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.487]             on.exit(options(oopts), add = TRUE)
[10:22:55.487]         }
[10:22:55.487]         {
[10:22:55.487]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.487]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.487]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.487]             })
[10:22:55.487]         }
[10:22:55.487]     }, args = future.call.arguments)
[10:22:55.487] }
[10:22:55.487] Lazy evaluation: FALSE
[10:22:55.487] Asynchronous evaluation: TRUE
[10:22:55.487] Local evaluation: TRUE
[10:22:55.487] Environment: R_GlobalEnv
[10:22:55.487] Capture standard output: TRUE
[10:22:55.487] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.487] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[10:22:55.487] Packages: 1 packages (‘utils’)
[10:22:55.487] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.487] Resolved: FALSE
[10:22:55.487] Value: <not collected>
[10:22:55.487] Conditions captured: <none>
[10:22:55.487] Early signaling: FALSE
[10:22:55.487] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.487] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:55.498] Chunk #1 of 1 ... DONE
[10:22:55.498] Launching 1 futures (chunks) ... DONE
[10:22:55.498] Resolving 1 futures (chunks) ...
[10:22:55.541]  - Number of value chunks collected: 1
[10:22:55.541] Resolving 1 futures (chunks) ... DONE
[10:22:55.541] Reducing values from 1 chunks ...
[10:22:55.541]  - Number of values collected after concatenation: 1
[10:22:55.541]  - Number of values expected: 1
[10:22:55.541] Reducing values from 1 chunks ... DONE
[10:22:55.541] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[10:22:55.542] future_lapply() ...
[10:22:55.542] Number of chunks: 1
[10:22:55.542] getGlobalsAndPackagesXApply() ...
[10:22:55.542]  - future.globals: FALSE
[10:22:55.543]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[10:22:55.543]  - needed namespaces: [n=0] 
[10:22:55.543] Finding globals ... DONE
[10:22:55.544]  - use_args: TRUE
[10:22:55.544]  - Getting '...' globals ...
[10:22:55.544]    - '...' content: [n=0] 
[10:22:55.544] List of 1
[10:22:55.544]  $ ...: list()
[10:22:55.544]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.544]  - attr(*, "where")=List of 1
[10:22:55.544]   ..$ ...:<environment: 0x5646f0373b00> 
[10:22:55.544]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.544]  - attr(*, "resolved")= logi TRUE
[10:22:55.544]  - attr(*, "total_size")= num NA
[10:22:55.547]  - Getting '...' globals ... DONE
[10:22:55.547] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[10:22:55.547] List of 4
[10:22:55.547]  $ d                    : num 42
[10:22:55.547]  $ ...future.FUN        :function (x)  
[10:22:55.547]  $ future.call.arguments: list()
[10:22:55.547]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.547]  $ ...                  : list()
[10:22:55.547]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.547]  - attr(*, "where")=List of 4
[10:22:55.547]   ..$ d                    :<environment: R_EmptyEnv> 
[10:22:55.547]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[10:22:55.547]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:22:55.547]   ..$ ...                  :<environment: 0x5646f0373b00> 
[10:22:55.547]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.547]  - attr(*, "resolved")= logi FALSE
[10:22:55.547]  - attr(*, "total_size")= num 784
[10:22:55.551] Packages to be attached in all futures: [n=0] 
[10:22:55.551] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.551] Number of futures (= number of chunks): 1
[10:22:55.551] Launching 1 futures (chunks) ...
[10:22:55.551] Chunk #1 of 1 ...
[10:22:55.551]  - seeds: <none>
[10:22:55.551]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.562] Created future:
[10:22:55.562] ClusterFuture:
[10:22:55.562] Label: ‘future_lapply-1’
[10:22:55.562] Expression:
[10:22:55.562] {
[10:22:55.562]     do.call(function(...) {
[10:22:55.562]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.562]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.562]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.562]             on.exit(options(oopts), add = TRUE)
[10:22:55.562]         }
[10:22:55.562]         {
[10:22:55.562]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.562]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.562]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.562]             })
[10:22:55.562]         }
[10:22:55.562]     }, args = future.call.arguments)
[10:22:55.562] }
[10:22:55.562] Lazy evaluation: FALSE
[10:22:55.562] Asynchronous evaluation: TRUE
[10:22:55.562] Local evaluation: TRUE
[10:22:55.562] Environment: R_GlobalEnv
[10:22:55.562] Capture standard output: TRUE
[10:22:55.562] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.562] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:22:55.562] Packages: <none>
[10:22:55.562] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.562] Resolved: FALSE
[10:22:55.562] Value: <not collected>
[10:22:55.562] Conditions captured: <none>
[10:22:55.562] Early signaling: FALSE
[10:22:55.562] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.562] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:55.574] Chunk #1 of 1 ... DONE
[10:22:55.574] Launching 1 futures (chunks) ... DONE
[10:22:55.574] Resolving 1 futures (chunks) ...
[10:22:55.616]  - Number of value chunks collected: 1
[10:22:55.616] Resolving 1 futures (chunks) ... DONE
[10:22:55.616] Reducing values from 1 chunks ...
[10:22:55.616]  - Number of values collected after concatenation: 2
[10:22:55.616]  - Number of values expected: 2
[10:22:55.617] Reducing values from 1 chunks ... DONE
[10:22:55.617] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[10:22:55.617] future_lapply() ...
[10:22:55.617] Number of chunks: 1
[10:22:55.618] getGlobalsAndPackagesXApply() ...
[10:22:55.618]  - future.globals: TRUE
[10:22:55.619]  - globals found/used: [n=1] ‘FUN’
[10:22:55.619]  - needed namespaces: [n=0] 
[10:22:55.620] Finding globals ... DONE
[10:22:55.620]  - use_args: TRUE
[10:22:55.620]  - Getting '...' globals ...
[10:22:55.620]    - '...' content: [n=0] 
[10:22:55.620] List of 1
[10:22:55.620]  $ ...: list()
[10:22:55.620]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.620]  - attr(*, "where")=List of 1
[10:22:55.620]   ..$ ...:<environment: 0x5646ef3fb1d8> 
[10:22:55.620]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.620]  - attr(*, "resolved")= logi TRUE
[10:22:55.620]  - attr(*, "total_size")= num NA
[10:22:55.623]  - Getting '...' globals ... DONE
[10:22:55.623] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:55.623] List of 2
[10:22:55.623]  $ ...future.FUN:function (x)  
[10:22:55.623]  $ ...          : list()
[10:22:55.623]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.623]  - attr(*, "where")=List of 2
[10:22:55.623]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.623]   ..$ ...          :<environment: 0x5646ef3fb1d8> 
[10:22:55.623]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.623]  - attr(*, "resolved")= logi FALSE
[10:22:55.623]  - attr(*, "total_size")= num 728
[10:22:55.625] Packages to be attached in all futures: [n=0] 
[10:22:55.625] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.626] Number of futures (= number of chunks): 1
[10:22:55.626] Launching 1 futures (chunks) ...
[10:22:55.626] Chunk #1 of 1 ...
[10:22:55.626]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.626]    + additional globals found: [n=0] 
[10:22:55.626]    + additional namespaces needed: [n=0] 
[10:22:55.626]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.627]  - seeds: <none>
[10:22:55.627]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.635] Created future:
[10:22:55.635] ClusterFuture:
[10:22:55.635] Label: ‘future_lapply-1’
[10:22:55.635] Expression:
[10:22:55.635] {
[10:22:55.635]     do.call(function(...) {
[10:22:55.635]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.635]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.635]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.635]             on.exit(options(oopts), add = TRUE)
[10:22:55.635]         }
[10:22:55.635]         {
[10:22:55.635]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.635]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.635]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.635]             })
[10:22:55.635]         }
[10:22:55.635]     }, args = future.call.arguments)
[10:22:55.635] }
[10:22:55.635] Lazy evaluation: FALSE
[10:22:55.635] Asynchronous evaluation: TRUE
[10:22:55.635] Local evaluation: TRUE
[10:22:55.635] Environment: R_GlobalEnv
[10:22:55.635] Capture standard output: TRUE
[10:22:55.635] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.635] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:55.635] Packages: <none>
[10:22:55.635] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.635] Resolved: FALSE
[10:22:55.635] Value: <not collected>
[10:22:55.635] Conditions captured: <none>
[10:22:55.635] Early signaling: FALSE
[10:22:55.635] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.635] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:55.647] Chunk #1 of 1 ... DONE
[10:22:55.647] Launching 1 futures (chunks) ... DONE
[10:22:55.647] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[10:22:55.741] future_lapply() ...
[10:22:55.741] Number of chunks: 1
[10:22:55.742] getGlobalsAndPackagesXApply() ...
[10:22:55.742]  - future.globals: TRUE
[10:22:55.746]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[10:22:55.747]  - needed namespaces: [n=0] 
[10:22:55.747] Finding globals ... DONE
[10:22:55.747]  - use_args: TRUE
[10:22:55.747]  - Getting '...' globals ...
[10:22:55.747]    - '...' content: [n=0] 
[10:22:55.747] List of 1
[10:22:55.747]  $ ...: list()
[10:22:55.747]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.747]  - attr(*, "where")=List of 1
[10:22:55.747]   ..$ ...:<environment: 0x5646f03a7a18> 
[10:22:55.747]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.747]  - attr(*, "resolved")= logi TRUE
[10:22:55.747]  - attr(*, "total_size")= num NA
[10:22:55.750]  - Getting '...' globals ... DONE
[10:22:55.750] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[10:22:55.750] List of 6
[10:22:55.750]  $ ...future.FUN:function (i)  
[10:22:55.750]  $ caller       :function (a, b, FUN = call_my_add)  
[10:22:55.750]  $ args         :List of 1
[10:22:55.750]   ..$ FUN:function (a, b)  
[10:22:55.750]  $ call_my_add  :function (a, b)  
[10:22:55.750]  $ my_add       :function (a, b)  
[10:22:55.750]  $ ...          : list()
[10:22:55.750]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.750]  - attr(*, "where")=List of 6
[10:22:55.750]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.750]   ..$ caller       :<environment: R_EmptyEnv> 
[10:22:55.750]   ..$ args         :<environment: R_EmptyEnv> 
[10:22:55.750]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[10:22:55.750]   ..$ my_add       :<environment: R_EmptyEnv> 
[10:22:55.750]   ..$ ...          :<environment: 0x5646f03a7a18> 
[10:22:55.750]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.750]  - attr(*, "resolved")= logi FALSE
[10:22:55.750]  - attr(*, "total_size")= num 6664
[10:22:55.757] Packages to be attached in all futures: [n=0] 
[10:22:55.757] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.757] Number of futures (= number of chunks): 1
[10:22:55.757] Launching 1 futures (chunks) ...
[10:22:55.757] Chunk #1 of 1 ...
[10:22:55.757]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.757]    + additional globals found: [n=0] 
[10:22:55.758]    + additional namespaces needed: [n=0] 
[10:22:55.758]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.758]  - seeds: <none>
[10:22:55.758]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.763] Created future:
[10:22:55.763] SequentialFuture:
[10:22:55.763] Label: ‘future_lapply-1’
[10:22:55.763] Expression:
[10:22:55.763] {
[10:22:55.763]     do.call(function(...) {
[10:22:55.763]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.763]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.763]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.763]             on.exit(options(oopts), add = TRUE)
[10:22:55.763]         }
[10:22:55.763]         {
[10:22:55.763]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.763]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.763]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.763]             })
[10:22:55.763]         }
[10:22:55.763]     }, args = future.call.arguments)
[10:22:55.763] }
[10:22:55.763] Lazy evaluation: FALSE
[10:22:55.763] Asynchronous evaluation: FALSE
[10:22:55.763] Local evaluation: TRUE
[10:22:55.763] Environment: 0x5646f03a7e78
[10:22:55.763] Capture standard output: TRUE
[10:22:55.763] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.763] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[10:22:55.763] Packages: <none>
[10:22:55.763] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.763] Resolved: TRUE
[10:22:55.763] Value: 168 bytes of class ‘list’
[10:22:55.763] Early signaling: FALSE
[10:22:55.763] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.763] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:55.765] Chunk #1 of 1 ... DONE
[10:22:55.765] Launching 1 futures (chunks) ... DONE
[10:22:55.765] Resolving 1 futures (chunks) ...
[10:22:55.765]  - Number of value chunks collected: 1
[10:22:55.765] Resolving 1 futures (chunks) ... DONE
[10:22:55.765] Reducing values from 1 chunks ...
[10:22:55.766]  - Number of values collected after concatenation: 3
[10:22:55.766]  - Number of values expected: 3
[10:22:55.766] Reducing values from 1 chunks ... DONE
[10:22:55.766] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[10:22:55.766] future_lapply() ...
[10:22:55.769] Number of chunks: 1
[10:22:55.769] getGlobalsAndPackagesXApply() ...
[10:22:55.770]  - future.globals: TRUE
[10:22:55.772]  - globals found/used: [n=1] ‘FUN’
[10:22:55.772]  - needed namespaces: [n=0] 
[10:22:55.772] Finding globals ... DONE
[10:22:55.772]  - use_args: TRUE
[10:22:55.773]  - Getting '...' globals ...
[10:22:55.773]    - '...' content: [n=1] ‘what’
[10:22:55.773] List of 1
[10:22:55.773]  $ ...:List of 1
[10:22:55.773]   ..$ what:function (x)  
[10:22:55.773]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.773]  - attr(*, "where")=List of 1
[10:22:55.773]   ..$ ...:<environment: 0x5646eeeae9e0> 
[10:22:55.773]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.773]  - attr(*, "resolved")= logi TRUE
[10:22:55.773]  - attr(*, "total_size")= num NA
[10:22:55.776]  - Getting '...' globals ... DONE
[10:22:55.776] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:55.776] List of 2
[10:22:55.776]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:22:55.776]  $ ...          :List of 1
[10:22:55.776]   ..$ what:function (x)  
[10:22:55.776]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.776]  - attr(*, "where")=List of 2
[10:22:55.776]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.776]   ..$ ...          :<environment: 0x5646eeeae9e0> 
[10:22:55.776]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.776]  - attr(*, "resolved")= logi FALSE
[10:22:55.776]  - attr(*, "total_size")= num 12192
[10:22:55.779] Packages to be attached in all futures: [n=0] 
[10:22:55.779] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.779] Number of futures (= number of chunks): 1
[10:22:55.779] Launching 1 futures (chunks) ...
[10:22:55.780] Chunk #1 of 1 ...
[10:22:55.780]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.780]    + additional globals found: [n=0] 
[10:22:55.780]    + additional namespaces needed: [n=0] 
[10:22:55.780]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.780]  - seeds: <none>
[10:22:55.780]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.783] Created future:
[10:22:55.783] SequentialFuture:
[10:22:55.783] Label: ‘future_lapply-1’
[10:22:55.783] Expression:
[10:22:55.783] {
[10:22:55.783]     do.call(function(...) {
[10:22:55.783]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.783]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.783]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.783]             on.exit(options(oopts), add = TRUE)
[10:22:55.783]         }
[10:22:55.783]         {
[10:22:55.783]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.783]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.783]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.783]             })
[10:22:55.783]         }
[10:22:55.783]     }, args = future.call.arguments)
[10:22:55.783] }
[10:22:55.783] Lazy evaluation: FALSE
[10:22:55.783] Asynchronous evaluation: FALSE
[10:22:55.783] Local evaluation: TRUE
[10:22:55.783] Environment: R_GlobalEnv
[10:22:55.783] Capture standard output: TRUE
[10:22:55.783] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.783] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:55.783] Packages: <none>
[10:22:55.783] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.783] Resolved: TRUE
[10:22:55.783] Value: 56 bytes of class ‘list’
[10:22:55.783] Early signaling: FALSE
[10:22:55.783] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.783] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:55.784] Chunk #1 of 1 ... DONE
[10:22:55.784] Launching 1 futures (chunks) ... DONE
[10:22:55.784] Resolving 1 futures (chunks) ...
[10:22:55.784]  - Number of value chunks collected: 1
[10:22:55.784] Resolving 1 futures (chunks) ... DONE
[10:22:55.785] Reducing values from 1 chunks ...
[10:22:55.785]  - Number of values collected after concatenation: 1
[10:22:55.785]  - Number of values expected: 1
[10:22:55.785] Reducing values from 1 chunks ... DONE
[10:22:55.785] future_lapply() ... DONE
[10:22:55.785] future_lapply() ...
[10:22:55.786] Number of chunks: 1
[10:22:55.786] getGlobalsAndPackagesXApply() ...
[10:22:55.786]  - future.globals: TRUE
[10:22:55.789]  - globals found/used: [n=1] ‘FUN’
[10:22:55.789]  - needed namespaces: [n=0] 
[10:22:55.789] Finding globals ... DONE
[10:22:55.789]  - use_args: TRUE
[10:22:55.789]  - Getting '...' globals ...
[10:22:55.790]    - '...' content: [n=1] ‘what’
[10:22:55.790] List of 1
[10:22:55.790]  $ ...:List of 1
[10:22:55.790]   ..$ what:function (...)  
[10:22:55.790]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.790]  - attr(*, "where")=List of 1
[10:22:55.790]   ..$ ...:<environment: 0x5646f00fdb28> 
[10:22:55.790]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.790]  - attr(*, "resolved")= logi TRUE
[10:22:55.790]  - attr(*, "total_size")= num NA
[10:22:55.792]  - Getting '...' globals ... DONE
[10:22:55.793] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:55.793] List of 2
[10:22:55.793]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:22:55.793]  $ ...          :List of 1
[10:22:55.793]   ..$ what:function (...)  
[10:22:55.793]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.793]  - attr(*, "where")=List of 2
[10:22:55.793]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.793]   ..$ ...          :<environment: 0x5646f00fdb28> 
[10:22:55.793]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.793]  - attr(*, "resolved")= logi FALSE
[10:22:55.793]  - attr(*, "total_size")= num 12584
[10:22:55.796] Packages to be attached in all futures: [n=0] 
[10:22:55.796] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.796] Number of futures (= number of chunks): 1
[10:22:55.796] Launching 1 futures (chunks) ...
[10:22:55.796] Chunk #1 of 1 ...
[10:22:55.796]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.797]    + additional globals found: [n=0] 
[10:22:55.797]    + additional namespaces needed: [n=0] 
[10:22:55.797]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.797]  - seeds: <none>
[10:22:55.797]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.801] Created future:
[10:22:55.802] SequentialFuture:
[10:22:55.802] Label: ‘future_lapply-1’
[10:22:55.802] Expression:
[10:22:55.802] {
[10:22:55.802]     do.call(function(...) {
[10:22:55.802]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.802]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.802]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.802]             on.exit(options(oopts), add = TRUE)
[10:22:55.802]         }
[10:22:55.802]         {
[10:22:55.802]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.802]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.802]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.802]             })
[10:22:55.802]         }
[10:22:55.802]     }, args = future.call.arguments)
[10:22:55.802] }
[10:22:55.802] Lazy evaluation: FALSE
[10:22:55.802] Asynchronous evaluation: FALSE
[10:22:55.802] Local evaluation: TRUE
[10:22:55.802] Environment: R_GlobalEnv
[10:22:55.802] Capture standard output: TRUE
[10:22:55.802] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.802] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:55.802] Packages: <none>
[10:22:55.802] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.802] Resolved: TRUE
[10:22:55.802] Value: 56 bytes of class ‘list’
[10:22:55.802] Early signaling: FALSE
[10:22:55.802] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.802] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:55.802] Chunk #1 of 1 ... DONE
[10:22:55.803] Launching 1 futures (chunks) ... DONE
[10:22:55.803] Resolving 1 futures (chunks) ...
[10:22:55.803]  - Number of value chunks collected: 1
[10:22:55.803] Resolving 1 futures (chunks) ... DONE
[10:22:55.803] Reducing values from 1 chunks ...
[10:22:55.803]  - Number of values collected after concatenation: 1
[10:22:55.803]  - Number of values expected: 1
[10:22:55.803] Reducing values from 1 chunks ... DONE
[10:22:55.804] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[10:22:55.804] future_lapply() ...
[10:22:55.804] Number of chunks: 1
[10:22:55.805] getGlobalsAndPackagesXApply() ...
[10:22:55.805]  - future.globals: TRUE
[10:22:55.806]  - globals found/used: [n=1] ‘FUN’
[10:22:55.806]  - needed namespaces: [n=0] 
[10:22:55.806] Finding globals ... DONE
[10:22:55.806]  - use_args: TRUE
[10:22:55.806]  - Getting '...' globals ...
[10:22:55.807]    - '...' content: [n=1] ‘b’
[10:22:55.807] List of 1
[10:22:55.807]  $ ...:List of 1
[10:22:55.807]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:22:55.807]   .. ..$ a: int [1:2] 1 2
[10:22:55.807]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.807]  - attr(*, "where")=List of 1
[10:22:55.807]   ..$ ...:<environment: 0x5646ef5d7218> 
[10:22:55.807]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.807]  - attr(*, "resolved")= logi TRUE
[10:22:55.807]  - attr(*, "total_size")= num NA
[10:22:55.810]  - Getting '...' globals ... DONE
[10:22:55.810] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:55.810] List of 2
[10:22:55.810]  $ ...future.FUN:function (a, b)  
[10:22:55.810]  $ ...          :List of 1
[10:22:55.810]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:22:55.810]   .. ..$ a: int [1:2] 1 2
[10:22:55.810]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.810]  - attr(*, "where")=List of 2
[10:22:55.810]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.810]   ..$ ...          :<environment: 0x5646ef5d7218> 
[10:22:55.810]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.810]  - attr(*, "resolved")= logi FALSE
[10:22:55.810]  - attr(*, "total_size")= num 1440
[10:22:55.814] Packages to be attached in all futures: [n=0] 
[10:22:55.814] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.814] Number of futures (= number of chunks): 1
[10:22:55.814] Launching 1 futures (chunks) ...
[10:22:55.814] Chunk #1 of 1 ...
[10:22:55.814]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.815]    + additional globals found: [n=0] 
[10:22:55.815]    + additional namespaces needed: [n=0] 
[10:22:55.815]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.815]  - seeds: <none>
[10:22:55.815]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.817] Created future:
[10:22:55.817] SequentialFuture:
[10:22:55.817] Label: ‘future_lapply-1’
[10:22:55.817] Expression:
[10:22:55.817] {
[10:22:55.817]     do.call(function(...) {
[10:22:55.817]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.817]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.817]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.817]             on.exit(options(oopts), add = TRUE)
[10:22:55.817]         }
[10:22:55.817]         {
[10:22:55.817]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.817]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.817]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.817]             })
[10:22:55.817]         }
[10:22:55.817]     }, args = future.call.arguments)
[10:22:55.817] }
[10:22:55.817] Lazy evaluation: FALSE
[10:22:55.817] Asynchronous evaluation: FALSE
[10:22:55.817] Local evaluation: TRUE
[10:22:55.817] Environment: R_GlobalEnv
[10:22:55.817] Capture standard output: TRUE
[10:22:55.817] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.817] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:55.817] Packages: <none>
[10:22:55.817] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.817] Resolved: TRUE
[10:22:55.817] Value: 112 bytes of class ‘list’
[10:22:55.817] Early signaling: FALSE
[10:22:55.817] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.817] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:55.818] Chunk #1 of 1 ... DONE
[10:22:55.818] Launching 1 futures (chunks) ... DONE
[10:22:55.818] Resolving 1 futures (chunks) ...
[10:22:55.819]  - Number of value chunks collected: 1
[10:22:55.819] Resolving 1 futures (chunks) ... DONE
[10:22:55.819] Reducing values from 1 chunks ...
[10:22:55.819]  - Number of values collected after concatenation: 1
[10:22:55.819]  - Number of values expected: 1
[10:22:55.819] Reducing values from 1 chunks ... DONE
[10:22:55.819] future_lapply() ... DONE
[10:22:55.819] future_lapply() ...
[10:22:55.820] Number of chunks: 1
[10:22:55.820] getGlobalsAndPackagesXApply() ...
[10:22:55.820]  - future.globals: TRUE
[10:22:55.821]  - globals found/used: [n=1] ‘FUN’
[10:22:55.822]  - needed namespaces: [n=0] 
[10:22:55.822] Finding globals ... DONE
[10:22:55.822]  - use_args: TRUE
[10:22:55.822]  - Getting '...' globals ...
[10:22:55.822]    - '...' content: [n=1] ‘b’
[10:22:55.822] List of 1
[10:22:55.822]  $ ...:List of 1
[10:22:55.822]   ..$ b:<environment: 0x5646ed0df490> 
[10:22:55.822]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.822]  - attr(*, "where")=List of 1
[10:22:55.822]   ..$ ...:<environment: 0x5646ed95b6d8> 
[10:22:55.822]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.822]  - attr(*, "resolved")= logi TRUE
[10:22:55.822]  - attr(*, "total_size")= num NA
[10:22:55.825]  - Getting '...' globals ... DONE
[10:22:55.825] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:55.825] List of 2
[10:22:55.825]  $ ...future.FUN:function (a, b)  
[10:22:55.825]  $ ...          :List of 1
[10:22:55.825]   ..$ b:<environment: 0x5646ed0df490> 
[10:22:55.825]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.825]  - attr(*, "where")=List of 2
[10:22:55.825]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.825]   ..$ ...          :<environment: 0x5646ed95b6d8> 
[10:22:55.825]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.825]  - attr(*, "resolved")= logi FALSE
[10:22:55.825]  - attr(*, "total_size")= num 1440
[10:22:55.828] Packages to be attached in all futures: [n=0] 
[10:22:55.828] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.829] Number of futures (= number of chunks): 1
[10:22:55.829] Launching 1 futures (chunks) ...
[10:22:55.829] Chunk #1 of 1 ...
[10:22:55.829]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.829]    + additional globals found: [n=0] 
[10:22:55.829]    + additional namespaces needed: [n=0] 
[10:22:55.829]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.829]  - seeds: <none>
[10:22:55.829]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.832] Created future:
[10:22:55.832] SequentialFuture:
[10:22:55.832] Label: ‘future_lapply-1’
[10:22:55.832] Expression:
[10:22:55.832] {
[10:22:55.832]     do.call(function(...) {
[10:22:55.832]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.832]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.832]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.832]             on.exit(options(oopts), add = TRUE)
[10:22:55.832]         }
[10:22:55.832]         {
[10:22:55.832]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.832]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.832]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.832]             })
[10:22:55.832]         }
[10:22:55.832]     }, args = future.call.arguments)
[10:22:55.832] }
[10:22:55.832] Lazy evaluation: FALSE
[10:22:55.832] Asynchronous evaluation: FALSE
[10:22:55.832] Local evaluation: TRUE
[10:22:55.832] Environment: R_GlobalEnv
[10:22:55.832] Capture standard output: TRUE
[10:22:55.832] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.832] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:55.832] Packages: <none>
[10:22:55.832] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.832] Resolved: TRUE
[10:22:55.832] Value: 120 bytes of class ‘list’
[10:22:55.832] Early signaling: FALSE
[10:22:55.832] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.832] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:55.833] Chunk #1 of 1 ... DONE
[10:22:55.833] Launching 1 futures (chunks) ... DONE
[10:22:55.833] Resolving 1 futures (chunks) ...
[10:22:55.833]  - Number of value chunks collected: 1
[10:22:55.833] Resolving 1 futures (chunks) ... DONE
[10:22:55.833] Reducing values from 1 chunks ...
[10:22:55.834]  - Number of values collected after concatenation: 1
[10:22:55.834]  - Number of values expected: 1
[10:22:55.834] Reducing values from 1 chunks ... DONE
[10:22:55.834] future_lapply() ... DONE
[10:22:55.834] future_lapply() ...
[10:22:55.834] Number of chunks: 1
[10:22:55.835] getGlobalsAndPackagesXApply() ...
[10:22:55.835]  - future.globals: TRUE
[10:22:55.837]  - globals found/used: [n=1] ‘FUN’
[10:22:55.837]  - needed namespaces: [n=0] 
[10:22:55.837] Finding globals ... DONE
[10:22:55.837]  - use_args: TRUE
[10:22:55.837]  - Getting '...' globals ...
[10:22:55.837]    - '...' content: [n=1] ‘b’
[10:22:55.838] List of 1
[10:22:55.838]  $ ...:List of 1
[10:22:55.838]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:22:55.838]   .. .. ..@ slots     :List of 4
[10:22:55.838]   .. .. .. ..$ .Data  : chr "function"
[10:22:55.838]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. ..$ target : chr "signature"
[10:22:55.838]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. ..$ defined: chr "signature"
[10:22:55.838]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. ..$ generic: chr "character"
[10:22:55.838]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. ..@ contains  :List of 3
[10:22:55.838]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.838]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ superClass: chr "function"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.838]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.838]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.838]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.838]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.838]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.838]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.838]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.838]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.838]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.838]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.838]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.838]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.838]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.838]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.838]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.838]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ by        : chr "function"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.838]   .. .. .. .. .. ..@ distance  : num 2
[10:22:55.838]   .. .. ..@ virtual   : logi FALSE
[10:22:55.838]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:22:55.838]  list()
[10:22:55.838]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:22:55.838]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:55.838]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:55.838]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:55.838]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:22:55.838]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:55.838]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:55.838]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:55.838]   .. .. .. .. ..$ generic: chr(0) 
[10:22:55.838]   .. .. ..@ validity  : NULL
[10:22:55.838]   .. .. ..@ access    : list()
[10:22:55.838]   .. .. ..@ className : chr "MethodDefinition"
[10:22:55.838]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. ..@ subclasses:List of 7
[10:22:55.838]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.838]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.838]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.838]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.838]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.838]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.838]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.838]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.838]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.838]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.838]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.838]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.838]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.838]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.838]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.838]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.838]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.838]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.838]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.838]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.838]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.838]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.838]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.838]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.838]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.838]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.838]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.838]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.838]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.838]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.838]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.838]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.838]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.838]   .. .. .. .. .. ..@ distance  : num 2
[10:22:55.838]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.838]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.838]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.838]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.838]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.838]   .. .. .. .. .. ..@ distance  : num 2
[10:22:55.838]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.838]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.838]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.838]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.838]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.838]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:55.838]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.838]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.838]   .. .. .. .. .. ..@ distance  : num 2
[10:22:55.838]   .. .. ..@ versionKey:<externalptr> 
[10:22:55.838]   .. .. ..@ sealed    : logi TRUE
[10:22:55.838]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.838]  - attr(*, "where")=List of 1
[10:22:55.838]   ..$ ...:<environment: 0x5646f02e7280> 
[10:22:55.838]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.838]  - attr(*, "resolved")= logi TRUE
[10:22:55.838]  - attr(*, "total_size")= num NA
[10:22:55.886]  - Getting '...' globals ... DONE
[10:22:55.886] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:55.886] List of 2
[10:22:55.886]  $ ...future.FUN:function (a, b)  
[10:22:55.886]  $ ...          :List of 1
[10:22:55.886]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:22:55.886]   .. .. ..@ slots     :List of 4
[10:22:55.886]   .. .. .. ..$ .Data  : chr "function"
[10:22:55.886]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. ..$ target : chr "signature"
[10:22:55.886]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. ..$ defined: chr "signature"
[10:22:55.886]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. ..$ generic: chr "character"
[10:22:55.886]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. ..@ contains  :List of 3
[10:22:55.886]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.886]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ superClass: chr "function"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.886]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.886]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.886]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.886]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.886]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.886]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.886]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.886]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.886]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.886]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.886]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.886]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.886]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.886]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.886]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.886]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ by        : chr "function"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.886]   .. .. .. .. .. ..@ distance  : num 2
[10:22:55.886]   .. .. ..@ virtual   : logi FALSE
[10:22:55.886]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:22:55.886]  list()
[10:22:55.886]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:22:55.886]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:55.886]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:55.886]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:55.886]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:22:55.886]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:55.886]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:55.886]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:55.886]   .. .. .. .. ..$ generic: chr(0) 
[10:22:55.886]   .. .. ..@ validity  : NULL
[10:22:55.886]   .. .. ..@ access    : list()
[10:22:55.886]   .. .. ..@ className : chr "MethodDefinition"
[10:22:55.886]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. ..@ subclasses:List of 7
[10:22:55.886]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.886]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.886]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.886]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.886]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.886]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.886]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.886]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.886]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.886]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.886]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.886]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.886]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.886]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.886]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.886]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.886]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.886]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.886]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.886]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.886]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.886]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.886]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.886]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.886]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.886]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:55.886]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.886]   .. .. .. .. .. ..@ distance  : num 1
[10:22:55.886]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.886]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.886]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.886]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.886]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.886]   .. .. .. .. .. ..@ distance  : num 2
[10:22:55.886]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.886]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.886]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.886]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.886]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.886]   .. .. .. .. .. ..@ distance  : num 2
[10:22:55.886]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:55.886]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:55.886]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:55.886]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:55.886]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:55.886]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:55.886]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:55.886]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:55.886]   .. .. .. .. .. ..@ distance  : num 2
[10:22:55.886]   .. .. ..@ versionKey:<externalptr> 
[10:22:55.886]   .. .. ..@ sealed    : logi TRUE
[10:22:55.886]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.886]  - attr(*, "where")=List of 2
[10:22:55.886]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.886]   ..$ ...          :<environment: 0x5646f02e7280> 
[10:22:55.886]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.886]  - attr(*, "resolved")= logi FALSE
[10:22:55.886]  - attr(*, "total_size")= num 312512
[10:22:55.931] Packages to be attached in all futures: [n=0] 
[10:22:55.932] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.932] Number of futures (= number of chunks): 1
[10:22:55.932] Launching 1 futures (chunks) ...
[10:22:55.932] Chunk #1 of 1 ...
[10:22:55.932]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.932]    + additional globals found: [n=0] 
[10:22:55.932]    + additional namespaces needed: [n=0] 
[10:22:55.933]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.933]  - seeds: <none>
[10:22:55.933]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.935] Created future:
[10:22:55.935] SequentialFuture:
[10:22:55.935] Label: ‘future_lapply-1’
[10:22:55.935] Expression:
[10:22:55.935] {
[10:22:55.935]     do.call(function(...) {
[10:22:55.935]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.935]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.935]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.935]             on.exit(options(oopts), add = TRUE)
[10:22:55.935]         }
[10:22:55.935]         {
[10:22:55.935]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.935]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.935]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.935]             })
[10:22:55.935]         }
[10:22:55.935]     }, args = future.call.arguments)
[10:22:55.935] }
[10:22:55.935] Lazy evaluation: FALSE
[10:22:55.935] Asynchronous evaluation: FALSE
[10:22:55.935] Local evaluation: TRUE
[10:22:55.935] Environment: R_GlobalEnv
[10:22:55.935] Capture standard output: TRUE
[10:22:55.935] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.935] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:55.935] Packages: <none>
[10:22:55.935] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.935] Resolved: TRUE
[10:22:55.935] Value: 112 bytes of class ‘list’
[10:22:55.935] Early signaling: FALSE
[10:22:55.935] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.935] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:55.936] Chunk #1 of 1 ... DONE
[10:22:55.936] Launching 1 futures (chunks) ... DONE
[10:22:55.936] Resolving 1 futures (chunks) ...
[10:22:55.937]  - Number of value chunks collected: 1
[10:22:55.937] Resolving 1 futures (chunks) ... DONE
[10:22:55.937] Reducing values from 1 chunks ...
[10:22:55.937]  - Number of values collected after concatenation: 1
[10:22:55.937]  - Number of values expected: 1
[10:22:55.937] Reducing values from 1 chunks ... DONE
[10:22:55.937] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[10:22:55.939] future_lapply() ...
[10:22:55.940] Number of chunks: 1
[10:22:55.940] getGlobalsAndPackagesXApply() ...
[10:22:55.940]  - future.globals: TRUE
[10:22:55.941]  - globals found/used: [n=1] ‘FUN’
[10:22:55.941]  - needed namespaces: [n=0] 
[10:22:55.941] Finding globals ... DONE
[10:22:55.942]  - use_args: TRUE
[10:22:55.942]  - Getting '...' globals ...
[10:22:55.942]    - '...' content: [n=0] 
[10:22:55.942] List of 1
[10:22:55.942]  $ ...: list()
[10:22:55.942]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.942]  - attr(*, "where")=List of 1
[10:22:55.942]   ..$ ...:<environment: 0x5646ee86c870> 
[10:22:55.942]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.942]  - attr(*, "resolved")= logi TRUE
[10:22:55.942]  - attr(*, "total_size")= num NA
[10:22:55.944]  - Getting '...' globals ... DONE
[10:22:55.945] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:55.945] List of 2
[10:22:55.945]  $ ...future.FUN:function (f)  
[10:22:55.945]  $ ...          : list()
[10:22:55.945]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.945]  - attr(*, "where")=List of 2
[10:22:55.945]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.945]   ..$ ...          :<environment: 0x5646ee86c870> 
[10:22:55.945]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.945]  - attr(*, "resolved")= logi FALSE
[10:22:55.945]  - attr(*, "total_size")= num 1008
[10:22:55.947] Packages to be attached in all futures: [n=0] 
[10:22:55.947] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.948] Number of futures (= number of chunks): 1
[10:22:55.948] Launching 1 futures (chunks) ...
[10:22:55.948] Chunk #1 of 1 ...
[10:22:55.948]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.950]    + additional globals found: [n=2] ‘a’, ‘b’
[10:22:55.950]    + additional namespaces needed: [n=1] ‘tools’
[10:22:55.950]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.950]  - seeds: <none>
[10:22:55.951]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[10:22:55.953] Created future:
[10:22:55.953] SequentialFuture:
[10:22:55.953] Label: ‘future_lapply-1’
[10:22:55.953] Expression:
[10:22:55.953] {
[10:22:55.953]     do.call(function(...) {
[10:22:55.953]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.953]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.953]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.953]             on.exit(options(oopts), add = TRUE)
[10:22:55.953]         }
[10:22:55.953]         {
[10:22:55.953]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.953]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.953]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.953]             })
[10:22:55.953]         }
[10:22:55.953]     }, args = future.call.arguments)
[10:22:55.953] }
[10:22:55.953] Lazy evaluation: FALSE
[10:22:55.953] Asynchronous evaluation: FALSE
[10:22:55.953] Local evaluation: TRUE
[10:22:55.953] Environment: R_GlobalEnv
[10:22:55.953] Capture standard output: TRUE
[10:22:55.953] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.953] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[10:22:55.953] Packages: 1 packages (‘tools’)
[10:22:55.953] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.953] Resolved: TRUE
[10:22:55.953] Value: 224 bytes of class ‘list’
[10:22:55.953] Early signaling: FALSE
[10:22:55.953] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.953] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:55.954] Chunk #1 of 1 ... DONE
[10:22:55.954] Launching 1 futures (chunks) ... DONE
[10:22:55.955] Resolving 1 futures (chunks) ...
[10:22:55.955]  - Number of value chunks collected: 1
[10:22:55.955] Resolving 1 futures (chunks) ... DONE
[10:22:55.955] Reducing values from 1 chunks ...
[10:22:55.955]  - Number of values collected after concatenation: 4
[10:22:55.955]  - Number of values expected: 4
[10:22:55.955] Reducing values from 1 chunks ... DONE
[10:22:55.955] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[10:22:55.958] future_lapply() ...
[10:22:55.959] Number of chunks: 1
[10:22:55.959] getGlobalsAndPackagesXApply() ...
[10:22:55.959]  - future.globals: TRUE
[10:22:55.961]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[10:22:55.961]  - needed namespaces: [n=0] 
[10:22:55.961] Finding globals ... DONE
[10:22:55.961]  - use_args: TRUE
[10:22:55.961]  - Getting '...' globals ...
[10:22:55.962]    - '...' content: [n=0] 
[10:22:55.962] List of 1
[10:22:55.962]  $ ...: list()
[10:22:55.962]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.962]  - attr(*, "where")=List of 1
[10:22:55.962]   ..$ ...:<environment: 0x5646f0344de8> 
[10:22:55.962]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.962]  - attr(*, "resolved")= logi TRUE
[10:22:55.962]  - attr(*, "total_size")= num NA
[10:22:55.964]  - Getting '...' globals ... DONE
[10:22:55.964] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[10:22:55.965] List of 3
[10:22:55.965]  $ ...future.FUN        :function (x)  
[10:22:55.965]  $ future.call.arguments:List of 1
[10:22:55.965]   ..$ a: num 1
[10:22:55.965]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.965]  $ ...                  : list()
[10:22:55.965]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.965]  - attr(*, "where")=List of 3
[10:22:55.965]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[10:22:55.965]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:22:55.965]   ..$ ...                  :<environment: 0x5646f0344de8> 
[10:22:55.965]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.965]  - attr(*, "resolved")= logi FALSE
[10:22:55.965]  - attr(*, "total_size")= num 1272
[10:22:55.970] Packages to be attached in all futures: [n=0] 
[10:22:55.970] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.970] Number of futures (= number of chunks): 1
[10:22:55.970] Launching 1 futures (chunks) ...
[10:22:55.970] Chunk #1 of 1 ...
[10:22:55.970]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.970]    + additional globals found: [n=0] 
[10:22:55.971]    + additional namespaces needed: [n=0] 
[10:22:55.971]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.971]  - seeds: <none>
[10:22:55.971]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.973] Created future:
[10:22:55.973] SequentialFuture:
[10:22:55.973] Label: ‘future_lapply-1’
[10:22:55.973] Expression:
[10:22:55.973] {
[10:22:55.973]     do.call(function(...) {
[10:22:55.973]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.973]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.973]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.973]             on.exit(options(oopts), add = TRUE)
[10:22:55.973]         }
[10:22:55.973]         {
[10:22:55.973]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.973]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.973]                 ...future.FUN(...future.X_jj)
[10:22:55.973]             })
[10:22:55.973]         }
[10:22:55.973]     }, args = future.call.arguments)
[10:22:55.973] }
[10:22:55.973] Lazy evaluation: FALSE
[10:22:55.973] Asynchronous evaluation: FALSE
[10:22:55.973] Local evaluation: TRUE
[10:22:55.973] Environment: 0x5646f0345168
[10:22:55.973] Capture standard output: TRUE
[10:22:55.973] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.973] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:55.973] Packages: <none>
[10:22:55.973] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.973] Resolved: TRUE
[10:22:55.973] Value: 56 bytes of class ‘list’
[10:22:55.973] Early signaling: FALSE
[10:22:55.973] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.973] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:55.974] Chunk #1 of 1 ... DONE
[10:22:55.974] Launching 1 futures (chunks) ... DONE
[10:22:55.974] Resolving 1 futures (chunks) ...
[10:22:55.975]  - Number of value chunks collected: 1
[10:22:55.975] Resolving 1 futures (chunks) ... DONE
[10:22:55.975] Reducing values from 1 chunks ...
[10:22:55.975]  - Number of values collected after concatenation: 1
[10:22:55.975]  - Number of values expected: 1
[10:22:55.975] Reducing values from 1 chunks ... DONE
[10:22:55.975] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[10:22:55.976] future_lapply() ...
[10:22:55.977] Number of chunks: 1
[10:22:55.977] getGlobalsAndPackagesXApply() ...
[10:22:55.977]  - future.globals: TRUE
[10:22:55.979]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:22:55.979]  - needed namespaces: [n=0] 
[10:22:55.979] Finding globals ... DONE
[10:22:55.980]  - use_args: TRUE
[10:22:55.980]  - Getting '...' globals ...
[10:22:55.980]    - '...' content: [n=0] 
[10:22:55.980] List of 1
[10:22:55.980]  $ ...: list()
[10:22:55.980]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.980]  - attr(*, "where")=List of 1
[10:22:55.980]   ..$ ...:<environment: 0x5646ef2e05e8> 
[10:22:55.980]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.980]  - attr(*, "resolved")= logi TRUE
[10:22:55.980]  - attr(*, "total_size")= num NA
[10:22:55.982]  - Getting '...' globals ... DONE
[10:22:55.983] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:22:55.983] List of 3
[10:22:55.983]  $ ...future.FUN:function (ii)  
[10:22:55.983]  $ a            : num 1
[10:22:55.983]  $ ...          : list()
[10:22:55.983]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.983]  - attr(*, "where")=List of 3
[10:22:55.983]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.983]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:55.983]   ..$ ...          :<environment: 0x5646ef2e05e8> 
[10:22:55.983]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.983]  - attr(*, "resolved")= logi FALSE
[10:22:55.983]  - attr(*, "total_size")= num 2984
[10:22:55.986] Packages to be attached in all futures: [n=0] 
[10:22:55.986] getGlobalsAndPackagesXApply() ... DONE
[10:22:55.986] Number of futures (= number of chunks): 1
[10:22:55.986] Launching 1 futures (chunks) ...
[10:22:55.986] Chunk #1 of 1 ...
[10:22:55.986]  - Finding globals in 'X' for chunk #1 ...
[10:22:55.987]    + additional globals found: [n=0] 
[10:22:55.987]    + additional namespaces needed: [n=0] 
[10:22:55.987]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:55.987]  - seeds: <none>
[10:22:55.987]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:55.989] Created future:
[10:22:55.989] SequentialFuture:
[10:22:55.989] Label: ‘future_lapply-1’
[10:22:55.989] Expression:
[10:22:55.989] {
[10:22:55.989]     do.call(function(...) {
[10:22:55.989]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:55.989]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:55.989]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:55.989]             on.exit(options(oopts), add = TRUE)
[10:22:55.989]         }
[10:22:55.989]         {
[10:22:55.989]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:55.989]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:55.989]                 ...future.FUN(...future.X_jj, ...)
[10:22:55.989]             })
[10:22:55.989]         }
[10:22:55.989]     }, args = future.call.arguments)
[10:22:55.989] }
[10:22:55.989] Lazy evaluation: FALSE
[10:22:55.989] Asynchronous evaluation: FALSE
[10:22:55.989] Local evaluation: TRUE
[10:22:55.989] Environment: R_GlobalEnv
[10:22:55.989] Capture standard output: TRUE
[10:22:55.989] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:55.989] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:22:55.989] Packages: <none>
[10:22:55.989] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:55.989] Resolved: TRUE
[10:22:55.989] Value: 56 bytes of class ‘list’
[10:22:55.989] Early signaling: FALSE
[10:22:55.989] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:55.989] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:55.990] Chunk #1 of 1 ... DONE
[10:22:55.990] Launching 1 futures (chunks) ... DONE
[10:22:55.990] Resolving 1 futures (chunks) ...
[10:22:55.991]  - Number of value chunks collected: 1
[10:22:55.991] Resolving 1 futures (chunks) ... DONE
[10:22:55.991] Reducing values from 1 chunks ...
[10:22:55.991]  - Number of values collected after concatenation: 1
[10:22:55.991]  - Number of values expected: 1
[10:22:55.991] Reducing values from 1 chunks ... DONE
[10:22:55.991] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[10:22:55.991] future_lapply() ...
[10:22:55.992] Number of chunks: 1
[10:22:55.992] getGlobalsAndPackagesXApply() ...
[10:22:55.992]  - future.globals: TRUE
[10:22:55.994]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:22:55.995]  - needed namespaces: [n=0] 
[10:22:55.995] Finding globals ... DONE
[10:22:55.995]  - use_args: TRUE
[10:22:55.995]  - Getting '...' globals ...
[10:22:55.995]    - '...' content: [n=0] 
[10:22:55.995] List of 1
[10:22:55.995]  $ ...: list()
[10:22:55.995]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.995]  - attr(*, "where")=List of 1
[10:22:55.995]   ..$ ...:<environment: 0x5646ed6b1380> 
[10:22:55.995]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.995]  - attr(*, "resolved")= logi TRUE
[10:22:55.995]  - attr(*, "total_size")= num NA
[10:22:55.998]  - Getting '...' globals ... DONE
[10:22:55.998] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:22:55.998] List of 3
[10:22:55.998]  $ ...future.FUN:function (ii)  
[10:22:55.998]  $ a            : num 1
[10:22:55.998]  $ ...          : list()
[10:22:55.998]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:55.998]  - attr(*, "where")=List of 3
[10:22:55.998]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:55.998]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:55.998]   ..$ ...          :<environment: 0x5646ed6b1380> 
[10:22:55.998]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:55.998]  - attr(*, "resolved")= logi FALSE
[10:22:55.998]  - attr(*, "total_size")= num 2984
[10:22:56.001] Packages to be attached in all futures: [n=0] 
[10:22:56.001] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.001] Number of futures (= number of chunks): 1
[10:22:56.001] Launching 1 futures (chunks) ...
[10:22:56.001] Chunk #1 of 1 ...
[10:22:56.001]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.002]    + additional globals found: [n=0] 
[10:22:56.002]    + additional namespaces needed: [n=0] 
[10:22:56.002]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.002]  - seeds: <none>
[10:22:56.002]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.004] Created future:
[10:22:56.004] SequentialFuture:
[10:22:56.004] Label: ‘future_lapply-1’
[10:22:56.004] Expression:
[10:22:56.004] {
[10:22:56.004]     do.call(function(...) {
[10:22:56.004]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.004]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.004]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.004]             on.exit(options(oopts), add = TRUE)
[10:22:56.004]         }
[10:22:56.004]         {
[10:22:56.004]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.004]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.004]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.004]             })
[10:22:56.004]         }
[10:22:56.004]     }, args = future.call.arguments)
[10:22:56.004] }
[10:22:56.004] Lazy evaluation: FALSE
[10:22:56.004] Asynchronous evaluation: FALSE
[10:22:56.004] Local evaluation: TRUE
[10:22:56.004] Environment: R_GlobalEnv
[10:22:56.004] Capture standard output: TRUE
[10:22:56.004] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.004] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:22:56.004] Packages: <none>
[10:22:56.004] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.004] Resolved: TRUE
[10:22:56.004] Value: 56 bytes of class ‘list’
[10:22:56.004] Early signaling: FALSE
[10:22:56.004] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.004] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:56.005] Chunk #1 of 1 ... DONE
[10:22:56.005] Launching 1 futures (chunks) ... DONE
[10:22:56.006] Resolving 1 futures (chunks) ...
[10:22:56.006]  - Number of value chunks collected: 1
[10:22:56.006] Resolving 1 futures (chunks) ... DONE
[10:22:56.006] Reducing values from 1 chunks ...
[10:22:56.006]  - Number of values collected after concatenation: 1
[10:22:56.006]  - Number of values expected: 1
[10:22:56.006] Reducing values from 1 chunks ... DONE
[10:22:56.006] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[10:22:56.007] future_lapply() ...
[10:22:56.007] Number of chunks: 1
[10:22:56.007] getGlobalsAndPackagesXApply() ...
[10:22:56.007]  - future.globals: <name-value list> with names ‘42’
[10:22:56.007]  - use_args: TRUE
[10:22:56.007]  - Getting '...' globals ...
[10:22:56.008]    - '...' content: [n=0] 
[10:22:56.008] List of 1
[10:22:56.008]  $ ...: list()
[10:22:56.008]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.008]  - attr(*, "where")=List of 1
[10:22:56.008]   ..$ ...:<environment: 0x5646f05cb730> 
[10:22:56.008]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.008]  - attr(*, "resolved")= logi TRUE
[10:22:56.008]  - attr(*, "total_size")= num NA
[10:22:56.010]  - Getting '...' globals ... DONE
[10:22:56.010] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[10:22:56.010] List of 3
[10:22:56.010]  $ a            : num 42
[10:22:56.010]  $ ...future.FUN:function (x)  
[10:22:56.010]  $ ...          : list()
[10:22:56.010]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.010]  - attr(*, "where")=List of 3
[10:22:56.010]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:56.010]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[10:22:56.010]   ..$ ...          :<environment: 0x5646f05cb730> 
[10:22:56.010]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.010]  - attr(*, "resolved")= logi FALSE
[10:22:56.010]  - attr(*, "total_size")= num NA
[10:22:56.015] Packages to be attached in all futures: [n=0] 
[10:22:56.015] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.015] Number of futures (= number of chunks): 1
[10:22:56.015] Launching 1 futures (chunks) ...
[10:22:56.015] Chunk #1 of 1 ...
[10:22:56.016]  - seeds: <none>
[10:22:56.016]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.018] Created future:
[10:22:56.018] SequentialFuture:
[10:22:56.018] Label: ‘future_lapply-1’
[10:22:56.018] Expression:
[10:22:56.018] {
[10:22:56.018]     do.call(function(...) {
[10:22:56.018]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.018]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.018]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.018]             on.exit(options(oopts), add = TRUE)
[10:22:56.018]         }
[10:22:56.018]         {
[10:22:56.018]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.018]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.018]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.018]             })
[10:22:56.018]         }
[10:22:56.018]     }, args = future.call.arguments)
[10:22:56.018] }
[10:22:56.018] Lazy evaluation: FALSE
[10:22:56.018] Asynchronous evaluation: FALSE
[10:22:56.018] Local evaluation: TRUE
[10:22:56.018] Environment: R_GlobalEnv
[10:22:56.018] Capture standard output: TRUE
[10:22:56.018] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.018] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:22:56.018] Packages: <none>
[10:22:56.018] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.018] Resolved: TRUE
[10:22:56.018] Value: 56 bytes of class ‘list’
[10:22:56.018] Early signaling: FALSE
[10:22:56.018] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.018] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[10:22:56.019] Chunk #1 of 1 ... DONE
[10:22:56.020] Launching 1 futures (chunks) ... DONE
[10:22:56.020] Resolving 1 futures (chunks) ...
[10:22:56.020]  - Number of value chunks collected: 1
[10:22:56.020] Resolving 1 futures (chunks) ... DONE
[10:22:56.020] Reducing values from 1 chunks ...
[10:22:56.020]  - Number of values collected after concatenation: 1
[10:22:56.020]  - Number of values expected: 1
[10:22:56.020] Reducing values from 1 chunks ... DONE
[10:22:56.021] future_lapply() ... DONE
List of 1
 $ : num 42
[10:22:56.028] future_lapply() ...
[10:22:56.033] Number of chunks: 2
[10:22:56.033] getGlobalsAndPackagesXApply() ...
[10:22:56.033]  - future.globals: TRUE
[10:22:56.038]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[10:22:56.038]  - needed namespaces: [n=0] 
[10:22:56.038] Finding globals ... DONE
[10:22:56.038]  - use_args: TRUE
[10:22:56.038]  - Getting '...' globals ...
[10:22:56.039]    - '...' content: [n=0] 
[10:22:56.039] List of 1
[10:22:56.039]  $ ...: list()
[10:22:56.039]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.039]  - attr(*, "where")=List of 1
[10:22:56.039]   ..$ ...:<environment: 0x5646eee77d70> 
[10:22:56.039]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.039]  - attr(*, "resolved")= logi TRUE
[10:22:56.039]  - attr(*, "total_size")= num NA
[10:22:56.041]  - Getting '...' globals ... DONE
[10:22:56.041] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[10:22:56.042] List of 6
[10:22:56.042]  $ ...future.FUN:function (i)  
[10:22:56.042]  $ caller       :function (a, b, FUN = call_my_add)  
[10:22:56.042]  $ args         :List of 1
[10:22:56.042]   ..$ FUN:function (a, b)  
[10:22:56.042]  $ call_my_add  :function (a, b)  
[10:22:56.042]  $ my_add       :function (a, b)  
[10:22:56.042]  $ ...          : list()
[10:22:56.042]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.042]  - attr(*, "where")=List of 6
[10:22:56.042]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:56.042]   ..$ caller       :<environment: R_EmptyEnv> 
[10:22:56.042]   ..$ args         :<environment: R_EmptyEnv> 
[10:22:56.042]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[10:22:56.042]   ..$ my_add       :<environment: R_EmptyEnv> 
[10:22:56.042]   ..$ ...          :<environment: 0x5646eee77d70> 
[10:22:56.042]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.042]  - attr(*, "resolved")= logi FALSE
[10:22:56.042]  - attr(*, "total_size")= num 24120
[10:22:56.046] Packages to be attached in all futures: [n=0] 
[10:22:56.046] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.046] Number of futures (= number of chunks): 2
[10:22:56.046] Launching 2 futures (chunks) ...
[10:22:56.047] Chunk #1 of 2 ...
[10:22:56.047]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.047]    + additional globals found: [n=0] 
[10:22:56.047]    + additional namespaces needed: [n=0] 
[10:22:56.047]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.047]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:56.047]  - seeds: <none>
[10:22:56.047]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.056] Created future:
[10:22:56.057] MulticoreFuture:
[10:22:56.057] Label: ‘future_lapply-1’
[10:22:56.057] Expression:
[10:22:56.057] {
[10:22:56.057]     do.call(function(...) {
[10:22:56.057]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.057]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.057]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.057]             on.exit(options(oopts), add = TRUE)
[10:22:56.057]         }
[10:22:56.057]         {
[10:22:56.057]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.057]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.057]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.057]             })
[10:22:56.057]         }
[10:22:56.057]     }, args = future.call.arguments)
[10:22:56.057] }
[10:22:56.057] Lazy evaluation: FALSE
[10:22:56.057] Asynchronous evaluation: TRUE
[10:22:56.057] Local evaluation: TRUE
[10:22:56.057] Environment: 0x5646ef0c1660
[10:22:56.057] Capture standard output: TRUE
[10:22:56.057] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.057] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[10:22:56.057] Packages: <none>
[10:22:56.057] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.057] Resolved: TRUE
[10:22:56.057] Value: <not collected>
[10:22:56.057] Conditions captured: <none>
[10:22:56.057] Early signaling: FALSE
[10:22:56.057] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.057] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.065] Chunk #1 of 2 ... DONE
[10:22:56.065] Chunk #2 of 2 ...
[10:22:56.065]  - Finding globals in 'X' for chunk #2 ...
[10:22:56.066]    + additional globals found: [n=0] 
[10:22:56.066]    + additional namespaces needed: [n=0] 
[10:22:56.066]  - Finding globals in 'X' for chunk #2 ... DONE
[10:22:56.066]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:56.066]  - seeds: <none>
[10:22:56.067]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.076] Created future:
[10:22:56.076] MulticoreFuture:
[10:22:56.076] Label: ‘future_lapply-2’
[10:22:56.076] Expression:
[10:22:56.076] {
[10:22:56.076]     do.call(function(...) {
[10:22:56.076]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.076]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.076]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.076]             on.exit(options(oopts), add = TRUE)
[10:22:56.076]         }
[10:22:56.076]         {
[10:22:56.076]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.076]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.076]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.076]             })
[10:22:56.076]         }
[10:22:56.076]     }, args = future.call.arguments)
[10:22:56.076] }
[10:22:56.076] Lazy evaluation: FALSE
[10:22:56.076] Asynchronous evaluation: TRUE
[10:22:56.076] Local evaluation: TRUE
[10:22:56.076] Environment: 0x5646ef0c1660
[10:22:56.076] Capture standard output: TRUE
[10:22:56.076] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.076] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[10:22:56.076] Packages: <none>
[10:22:56.076] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.076] Resolved: TRUE
[10:22:56.076] Value: <not collected>
[10:22:56.076] Conditions captured: <none>
[10:22:56.076] Early signaling: FALSE
[10:22:56.076] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.076] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.084] Chunk #2 of 2 ... DONE
[10:22:56.084] Launching 2 futures (chunks) ... DONE
[10:22:56.084] Resolving 2 futures (chunks) ...
[10:22:56.088]  - Number of value chunks collected: 2
[10:22:56.089] Resolving 2 futures (chunks) ... DONE
[10:22:56.089] Reducing values from 2 chunks ...
[10:22:56.089]  - Number of values collected after concatenation: 3
[10:22:56.089]  - Number of values expected: 3
[10:22:56.089] Reducing values from 2 chunks ... DONE
[10:22:56.089] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[10:22:56.090] future_lapply() ...
[10:22:56.098] Number of chunks: 1
[10:22:56.098] getGlobalsAndPackagesXApply() ...
[10:22:56.098]  - future.globals: TRUE
[10:22:56.101]  - globals found/used: [n=1] ‘FUN’
[10:22:56.101]  - needed namespaces: [n=0] 
[10:22:56.101] Finding globals ... DONE
[10:22:56.101]  - use_args: TRUE
[10:22:56.102]  - Getting '...' globals ...
[10:22:56.102]    - '...' content: [n=1] ‘what’
[10:22:56.102] List of 1
[10:22:56.102]  $ ...:List of 1
[10:22:56.102]   ..$ what:function (x)  
[10:22:56.102]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.102]  - attr(*, "where")=List of 1
[10:22:56.102]   ..$ ...:<environment: 0x5646f078a930> 
[10:22:56.102]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.102]  - attr(*, "resolved")= logi TRUE
[10:22:56.102]  - attr(*, "total_size")= num NA
[10:22:56.106]  - Getting '...' globals ... DONE
[10:22:56.106] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:56.106] List of 2
[10:22:56.106]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:22:56.106]  $ ...          :List of 1
[10:22:56.106]   ..$ what:function (x)  
[10:22:56.106]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.106]  - attr(*, "where")=List of 2
[10:22:56.106]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:56.106]   ..$ ...          :<environment: 0x5646f078a930> 
[10:22:56.106]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.106]  - attr(*, "resolved")= logi FALSE
[10:22:56.106]  - attr(*, "total_size")= num 12192
[10:22:56.109] Packages to be attached in all futures: [n=0] 
[10:22:56.110] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.110] Number of futures (= number of chunks): 1
[10:22:56.110] Launching 1 futures (chunks) ...
[10:22:56.110] Chunk #1 of 1 ...
[10:22:56.110]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.111]    + additional globals found: [n=0] 
[10:22:56.111]    + additional namespaces needed: [n=0] 
[10:22:56.111]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.111]  - seeds: <none>
[10:22:56.111]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.118] Created future:
[10:22:56.119] MulticoreFuture:
[10:22:56.119] Label: ‘future_lapply-1’
[10:22:56.119] Expression:
[10:22:56.119] {
[10:22:56.119]     do.call(function(...) {
[10:22:56.119]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.119]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.119]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.119]             on.exit(options(oopts), add = TRUE)
[10:22:56.119]         }
[10:22:56.119]         {
[10:22:56.119]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.119]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.119]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.119]             })
[10:22:56.119]         }
[10:22:56.119]     }, args = future.call.arguments)
[10:22:56.119] }
[10:22:56.119] Lazy evaluation: FALSE
[10:22:56.119] Asynchronous evaluation: TRUE
[10:22:56.119] Local evaluation: TRUE
[10:22:56.119] Environment: R_GlobalEnv
[10:22:56.119] Capture standard output: TRUE
[10:22:56.119] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.119] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:56.119] Packages: <none>
[10:22:56.119] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.119] Resolved: TRUE
[10:22:56.119] Value: <not collected>
[10:22:56.119] Conditions captured: <none>
[10:22:56.119] Early signaling: FALSE
[10:22:56.119] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.119] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.126] Chunk #1 of 1 ... DONE
[10:22:56.127] Launching 1 futures (chunks) ... DONE
[10:22:56.127] Resolving 1 futures (chunks) ...
[10:22:56.128]  - Number of value chunks collected: 1
[10:22:56.128] Resolving 1 futures (chunks) ... DONE
[10:22:56.129] Reducing values from 1 chunks ...
[10:22:56.129]  - Number of values collected after concatenation: 1
[10:22:56.129]  - Number of values expected: 1
[10:22:56.129] Reducing values from 1 chunks ... DONE
[10:22:56.129] future_lapply() ... DONE
[10:22:56.129] future_lapply() ...
[10:22:56.135] Number of chunks: 1
[10:22:56.135] getGlobalsAndPackagesXApply() ...
[10:22:56.135]  - future.globals: TRUE
[10:22:56.139]  - globals found/used: [n=1] ‘FUN’
[10:22:56.139]  - needed namespaces: [n=0] 
[10:22:56.139] Finding globals ... DONE
[10:22:56.139]  - use_args: TRUE
[10:22:56.139]  - Getting '...' globals ...
[10:22:56.140]    - '...' content: [n=1] ‘what’
[10:22:56.140] List of 1
[10:22:56.140]  $ ...:List of 1
[10:22:56.140]   ..$ what:function (...)  
[10:22:56.140]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.140]  - attr(*, "where")=List of 1
[10:22:56.140]   ..$ ...:<environment: 0x5646ee774728> 
[10:22:56.140]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.140]  - attr(*, "resolved")= logi TRUE
[10:22:56.140]  - attr(*, "total_size")= num NA
[10:22:56.143]  - Getting '...' globals ... DONE
[10:22:56.143] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:56.144] List of 2
[10:22:56.144]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:22:56.144]  $ ...          :List of 1
[10:22:56.144]   ..$ what:function (...)  
[10:22:56.144]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.144]  - attr(*, "where")=List of 2
[10:22:56.144]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:56.144]   ..$ ...          :<environment: 0x5646ee774728> 
[10:22:56.144]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.144]  - attr(*, "resolved")= logi FALSE
[10:22:56.144]  - attr(*, "total_size")= num 13352
[10:22:56.147] Packages to be attached in all futures: [n=0] 
[10:22:56.147] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.147] Number of futures (= number of chunks): 1
[10:22:56.148] Launching 1 futures (chunks) ...
[10:22:56.148] Chunk #1 of 1 ...
[10:22:56.148]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.148]    + additional globals found: [n=0] 
[10:22:56.148]    + additional namespaces needed: [n=0] 
[10:22:56.148]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.149]  - seeds: <none>
[10:22:56.149]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.156] Created future:
[10:22:56.156] MulticoreFuture:
[10:22:56.156] Label: ‘future_lapply-1’
[10:22:56.156] Expression:
[10:22:56.156] {
[10:22:56.156]     do.call(function(...) {
[10:22:56.156]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.156]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.156]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.156]             on.exit(options(oopts), add = TRUE)
[10:22:56.156]         }
[10:22:56.156]         {
[10:22:56.156]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.156]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.156]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.156]             })
[10:22:56.156]         }
[10:22:56.156]     }, args = future.call.arguments)
[10:22:56.156] }
[10:22:56.156] Lazy evaluation: FALSE
[10:22:56.156] Asynchronous evaluation: TRUE
[10:22:56.156] Local evaluation: TRUE
[10:22:56.156] Environment: R_GlobalEnv
[10:22:56.156] Capture standard output: TRUE
[10:22:56.156] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.156] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:56.156] Packages: <none>
[10:22:56.156] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.156] Resolved: TRUE
[10:22:56.156] Value: <not collected>
[10:22:56.156] Conditions captured: <none>
[10:22:56.156] Early signaling: FALSE
[10:22:56.156] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.156] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.164] Chunk #1 of 1 ... DONE
[10:22:56.165] Launching 1 futures (chunks) ... DONE
[10:22:56.165] Resolving 1 futures (chunks) ...
[10:22:56.166]  - Number of value chunks collected: 1
[10:22:56.166] Resolving 1 futures (chunks) ... DONE
[10:22:56.167] Reducing values from 1 chunks ...
[10:22:56.167]  - Number of values collected after concatenation: 1
[10:22:56.167]  - Number of values expected: 1
[10:22:56.167] Reducing values from 1 chunks ... DONE
[10:22:56.167] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[10:22:56.168] future_lapply() ...
[10:22:56.172] Number of chunks: 1
[10:22:56.172] getGlobalsAndPackagesXApply() ...
[10:22:56.172]  - future.globals: TRUE
[10:22:56.174]  - globals found/used: [n=1] ‘FUN’
[10:22:56.174]  - needed namespaces: [n=0] 
[10:22:56.175] Finding globals ... DONE
[10:22:56.175]  - use_args: TRUE
[10:22:56.175]  - Getting '...' globals ...
[10:22:56.175]    - '...' content: [n=1] ‘b’
[10:22:56.175] List of 1
[10:22:56.175]  $ ...:List of 1
[10:22:56.175]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:22:56.175]   .. ..$ a: int [1:2] 1 2
[10:22:56.175]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.175]  - attr(*, "where")=List of 1
[10:22:56.175]   ..$ ...:<environment: 0x5646f04b3210> 
[10:22:56.175]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.175]  - attr(*, "resolved")= logi TRUE
[10:22:56.175]  - attr(*, "total_size")= num NA
[10:22:56.181]  - Getting '...' globals ... DONE
[10:22:56.182] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:56.182] List of 2
[10:22:56.182]  $ ...future.FUN:function (a, b)  
[10:22:56.182]  $ ...          :List of 1
[10:22:56.182]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:22:56.182]   .. ..$ a: int [1:2] 1 2
[10:22:56.182]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.182]  - attr(*, "where")=List of 2
[10:22:56.182]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:56.182]   ..$ ...          :<environment: 0x5646f04b3210> 
[10:22:56.182]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.182]  - attr(*, "resolved")= logi FALSE
[10:22:56.182]  - attr(*, "total_size")= num 1440
[10:22:56.186] Packages to be attached in all futures: [n=0] 
[10:22:56.186] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.186] Number of futures (= number of chunks): 1
[10:22:56.186] Launching 1 futures (chunks) ...
[10:22:56.186] Chunk #1 of 1 ...
[10:22:56.187]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.187]    + additional globals found: [n=0] 
[10:22:56.187]    + additional namespaces needed: [n=0] 
[10:22:56.187]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.187]  - seeds: <none>
[10:22:56.187]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.195] Created future:
[10:22:56.195] MulticoreFuture:
[10:22:56.195] Label: ‘future_lapply-1’
[10:22:56.195] Expression:
[10:22:56.195] {
[10:22:56.195]     do.call(function(...) {
[10:22:56.195]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.195]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.195]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.195]             on.exit(options(oopts), add = TRUE)
[10:22:56.195]         }
[10:22:56.195]         {
[10:22:56.195]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.195]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.195]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.195]             })
[10:22:56.195]         }
[10:22:56.195]     }, args = future.call.arguments)
[10:22:56.195] }
[10:22:56.195] Lazy evaluation: FALSE
[10:22:56.195] Asynchronous evaluation: TRUE
[10:22:56.195] Local evaluation: TRUE
[10:22:56.195] Environment: R_GlobalEnv
[10:22:56.195] Capture standard output: TRUE
[10:22:56.195] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.195] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:56.195] Packages: <none>
[10:22:56.195] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.195] Resolved: TRUE
[10:22:56.195] Value: <not collected>
[10:22:56.195] Conditions captured: <none>
[10:22:56.195] Early signaling: FALSE
[10:22:56.195] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.195] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.203] Chunk #1 of 1 ... DONE
[10:22:56.203] Launching 1 futures (chunks) ... DONE
[10:22:56.203] Resolving 1 futures (chunks) ...
[10:22:56.205]  - Number of value chunks collected: 1
[10:22:56.205] Resolving 1 futures (chunks) ... DONE
[10:22:56.205] Reducing values from 1 chunks ...
[10:22:56.205]  - Number of values collected after concatenation: 1
[10:22:56.205]  - Number of values expected: 1
[10:22:56.205] Reducing values from 1 chunks ... DONE
[10:22:56.205] future_lapply() ... DONE
[10:22:56.206] future_lapply() ...
[10:22:56.210] Number of chunks: 1
[10:22:56.210] getGlobalsAndPackagesXApply() ...
[10:22:56.210]  - future.globals: TRUE
[10:22:56.212]  - globals found/used: [n=1] ‘FUN’
[10:22:56.212]  - needed namespaces: [n=0] 
[10:22:56.212] Finding globals ... DONE
[10:22:56.213]  - use_args: TRUE
[10:22:56.213]  - Getting '...' globals ...
[10:22:56.213]    - '...' content: [n=1] ‘b’
[10:22:56.213] List of 1
[10:22:56.213]  $ ...:List of 1
[10:22:56.213]   ..$ b:<environment: 0x5646eefd93d8> 
[10:22:56.213]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.213]  - attr(*, "where")=List of 1
[10:22:56.213]   ..$ ...:<environment: 0x5646eefd6060> 
[10:22:56.213]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.213]  - attr(*, "resolved")= logi TRUE
[10:22:56.213]  - attr(*, "total_size")= num NA
[10:22:56.217]  - Getting '...' globals ... DONE
[10:22:56.217] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:56.217] List of 2
[10:22:56.217]  $ ...future.FUN:function (a, b)  
[10:22:56.217]  $ ...          :List of 1
[10:22:56.217]   ..$ b:<environment: 0x5646eefd93d8> 
[10:22:56.217]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.217]  - attr(*, "where")=List of 2
[10:22:56.217]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:56.217]   ..$ ...          :<environment: 0x5646eefd6060> 
[10:22:56.217]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.217]  - attr(*, "resolved")= logi FALSE
[10:22:56.217]  - attr(*, "total_size")= num 1440
[10:22:56.221] Packages to be attached in all futures: [n=0] 
[10:22:56.221] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.221] Number of futures (= number of chunks): 1
[10:22:56.221] Launching 1 futures (chunks) ...
[10:22:56.221] Chunk #1 of 1 ...
[10:22:56.222]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.222]    + additional globals found: [n=0] 
[10:22:56.222]    + additional namespaces needed: [n=0] 
[10:22:56.222]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.222]  - seeds: <none>
[10:22:56.222]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.230] Created future:
[10:22:56.230] MulticoreFuture:
[10:22:56.230] Label: ‘future_lapply-1’
[10:22:56.230] Expression:
[10:22:56.230] {
[10:22:56.230]     do.call(function(...) {
[10:22:56.230]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.230]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.230]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.230]             on.exit(options(oopts), add = TRUE)
[10:22:56.230]         }
[10:22:56.230]         {
[10:22:56.230]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.230]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.230]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.230]             })
[10:22:56.230]         }
[10:22:56.230]     }, args = future.call.arguments)
[10:22:56.230] }
[10:22:56.230] Lazy evaluation: FALSE
[10:22:56.230] Asynchronous evaluation: TRUE
[10:22:56.230] Local evaluation: TRUE
[10:22:56.230] Environment: R_GlobalEnv
[10:22:56.230] Capture standard output: TRUE
[10:22:56.230] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.230] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:56.230] Packages: <none>
[10:22:56.230] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.230] Resolved: TRUE
[10:22:56.230] Value: <not collected>
[10:22:56.230] Conditions captured: <none>
[10:22:56.230] Early signaling: FALSE
[10:22:56.230] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.230] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.238] Chunk #1 of 1 ... DONE
[10:22:56.238] Launching 1 futures (chunks) ... DONE
[10:22:56.238] Resolving 1 futures (chunks) ...
[10:22:56.240]  - Number of value chunks collected: 1
[10:22:56.240] Resolving 1 futures (chunks) ... DONE
[10:22:56.240] Reducing values from 1 chunks ...
[10:22:56.240]  - Number of values collected after concatenation: 1
[10:22:56.240]  - Number of values expected: 1
[10:22:56.241] Reducing values from 1 chunks ... DONE
[10:22:56.241] future_lapply() ... DONE
[10:22:56.241] future_lapply() ...
[10:22:56.245] Number of chunks: 1
[10:22:56.245] getGlobalsAndPackagesXApply() ...
[10:22:56.246]  - future.globals: TRUE
[10:22:56.248]  - globals found/used: [n=1] ‘FUN’
[10:22:56.248]  - needed namespaces: [n=0] 
[10:22:56.248] Finding globals ... DONE
[10:22:56.248]  - use_args: TRUE
[10:22:56.249]  - Getting '...' globals ...
[10:22:56.249]    - '...' content: [n=1] ‘b’
[10:22:56.249] List of 1
[10:22:56.249]  $ ...:List of 1
[10:22:56.249]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:22:56.249]   .. .. ..@ slots     :List of 4
[10:22:56.249]   .. .. .. ..$ .Data  : chr "function"
[10:22:56.249]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. ..$ target : chr "signature"
[10:22:56.249]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. ..$ defined: chr "signature"
[10:22:56.249]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. ..$ generic: chr "character"
[10:22:56.249]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. ..@ contains  :List of 3
[10:22:56.249]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.249]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ superClass: chr "function"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.249]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.249]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.249]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.249]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.249]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.249]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.249]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.249]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.249]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.249]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.249]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.249]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.249]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.249]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.249]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.249]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ by        : chr "function"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.249]   .. .. .. .. .. ..@ distance  : num 2
[10:22:56.249]   .. .. ..@ virtual   : logi FALSE
[10:22:56.249]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:22:56.249]  list()
[10:22:56.249]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:22:56.249]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:56.249]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:56.249]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:56.249]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:22:56.249]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:56.249]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:56.249]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:56.249]   .. .. .. .. ..$ generic: chr(0) 
[10:22:56.249]   .. .. ..@ validity  : NULL
[10:22:56.249]   .. .. ..@ access    : list()
[10:22:56.249]   .. .. ..@ className : chr "MethodDefinition"
[10:22:56.249]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. ..@ subclasses:List of 7
[10:22:56.249]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.249]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.249]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.249]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.249]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.249]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.249]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.249]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.249]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.249]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.249]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.249]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.249]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.249]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.249]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.249]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.249]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.249]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.249]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.249]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.249]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.249]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.249]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.249]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.249]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.249]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.249]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.249]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.249]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.249]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.249]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.249]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.249]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.249]   .. .. .. .. .. ..@ distance  : num 2
[10:22:56.249]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.249]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.249]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.249]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.249]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.249]   .. .. .. .. .. ..@ distance  : num 2
[10:22:56.249]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.249]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.249]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.249]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.249]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.249]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:56.249]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.249]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.249]   .. .. .. .. .. ..@ distance  : num 2
[10:22:56.249]   .. .. ..@ versionKey:<externalptr> 
[10:22:56.249]   .. .. ..@ sealed    : logi TRUE
[10:22:56.249]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.249]  - attr(*, "where")=List of 1
[10:22:56.249]   ..$ ...:<environment: 0x5646efeb84c0> 
[10:22:56.249]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.249]  - attr(*, "resolved")= logi TRUE
[10:22:56.249]  - attr(*, "total_size")= num NA
[10:22:56.304]  - Getting '...' globals ... DONE
[10:22:56.304] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:56.304] List of 2
[10:22:56.304]  $ ...future.FUN:function (a, b)  
[10:22:56.304]  $ ...          :List of 1
[10:22:56.304]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:22:56.304]   .. .. ..@ slots     :List of 4
[10:22:56.304]   .. .. .. ..$ .Data  : chr "function"
[10:22:56.304]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. ..$ target : chr "signature"
[10:22:56.304]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. ..$ defined: chr "signature"
[10:22:56.304]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. ..$ generic: chr "character"
[10:22:56.304]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. ..@ contains  :List of 3
[10:22:56.304]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.304]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ superClass: chr "function"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.304]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.304]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.304]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.304]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.304]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.304]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.304]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.304]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.304]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.304]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.304]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.304]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.304]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.304]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.304]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.304]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ by        : chr "function"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.304]   .. .. .. .. .. ..@ distance  : num 2
[10:22:56.304]   .. .. ..@ virtual   : logi FALSE
[10:22:56.304]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:22:56.304]  list()
[10:22:56.304]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:22:56.304]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:56.304]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:56.304]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:56.304]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:22:56.304]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:56.304]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:56.304]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:56.304]   .. .. .. .. ..$ generic: chr(0) 
[10:22:56.304]   .. .. ..@ validity  : NULL
[10:22:56.304]   .. .. ..@ access    : list()
[10:22:56.304]   .. .. ..@ className : chr "MethodDefinition"
[10:22:56.304]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. ..@ subclasses:List of 7
[10:22:56.304]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.304]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.304]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.304]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.304]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.304]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.304]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.304]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.304]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.304]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.304]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.304]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.304]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.304]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.304]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.304]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.304]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.304]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.304]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.304]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.304]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.304]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.304]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.304]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.304]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.304]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:56.304]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.304]   .. .. .. .. .. ..@ distance  : num 1
[10:22:56.304]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.304]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.304]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.304]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.304]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.304]   .. .. .. .. .. ..@ distance  : num 2
[10:22:56.304]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.304]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.304]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.304]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.304]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.304]   .. .. .. .. .. ..@ distance  : num 2
[10:22:56.304]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:56.304]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:56.304]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:56.304]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:56.304]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:56.304]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:56.304]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:56.304]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:56.304]   .. .. .. .. .. ..@ distance  : num 2
[10:22:56.304]   .. .. ..@ versionKey:<externalptr> 
[10:22:56.304]   .. .. ..@ sealed    : logi TRUE
[10:22:56.304]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.304]  - attr(*, "where")=List of 2
[10:22:56.304]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:56.304]   ..$ ...          :<environment: 0x5646efeb84c0> 
[10:22:56.304]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.304]  - attr(*, "resolved")= logi FALSE
[10:22:56.304]  - attr(*, "total_size")= num 312512
[10:22:56.353] Packages to be attached in all futures: [n=0] 
[10:22:56.353] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.354] Number of futures (= number of chunks): 1
[10:22:56.354] Launching 1 futures (chunks) ...
[10:22:56.354] Chunk #1 of 1 ...
[10:22:56.354]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.354]    + additional globals found: [n=0] 
[10:22:56.354]    + additional namespaces needed: [n=0] 
[10:22:56.355]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.355]  - seeds: <none>
[10:22:56.355]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.362] Created future:
[10:22:56.363] MulticoreFuture:
[10:22:56.363] Label: ‘future_lapply-1’
[10:22:56.363] Expression:
[10:22:56.363] {
[10:22:56.363]     do.call(function(...) {
[10:22:56.363]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.363]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.363]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.363]             on.exit(options(oopts), add = TRUE)
[10:22:56.363]         }
[10:22:56.363]         {
[10:22:56.363]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.363]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.363]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.363]             })
[10:22:56.363]         }
[10:22:56.363]     }, args = future.call.arguments)
[10:22:56.363] }
[10:22:56.363] Lazy evaluation: FALSE
[10:22:56.363] Asynchronous evaluation: TRUE
[10:22:56.363] Local evaluation: TRUE
[10:22:56.363] Environment: R_GlobalEnv
[10:22:56.363] Capture standard output: TRUE
[10:22:56.363] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.363] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:56.363] Packages: <none>
[10:22:56.363] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.363] Resolved: TRUE
[10:22:56.363] Value: <not collected>
[10:22:56.363] Conditions captured: <none>
[10:22:56.363] Early signaling: FALSE
[10:22:56.363] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.363] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.371] Chunk #1 of 1 ... DONE
[10:22:56.371] Launching 1 futures (chunks) ... DONE
[10:22:56.371] Resolving 1 futures (chunks) ...
[10:22:56.372]  - Number of value chunks collected: 1
[10:22:56.373] Resolving 1 futures (chunks) ... DONE
[10:22:56.373] Reducing values from 1 chunks ...
[10:22:56.373]  - Number of values collected after concatenation: 1
[10:22:56.373]  - Number of values expected: 1
[10:22:56.373] Reducing values from 1 chunks ... DONE
[10:22:56.373] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[10:22:56.376] future_lapply() ...
[10:22:56.381] Number of chunks: 2
[10:22:56.381] getGlobalsAndPackagesXApply() ...
[10:22:56.381]  - future.globals: TRUE
[10:22:56.383]  - globals found/used: [n=1] ‘FUN’
[10:22:56.383]  - needed namespaces: [n=0] 
[10:22:56.383] Finding globals ... DONE
[10:22:56.383]  - use_args: TRUE
[10:22:56.383]  - Getting '...' globals ...
[10:22:56.384]    - '...' content: [n=0] 
[10:22:56.384] List of 1
[10:22:56.384]  $ ...: list()
[10:22:56.384]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.384]  - attr(*, "where")=List of 1
[10:22:56.384]   ..$ ...:<environment: 0x5646ed33e098> 
[10:22:56.384]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.384]  - attr(*, "resolved")= logi TRUE
[10:22:56.384]  - attr(*, "total_size")= num NA
[10:22:56.387]  - Getting '...' globals ... DONE
[10:22:56.387] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:56.388] List of 2
[10:22:56.388]  $ ...future.FUN:function (f)  
[10:22:56.388]  $ ...          : list()
[10:22:56.388]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.388]  - attr(*, "where")=List of 2
[10:22:56.388]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:56.388]   ..$ ...          :<environment: 0x5646ed33e098> 
[10:22:56.388]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.388]  - attr(*, "resolved")= logi FALSE
[10:22:56.388]  - attr(*, "total_size")= num 1008
[10:22:56.391] Packages to be attached in all futures: [n=0] 
[10:22:56.391] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.391] Number of futures (= number of chunks): 2
[10:22:56.391] Launching 2 futures (chunks) ...
[10:22:56.391] Chunk #1 of 2 ...
[10:22:56.391]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.393]    + additional globals found: [n=2] ‘a’, ‘b’
[10:22:56.393]    + additional namespaces needed: [n=0] 
[10:22:56.394]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.394]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:56.394]  - seeds: <none>
[10:22:56.394]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[10:22:56.401] Created future:
[10:22:56.402] MulticoreFuture:
[10:22:56.402] Label: ‘future_lapply-1’
[10:22:56.402] Expression:
[10:22:56.402] {
[10:22:56.402]     do.call(function(...) {
[10:22:56.402]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.402]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.402]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.402]             on.exit(options(oopts), add = TRUE)
[10:22:56.402]         }
[10:22:56.402]         {
[10:22:56.402]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.402]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.402]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.402]             })
[10:22:56.402]         }
[10:22:56.402]     }, args = future.call.arguments)
[10:22:56.402] }
[10:22:56.402] Lazy evaluation: FALSE
[10:22:56.402] Asynchronous evaluation: TRUE
[10:22:56.402] Local evaluation: TRUE
[10:22:56.402] Environment: R_GlobalEnv
[10:22:56.402] Capture standard output: TRUE
[10:22:56.402] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.402] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[10:22:56.402] Packages: <none>
[10:22:56.402] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.402] Resolved: TRUE
[10:22:56.402] Value: <not collected>
[10:22:56.402] Conditions captured: <none>
[10:22:56.402] Early signaling: FALSE
[10:22:56.402] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.402] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.410] Chunk #1 of 2 ... DONE
[10:22:56.410] Chunk #2 of 2 ...
[10:22:56.410]  - Finding globals in 'X' for chunk #2 ...
[10:22:56.413]    + additional globals found: [n=2] ‘a’, ‘b’
[10:22:56.414]    + additional namespaces needed: [n=1] ‘tools’
[10:22:56.414]  - Finding globals in 'X' for chunk #2 ... DONE
[10:22:56.414]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:56.414]  - seeds: <none>
[10:22:56.414]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[10:22:56.423] Created future:
[10:22:56.423] MulticoreFuture:
[10:22:56.423] Label: ‘future_lapply-2’
[10:22:56.423] Expression:
[10:22:56.423] {
[10:22:56.423]     do.call(function(...) {
[10:22:56.423]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.423]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.423]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.423]             on.exit(options(oopts), add = TRUE)
[10:22:56.423]         }
[10:22:56.423]         {
[10:22:56.423]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.423]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.423]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.423]             })
[10:22:56.423]         }
[10:22:56.423]     }, args = future.call.arguments)
[10:22:56.423] }
[10:22:56.423] Lazy evaluation: FALSE
[10:22:56.423] Asynchronous evaluation: TRUE
[10:22:56.423] Local evaluation: TRUE
[10:22:56.423] Environment: R_GlobalEnv
[10:22:56.423] Capture standard output: TRUE
[10:22:56.423] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.423] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[10:22:56.423] Packages: 1 packages (‘tools’)
[10:22:56.423] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.423] Resolved: TRUE
[10:22:56.423] Value: <not collected>
[10:22:56.423] Conditions captured: <none>
[10:22:56.423] Early signaling: FALSE
[10:22:56.423] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.423] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.432] Chunk #2 of 2 ... DONE
[10:22:56.432] Launching 2 futures (chunks) ... DONE
[10:22:56.432] Resolving 2 futures (chunks) ...
[10:22:56.435]  - Number of value chunks collected: 2
[10:22:56.436] Resolving 2 futures (chunks) ... DONE
[10:22:56.436] Reducing values from 2 chunks ...
[10:22:56.436]  - Number of values collected after concatenation: 4
[10:22:56.436]  - Number of values expected: 4
[10:22:56.436] Reducing values from 2 chunks ... DONE
[10:22:56.437] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[10:22:56.443] future_lapply() ...
[10:22:56.448] Number of chunks: 1
[10:22:56.448] getGlobalsAndPackagesXApply() ...
[10:22:56.448]  - future.globals: TRUE
[10:22:56.451]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[10:22:56.451]  - needed namespaces: [n=0] 
[10:22:56.451] Finding globals ... DONE
[10:22:56.451]  - use_args: TRUE
[10:22:56.451]  - Getting '...' globals ...
[10:22:56.452]    - '...' content: [n=0] 
[10:22:56.452] List of 1
[10:22:56.452]  $ ...: list()
[10:22:56.452]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.452]  - attr(*, "where")=List of 1
[10:22:56.452]   ..$ ...:<environment: 0x5646ef6b7660> 
[10:22:56.452]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.452]  - attr(*, "resolved")= logi TRUE
[10:22:56.452]  - attr(*, "total_size")= num NA
[10:22:56.455]  - Getting '...' globals ... DONE
[10:22:56.455] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[10:22:56.455] List of 3
[10:22:56.455]  $ ...future.FUN        :function (x)  
[10:22:56.455]  $ future.call.arguments:List of 1
[10:22:56.455]   ..$ a: num 1
[10:22:56.455]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.455]  $ ...                  : list()
[10:22:56.455]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.455]  - attr(*, "where")=List of 3
[10:22:56.455]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[10:22:56.455]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:22:56.455]   ..$ ...                  :<environment: 0x5646ef6b7660> 
[10:22:56.455]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.455]  - attr(*, "resolved")= logi FALSE
[10:22:56.455]  - attr(*, "total_size")= num 1272
[10:22:56.459] Packages to be attached in all futures: [n=0] 
[10:22:56.460] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.460] Number of futures (= number of chunks): 1
[10:22:56.460] Launching 1 futures (chunks) ...
[10:22:56.460] Chunk #1 of 1 ...
[10:22:56.460]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.461]    + additional globals found: [n=0] 
[10:22:56.461]    + additional namespaces needed: [n=0] 
[10:22:56.461]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.461]  - seeds: <none>
[10:22:56.461]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.468] Created future:
[10:22:56.469] MulticoreFuture:
[10:22:56.469] Label: ‘future_lapply-1’
[10:22:56.469] Expression:
[10:22:56.469] {
[10:22:56.469]     do.call(function(...) {
[10:22:56.469]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.469]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.469]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.469]             on.exit(options(oopts), add = TRUE)
[10:22:56.469]         }
[10:22:56.469]         {
[10:22:56.469]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.469]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.469]                 ...future.FUN(...future.X_jj)
[10:22:56.469]             })
[10:22:56.469]         }
[10:22:56.469]     }, args = future.call.arguments)
[10:22:56.469] }
[10:22:56.469] Lazy evaluation: FALSE
[10:22:56.469] Asynchronous evaluation: TRUE
[10:22:56.469] Local evaluation: TRUE
[10:22:56.469] Environment: 0x5646ef6b7270
[10:22:56.469] Capture standard output: TRUE
[10:22:56.469] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.469] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:56.469] Packages: <none>
[10:22:56.469] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.469] Resolved: TRUE
[10:22:56.469] Value: <not collected>
[10:22:56.469] Conditions captured: <none>
[10:22:56.469] Early signaling: FALSE
[10:22:56.469] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.469] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.477] Chunk #1 of 1 ... DONE
[10:22:56.477] Launching 1 futures (chunks) ... DONE
[10:22:56.477] Resolving 1 futures (chunks) ...
[10:22:56.479]  - Number of value chunks collected: 1
[10:22:56.479] Resolving 1 futures (chunks) ... DONE
[10:22:56.479] Reducing values from 1 chunks ...
[10:22:56.479]  - Number of values collected after concatenation: 1
[10:22:56.479]  - Number of values expected: 1
[10:22:56.479] Reducing values from 1 chunks ... DONE
[10:22:56.479] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[10:22:56.481] future_lapply() ...
[10:22:56.486] Number of chunks: 1
[10:22:56.486] getGlobalsAndPackagesXApply() ...
[10:22:56.486]  - future.globals: TRUE
[10:22:56.489]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:22:56.489]  - needed namespaces: [n=0] 
[10:22:56.489] Finding globals ... DONE
[10:22:56.489]  - use_args: TRUE
[10:22:56.490]  - Getting '...' globals ...
[10:22:56.490]    - '...' content: [n=0] 
[10:22:56.490] List of 1
[10:22:56.490]  $ ...: list()
[10:22:56.490]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.490]  - attr(*, "where")=List of 1
[10:22:56.490]   ..$ ...:<environment: 0x5646ed9d1d70> 
[10:22:56.490]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.490]  - attr(*, "resolved")= logi TRUE
[10:22:56.490]  - attr(*, "total_size")= num NA
[10:22:56.493]  - Getting '...' globals ... DONE
[10:22:56.493] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:22:56.493] List of 3
[10:22:56.493]  $ ...future.FUN:function (ii)  
[10:22:56.493]  $ a            : num 1
[10:22:56.493]  $ ...          : list()
[10:22:56.493]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.493]  - attr(*, "where")=List of 3
[10:22:56.493]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:56.493]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:56.493]   ..$ ...          :<environment: 0x5646ed9d1d70> 
[10:22:56.493]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.493]  - attr(*, "resolved")= logi FALSE
[10:22:56.493]  - attr(*, "total_size")= num 2984
[10:22:56.497] Packages to be attached in all futures: [n=0] 
[10:22:56.497] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.497] Number of futures (= number of chunks): 1
[10:22:56.497] Launching 1 futures (chunks) ...
[10:22:56.498] Chunk #1 of 1 ...
[10:22:56.498]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.498]    + additional globals found: [n=0] 
[10:22:56.498]    + additional namespaces needed: [n=0] 
[10:22:56.498]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.498]  - seeds: <none>
[10:22:56.498]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.506] Created future:
[10:22:56.506] MulticoreFuture:
[10:22:56.506] Label: ‘future_lapply-1’
[10:22:56.506] Expression:
[10:22:56.506] {
[10:22:56.506]     do.call(function(...) {
[10:22:56.506]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.506]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.506]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.506]             on.exit(options(oopts), add = TRUE)
[10:22:56.506]         }
[10:22:56.506]         {
[10:22:56.506]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.506]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.506]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.506]             })
[10:22:56.506]         }
[10:22:56.506]     }, args = future.call.arguments)
[10:22:56.506] }
[10:22:56.506] Lazy evaluation: FALSE
[10:22:56.506] Asynchronous evaluation: TRUE
[10:22:56.506] Local evaluation: TRUE
[10:22:56.506] Environment: R_GlobalEnv
[10:22:56.506] Capture standard output: TRUE
[10:22:56.506] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.506] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:22:56.506] Packages: <none>
[10:22:56.506] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.506] Resolved: TRUE
[10:22:56.506] Value: <not collected>
[10:22:56.506] Conditions captured: <none>
[10:22:56.506] Early signaling: FALSE
[10:22:56.506] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.506] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.514] Chunk #1 of 1 ... DONE
[10:22:56.514] Launching 1 futures (chunks) ... DONE
[10:22:56.515] Resolving 1 futures (chunks) ...
[10:22:56.516]  - Number of value chunks collected: 1
[10:22:56.516] Resolving 1 futures (chunks) ... DONE
[10:22:56.516] Reducing values from 1 chunks ...
[10:22:56.516]  - Number of values collected after concatenation: 1
[10:22:56.517]  - Number of values expected: 1
[10:22:56.517] Reducing values from 1 chunks ... DONE
[10:22:56.517] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[10:22:56.517] future_lapply() ...
[10:22:56.522] Number of chunks: 1
[10:22:56.522] getGlobalsAndPackagesXApply() ...
[10:22:56.522]  - future.globals: TRUE
[10:22:56.527]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:22:56.527]  - needed namespaces: [n=0] 
[10:22:56.527] Finding globals ... DONE
[10:22:56.527]  - use_args: TRUE
[10:22:56.527]  - Getting '...' globals ...
[10:22:56.528]    - '...' content: [n=0] 
[10:22:56.528] List of 1
[10:22:56.528]  $ ...: list()
[10:22:56.528]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.528]  - attr(*, "where")=List of 1
[10:22:56.528]   ..$ ...:<environment: 0x5646f066bc30> 
[10:22:56.528]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.528]  - attr(*, "resolved")= logi TRUE
[10:22:56.528]  - attr(*, "total_size")= num NA
[10:22:56.531]  - Getting '...' globals ... DONE
[10:22:56.531] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:22:56.531] List of 3
[10:22:56.531]  $ ...future.FUN:function (ii)  
[10:22:56.531]  $ a            : num 1
[10:22:56.531]  $ ...          : list()
[10:22:56.531]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.531]  - attr(*, "where")=List of 3
[10:22:56.531]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:56.531]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:56.531]   ..$ ...          :<environment: 0x5646f066bc30> 
[10:22:56.531]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.531]  - attr(*, "resolved")= logi FALSE
[10:22:56.531]  - attr(*, "total_size")= num 2984
[10:22:56.535] Packages to be attached in all futures: [n=0] 
[10:22:56.535] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.536] Number of futures (= number of chunks): 1
[10:22:56.536] Launching 1 futures (chunks) ...
[10:22:56.536] Chunk #1 of 1 ...
[10:22:56.536]  - Finding globals in 'X' for chunk #1 ...
[10:22:56.536]    + additional globals found: [n=0] 
[10:22:56.536]    + additional namespaces needed: [n=0] 
[10:22:56.536]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:56.537]  - seeds: <none>
[10:22:56.537]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.544] Created future:
[10:22:56.544] MulticoreFuture:
[10:22:56.544] Label: ‘future_lapply-1’
[10:22:56.544] Expression:
[10:22:56.544] {
[10:22:56.544]     do.call(function(...) {
[10:22:56.544]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.544]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.544]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.544]             on.exit(options(oopts), add = TRUE)
[10:22:56.544]         }
[10:22:56.544]         {
[10:22:56.544]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.544]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.544]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.544]             })
[10:22:56.544]         }
[10:22:56.544]     }, args = future.call.arguments)
[10:22:56.544] }
[10:22:56.544] Lazy evaluation: FALSE
[10:22:56.544] Asynchronous evaluation: TRUE
[10:22:56.544] Local evaluation: TRUE
[10:22:56.544] Environment: R_GlobalEnv
[10:22:56.544] Capture standard output: TRUE
[10:22:56.544] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.544] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:22:56.544] Packages: <none>
[10:22:56.544] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.544] Resolved: TRUE
[10:22:56.544] Value: <not collected>
[10:22:56.544] Conditions captured: <none>
[10:22:56.544] Early signaling: FALSE
[10:22:56.544] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.544] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.552] Chunk #1 of 1 ... DONE
[10:22:56.553] Launching 1 futures (chunks) ... DONE
[10:22:56.553] Resolving 1 futures (chunks) ...
[10:22:56.554]  - Number of value chunks collected: 1
[10:22:56.554] Resolving 1 futures (chunks) ... DONE
[10:22:56.555] Reducing values from 1 chunks ...
[10:22:56.555]  - Number of values collected after concatenation: 1
[10:22:56.555]  - Number of values expected: 1
[10:22:56.555] Reducing values from 1 chunks ... DONE
[10:22:56.555] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[10:22:56.555] future_lapply() ...
[10:22:56.560] Number of chunks: 1
[10:22:56.560] getGlobalsAndPackagesXApply() ...
[10:22:56.560]  - future.globals: <name-value list> with names ‘42’
[10:22:56.560]  - use_args: TRUE
[10:22:56.560]  - Getting '...' globals ...
[10:22:56.561]    - '...' content: [n=0] 
[10:22:56.561] List of 1
[10:22:56.561]  $ ...: list()
[10:22:56.561]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.561]  - attr(*, "where")=List of 1
[10:22:56.561]   ..$ ...:<environment: 0x5646eed081e0> 
[10:22:56.561]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.561]  - attr(*, "resolved")= logi TRUE
[10:22:56.561]  - attr(*, "total_size")= num NA
[10:22:56.564]  - Getting '...' globals ... DONE
[10:22:56.564] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[10:22:56.564] List of 3
[10:22:56.564]  $ a            : num 42
[10:22:56.564]  $ ...future.FUN:function (x)  
[10:22:56.564]  $ ...          : list()
[10:22:56.564]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:56.564]  - attr(*, "where")=List of 3
[10:22:56.564]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:56.564]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[10:22:56.564]   ..$ ...          :<environment: 0x5646eed081e0> 
[10:22:56.564]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:56.564]  - attr(*, "resolved")= logi FALSE
[10:22:56.564]  - attr(*, "total_size")= num NA
[10:22:56.569] Packages to be attached in all futures: [n=0] 
[10:22:56.569] getGlobalsAndPackagesXApply() ... DONE
[10:22:56.569] Number of futures (= number of chunks): 1
[10:22:56.569] Launching 1 futures (chunks) ...
[10:22:56.569] Chunk #1 of 1 ...
[10:22:56.569]  - seeds: <none>
[10:22:56.569]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:56.577] Created future:
[10:22:56.578] MulticoreFuture:
[10:22:56.578] Label: ‘future_lapply-1’
[10:22:56.578] Expression:
[10:22:56.578] {
[10:22:56.578]     do.call(function(...) {
[10:22:56.578]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:56.578]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:56.578]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:56.578]             on.exit(options(oopts), add = TRUE)
[10:22:56.578]         }
[10:22:56.578]         {
[10:22:56.578]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:56.578]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:56.578]                 ...future.FUN(...future.X_jj, ...)
[10:22:56.578]             })
[10:22:56.578]         }
[10:22:56.578]     }, args = future.call.arguments)
[10:22:56.578] }
[10:22:56.578] Lazy evaluation: FALSE
[10:22:56.578] Asynchronous evaluation: TRUE
[10:22:56.578] Local evaluation: TRUE
[10:22:56.578] Environment: R_GlobalEnv
[10:22:56.578] Capture standard output: TRUE
[10:22:56.578] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:56.578] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:22:56.578] Packages: <none>
[10:22:56.578] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:56.578] Resolved: TRUE
[10:22:56.578] Value: <not collected>
[10:22:56.578] Conditions captured: <none>
[10:22:56.578] Early signaling: FALSE
[10:22:56.578] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:56.578] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:56.586] Chunk #1 of 1 ... DONE
[10:22:56.586] Launching 1 futures (chunks) ... DONE
[10:22:56.586] Resolving 1 futures (chunks) ...
[10:22:56.588]  - Number of value chunks collected: 1
[10:22:56.588] Resolving 1 futures (chunks) ... DONE
[10:22:56.588] Reducing values from 1 chunks ...
[10:22:56.588]  - Number of values collected after concatenation: 1
[10:22:56.588]  - Number of values expected: 1
[10:22:56.588] Reducing values from 1 chunks ... DONE
[10:22:56.589] future_lapply() ... DONE
List of 1
 $ : num 42
[10:22:56.989] future_lapply() ...
[10:22:56.993] Number of chunks: 2
[10:22:56.993] getGlobalsAndPackagesXApply() ...
[10:22:56.993]  - future.globals: TRUE
[10:22:57.001]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[10:22:57.002]  - needed namespaces: [n=0] 
[10:22:57.002] Finding globals ... DONE
[10:22:57.002]  - use_args: TRUE
[10:22:57.002]  - Getting '...' globals ...
[10:22:57.002]    - '...' content: [n=0] 
[10:22:57.002] List of 1
[10:22:57.002]  $ ...: list()
[10:22:57.002]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.002]  - attr(*, "where")=List of 1
[10:22:57.002]   ..$ ...:<environment: 0x5646f05891f8> 
[10:22:57.002]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.002]  - attr(*, "resolved")= logi TRUE
[10:22:57.002]  - attr(*, "total_size")= num NA
[10:22:57.005]  - Getting '...' globals ... DONE
[10:22:57.006] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[10:22:57.006] List of 6
[10:22:57.006]  $ ...future.FUN:function (i)  
[10:22:57.006]  $ caller       :function (a, b, FUN = call_my_add)  
[10:22:57.006]  $ args         :List of 1
[10:22:57.006]   ..$ FUN:function (a, b)  
[10:22:57.006]  $ call_my_add  :function (a, b)  
[10:22:57.006]  $ my_add       :function (a, b)  
[10:22:57.006]  $ ...          : list()
[10:22:57.006]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.006]  - attr(*, "where")=List of 6
[10:22:57.006]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:57.006]   ..$ caller       :<environment: R_EmptyEnv> 
[10:22:57.006]   ..$ args         :<environment: R_EmptyEnv> 
[10:22:57.006]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[10:22:57.006]   ..$ my_add       :<environment: R_EmptyEnv> 
[10:22:57.006]   ..$ ...          :<environment: 0x5646f05891f8> 
[10:22:57.006]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.006]  - attr(*, "resolved")= logi FALSE
[10:22:57.006]  - attr(*, "total_size")= num 24120
[10:22:57.011] Packages to be attached in all futures: [n=0] 
[10:22:57.011] getGlobalsAndPackagesXApply() ... DONE
[10:22:57.012] Number of futures (= number of chunks): 2
[10:22:57.012] Launching 2 futures (chunks) ...
[10:22:57.012] Chunk #1 of 2 ...
[10:22:57.012]  - Finding globals in 'X' for chunk #1 ...
[10:22:57.012]    + additional globals found: [n=0] 
[10:22:57.012]    + additional namespaces needed: [n=0] 
[10:22:57.013]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:57.013]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:57.013]  - seeds: <none>
[10:22:57.013]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:57.073] Created future:
[10:22:57.073] MultisessionFuture:
[10:22:57.073] Label: ‘future_lapply-1’
[10:22:57.073] Expression:
[10:22:57.073] {
[10:22:57.073]     do.call(function(...) {
[10:22:57.073]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:57.073]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:57.073]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:57.073]             on.exit(options(oopts), add = TRUE)
[10:22:57.073]         }
[10:22:57.073]         {
[10:22:57.073]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:57.073]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:57.073]                 ...future.FUN(...future.X_jj, ...)
[10:22:57.073]             })
[10:22:57.073]         }
[10:22:57.073]     }, args = future.call.arguments)
[10:22:57.073] }
[10:22:57.073] Lazy evaluation: FALSE
[10:22:57.073] Asynchronous evaluation: TRUE
[10:22:57.073] Local evaluation: TRUE
[10:22:57.073] Environment: 0x5646f0589620
[10:22:57.073] Capture standard output: TRUE
[10:22:57.073] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:57.073] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[10:22:57.073] Packages: <none>
[10:22:57.073] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:57.073] Resolved: FALSE
[10:22:57.073] Value: <not collected>
[10:22:57.073] Conditions captured: <none>
[10:22:57.073] Early signaling: FALSE
[10:22:57.073] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:57.073] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:57.085] Chunk #1 of 2 ... DONE
[10:22:57.085] Chunk #2 of 2 ...
[10:22:57.085]  - Finding globals in 'X' for chunk #2 ...
[10:22:57.085]    + additional globals found: [n=0] 
[10:22:57.086]    + additional namespaces needed: [n=0] 
[10:22:57.086]  - Finding globals in 'X' for chunk #2 ... DONE
[10:22:57.086]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:57.086]  - seeds: <none>
[10:22:57.086]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:57.157] Created future:
[10:22:57.157] MultisessionFuture:
[10:22:57.157] Label: ‘future_lapply-2’
[10:22:57.157] Expression:
[10:22:57.157] {
[10:22:57.157]     do.call(function(...) {
[10:22:57.157]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:57.157]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:57.157]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:57.157]             on.exit(options(oopts), add = TRUE)
[10:22:57.157]         }
[10:22:57.157]         {
[10:22:57.157]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:57.157]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:57.157]                 ...future.FUN(...future.X_jj, ...)
[10:22:57.157]             })
[10:22:57.157]         }
[10:22:57.157]     }, args = future.call.arguments)
[10:22:57.157] }
[10:22:57.157] Lazy evaluation: FALSE
[10:22:57.157] Asynchronous evaluation: TRUE
[10:22:57.157] Local evaluation: TRUE
[10:22:57.157] Environment: 0x5646f0589620
[10:22:57.157] Capture standard output: TRUE
[10:22:57.157] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:57.157] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[10:22:57.157] Packages: <none>
[10:22:57.157] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:57.157] Resolved: FALSE
[10:22:57.157] Value: <not collected>
[10:22:57.157] Conditions captured: <none>
[10:22:57.157] Early signaling: FALSE
[10:22:57.157] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:57.157] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:57.169] Chunk #2 of 2 ... DONE
[10:22:57.169] Launching 2 futures (chunks) ... DONE
[10:22:57.170] Resolving 2 futures (chunks) ...
[10:22:57.254]  - Number of value chunks collected: 2
[10:22:57.254] Resolving 2 futures (chunks) ... DONE
[10:22:57.254] Reducing values from 2 chunks ...
[10:22:57.254]  - Number of values collected after concatenation: 3
[10:22:57.254]  - Number of values expected: 3
[10:22:57.255] Reducing values from 2 chunks ... DONE
[10:22:57.255] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[10:22:57.255] future_lapply() ...
[10:22:57.259] Number of chunks: 1
[10:22:57.260] getGlobalsAndPackagesXApply() ...
[10:22:57.260]  - future.globals: TRUE
[10:22:57.262]  - globals found/used: [n=1] ‘FUN’
[10:22:57.263]  - needed namespaces: [n=0] 
[10:22:57.263] Finding globals ... DONE
[10:22:57.263]  - use_args: TRUE
[10:22:57.263]  - Getting '...' globals ...
[10:22:57.263]    - '...' content: [n=1] ‘what’
[10:22:57.263] List of 1
[10:22:57.263]  $ ...:List of 1
[10:22:57.263]   ..$ what:function (x)  
[10:22:57.263]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.263]  - attr(*, "where")=List of 1
[10:22:57.263]   ..$ ...:<environment: 0x5646effc2de8> 
[10:22:57.263]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.263]  - attr(*, "resolved")= logi TRUE
[10:22:57.263]  - attr(*, "total_size")= num NA
[10:22:57.266]  - Getting '...' globals ... DONE
[10:22:57.266] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:57.267] List of 2
[10:22:57.267]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:22:57.267]  $ ...          :List of 1
[10:22:57.267]   ..$ what:function (x)  
[10:22:57.267]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.267]  - attr(*, "where")=List of 2
[10:22:57.267]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:57.267]   ..$ ...          :<environment: 0x5646effc2de8> 
[10:22:57.267]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.267]  - attr(*, "resolved")= logi FALSE
[10:22:57.267]  - attr(*, "total_size")= num 12192
[10:22:57.279] Packages to be attached in all futures: [n=0] 
[10:22:57.279] getGlobalsAndPackagesXApply() ... DONE
[10:22:57.279] Number of futures (= number of chunks): 1
[10:22:57.279] Launching 1 futures (chunks) ...
[10:22:57.279] Chunk #1 of 1 ...
[10:22:57.280]  - Finding globals in 'X' for chunk #1 ...
[10:22:57.280]    + additional globals found: [n=0] 
[10:22:57.280]    + additional namespaces needed: [n=0] 
[10:22:57.280]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:57.280]  - seeds: <none>
[10:22:57.280]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:57.297] Created future:
[10:22:57.297] MultisessionFuture:
[10:22:57.297] Label: ‘future_lapply-1’
[10:22:57.297] Expression:
[10:22:57.297] {
[10:22:57.297]     do.call(function(...) {
[10:22:57.297]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:57.297]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:57.297]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:57.297]             on.exit(options(oopts), add = TRUE)
[10:22:57.297]         }
[10:22:57.297]         {
[10:22:57.297]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:57.297]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:57.297]                 ...future.FUN(...future.X_jj, ...)
[10:22:57.297]             })
[10:22:57.297]         }
[10:22:57.297]     }, args = future.call.arguments)
[10:22:57.297] }
[10:22:57.297] Lazy evaluation: FALSE
[10:22:57.297] Asynchronous evaluation: TRUE
[10:22:57.297] Local evaluation: TRUE
[10:22:57.297] Environment: R_GlobalEnv
[10:22:57.297] Capture standard output: TRUE
[10:22:57.297] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:57.297] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:57.297] Packages: <none>
[10:22:57.297] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:57.297] Resolved: FALSE
[10:22:57.297] Value: <not collected>
[10:22:57.297] Conditions captured: <none>
[10:22:57.297] Early signaling: FALSE
[10:22:57.297] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:57.297] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:57.309] Chunk #1 of 1 ... DONE
[10:22:57.309] Launching 1 futures (chunks) ... DONE
[10:22:57.309] Resolving 1 futures (chunks) ...
[10:22:57.351]  - Number of value chunks collected: 1
[10:22:57.352] Resolving 1 futures (chunks) ... DONE
[10:22:57.352] Reducing values from 1 chunks ...
[10:22:57.352]  - Number of values collected after concatenation: 1
[10:22:57.352]  - Number of values expected: 1
[10:22:57.352] Reducing values from 1 chunks ... DONE
[10:22:57.352] future_lapply() ... DONE
[10:22:57.352] future_lapply() ...
[10:22:57.358] Number of chunks: 1
[10:22:57.358] getGlobalsAndPackagesXApply() ...
[10:22:57.359]  - future.globals: TRUE
[10:22:57.363]  - globals found/used: [n=1] ‘FUN’
[10:22:57.364]  - needed namespaces: [n=0] 
[10:22:57.364] Finding globals ... DONE
[10:22:57.364]  - use_args: TRUE
[10:22:57.364]  - Getting '...' globals ...
[10:22:57.365]    - '...' content: [n=1] ‘what’
[10:22:57.365] List of 1
[10:22:57.365]  $ ...:List of 1
[10:22:57.365]   ..$ what:function (...)  
[10:22:57.365]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.365]  - attr(*, "where")=List of 1
[10:22:57.365]   ..$ ...:<environment: 0x5646eef589e0> 
[10:22:57.365]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.365]  - attr(*, "resolved")= logi TRUE
[10:22:57.365]  - attr(*, "total_size")= num NA
[10:22:57.370]  - Getting '...' globals ... DONE
[10:22:57.371] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:57.371] List of 2
[10:22:57.371]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[10:22:57.371]  $ ...          :List of 1
[10:22:57.371]   ..$ what:function (...)  
[10:22:57.371]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.371]  - attr(*, "where")=List of 2
[10:22:57.371]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:57.371]   ..$ ...          :<environment: 0x5646eef589e0> 
[10:22:57.371]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.371]  - attr(*, "resolved")= logi FALSE
[10:22:57.371]  - attr(*, "total_size")= num 13352
[10:22:57.376] Packages to be attached in all futures: [n=0] 
[10:22:57.376] getGlobalsAndPackagesXApply() ... DONE
[10:22:57.376] Number of futures (= number of chunks): 1
[10:22:57.377] Launching 1 futures (chunks) ...
[10:22:57.377] Chunk #1 of 1 ...
[10:22:57.377]  - Finding globals in 'X' for chunk #1 ...
[10:22:57.377]    + additional globals found: [n=0] 
[10:22:57.378]    + additional namespaces needed: [n=0] 
[10:22:57.378]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:57.378]  - seeds: <none>
[10:22:57.378]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:57.397] Created future:
[10:22:57.398] MultisessionFuture:
[10:22:57.398] Label: ‘future_lapply-1’
[10:22:57.398] Expression:
[10:22:57.398] {
[10:22:57.398]     do.call(function(...) {
[10:22:57.398]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:57.398]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:57.398]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:57.398]             on.exit(options(oopts), add = TRUE)
[10:22:57.398]         }
[10:22:57.398]         {
[10:22:57.398]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:57.398]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:57.398]                 ...future.FUN(...future.X_jj, ...)
[10:22:57.398]             })
[10:22:57.398]         }
[10:22:57.398]     }, args = future.call.arguments)
[10:22:57.398] }
[10:22:57.398] Lazy evaluation: FALSE
[10:22:57.398] Asynchronous evaluation: TRUE
[10:22:57.398] Local evaluation: TRUE
[10:22:57.398] Environment: R_GlobalEnv
[10:22:57.398] Capture standard output: TRUE
[10:22:57.398] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:57.398] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:57.398] Packages: <none>
[10:22:57.398] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:57.398] Resolved: FALSE
[10:22:57.398] Value: <not collected>
[10:22:57.398] Conditions captured: <none>
[10:22:57.398] Early signaling: FALSE
[10:22:57.398] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:57.398] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:57.409] Chunk #1 of 1 ... DONE
[10:22:57.410] Launching 1 futures (chunks) ... DONE
[10:22:57.410] Resolving 1 futures (chunks) ...
[10:22:57.452]  - Number of value chunks collected: 1
[10:22:57.452] Resolving 1 futures (chunks) ... DONE
[10:22:57.452] Reducing values from 1 chunks ...
[10:22:57.453]  - Number of values collected after concatenation: 1
[10:22:57.453]  - Number of values expected: 1
[10:22:57.453] Reducing values from 1 chunks ... DONE
[10:22:57.453] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[10:22:57.453] future_lapply() ...
[10:22:57.457] Number of chunks: 1
[10:22:57.457] getGlobalsAndPackagesXApply() ...
[10:22:57.457]  - future.globals: TRUE
[10:22:57.459]  - globals found/used: [n=1] ‘FUN’
[10:22:57.459]  - needed namespaces: [n=0] 
[10:22:57.459] Finding globals ... DONE
[10:22:57.459]  - use_args: TRUE
[10:22:57.459]  - Getting '...' globals ...
[10:22:57.460]    - '...' content: [n=1] ‘b’
[10:22:57.460] List of 1
[10:22:57.460]  $ ...:List of 1
[10:22:57.460]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:22:57.460]   .. ..$ a: int [1:2] 1 2
[10:22:57.460]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.460]  - attr(*, "where")=List of 1
[10:22:57.460]   ..$ ...:<environment: 0x5646f000b458> 
[10:22:57.460]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.460]  - attr(*, "resolved")= logi TRUE
[10:22:57.460]  - attr(*, "total_size")= num NA
[10:22:57.463]  - Getting '...' globals ... DONE
[10:22:57.463] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:57.464] List of 2
[10:22:57.464]  $ ...future.FUN:function (a, b)  
[10:22:57.464]  $ ...          :List of 1
[10:22:57.464]   ..$ b:'data.frame':	2 obs. of  1 variable:
[10:22:57.464]   .. ..$ a: int [1:2] 1 2
[10:22:57.464]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.464]  - attr(*, "where")=List of 2
[10:22:57.464]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:57.464]   ..$ ...          :<environment: 0x5646f000b458> 
[10:22:57.464]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.464]  - attr(*, "resolved")= logi FALSE
[10:22:57.464]  - attr(*, "total_size")= num 1440
[10:22:57.467] Packages to be attached in all futures: [n=0] 
[10:22:57.467] getGlobalsAndPackagesXApply() ... DONE
[10:22:57.467] Number of futures (= number of chunks): 1
[10:22:57.467] Launching 1 futures (chunks) ...
[10:22:57.468] Chunk #1 of 1 ...
[10:22:57.468]  - Finding globals in 'X' for chunk #1 ...
[10:22:57.468]    + additional globals found: [n=0] 
[10:22:57.468]    + additional namespaces needed: [n=0] 
[10:22:57.468]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:57.468]  - seeds: <none>
[10:22:57.468]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:57.492] Created future:
[10:22:57.492] MultisessionFuture:
[10:22:57.492] Label: ‘future_lapply-1’
[10:22:57.492] Expression:
[10:22:57.492] {
[10:22:57.492]     do.call(function(...) {
[10:22:57.492]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:57.492]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:57.492]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:57.492]             on.exit(options(oopts), add = TRUE)
[10:22:57.492]         }
[10:22:57.492]         {
[10:22:57.492]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:57.492]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:57.492]                 ...future.FUN(...future.X_jj, ...)
[10:22:57.492]             })
[10:22:57.492]         }
[10:22:57.492]     }, args = future.call.arguments)
[10:22:57.492] }
[10:22:57.492] Lazy evaluation: FALSE
[10:22:57.492] Asynchronous evaluation: TRUE
[10:22:57.492] Local evaluation: TRUE
[10:22:57.492] Environment: R_GlobalEnv
[10:22:57.492] Capture standard output: TRUE
[10:22:57.492] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:57.492] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:57.492] Packages: <none>
[10:22:57.492] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:57.492] Resolved: FALSE
[10:22:57.492] Value: <not collected>
[10:22:57.492] Conditions captured: <none>
[10:22:57.492] Early signaling: FALSE
[10:22:57.492] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:57.492] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:57.503] Chunk #1 of 1 ... DONE
[10:22:57.503] Launching 1 futures (chunks) ... DONE
[10:22:57.504] Resolving 1 futures (chunks) ...
[10:22:57.546]  - Number of value chunks collected: 1
[10:22:57.546] Resolving 1 futures (chunks) ... DONE
[10:22:57.546] Reducing values from 1 chunks ...
[10:22:57.546]  - Number of values collected after concatenation: 1
[10:22:57.546]  - Number of values expected: 1
[10:22:57.546] Reducing values from 1 chunks ... DONE
[10:22:57.546] future_lapply() ... DONE
[10:22:57.546] future_lapply() ...
[10:22:57.550] Number of chunks: 1
[10:22:57.550] getGlobalsAndPackagesXApply() ...
[10:22:57.550]  - future.globals: TRUE
[10:22:57.552]  - globals found/used: [n=1] ‘FUN’
[10:22:57.552]  - needed namespaces: [n=0] 
[10:22:57.552] Finding globals ... DONE
[10:22:57.552]  - use_args: TRUE
[10:22:57.552]  - Getting '...' globals ...
[10:22:57.552]    - '...' content: [n=1] ‘b’
[10:22:57.553] List of 1
[10:22:57.553]  $ ...:List of 1
[10:22:57.553]   ..$ b:<environment: 0x5646ef2e72b8> 
[10:22:57.553]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.553]  - attr(*, "where")=List of 1
[10:22:57.553]   ..$ ...:<environment: 0x5646ef2e7d70> 
[10:22:57.553]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.553]  - attr(*, "resolved")= logi TRUE
[10:22:57.553]  - attr(*, "total_size")= num NA
[10:22:57.555]  - Getting '...' globals ... DONE
[10:22:57.556] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:57.556] List of 2
[10:22:57.556]  $ ...future.FUN:function (a, b)  
[10:22:57.556]  $ ...          :List of 1
[10:22:57.556]   ..$ b:<environment: 0x5646ef2e72b8> 
[10:22:57.556]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.556]  - attr(*, "where")=List of 2
[10:22:57.556]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:57.556]   ..$ ...          :<environment: 0x5646ef2e7d70> 
[10:22:57.556]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.556]  - attr(*, "resolved")= logi FALSE
[10:22:57.556]  - attr(*, "total_size")= num 1440
[10:22:57.559] Packages to be attached in all futures: [n=0] 
[10:22:57.559] getGlobalsAndPackagesXApply() ... DONE
[10:22:57.559] Number of futures (= number of chunks): 1
[10:22:57.559] Launching 1 futures (chunks) ...
[10:22:57.559] Chunk #1 of 1 ...
[10:22:57.559]  - Finding globals in 'X' for chunk #1 ...
[10:22:57.559]    + additional globals found: [n=0] 
[10:22:57.560]    + additional namespaces needed: [n=0] 
[10:22:57.560]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:57.560]  - seeds: <none>
[10:22:57.560]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:57.577] Created future:
[10:22:57.578] MultisessionFuture:
[10:22:57.578] Label: ‘future_lapply-1’
[10:22:57.578] Expression:
[10:22:57.578] {
[10:22:57.578]     do.call(function(...) {
[10:22:57.578]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:57.578]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:57.578]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:57.578]             on.exit(options(oopts), add = TRUE)
[10:22:57.578]         }
[10:22:57.578]         {
[10:22:57.578]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:57.578]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:57.578]                 ...future.FUN(...future.X_jj, ...)
[10:22:57.578]             })
[10:22:57.578]         }
[10:22:57.578]     }, args = future.call.arguments)
[10:22:57.578] }
[10:22:57.578] Lazy evaluation: FALSE
[10:22:57.578] Asynchronous evaluation: TRUE
[10:22:57.578] Local evaluation: TRUE
[10:22:57.578] Environment: R_GlobalEnv
[10:22:57.578] Capture standard output: TRUE
[10:22:57.578] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:57.578] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:57.578] Packages: <none>
[10:22:57.578] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:57.578] Resolved: FALSE
[10:22:57.578] Value: <not collected>
[10:22:57.578] Conditions captured: <none>
[10:22:57.578] Early signaling: FALSE
[10:22:57.578] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:57.578] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:57.589] Chunk #1 of 1 ... DONE
[10:22:57.589] Launching 1 futures (chunks) ... DONE
[10:22:57.589] Resolving 1 futures (chunks) ...
[10:22:57.631]  - Number of value chunks collected: 1
[10:22:57.631] Resolving 1 futures (chunks) ... DONE
[10:22:57.632] Reducing values from 1 chunks ...
[10:22:57.632]  - Number of values collected after concatenation: 1
[10:22:57.632]  - Number of values expected: 1
[10:22:57.632] Reducing values from 1 chunks ... DONE
[10:22:57.632] future_lapply() ... DONE
[10:22:57.632] future_lapply() ...
[10:22:57.635] Number of chunks: 1
[10:22:57.636] getGlobalsAndPackagesXApply() ...
[10:22:57.636]  - future.globals: TRUE
[10:22:57.638]  - globals found/used: [n=1] ‘FUN’
[10:22:57.638]  - needed namespaces: [n=0] 
[10:22:57.638] Finding globals ... DONE
[10:22:57.638]  - use_args: TRUE
[10:22:57.638]  - Getting '...' globals ...
[10:22:57.638]    - '...' content: [n=1] ‘b’
[10:22:57.639] List of 1
[10:22:57.639]  $ ...:List of 1
[10:22:57.639]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:22:57.639]   .. .. ..@ slots     :List of 4
[10:22:57.639]   .. .. .. ..$ .Data  : chr "function"
[10:22:57.639]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. ..$ target : chr "signature"
[10:22:57.639]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. ..$ defined: chr "signature"
[10:22:57.639]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. ..$ generic: chr "character"
[10:22:57.639]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. ..@ contains  :List of 3
[10:22:57.639]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.639]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ superClass: chr "function"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.639]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.639]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.639]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.639]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.639]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.639]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.639]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.639]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.639]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.639]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.639]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.639]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.639]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.639]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.639]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.639]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ by        : chr "function"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.639]   .. .. .. .. .. ..@ distance  : num 2
[10:22:57.639]   .. .. ..@ virtual   : logi FALSE
[10:22:57.639]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:22:57.639]  list()
[10:22:57.639]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:22:57.639]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:57.639]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:57.639]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:57.639]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:22:57.639]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:57.639]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:57.639]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:57.639]   .. .. .. .. ..$ generic: chr(0) 
[10:22:57.639]   .. .. ..@ validity  : NULL
[10:22:57.639]   .. .. ..@ access    : list()
[10:22:57.639]   .. .. ..@ className : chr "MethodDefinition"
[10:22:57.639]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. ..@ subclasses:List of 7
[10:22:57.639]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.639]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.639]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.639]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.639]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.639]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.639]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.639]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.639]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.639]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.639]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.639]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.639]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.639]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.639]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.639]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.639]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.639]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.639]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.639]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.639]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.639]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.639]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.639]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.639]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.639]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.639]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.639]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.639]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.639]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.639]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.639]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.639]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.639]   .. .. .. .. .. ..@ distance  : num 2
[10:22:57.639]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.639]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.639]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.639]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.639]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.639]   .. .. .. .. .. ..@ distance  : num 2
[10:22:57.639]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.639]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.639]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.639]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.639]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.639]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:57.639]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.639]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.639]   .. .. .. .. .. ..@ distance  : num 2
[10:22:57.639]   .. .. ..@ versionKey:<externalptr> 
[10:22:57.639]   .. .. ..@ sealed    : logi TRUE
[10:22:57.639]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.639]  - attr(*, "where")=List of 1
[10:22:57.639]   ..$ ...:<environment: 0x5646f056c418> 
[10:22:57.639]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.639]  - attr(*, "resolved")= logi TRUE
[10:22:57.639]  - attr(*, "total_size")= num NA
[10:22:57.686]  - Getting '...' globals ... DONE
[10:22:57.687] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:57.687] List of 2
[10:22:57.687]  $ ...future.FUN:function (a, b)  
[10:22:57.687]  $ ...          :List of 1
[10:22:57.687]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[10:22:57.687]   .. .. ..@ slots     :List of 4
[10:22:57.687]   .. .. .. ..$ .Data  : chr "function"
[10:22:57.687]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. ..$ target : chr "signature"
[10:22:57.687]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. ..$ defined: chr "signature"
[10:22:57.687]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. ..$ generic: chr "character"
[10:22:57.687]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. ..@ contains  :List of 3
[10:22:57.687]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.687]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ superClass: chr "function"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.687]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.687]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.687]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.687]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.687]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.687]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.687]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.687]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.687]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ by        : chr "function"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.687]   .. .. .. .. .. ..@ distance  : num 2
[10:22:57.687]   .. .. ..@ virtual   : logi FALSE
[10:22:57.687]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[10:22:57.687]  list()
[10:22:57.687]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[10:22:57.687]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:57.687]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:57.687]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:57.687]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[10:22:57.687]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[10:22:57.687]   .. .. .. .. .. .. ..@ names  : chr(0) 
[10:22:57.687]   .. .. .. .. .. .. ..@ package: chr(0) 
[10:22:57.687]   .. .. .. .. ..$ generic: chr(0) 
[10:22:57.687]   .. .. ..@ validity  : NULL
[10:22:57.687]   .. .. ..@ access    : list()
[10:22:57.687]   .. .. ..@ className : chr "MethodDefinition"
[10:22:57.687]   .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. ..@ subclasses:List of 7
[10:22:57.687]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.687]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.687]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.687]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.687]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.687]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.687]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.687]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.687]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.687]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.687]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.687]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.687]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.687]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.687]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ by        : chr(0) 
[10:22:57.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.687]   .. .. .. .. .. ..@ distance  : num 1
[10:22:57.687]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.687]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.687]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.687]   .. .. .. .. .. ..@ distance  : num 2
[10:22:57.687]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.687]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.687]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.687]   .. .. .. .. .. ..@ distance  : num 2
[10:22:57.687]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[10:22:57.687]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ package   : chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[10:22:57.687]   .. .. .. .. .. ..@ test      :function (object)  
[10:22:57.687]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[10:22:57.687]   .. .. .. .. .. ..@ simple    : logi TRUE
[10:22:57.687]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[10:22:57.687]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[10:22:57.687]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[10:22:57.687]   .. .. .. .. .. ..@ distance  : num 2
[10:22:57.687]   .. .. ..@ versionKey:<externalptr> 
[10:22:57.687]   .. .. ..@ sealed    : logi TRUE
[10:22:57.687]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.687]  - attr(*, "where")=List of 2
[10:22:57.687]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:57.687]   ..$ ...          :<environment: 0x5646f056c418> 
[10:22:57.687]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.687]  - attr(*, "resolved")= logi FALSE
[10:22:57.687]  - attr(*, "total_size")= num 312512
[10:22:57.735] Packages to be attached in all futures: [n=0] 
[10:22:57.735] getGlobalsAndPackagesXApply() ... DONE
[10:22:57.735] Number of futures (= number of chunks): 1
[10:22:57.735] Launching 1 futures (chunks) ...
[10:22:57.735] Chunk #1 of 1 ...
[10:22:57.735]  - Finding globals in 'X' for chunk #1 ...
[10:22:57.736]    + additional globals found: [n=0] 
[10:22:57.736]    + additional namespaces needed: [n=0] 
[10:22:57.736]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:57.736]  - seeds: <none>
[10:22:57.736]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:57.753] Created future:
[10:22:57.753] MultisessionFuture:
[10:22:57.753] Label: ‘future_lapply-1’
[10:22:57.753] Expression:
[10:22:57.753] {
[10:22:57.753]     do.call(function(...) {
[10:22:57.753]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:57.753]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:57.753]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:57.753]             on.exit(options(oopts), add = TRUE)
[10:22:57.753]         }
[10:22:57.753]         {
[10:22:57.753]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:57.753]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:57.753]                 ...future.FUN(...future.X_jj, ...)
[10:22:57.753]             })
[10:22:57.753]         }
[10:22:57.753]     }, args = future.call.arguments)
[10:22:57.753] }
[10:22:57.753] Lazy evaluation: FALSE
[10:22:57.753] Asynchronous evaluation: TRUE
[10:22:57.753] Local evaluation: TRUE
[10:22:57.753] Environment: R_GlobalEnv
[10:22:57.753] Capture standard output: TRUE
[10:22:57.753] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:57.753] Globals: 5 objects totaling 305.24 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 303.78 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:57.753] Packages: <none>
[10:22:57.753] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:57.753] Resolved: FALSE
[10:22:57.753] Value: <not collected>
[10:22:57.753] Conditions captured: <none>
[10:22:57.753] Early signaling: FALSE
[10:22:57.753] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:57.753] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:57.765] Chunk #1 of 1 ... DONE
[10:22:57.765] Launching 1 futures (chunks) ... DONE
[10:22:57.765] Resolving 1 futures (chunks) ...
[10:22:57.807]  - Number of value chunks collected: 1
[10:22:57.808] Resolving 1 futures (chunks) ... DONE
[10:22:57.808] Reducing values from 1 chunks ...
[10:22:57.808]  - Number of values collected after concatenation: 1
[10:22:57.808]  - Number of values expected: 1
[10:22:57.808] Reducing values from 1 chunks ... DONE
[10:22:57.808] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[10:22:57.810] future_lapply() ...
[10:22:57.814] Number of chunks: 2
[10:22:57.814] getGlobalsAndPackagesXApply() ...
[10:22:57.814]  - future.globals: TRUE
[10:22:57.815]  - globals found/used: [n=1] ‘FUN’
[10:22:57.815]  - needed namespaces: [n=0] 
[10:22:57.816] Finding globals ... DONE
[10:22:57.816]  - use_args: TRUE
[10:22:57.816]  - Getting '...' globals ...
[10:22:57.816]    - '...' content: [n=0] 
[10:22:57.816] List of 1
[10:22:57.816]  $ ...: list()
[10:22:57.816]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.816]  - attr(*, "where")=List of 1
[10:22:57.816]   ..$ ...:<environment: 0x5646ed324598> 
[10:22:57.816]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.816]  - attr(*, "resolved")= logi TRUE
[10:22:57.816]  - attr(*, "total_size")= num NA
[10:22:57.819]  - Getting '...' globals ... DONE
[10:22:57.819] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:57.819] List of 2
[10:22:57.819]  $ ...future.FUN:function (f)  
[10:22:57.819]  $ ...          : list()
[10:22:57.819]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.819]  - attr(*, "where")=List of 2
[10:22:57.819]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:57.819]   ..$ ...          :<environment: 0x5646ed324598> 
[10:22:57.819]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.819]  - attr(*, "resolved")= logi FALSE
[10:22:57.819]  - attr(*, "total_size")= num 1008
[10:22:57.822] Packages to be attached in all futures: [n=0] 
[10:22:57.822] getGlobalsAndPackagesXApply() ... DONE
[10:22:57.822] Number of futures (= number of chunks): 2
[10:22:57.822] Launching 2 futures (chunks) ...
[10:22:57.822] Chunk #1 of 2 ...
[10:22:57.822]  - Finding globals in 'X' for chunk #1 ...
[10:22:57.824]    + additional globals found: [n=2] ‘a’, ‘b’
[10:22:57.824]    + additional namespaces needed: [n=0] 
[10:22:57.824]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:57.824]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:57.824]  - seeds: <none>
[10:22:57.824]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[10:22:57.841] Created future:
[10:22:57.841] MultisessionFuture:
[10:22:57.841] Label: ‘future_lapply-1’
[10:22:57.841] Expression:
[10:22:57.841] {
[10:22:57.841]     do.call(function(...) {
[10:22:57.841]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:57.841]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:57.841]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:57.841]             on.exit(options(oopts), add = TRUE)
[10:22:57.841]         }
[10:22:57.841]         {
[10:22:57.841]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:57.841]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:57.841]                 ...future.FUN(...future.X_jj, ...)
[10:22:57.841]             })
[10:22:57.841]         }
[10:22:57.841]     }, args = future.call.arguments)
[10:22:57.841] }
[10:22:57.841] Lazy evaluation: FALSE
[10:22:57.841] Asynchronous evaluation: TRUE
[10:22:57.841] Local evaluation: TRUE
[10:22:57.841] Environment: R_GlobalEnv
[10:22:57.841] Capture standard output: TRUE
[10:22:57.841] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:57.841] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[10:22:57.841] Packages: <none>
[10:22:57.841] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:57.841] Resolved: FALSE
[10:22:57.841] Value: <not collected>
[10:22:57.841] Conditions captured: <none>
[10:22:57.841] Early signaling: FALSE
[10:22:57.841] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:57.841] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:57.853] Chunk #1 of 2 ... DONE
[10:22:57.853] Chunk #2 of 2 ...
[10:22:57.853]  - Finding globals in 'X' for chunk #2 ...
[10:22:57.855]    + additional globals found: [n=2] ‘a’, ‘b’
[10:22:57.855]    + additional namespaces needed: [n=1] ‘tools’
[10:22:57.855]  - Finding globals in 'X' for chunk #2 ... DONE
[10:22:57.855]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:57.855]  - seeds: <none>
[10:22:57.855]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[10:22:57.872] Created future:
[10:22:57.872] MultisessionFuture:
[10:22:57.872] Label: ‘future_lapply-2’
[10:22:57.872] Expression:
[10:22:57.872] {
[10:22:57.872]     do.call(function(...) {
[10:22:57.872]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:57.872]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:57.872]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:57.872]             on.exit(options(oopts), add = TRUE)
[10:22:57.872]         }
[10:22:57.872]         {
[10:22:57.872]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:57.872]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:57.872]                 ...future.FUN(...future.X_jj, ...)
[10:22:57.872]             })
[10:22:57.872]         }
[10:22:57.872]     }, args = future.call.arguments)
[10:22:57.872] }
[10:22:57.872] Lazy evaluation: FALSE
[10:22:57.872] Asynchronous evaluation: TRUE
[10:22:57.872] Local evaluation: TRUE
[10:22:57.872] Environment: R_GlobalEnv
[10:22:57.872] Capture standard output: TRUE
[10:22:57.872] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:57.872] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[10:22:57.872] Packages: 1 packages (‘tools’)
[10:22:57.872] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:57.872] Resolved: FALSE
[10:22:57.872] Value: <not collected>
[10:22:57.872] Conditions captured: <none>
[10:22:57.872] Early signaling: FALSE
[10:22:57.872] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:57.872] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:57.884] Chunk #2 of 2 ... DONE
[10:22:57.884] Launching 2 futures (chunks) ... DONE
[10:22:57.884] Resolving 2 futures (chunks) ...
[10:22:57.930]  - Number of value chunks collected: 2
[10:22:57.931] Resolving 2 futures (chunks) ... DONE
[10:22:57.931] Reducing values from 2 chunks ...
[10:22:57.931]  - Number of values collected after concatenation: 4
[10:22:57.931]  - Number of values expected: 4
[10:22:57.931] Reducing values from 2 chunks ... DONE
[10:22:57.931] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[10:22:57.934] future_lapply() ...
[10:22:57.938] Number of chunks: 1
[10:22:57.938] getGlobalsAndPackagesXApply() ...
[10:22:57.938]  - future.globals: TRUE
[10:22:57.940]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[10:22:57.940]  - needed namespaces: [n=0] 
[10:22:57.940] Finding globals ... DONE
[10:22:57.940]  - use_args: TRUE
[10:22:57.940]  - Getting '...' globals ...
[10:22:57.941]    - '...' content: [n=0] 
[10:22:57.941] List of 1
[10:22:57.941]  $ ...: list()
[10:22:57.941]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.941]  - attr(*, "where")=List of 1
[10:22:57.941]   ..$ ...:<environment: 0x5646ef554890> 
[10:22:57.941]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.941]  - attr(*, "resolved")= logi TRUE
[10:22:57.941]  - attr(*, "total_size")= num NA
[10:22:57.943]  - Getting '...' globals ... DONE
[10:22:57.943] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[10:22:57.944] List of 3
[10:22:57.944]  $ ...future.FUN        :function (x)  
[10:22:57.944]  $ future.call.arguments:List of 1
[10:22:57.944]   ..$ a: num 1
[10:22:57.944]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.944]  $ ...                  : list()
[10:22:57.944]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:57.944]  - attr(*, "where")=List of 3
[10:22:57.944]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[10:22:57.944]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[10:22:57.944]   ..$ ...                  :<environment: 0x5646ef554890> 
[10:22:57.944]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:57.944]  - attr(*, "resolved")= logi FALSE
[10:22:57.944]  - attr(*, "total_size")= num 1272
[10:22:57.947] Packages to be attached in all futures: [n=0] 
[10:22:57.947] getGlobalsAndPackagesXApply() ... DONE
[10:22:57.948] Number of futures (= number of chunks): 1
[10:22:57.948] Launching 1 futures (chunks) ...
[10:22:57.948] Chunk #1 of 1 ...
[10:22:57.948]  - Finding globals in 'X' for chunk #1 ...
[10:22:57.948]    + additional globals found: [n=0] 
[10:22:57.948]    + additional namespaces needed: [n=0] 
[10:22:57.948]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:57.948]  - seeds: <none>
[10:22:57.948]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:57.967] Created future:
[10:22:57.967] MultisessionFuture:
[10:22:57.967] Label: ‘future_lapply-1’
[10:22:57.967] Expression:
[10:22:57.967] {
[10:22:57.967]     do.call(function(...) {
[10:22:57.967]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:57.967]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:57.967]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:57.967]             on.exit(options(oopts), add = TRUE)
[10:22:57.967]         }
[10:22:57.967]         {
[10:22:57.967]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:57.967]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:57.967]                 ...future.FUN(...future.X_jj)
[10:22:57.967]             })
[10:22:57.967]         }
[10:22:57.967]     }, args = future.call.arguments)
[10:22:57.967] }
[10:22:57.967] Lazy evaluation: FALSE
[10:22:57.967] Asynchronous evaluation: TRUE
[10:22:57.967] Local evaluation: TRUE
[10:22:57.967] Environment: 0x5646ef5544a0
[10:22:57.967] Capture standard output: TRUE
[10:22:57.967] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:57.967] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:57.967] Packages: <none>
[10:22:57.967] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:57.967] Resolved: FALSE
[10:22:57.967] Value: <not collected>
[10:22:57.967] Conditions captured: <none>
[10:22:57.967] Early signaling: FALSE
[10:22:57.967] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:57.967] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:57.978] Chunk #1 of 1 ... DONE
[10:22:57.978] Launching 1 futures (chunks) ... DONE
[10:22:57.978] Resolving 1 futures (chunks) ...
[10:22:58.021]  - Number of value chunks collected: 1
[10:22:58.021] Resolving 1 futures (chunks) ... DONE
[10:22:58.021] Reducing values from 1 chunks ...
[10:22:58.021]  - Number of values collected after concatenation: 1
[10:22:58.021]  - Number of values expected: 1
[10:22:58.021] Reducing values from 1 chunks ... DONE
[10:22:58.021] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[10:22:58.022] future_lapply() ...
[10:22:58.026] Number of chunks: 1
[10:22:58.026] getGlobalsAndPackagesXApply() ...
[10:22:58.026]  - future.globals: TRUE
[10:22:58.028]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:22:58.029]  - needed namespaces: [n=0] 
[10:22:58.029] Finding globals ... DONE
[10:22:58.029]  - use_args: TRUE
[10:22:58.029]  - Getting '...' globals ...
[10:22:58.029]    - '...' content: [n=0] 
[10:22:58.029] List of 1
[10:22:58.029]  $ ...: list()
[10:22:58.029]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.029]  - attr(*, "where")=List of 1
[10:22:58.029]   ..$ ...:<environment: 0x5646f0641cb0> 
[10:22:58.029]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.029]  - attr(*, "resolved")= logi TRUE
[10:22:58.029]  - attr(*, "total_size")= num NA
[10:22:58.032]  - Getting '...' globals ... DONE
[10:22:58.032] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:22:58.032] List of 3
[10:22:58.032]  $ ...future.FUN:function (ii)  
[10:22:58.032]  $ a            : num 1
[10:22:58.032]  $ ...          : list()
[10:22:58.032]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.032]  - attr(*, "where")=List of 3
[10:22:58.032]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:58.032]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:58.032]   ..$ ...          :<environment: 0x5646f0641cb0> 
[10:22:58.032]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.032]  - attr(*, "resolved")= logi FALSE
[10:22:58.032]  - attr(*, "total_size")= num 2984
[10:22:58.035] Packages to be attached in all futures: [n=0] 
[10:22:58.035] getGlobalsAndPackagesXApply() ... DONE
[10:22:58.036] Number of futures (= number of chunks): 1
[10:22:58.036] Launching 1 futures (chunks) ...
[10:22:58.036] Chunk #1 of 1 ...
[10:22:58.036]  - Finding globals in 'X' for chunk #1 ...
[10:22:58.036]    + additional globals found: [n=0] 
[10:22:58.036]    + additional namespaces needed: [n=0] 
[10:22:58.036]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:58.036]  - seeds: <none>
[10:22:58.036]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.053] Created future:
[10:22:58.053] MultisessionFuture:
[10:22:58.053] Label: ‘future_lapply-1’
[10:22:58.053] Expression:
[10:22:58.053] {
[10:22:58.053]     do.call(function(...) {
[10:22:58.053]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.053]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.053]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.053]             on.exit(options(oopts), add = TRUE)
[10:22:58.053]         }
[10:22:58.053]         {
[10:22:58.053]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.053]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.053]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.053]             })
[10:22:58.053]         }
[10:22:58.053]     }, args = future.call.arguments)
[10:22:58.053] }
[10:22:58.053] Lazy evaluation: FALSE
[10:22:58.053] Asynchronous evaluation: TRUE
[10:22:58.053] Local evaluation: TRUE
[10:22:58.053] Environment: R_GlobalEnv
[10:22:58.053] Capture standard output: TRUE
[10:22:58.053] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.053] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:22:58.053] Packages: <none>
[10:22:58.053] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.053] Resolved: FALSE
[10:22:58.053] Value: <not collected>
[10:22:58.053] Conditions captured: <none>
[10:22:58.053] Early signaling: FALSE
[10:22:58.053] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.053] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.066] Chunk #1 of 1 ... DONE
[10:22:58.067] Launching 1 futures (chunks) ... DONE
[10:22:58.067] Resolving 1 futures (chunks) ...
[10:22:58.109]  - Number of value chunks collected: 1
[10:22:58.109] Resolving 1 futures (chunks) ... DONE
[10:22:58.109] Reducing values from 1 chunks ...
[10:22:58.110]  - Number of values collected after concatenation: 1
[10:22:58.110]  - Number of values expected: 1
[10:22:58.110] Reducing values from 1 chunks ... DONE
[10:22:58.110] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[10:22:58.110] future_lapply() ...
[10:22:58.114] Number of chunks: 1
[10:22:58.114] getGlobalsAndPackagesXApply() ...
[10:22:58.114]  - future.globals: TRUE
[10:22:58.117]  - globals found/used: [n=2] ‘FUN’, ‘a’
[10:22:58.117]  - needed namespaces: [n=0] 
[10:22:58.117] Finding globals ... DONE
[10:22:58.117]  - use_args: TRUE
[10:22:58.117]  - Getting '...' globals ...
[10:22:58.117]    - '...' content: [n=0] 
[10:22:58.118] List of 1
[10:22:58.118]  $ ...: list()
[10:22:58.118]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.118]  - attr(*, "where")=List of 1
[10:22:58.118]   ..$ ...:<environment: 0x5646ef6a0878> 
[10:22:58.118]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.118]  - attr(*, "resolved")= logi TRUE
[10:22:58.118]  - attr(*, "total_size")= num NA
[10:22:58.120]  - Getting '...' globals ... DONE
[10:22:58.120] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[10:22:58.120] List of 3
[10:22:58.120]  $ ...future.FUN:function (ii)  
[10:22:58.120]  $ a            : num 1
[10:22:58.120]  $ ...          : list()
[10:22:58.120]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.120]  - attr(*, "where")=List of 3
[10:22:58.120]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:58.120]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:58.120]   ..$ ...          :<environment: 0x5646ef6a0878> 
[10:22:58.120]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.120]  - attr(*, "resolved")= logi FALSE
[10:22:58.120]  - attr(*, "total_size")= num 2984
[10:22:58.123] Packages to be attached in all futures: [n=0] 
[10:22:58.124] getGlobalsAndPackagesXApply() ... DONE
[10:22:58.124] Number of futures (= number of chunks): 1
[10:22:58.124] Launching 1 futures (chunks) ...
[10:22:58.124] Chunk #1 of 1 ...
[10:22:58.124]  - Finding globals in 'X' for chunk #1 ...
[10:22:58.124]    + additional globals found: [n=0] 
[10:22:58.124]    + additional namespaces needed: [n=0] 
[10:22:58.125]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:58.125]  - seeds: <none>
[10:22:58.125]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.143] Created future:
[10:22:58.144] MultisessionFuture:
[10:22:58.144] Label: ‘future_lapply-1’
[10:22:58.144] Expression:
[10:22:58.144] {
[10:22:58.144]     do.call(function(...) {
[10:22:58.144]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.144]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.144]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.144]             on.exit(options(oopts), add = TRUE)
[10:22:58.144]         }
[10:22:58.144]         {
[10:22:58.144]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.144]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.144]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.144]             })
[10:22:58.144]         }
[10:22:58.144]     }, args = future.call.arguments)
[10:22:58.144] }
[10:22:58.144] Lazy evaluation: FALSE
[10:22:58.144] Asynchronous evaluation: TRUE
[10:22:58.144] Local evaluation: TRUE
[10:22:58.144] Environment: R_GlobalEnv
[10:22:58.144] Capture standard output: TRUE
[10:22:58.144] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.144] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:22:58.144] Packages: <none>
[10:22:58.144] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.144] Resolved: FALSE
[10:22:58.144] Value: <not collected>
[10:22:58.144] Conditions captured: <none>
[10:22:58.144] Early signaling: FALSE
[10:22:58.144] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.144] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.155] Chunk #1 of 1 ... DONE
[10:22:58.156] Launching 1 futures (chunks) ... DONE
[10:22:58.156] Resolving 1 futures (chunks) ...
[10:22:58.198]  - Number of value chunks collected: 1
[10:22:58.198] Resolving 1 futures (chunks) ... DONE
[10:22:58.198] Reducing values from 1 chunks ...
[10:22:58.199]  - Number of values collected after concatenation: 1
[10:22:58.199]  - Number of values expected: 1
[10:22:58.199] Reducing values from 1 chunks ... DONE
[10:22:58.199] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[10:22:58.199] future_lapply() ...
[10:22:58.203] Number of chunks: 1
[10:22:58.203] getGlobalsAndPackagesXApply() ...
[10:22:58.203]  - future.globals: <name-value list> with names ‘42’
[10:22:58.204]  - use_args: TRUE
[10:22:58.204]  - Getting '...' globals ...
[10:22:58.204]    - '...' content: [n=0] 
[10:22:58.204] List of 1
[10:22:58.204]  $ ...: list()
[10:22:58.204]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.204]  - attr(*, "where")=List of 1
[10:22:58.204]   ..$ ...:<environment: 0x5646f0035ff0> 
[10:22:58.204]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.204]  - attr(*, "resolved")= logi TRUE
[10:22:58.204]  - attr(*, "total_size")= num NA
[10:22:58.207]  - Getting '...' globals ... DONE
[10:22:58.207] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[10:22:58.208] List of 3
[10:22:58.208]  $ a            : num 42
[10:22:58.208]  $ ...future.FUN:function (x)  
[10:22:58.208]  $ ...          : list()
[10:22:58.208]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.208]  - attr(*, "where")=List of 3
[10:22:58.208]   ..$ a            :<environment: R_EmptyEnv> 
[10:22:58.208]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[10:22:58.208]   ..$ ...          :<environment: 0x5646f0035ff0> 
[10:22:58.208]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.208]  - attr(*, "resolved")= logi FALSE
[10:22:58.208]  - attr(*, "total_size")= num NA
[10:22:58.211] Packages to be attached in all futures: [n=0] 
[10:22:58.211] getGlobalsAndPackagesXApply() ... DONE
[10:22:58.211] Number of futures (= number of chunks): 1
[10:22:58.211] Launching 1 futures (chunks) ...
[10:22:58.211] Chunk #1 of 1 ...
[10:22:58.211]  - seeds: <none>
[10:22:58.211]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.229] Created future:
[10:22:58.229] MultisessionFuture:
[10:22:58.229] Label: ‘future_lapply-1’
[10:22:58.229] Expression:
[10:22:58.229] {
[10:22:58.229]     do.call(function(...) {
[10:22:58.229]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.229]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.229]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.229]             on.exit(options(oopts), add = TRUE)
[10:22:58.229]         }
[10:22:58.229]         {
[10:22:58.229]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.229]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.229]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.229]             })
[10:22:58.229]         }
[10:22:58.229]     }, args = future.call.arguments)
[10:22:58.229] }
[10:22:58.229] Lazy evaluation: FALSE
[10:22:58.229] Asynchronous evaluation: TRUE
[10:22:58.229] Local evaluation: TRUE
[10:22:58.229] Environment: R_GlobalEnv
[10:22:58.229] Capture standard output: TRUE
[10:22:58.229] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.229] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[10:22:58.229] Packages: <none>
[10:22:58.229] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.229] Resolved: FALSE
[10:22:58.229] Value: <not collected>
[10:22:58.229] Conditions captured: <none>
[10:22:58.229] Early signaling: FALSE
[10:22:58.229] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.229] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.241] Chunk #1 of 1 ... DONE
[10:22:58.241] Launching 1 futures (chunks) ... DONE
[10:22:58.241] Resolving 1 futures (chunks) ...
[10:22:58.283]  - Number of value chunks collected: 1
[10:22:58.283] Resolving 1 futures (chunks) ... DONE
[10:22:58.283] Reducing values from 1 chunks ...
[10:22:58.283]  - Number of values collected after concatenation: 1
[10:22:58.283]  - Number of values expected: 1
[10:22:58.284] Reducing values from 1 chunks ... DONE
[10:22:58.284] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[10:22:58.285] future_lapply() ...
[10:22:58.289] Number of chunks: 2
[10:22:58.289] getGlobalsAndPackagesXApply() ...
[10:22:58.289]  - future.globals: TRUE
[10:22:58.292]  - globals found/used: [n=1] ‘FUN’
[10:22:58.292]  - needed namespaces: [n=0] 
[10:22:58.292] Finding globals ... DONE
[10:22:58.292]  - use_args: TRUE
[10:22:58.293]  - Getting '...' globals ...
[10:22:58.293]    - '...' content: [n=0] 
[10:22:58.293] List of 1
[10:22:58.293]  $ ...: list()
[10:22:58.293]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.293]  - attr(*, "where")=List of 1
[10:22:58.293]   ..$ ...:<environment: 0x5646efe78da8> 
[10:22:58.293]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.293]  - attr(*, "resolved")= logi TRUE
[10:22:58.293]  - attr(*, "total_size")= num NA
[10:22:58.296]  - Getting '...' globals ... DONE
[10:22:58.296] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:58.296] List of 2
[10:22:58.296]  $ ...future.FUN:function (y)  
[10:22:58.296]  $ ...          : list()
[10:22:58.296]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.296]  - attr(*, "where")=List of 2
[10:22:58.296]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:58.296]   ..$ ...          :<environment: 0x5646efe78da8> 
[10:22:58.296]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.296]  - attr(*, "resolved")= logi FALSE
[10:22:58.296]  - attr(*, "total_size")= num 280
[10:22:58.298] Packages to be attached in all futures: [n=0] 
[10:22:58.299] getGlobalsAndPackagesXApply() ... DONE
[10:22:58.299] Number of futures (= number of chunks): 2
[10:22:58.299] Launching 2 futures (chunks) ...
[10:22:58.299] Chunk #1 of 2 ...
[10:22:58.299]  - Finding globals in 'X' for chunk #1 ...
[10:22:58.299]    + additional globals found: [n=0] 
[10:22:58.299]    + additional namespaces needed: [n=0] 
[10:22:58.300]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:58.300]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:58.300]  - seeds: <none>
[10:22:58.300]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.317] Created future:
[10:22:58.317] MultisessionFuture:
[10:22:58.317] Label: ‘future_lapply-1’
[10:22:58.317] Expression:
[10:22:58.317] {
[10:22:58.317]     do.call(function(...) {
[10:22:58.317]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.317]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.317]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.317]             on.exit(options(oopts), add = TRUE)
[10:22:58.317]         }
[10:22:58.317]         {
[10:22:58.317]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.317]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.317]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.317]             })
[10:22:58.317]         }
[10:22:58.317]     }, args = future.call.arguments)
[10:22:58.317] }
[10:22:58.317] Lazy evaluation: FALSE
[10:22:58.317] Asynchronous evaluation: TRUE
[10:22:58.317] Local evaluation: TRUE
[10:22:58.317] Environment: 0x5646efe79208
[10:22:58.317] Capture standard output: TRUE
[10:22:58.317] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.317] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:58.317] Packages: <none>
[10:22:58.317] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.317] Resolved: FALSE
[10:22:58.317] Value: <not collected>
[10:22:58.317] Conditions captured: <none>
[10:22:58.317] Early signaling: FALSE
[10:22:58.317] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.317] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.329] Chunk #1 of 2 ... DONE
[10:22:58.329] Chunk #2 of 2 ...
[10:22:58.329]  - Finding globals in 'X' for chunk #2 ...
[10:22:58.329]    + additional globals found: [n=0] 
[10:22:58.329]    + additional namespaces needed: [n=0] 
[10:22:58.330]  - Finding globals in 'X' for chunk #2 ... DONE
[10:22:58.330]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:58.330]  - seeds: <none>
[10:22:58.330]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.349] Created future:
[10:22:58.349] MultisessionFuture:
[10:22:58.349] Label: ‘future_lapply-2’
[10:22:58.349] Expression:
[10:22:58.349] {
[10:22:58.349]     do.call(function(...) {
[10:22:58.349]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.349]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.349]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.349]             on.exit(options(oopts), add = TRUE)
[10:22:58.349]         }
[10:22:58.349]         {
[10:22:58.349]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.349]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.349]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.349]             })
[10:22:58.349]         }
[10:22:58.349]     }, args = future.call.arguments)
[10:22:58.349] }
[10:22:58.349] Lazy evaluation: FALSE
[10:22:58.349] Asynchronous evaluation: TRUE
[10:22:58.349] Local evaluation: TRUE
[10:22:58.349] Environment: 0x5646efe79208
[10:22:58.349] Capture standard output: TRUE
[10:22:58.349] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.349] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:58.349] Packages: <none>
[10:22:58.349] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.349] Resolved: FALSE
[10:22:58.349] Value: <not collected>
[10:22:58.349] Conditions captured: <none>
[10:22:58.349] Early signaling: FALSE
[10:22:58.349] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.349] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.361] Chunk #2 of 2 ... DONE
[10:22:58.361] Launching 2 futures (chunks) ... DONE
[10:22:58.361] Resolving 2 futures (chunks) ...
[10:22:58.405]  - Number of value chunks collected: 2
[10:22:58.405] Resolving 2 futures (chunks) ... DONE
[10:22:58.406] Reducing values from 2 chunks ...
[10:22:58.406]  - Number of values collected after concatenation: 2
[10:22:58.406]  - Number of values expected: 2
[10:22:58.406] Reducing values from 2 chunks ... DONE
[10:22:58.406] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[10:22:58.406] future_lapply() ...
[10:22:58.410] Number of chunks: 2
[10:22:58.411] getGlobalsAndPackagesXApply() ...
[10:22:58.411]  - future.globals: TRUE
[10:22:58.412]  - globals found/used: [n=1] ‘FUN’
[10:22:58.412]  - needed namespaces: [n=0] 
[10:22:58.412] Finding globals ... DONE
[10:22:58.412]  - use_args: TRUE
[10:22:58.413]  - Getting '...' globals ...
[10:22:58.413]    - '...' content: [n=0] 
[10:22:58.413] List of 1
[10:22:58.413]  $ ...: list()
[10:22:58.413]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.413]  - attr(*, "where")=List of 1
[10:22:58.413]   ..$ ...:<environment: 0x5646f00abfa8> 
[10:22:58.413]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.413]  - attr(*, "resolved")= logi TRUE
[10:22:58.413]  - attr(*, "total_size")= num NA
[10:22:58.416]  - Getting '...' globals ... DONE
[10:22:58.416] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:58.416] List of 2
[10:22:58.416]  $ ...future.FUN:function (y)  
[10:22:58.416]  $ ...          : list()
[10:22:58.416]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.416]  - attr(*, "where")=List of 2
[10:22:58.416]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:58.416]   ..$ ...          :<environment: 0x5646f00abfa8> 
[10:22:58.416]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.416]  - attr(*, "resolved")= logi FALSE
[10:22:58.416]  - attr(*, "total_size")= num 280
[10:22:58.418] Packages to be attached in all futures: [n=0] 
[10:22:58.419] getGlobalsAndPackagesXApply() ... DONE
[10:22:58.419] Number of futures (= number of chunks): 2
[10:22:58.419] Launching 2 futures (chunks) ...
[10:22:58.419] Chunk #1 of 2 ...
[10:22:58.419]  - Finding globals in 'X' for chunk #1 ...
[10:22:58.419]    + additional globals found: [n=0] 
[10:22:58.419]    + additional namespaces needed: [n=0] 
[10:22:58.420]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:58.420]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:58.420]  - seeds: <none>
[10:22:58.420]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.437] Created future:
[10:22:58.437] MultisessionFuture:
[10:22:58.437] Label: ‘future_lapply-1’
[10:22:58.437] Expression:
[10:22:58.437] {
[10:22:58.437]     do.call(function(...) {
[10:22:58.437]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.437]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.437]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.437]             on.exit(options(oopts), add = TRUE)
[10:22:58.437]         }
[10:22:58.437]         {
[10:22:58.437]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.437]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.437]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.437]             })
[10:22:58.437]         }
[10:22:58.437]     }, args = future.call.arguments)
[10:22:58.437] }
[10:22:58.437] Lazy evaluation: FALSE
[10:22:58.437] Asynchronous evaluation: TRUE
[10:22:58.437] Local evaluation: TRUE
[10:22:58.437] Environment: 0x5646f00ac398
[10:22:58.437] Capture standard output: TRUE
[10:22:58.437] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.437] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:58.437] Packages: <none>
[10:22:58.437] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.437] Resolved: FALSE
[10:22:58.437] Value: <not collected>
[10:22:58.437] Conditions captured: <none>
[10:22:58.437] Early signaling: FALSE
[10:22:58.437] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.437] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.449] Chunk #1 of 2 ... DONE
[10:22:58.449] Chunk #2 of 2 ...
[10:22:58.449]  - Finding globals in 'X' for chunk #2 ...
[10:22:58.449]    + additional globals found: [n=0] 
[10:22:58.449]    + additional namespaces needed: [n=0] 
[10:22:58.449]  - Finding globals in 'X' for chunk #2 ... DONE
[10:22:58.450]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:58.450]  - seeds: <none>
[10:22:58.450]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.469] Created future:
[10:22:58.469] MultisessionFuture:
[10:22:58.469] Label: ‘future_lapply-2’
[10:22:58.469] Expression:
[10:22:58.469] {
[10:22:58.469]     do.call(function(...) {
[10:22:58.469]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.469]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.469]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.469]             on.exit(options(oopts), add = TRUE)
[10:22:58.469]         }
[10:22:58.469]         {
[10:22:58.469]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.469]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.469]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.469]             })
[10:22:58.469]         }
[10:22:58.469]     }, args = future.call.arguments)
[10:22:58.469] }
[10:22:58.469] Lazy evaluation: FALSE
[10:22:58.469] Asynchronous evaluation: TRUE
[10:22:58.469] Local evaluation: TRUE
[10:22:58.469] Environment: 0x5646f00ac398
[10:22:58.469] Capture standard output: TRUE
[10:22:58.469] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.469] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:58.469] Packages: <none>
[10:22:58.469] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.469] Resolved: FALSE
[10:22:58.469] Value: <not collected>
[10:22:58.469] Conditions captured: <none>
[10:22:58.469] Early signaling: FALSE
[10:22:58.469] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.469] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.481] Chunk #2 of 2 ... DONE
[10:22:58.481] Launching 2 futures (chunks) ... DONE
[10:22:58.481] Resolving 2 futures (chunks) ...
[10:22:58.524]  - Number of value chunks collected: 2
[10:22:58.525] Resolving 2 futures (chunks) ... DONE
[10:22:58.525] Reducing values from 2 chunks ...
[10:22:58.525]  - Number of values collected after concatenation: 2
[10:22:58.525]  - Number of values expected: 2
[10:22:58.525] Reducing values from 2 chunks ... DONE
[10:22:58.525] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[10:22:58.528] future_lapply() ...
[10:22:58.532] Number of chunks: 2
[10:22:58.532] getGlobalsAndPackagesXApply() ...
[10:22:58.532]  - future.globals: TRUE
[10:22:58.533] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[10:22:58.534] future_lapply() ...
[10:22:58.537] Number of chunks: 2
[10:22:58.537] getGlobalsAndPackagesXApply() ...
[10:22:58.537]  - future.globals: TRUE
[10:22:58.539]  - globals found/used: [n=1] ‘FUN’
[10:22:58.539]  - needed namespaces: [n=0] 
[10:22:58.539] Finding globals ... DONE
[10:22:58.539]  - use_args: TRUE
[10:22:58.539]  - Getting '...' globals ...
[10:22:58.540]    - '...' content: [n=0] 
[10:22:58.540] List of 1
[10:22:58.540]  $ ...: list()
[10:22:58.540]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.540]  - attr(*, "where")=List of 1
[10:22:58.540]   ..$ ...:<environment: 0x5646eed37de8> 
[10:22:58.540]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.540]  - attr(*, "resolved")= logi TRUE
[10:22:58.540]  - attr(*, "total_size")= num NA
[10:22:58.542]  - Getting '...' globals ... DONE
[10:22:58.543] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:58.543] List of 2
[10:22:58.543]  $ ...future.FUN:function (x)  
[10:22:58.543]  $ ...          : list()
[10:22:58.543]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.543]  - attr(*, "where")=List of 2
[10:22:58.543]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:58.543]   ..$ ...          :<environment: 0x5646eed37de8> 
[10:22:58.543]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.543]  - attr(*, "resolved")= logi FALSE
[10:22:58.543]  - attr(*, "total_size")= num 1840
[10:22:58.545] Packages to be attached in all futures: [n=0] 
[10:22:58.546] getGlobalsAndPackagesXApply() ... DONE
[10:22:58.546] Number of futures (= number of chunks): 2
[10:22:58.546] Launching 2 futures (chunks) ...
[10:22:58.546] Chunk #1 of 2 ...
[10:22:58.546]  - Finding globals in 'X' for chunk #1 ...
[10:22:58.546]    + additional globals found: [n=0] 
[10:22:58.546]    + additional namespaces needed: [n=0] 
[10:22:58.547]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:58.547]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:58.547]  - seeds: <none>
[10:22:58.547]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.566] Created future:
[10:22:58.566] MultisessionFuture:
[10:22:58.566] Label: ‘future_lapply-1’
[10:22:58.566] Expression:
[10:22:58.566] {
[10:22:58.566]     do.call(function(...) {
[10:22:58.566]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.566]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.566]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.566]             on.exit(options(oopts), add = TRUE)
[10:22:58.566]         }
[10:22:58.566]         {
[10:22:58.566]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.566]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.566]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.566]             })
[10:22:58.566]         }
[10:22:58.566]     }, args = future.call.arguments)
[10:22:58.566] }
[10:22:58.566] Lazy evaluation: FALSE
[10:22:58.566] Asynchronous evaluation: TRUE
[10:22:58.566] Local evaluation: TRUE
[10:22:58.566] Environment: R_GlobalEnv
[10:22:58.566] Capture standard output: TRUE
[10:22:58.566] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.566] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:58.566] Packages: <none>
[10:22:58.566] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.566] Resolved: FALSE
[10:22:58.566] Value: <not collected>
[10:22:58.566] Conditions captured: <none>
[10:22:58.566] Early signaling: FALSE
[10:22:58.566] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.566] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.578] Chunk #1 of 2 ... DONE
[10:22:58.578] Chunk #2 of 2 ...
[10:22:58.578]  - Finding globals in 'X' for chunk #2 ...
[10:22:58.578]    + additional globals found: [n=0] 
[10:22:58.578]    + additional namespaces needed: [n=0] 
[10:22:58.578]  - Finding globals in 'X' for chunk #2 ... DONE
[10:22:58.579]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[10:22:58.579]  - seeds: <none>
[10:22:58.579]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.595] Created future:
[10:22:58.595] MultisessionFuture:
[10:22:58.595] Label: ‘future_lapply-2’
[10:22:58.595] Expression:
[10:22:58.595] {
[10:22:58.595]     do.call(function(...) {
[10:22:58.595]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.595]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.595]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.595]             on.exit(options(oopts), add = TRUE)
[10:22:58.595]         }
[10:22:58.595]         {
[10:22:58.595]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.595]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.595]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.595]             })
[10:22:58.595]         }
[10:22:58.595]     }, args = future.call.arguments)
[10:22:58.595] }
[10:22:58.595] Lazy evaluation: FALSE
[10:22:58.595] Asynchronous evaluation: TRUE
[10:22:58.595] Local evaluation: TRUE
[10:22:58.595] Environment: R_GlobalEnv
[10:22:58.595] Capture standard output: TRUE
[10:22:58.595] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.595] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[10:22:58.595] Packages: <none>
[10:22:58.595] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.595] Resolved: FALSE
[10:22:58.595] Value: <not collected>
[10:22:58.595] Conditions captured: <none>
[10:22:58.595] Early signaling: FALSE
[10:22:58.595] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.595] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.607] Chunk #2 of 2 ... DONE
[10:22:58.607] Launching 2 futures (chunks) ... DONE
[10:22:58.607] Resolving 2 futures (chunks) ...
[10:22:58.643]  - Number of value chunks collected: 2
[10:22:58.643] Resolving 2 futures (chunks) ... DONE
[10:22:58.643] Reducing values from 2 chunks ...
[10:22:58.643]  - Number of values collected after concatenation: 10
[10:22:58.643]  - Number of values expected: 10
[10:22:58.643] Reducing values from 2 chunks ... DONE
[10:22:58.644] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[10:22:58.653] future_lapply() ...
[10:22:58.657] Number of chunks: 10
[10:22:58.657] getGlobalsAndPackagesXApply() ...
[10:22:58.657]  - future.globals: TRUE
[10:22:58.659]  - globals found/used: [n=1] ‘FUN’
[10:22:58.659]  - needed namespaces: [n=0] 
[10:22:58.659] Finding globals ... DONE
[10:22:58.659]  - use_args: TRUE
[10:22:58.659]  - Getting '...' globals ...
[10:22:58.660]    - '...' content: [n=0] 
[10:22:58.660] List of 1
[10:22:58.660]  $ ...: list()
[10:22:58.660]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.660]  - attr(*, "where")=List of 1
[10:22:58.660]   ..$ ...:<environment: 0x5646ef5ec418> 
[10:22:58.660]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.660]  - attr(*, "resolved")= logi TRUE
[10:22:58.660]  - attr(*, "total_size")= num NA
[10:22:58.662]  - Getting '...' globals ... DONE
[10:22:58.662] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:58.662] List of 2
[10:22:58.662]  $ ...future.FUN:function (x)  
[10:22:58.662]  $ ...          : list()
[10:22:58.662]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:58.662]  - attr(*, "where")=List of 2
[10:22:58.662]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:58.662]   ..$ ...          :<environment: 0x5646ef5ec418> 
[10:22:58.662]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:58.662]  - attr(*, "resolved")= logi FALSE
[10:22:58.662]  - attr(*, "total_size")= num 1840
[10:22:58.665] Packages to be attached in all futures: [n=0] 
[10:22:58.665] getGlobalsAndPackagesXApply() ... DONE
[10:22:58.665] Number of futures (= number of chunks): 10
[10:22:58.665] Launching 10 futures (chunks) ...
[10:22:58.666] Chunk #1 of 10 ...
[10:22:58.666]  - Finding globals in 'X' for chunk #1 ...
[10:22:58.666]    + additional globals found: [n=0] 
[10:22:58.666]    + additional namespaces needed: [n=0] 
[10:22:58.666]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:58.666]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:22:58.666]  - seeds: <none>
[10:22:58.667]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.686] Created future:
[10:22:58.686] MultisessionFuture:
[10:22:58.686] Label: ‘future_lapply-1’
[10:22:58.686] Expression:
[10:22:58.686] {
[10:22:58.686]     do.call(function(...) {
[10:22:58.686]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.686]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.686]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.686]             on.exit(options(oopts), add = TRUE)
[10:22:58.686]         }
[10:22:58.686]         {
[10:22:58.686]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.686]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.686]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.686]             })
[10:22:58.686]         }
[10:22:58.686]     }, args = future.call.arguments)
[10:22:58.686] }
[10:22:58.686] Lazy evaluation: FALSE
[10:22:58.686] Asynchronous evaluation: TRUE
[10:22:58.686] Local evaluation: TRUE
[10:22:58.686] Environment: R_GlobalEnv
[10:22:58.686] Capture standard output: TRUE
[10:22:58.686] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.686] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:58.686] Packages: <none>
[10:22:58.686] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.686] Resolved: FALSE
[10:22:58.686] Value: <not collected>
[10:22:58.686] Conditions captured: <none>
[10:22:58.686] Early signaling: FALSE
[10:22:58.686] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.686] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.697] Chunk #1 of 10 ... DONE
[10:22:58.697] Chunk #2 of 10 ...
[10:22:58.698]  - Finding globals in 'X' for chunk #2 ...
[10:22:58.698]    + additional globals found: [n=0] 
[10:22:58.698]    + additional namespaces needed: [n=0] 
[10:22:58.698]  - Finding globals in 'X' for chunk #2 ... DONE
[10:22:58.698]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:22:58.698]  - seeds: <none>
[10:22:58.698]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.715] Created future:
[10:22:58.715] MultisessionFuture:
[10:22:58.715] Label: ‘future_lapply-2’
[10:22:58.715] Expression:
[10:22:58.715] {
[10:22:58.715]     do.call(function(...) {
[10:22:58.715]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.715]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.715]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.715]             on.exit(options(oopts), add = TRUE)
[10:22:58.715]         }
[10:22:58.715]         {
[10:22:58.715]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.715]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.715]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.715]             })
[10:22:58.715]         }
[10:22:58.715]     }, args = future.call.arguments)
[10:22:58.715] }
[10:22:58.715] Lazy evaluation: FALSE
[10:22:58.715] Asynchronous evaluation: TRUE
[10:22:58.715] Local evaluation: TRUE
[10:22:58.715] Environment: R_GlobalEnv
[10:22:58.715] Capture standard output: TRUE
[10:22:58.715] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.715] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:58.715] Packages: <none>
[10:22:58.715] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.715] Resolved: FALSE
[10:22:58.715] Value: <not collected>
[10:22:58.715] Conditions captured: <none>
[10:22:58.715] Early signaling: FALSE
[10:22:58.715] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.715] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.727] Chunk #2 of 10 ... DONE
[10:22:58.727] Chunk #3 of 10 ...
[10:22:58.727]  - Finding globals in 'X' for chunk #3 ...
[10:22:58.727]    + additional globals found: [n=0] 
[10:22:58.727]    + additional namespaces needed: [n=0] 
[10:22:58.727]  - Finding globals in 'X' for chunk #3 ... DONE
[10:22:58.727]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:22:58.728]  - seeds: <none>
[10:22:58.728]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.756] Created future:
[10:22:58.756] MultisessionFuture:
[10:22:58.756] Label: ‘future_lapply-3’
[10:22:58.756] Expression:
[10:22:58.756] {
[10:22:58.756]     do.call(function(...) {
[10:22:58.756]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.756]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.756]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.756]             on.exit(options(oopts), add = TRUE)
[10:22:58.756]         }
[10:22:58.756]         {
[10:22:58.756]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.756]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.756]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.756]             })
[10:22:58.756]         }
[10:22:58.756]     }, args = future.call.arguments)
[10:22:58.756] }
[10:22:58.756] Lazy evaluation: FALSE
[10:22:58.756] Asynchronous evaluation: TRUE
[10:22:58.756] Local evaluation: TRUE
[10:22:58.756] Environment: R_GlobalEnv
[10:22:58.756] Capture standard output: TRUE
[10:22:58.756] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.756] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:58.756] Packages: <none>
[10:22:58.756] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.756] Resolved: FALSE
[10:22:58.756] Value: <not collected>
[10:22:58.756] Conditions captured: <none>
[10:22:58.756] Early signaling: FALSE
[10:22:58.756] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.756] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.767] Chunk #3 of 10 ... DONE
[10:22:58.767] Chunk #4 of 10 ...
[10:22:58.767]  - Finding globals in 'X' for chunk #4 ...
[10:22:58.768]    + additional globals found: [n=0] 
[10:22:58.768]    + additional namespaces needed: [n=0] 
[10:22:58.768]  - Finding globals in 'X' for chunk #4 ... DONE
[10:22:58.768]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:22:58.768]  - seeds: <none>
[10:22:58.768]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.807] Created future:
[10:22:58.807] MultisessionFuture:
[10:22:58.807] Label: ‘future_lapply-4’
[10:22:58.807] Expression:
[10:22:58.807] {
[10:22:58.807]     do.call(function(...) {
[10:22:58.807]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.807]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.807]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.807]             on.exit(options(oopts), add = TRUE)
[10:22:58.807]         }
[10:22:58.807]         {
[10:22:58.807]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.807]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.807]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.807]             })
[10:22:58.807]         }
[10:22:58.807]     }, args = future.call.arguments)
[10:22:58.807] }
[10:22:58.807] Lazy evaluation: FALSE
[10:22:58.807] Asynchronous evaluation: TRUE
[10:22:58.807] Local evaluation: TRUE
[10:22:58.807] Environment: R_GlobalEnv
[10:22:58.807] Capture standard output: TRUE
[10:22:58.807] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.807] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:58.807] Packages: <none>
[10:22:58.807] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.807] Resolved: FALSE
[10:22:58.807] Value: <not collected>
[10:22:58.807] Conditions captured: <none>
[10:22:58.807] Early signaling: FALSE
[10:22:58.807] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.807] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.818] Chunk #4 of 10 ... DONE
[10:22:58.819] Chunk #5 of 10 ...
[10:22:58.819]  - Finding globals in 'X' for chunk #5 ...
[10:22:58.819]    + additional globals found: [n=0] 
[10:22:58.819]    + additional namespaces needed: [n=0] 
[10:22:58.819]  - Finding globals in 'X' for chunk #5 ... DONE
[10:22:58.819]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:22:58.819]  - seeds: <none>
[10:22:58.820]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.847] Created future:
[10:22:58.847] MultisessionFuture:
[10:22:58.847] Label: ‘future_lapply-5’
[10:22:58.847] Expression:
[10:22:58.847] {
[10:22:58.847]     do.call(function(...) {
[10:22:58.847]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.847]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.847]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.847]             on.exit(options(oopts), add = TRUE)
[10:22:58.847]         }
[10:22:58.847]         {
[10:22:58.847]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.847]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.847]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.847]             })
[10:22:58.847]         }
[10:22:58.847]     }, args = future.call.arguments)
[10:22:58.847] }
[10:22:58.847] Lazy evaluation: FALSE
[10:22:58.847] Asynchronous evaluation: TRUE
[10:22:58.847] Local evaluation: TRUE
[10:22:58.847] Environment: R_GlobalEnv
[10:22:58.847] Capture standard output: TRUE
[10:22:58.847] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.847] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:58.847] Packages: <none>
[10:22:58.847] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.847] Resolved: FALSE
[10:22:58.847] Value: <not collected>
[10:22:58.847] Conditions captured: <none>
[10:22:58.847] Early signaling: FALSE
[10:22:58.847] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.847] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.859] Chunk #5 of 10 ... DONE
[10:22:58.859] Chunk #6 of 10 ...
[10:22:58.859]  - Finding globals in 'X' for chunk #6 ...
[10:22:58.859]    + additional globals found: [n=0] 
[10:22:58.859]    + additional namespaces needed: [n=0] 
[10:22:58.859]  - Finding globals in 'X' for chunk #6 ... DONE
[10:22:58.860]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:22:58.860]  - seeds: <none>
[10:22:58.860]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.888] Created future:
[10:22:58.888] MultisessionFuture:
[10:22:58.888] Label: ‘future_lapply-6’
[10:22:58.888] Expression:
[10:22:58.888] {
[10:22:58.888]     do.call(function(...) {
[10:22:58.888]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.888]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.888]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.888]             on.exit(options(oopts), add = TRUE)
[10:22:58.888]         }
[10:22:58.888]         {
[10:22:58.888]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.888]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.888]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.888]             })
[10:22:58.888]         }
[10:22:58.888]     }, args = future.call.arguments)
[10:22:58.888] }
[10:22:58.888] Lazy evaluation: FALSE
[10:22:58.888] Asynchronous evaluation: TRUE
[10:22:58.888] Local evaluation: TRUE
[10:22:58.888] Environment: R_GlobalEnv
[10:22:58.888] Capture standard output: TRUE
[10:22:58.888] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.888] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:58.888] Packages: <none>
[10:22:58.888] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.888] Resolved: FALSE
[10:22:58.888] Value: <not collected>
[10:22:58.888] Conditions captured: <none>
[10:22:58.888] Early signaling: FALSE
[10:22:58.888] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.888] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.899] Chunk #6 of 10 ... DONE
[10:22:58.899] Chunk #7 of 10 ...
[10:22:58.900]  - Finding globals in 'X' for chunk #7 ...
[10:22:58.900]    + additional globals found: [n=0] 
[10:22:58.900]    + additional namespaces needed: [n=0] 
[10:22:58.900]  - Finding globals in 'X' for chunk #7 ... DONE
[10:22:58.900]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:22:58.900]  - seeds: <none>
[10:22:58.900]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.928] Created future:
[10:22:58.928] MultisessionFuture:
[10:22:58.928] Label: ‘future_lapply-7’
[10:22:58.928] Expression:
[10:22:58.928] {
[10:22:58.928]     do.call(function(...) {
[10:22:58.928]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.928]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.928]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.928]             on.exit(options(oopts), add = TRUE)
[10:22:58.928]         }
[10:22:58.928]         {
[10:22:58.928]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.928]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.928]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.928]             })
[10:22:58.928]         }
[10:22:58.928]     }, args = future.call.arguments)
[10:22:58.928] }
[10:22:58.928] Lazy evaluation: FALSE
[10:22:58.928] Asynchronous evaluation: TRUE
[10:22:58.928] Local evaluation: TRUE
[10:22:58.928] Environment: R_GlobalEnv
[10:22:58.928] Capture standard output: TRUE
[10:22:58.928] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.928] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:58.928] Packages: <none>
[10:22:58.928] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.928] Resolved: FALSE
[10:22:58.928] Value: <not collected>
[10:22:58.928] Conditions captured: <none>
[10:22:58.928] Early signaling: FALSE
[10:22:58.928] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.928] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.940] Chunk #7 of 10 ... DONE
[10:22:58.940] Chunk #8 of 10 ...
[10:22:58.940]  - Finding globals in 'X' for chunk #8 ...
[10:22:58.940]    + additional globals found: [n=0] 
[10:22:58.940]    + additional namespaces needed: [n=0] 
[10:22:58.940]  - Finding globals in 'X' for chunk #8 ... DONE
[10:22:58.940]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:22:58.940]  - seeds: <none>
[10:22:58.941]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:58.968] Created future:
[10:22:58.969] MultisessionFuture:
[10:22:58.969] Label: ‘future_lapply-8’
[10:22:58.969] Expression:
[10:22:58.969] {
[10:22:58.969]     do.call(function(...) {
[10:22:58.969]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:58.969]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:58.969]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:58.969]             on.exit(options(oopts), add = TRUE)
[10:22:58.969]         }
[10:22:58.969]         {
[10:22:58.969]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:58.969]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:58.969]                 ...future.FUN(...future.X_jj, ...)
[10:22:58.969]             })
[10:22:58.969]         }
[10:22:58.969]     }, args = future.call.arguments)
[10:22:58.969] }
[10:22:58.969] Lazy evaluation: FALSE
[10:22:58.969] Asynchronous evaluation: TRUE
[10:22:58.969] Local evaluation: TRUE
[10:22:58.969] Environment: R_GlobalEnv
[10:22:58.969] Capture standard output: TRUE
[10:22:58.969] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:58.969] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:58.969] Packages: <none>
[10:22:58.969] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:58.969] Resolved: FALSE
[10:22:58.969] Value: <not collected>
[10:22:58.969] Conditions captured: <none>
[10:22:58.969] Early signaling: FALSE
[10:22:58.969] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:58.969] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:58.980] Chunk #8 of 10 ... DONE
[10:22:58.980] Chunk #9 of 10 ...
[10:22:58.981]  - Finding globals in 'X' for chunk #9 ...
[10:22:58.981]    + additional globals found: [n=0] 
[10:22:58.981]    + additional namespaces needed: [n=0] 
[10:22:58.981]  - Finding globals in 'X' for chunk #9 ... DONE
[10:22:58.981]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:22:58.981]  - seeds: <none>
[10:22:58.982]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:59.010] Created future:
[10:22:59.010] MultisessionFuture:
[10:22:59.010] Label: ‘future_lapply-9’
[10:22:59.010] Expression:
[10:22:59.010] {
[10:22:59.010]     do.call(function(...) {
[10:22:59.010]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:59.010]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:59.010]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:59.010]             on.exit(options(oopts), add = TRUE)
[10:22:59.010]         }
[10:22:59.010]         {
[10:22:59.010]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:59.010]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:59.010]                 ...future.FUN(...future.X_jj, ...)
[10:22:59.010]             })
[10:22:59.010]         }
[10:22:59.010]     }, args = future.call.arguments)
[10:22:59.010] }
[10:22:59.010] Lazy evaluation: FALSE
[10:22:59.010] Asynchronous evaluation: TRUE
[10:22:59.010] Local evaluation: TRUE
[10:22:59.010] Environment: R_GlobalEnv
[10:22:59.010] Capture standard output: TRUE
[10:22:59.010] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:59.010] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:59.010] Packages: <none>
[10:22:59.010] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:59.010] Resolved: FALSE
[10:22:59.010] Value: <not collected>
[10:22:59.010] Conditions captured: <none>
[10:22:59.010] Early signaling: FALSE
[10:22:59.010] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:59.010] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:59.022] Chunk #9 of 10 ... DONE
[10:22:59.022] Chunk #10 of 10 ...
[10:22:59.022]  - Finding globals in 'X' for chunk #10 ...
[10:22:59.024]    + additional globals found: [n=0] 
[10:22:59.024]    + additional namespaces needed: [n=0] 
[10:22:59.024]  - Finding globals in 'X' for chunk #10 ... DONE
[10:22:59.025]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[10:22:59.025]  - seeds: <none>
[10:22:59.025]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:59.053] Created future:
[10:22:59.053] MultisessionFuture:
[10:22:59.053] Label: ‘future_lapply-10’
[10:22:59.053] Expression:
[10:22:59.053] {
[10:22:59.053]     do.call(function(...) {
[10:22:59.053]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:59.053]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:59.053]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:59.053]             on.exit(options(oopts), add = TRUE)
[10:22:59.053]         }
[10:22:59.053]         {
[10:22:59.053]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:59.053]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:59.053]                 ...future.FUN(...future.X_jj, ...)
[10:22:59.053]             })
[10:22:59.053]         }
[10:22:59.053]     }, args = future.call.arguments)
[10:22:59.053] }
[10:22:59.053] Lazy evaluation: FALSE
[10:22:59.053] Asynchronous evaluation: TRUE
[10:22:59.053] Local evaluation: TRUE
[10:22:59.053] Environment: R_GlobalEnv
[10:22:59.053] Capture standard output: TRUE
[10:22:59.053] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:59.053] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:59.053] Packages: <none>
[10:22:59.053] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:59.053] Resolved: FALSE
[10:22:59.053] Value: <not collected>
[10:22:59.053] Conditions captured: <none>
[10:22:59.053] Early signaling: FALSE
[10:22:59.053] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:59.053] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:59.065] Chunk #10 of 10 ... DONE
[10:22:59.065] Launching 10 futures (chunks) ... DONE
[10:22:59.065] Resolving 10 futures (chunks) ...
[10:22:59.099]  - Number of value chunks collected: 10
[10:22:59.099] Resolving 10 futures (chunks) ... DONE
[10:22:59.100] Reducing values from 10 chunks ...
[10:22:59.100]  - Number of values collected after concatenation: 10
[10:22:59.100]  - Number of values expected: 10
[10:22:59.100] Reducing values from 10 chunks ... DONE
[10:22:59.100] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[10:22:59.104] future_lapply() ...
[10:22:59.108] Number of chunks: 5
[10:22:59.108] getGlobalsAndPackagesXApply() ...
[10:22:59.108]  - future.globals: TRUE
[10:22:59.109]  - globals found/used: [n=1] ‘FUN’
[10:22:59.110]  - needed namespaces: [n=0] 
[10:22:59.110] Finding globals ... DONE
[10:22:59.110]  - use_args: TRUE
[10:22:59.110]  - Getting '...' globals ...
[10:22:59.110]    - '...' content: [n=0] 
[10:22:59.110] List of 1
[10:22:59.110]  $ ...: list()
[10:22:59.110]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:59.110]  - attr(*, "where")=List of 1
[10:22:59.110]   ..$ ...:<environment: 0x5646ed8c2610> 
[10:22:59.110]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:59.110]  - attr(*, "resolved")= logi TRUE
[10:22:59.110]  - attr(*, "total_size")= num NA
[10:22:59.113]  - Getting '...' globals ... DONE
[10:22:59.113] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:59.113] List of 2
[10:22:59.113]  $ ...future.FUN:function (x)  
[10:22:59.113]  $ ...          : list()
[10:22:59.113]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:59.113]  - attr(*, "where")=List of 2
[10:22:59.113]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:59.113]   ..$ ...          :<environment: 0x5646ed8c2610> 
[10:22:59.113]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:59.113]  - attr(*, "resolved")= logi FALSE
[10:22:59.113]  - attr(*, "total_size")= num 1840
[10:22:59.116] Packages to be attached in all futures: [n=0] 
[10:22:59.116] getGlobalsAndPackagesXApply() ... DONE
[10:22:59.116] Number of futures (= number of chunks): 5
[10:22:59.116] Launching 5 futures (chunks) ...
[10:22:59.116] Chunk #1 of 5 ...
[10:22:59.116]  - Finding globals in 'X' for chunk #1 ...
[10:22:59.117]    + additional globals found: [n=0] 
[10:22:59.117]    + additional namespaces needed: [n=0] 
[10:22:59.117]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:59.117]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[10:22:59.117]  - seeds: <none>
[10:22:59.117]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:59.134] Created future:
[10:22:59.134] MultisessionFuture:
[10:22:59.134] Label: ‘future_lapply-1’
[10:22:59.134] Expression:
[10:22:59.134] {
[10:22:59.134]     do.call(function(...) {
[10:22:59.134]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:59.134]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:59.134]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:59.134]             on.exit(options(oopts), add = TRUE)
[10:22:59.134]         }
[10:22:59.134]         {
[10:22:59.134]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:59.134]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:59.134]                 ...future.FUN(...future.X_jj, ...)
[10:22:59.134]             })
[10:22:59.134]         }
[10:22:59.134]     }, args = future.call.arguments)
[10:22:59.134] }
[10:22:59.134] Lazy evaluation: FALSE
[10:22:59.134] Asynchronous evaluation: TRUE
[10:22:59.134] Local evaluation: TRUE
[10:22:59.134] Environment: R_GlobalEnv
[10:22:59.134] Capture standard output: TRUE
[10:22:59.134] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:59.134] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:59.134] Packages: <none>
[10:22:59.134] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:59.134] Resolved: FALSE
[10:22:59.134] Value: <not collected>
[10:22:59.134] Conditions captured: <none>
[10:22:59.134] Early signaling: FALSE
[10:22:59.134] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:59.134] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:59.146] Chunk #1 of 5 ... DONE
[10:22:59.146] Chunk #2 of 5 ...
[10:22:59.146]  - Finding globals in 'X' for chunk #2 ...
[10:22:59.146]    + additional globals found: [n=0] 
[10:22:59.147]    + additional namespaces needed: [n=0] 
[10:22:59.147]  - Finding globals in 'X' for chunk #2 ... DONE
[10:22:59.147]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[10:22:59.147]  - seeds: <none>
[10:22:59.147]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:59.163] Created future:
[10:22:59.163] MultisessionFuture:
[10:22:59.163] Label: ‘future_lapply-2’
[10:22:59.163] Expression:
[10:22:59.163] {
[10:22:59.163]     do.call(function(...) {
[10:22:59.163]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:59.163]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:59.163]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:59.163]             on.exit(options(oopts), add = TRUE)
[10:22:59.163]         }
[10:22:59.163]         {
[10:22:59.163]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:59.163]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:59.163]                 ...future.FUN(...future.X_jj, ...)
[10:22:59.163]             })
[10:22:59.163]         }
[10:22:59.163]     }, args = future.call.arguments)
[10:22:59.163] }
[10:22:59.163] Lazy evaluation: FALSE
[10:22:59.163] Asynchronous evaluation: TRUE
[10:22:59.163] Local evaluation: TRUE
[10:22:59.163] Environment: R_GlobalEnv
[10:22:59.163] Capture standard output: TRUE
[10:22:59.163] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:59.163] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:59.163] Packages: <none>
[10:22:59.163] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:59.163] Resolved: FALSE
[10:22:59.163] Value: <not collected>
[10:22:59.163] Conditions captured: <none>
[10:22:59.163] Early signaling: FALSE
[10:22:59.163] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:59.163] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:59.175] Chunk #2 of 5 ... DONE
[10:22:59.175] Chunk #3 of 5 ...
[10:22:59.175]  - Finding globals in 'X' for chunk #3 ...
[10:22:59.175]    + additional globals found: [n=0] 
[10:22:59.175]    + additional namespaces needed: [n=0] 
[10:22:59.175]  - Finding globals in 'X' for chunk #3 ... DONE
[10:22:59.175]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[10:22:59.176]  - seeds: <none>
[10:22:59.176]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:59.205] Created future:
[10:22:59.205] MultisessionFuture:
[10:22:59.205] Label: ‘future_lapply-3’
[10:22:59.205] Expression:
[10:22:59.205] {
[10:22:59.205]     do.call(function(...) {
[10:22:59.205]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:59.205]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:59.205]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:59.205]             on.exit(options(oopts), add = TRUE)
[10:22:59.205]         }
[10:22:59.205]         {
[10:22:59.205]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:59.205]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:59.205]                 ...future.FUN(...future.X_jj, ...)
[10:22:59.205]             })
[10:22:59.205]         }
[10:22:59.205]     }, args = future.call.arguments)
[10:22:59.205] }
[10:22:59.205] Lazy evaluation: FALSE
[10:22:59.205] Asynchronous evaluation: TRUE
[10:22:59.205] Local evaluation: TRUE
[10:22:59.205] Environment: R_GlobalEnv
[10:22:59.205] Capture standard output: TRUE
[10:22:59.205] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:59.205] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:59.205] Packages: <none>
[10:22:59.205] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:59.205] Resolved: FALSE
[10:22:59.205] Value: <not collected>
[10:22:59.205] Conditions captured: <none>
[10:22:59.205] Early signaling: FALSE
[10:22:59.205] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:59.205] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:59.217] Chunk #3 of 5 ... DONE
[10:22:59.217] Chunk #4 of 5 ...
[10:22:59.217]  - Finding globals in 'X' for chunk #4 ...
[10:22:59.217]    + additional globals found: [n=0] 
[10:22:59.217]    + additional namespaces needed: [n=0] 
[10:22:59.218]  - Finding globals in 'X' for chunk #4 ... DONE
[10:22:59.218]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[10:22:59.218]  - seeds: <none>
[10:22:59.218]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:59.245] Created future:
[10:22:59.246] MultisessionFuture:
[10:22:59.246] Label: ‘future_lapply-4’
[10:22:59.246] Expression:
[10:22:59.246] {
[10:22:59.246]     do.call(function(...) {
[10:22:59.246]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:59.246]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:59.246]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:59.246]             on.exit(options(oopts), add = TRUE)
[10:22:59.246]         }
[10:22:59.246]         {
[10:22:59.246]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:59.246]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:59.246]                 ...future.FUN(...future.X_jj, ...)
[10:22:59.246]             })
[10:22:59.246]         }
[10:22:59.246]     }, args = future.call.arguments)
[10:22:59.246] }
[10:22:59.246] Lazy evaluation: FALSE
[10:22:59.246] Asynchronous evaluation: TRUE
[10:22:59.246] Local evaluation: TRUE
[10:22:59.246] Environment: R_GlobalEnv
[10:22:59.246] Capture standard output: TRUE
[10:22:59.246] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:59.246] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:59.246] Packages: <none>
[10:22:59.246] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:59.246] Resolved: FALSE
[10:22:59.246] Value: <not collected>
[10:22:59.246] Conditions captured: <none>
[10:22:59.246] Early signaling: FALSE
[10:22:59.246] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:59.246] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:59.257] Chunk #4 of 5 ... DONE
[10:22:59.257] Chunk #5 of 5 ...
[10:22:59.257]  - Finding globals in 'X' for chunk #5 ...
[10:22:59.258]    + additional globals found: [n=0] 
[10:22:59.258]    + additional namespaces needed: [n=0] 
[10:22:59.258]  - Finding globals in 'X' for chunk #5 ... DONE
[10:22:59.258]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[10:22:59.258]  - seeds: <none>
[10:22:59.258]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:59.285] Created future:
[10:22:59.286] MultisessionFuture:
[10:22:59.286] Label: ‘future_lapply-5’
[10:22:59.286] Expression:
[10:22:59.286] {
[10:22:59.286]     do.call(function(...) {
[10:22:59.286]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:59.286]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:59.286]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:59.286]             on.exit(options(oopts), add = TRUE)
[10:22:59.286]         }
[10:22:59.286]         {
[10:22:59.286]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:59.286]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:59.286]                 ...future.FUN(...future.X_jj, ...)
[10:22:59.286]             })
[10:22:59.286]         }
[10:22:59.286]     }, args = future.call.arguments)
[10:22:59.286] }
[10:22:59.286] Lazy evaluation: FALSE
[10:22:59.286] Asynchronous evaluation: TRUE
[10:22:59.286] Local evaluation: TRUE
[10:22:59.286] Environment: R_GlobalEnv
[10:22:59.286] Capture standard output: TRUE
[10:22:59.286] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:59.286] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:59.286] Packages: <none>
[10:22:59.286] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:59.286] Resolved: FALSE
[10:22:59.286] Value: <not collected>
[10:22:59.286] Conditions captured: <none>
[10:22:59.286] Early signaling: FALSE
[10:22:59.286] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:59.286] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:59.297] Chunk #5 of 5 ... DONE
[10:22:59.297] Launching 5 futures (chunks) ... DONE
[10:22:59.297] Resolving 5 futures (chunks) ...
[10:22:59.341]  - Number of value chunks collected: 5
[10:22:59.341] Resolving 5 futures (chunks) ... DONE
[10:22:59.341] Reducing values from 5 chunks ...
[10:22:59.341]  - Number of values collected after concatenation: 10
[10:22:59.341]  - Number of values expected: 10
[10:22:59.341] Reducing values from 5 chunks ... DONE
[10:22:59.341] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[10:22:59.345] future_lapply() ...
[10:22:59.349] Number of chunks: 2
[10:22:59.349] getGlobalsAndPackagesXApply() ...
[10:22:59.349]  - future.globals: TRUE
[10:22:59.351]  - globals found/used: [n=1] ‘FUN’
[10:22:59.351]  - needed namespaces: [n=0] 
[10:22:59.351] Finding globals ... DONE
[10:22:59.351]  - use_args: TRUE
[10:22:59.352]  - Getting '...' globals ...
[10:22:59.352]    - '...' content: [n=0] 
[10:22:59.352] List of 1
[10:22:59.352]  $ ...: list()
[10:22:59.352]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:59.352]  - attr(*, "where")=List of 1
[10:22:59.352]   ..$ ...:<environment: 0x5646f02b5db8> 
[10:22:59.352]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:59.352]  - attr(*, "resolved")= logi TRUE
[10:22:59.352]  - attr(*, "total_size")= num NA
[10:22:59.354]  - Getting '...' globals ... DONE
[10:22:59.355] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:59.355] List of 2
[10:22:59.355]  $ ...future.FUN:function (x)  
[10:22:59.355]  $ ...          : list()
[10:22:59.355]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:59.355]  - attr(*, "where")=List of 2
[10:22:59.355]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:59.355]   ..$ ...          :<environment: 0x5646f02b5db8> 
[10:22:59.355]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:59.355]  - attr(*, "resolved")= logi FALSE
[10:22:59.355]  - attr(*, "total_size")= num 1840
[10:22:59.357] Packages to be attached in all futures: [n=0] 
[10:22:59.358] getGlobalsAndPackagesXApply() ... DONE
[10:22:59.358] Number of futures (= number of chunks): 2
[10:22:59.358] Launching 2 futures (chunks) ...
[10:22:59.358] Chunk #1 of 2 ...
[10:22:59.358]  - Finding globals in 'X' for chunk #1 ...
[10:22:59.358]    + additional globals found: [n=0] 
[10:22:59.358]    + additional namespaces needed: [n=0] 
[10:22:59.359]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:59.359]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[10:22:59.359]  - seeds: <none>
[10:22:59.359]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:59.376] Created future:
[10:22:59.376] MultisessionFuture:
[10:22:59.376] Label: ‘future_lapply-1’
[10:22:59.376] Expression:
[10:22:59.376] {
[10:22:59.376]     do.call(function(...) {
[10:22:59.376]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:59.376]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:59.376]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:59.376]             on.exit(options(oopts), add = TRUE)
[10:22:59.376]         }
[10:22:59.376]         {
[10:22:59.376]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:59.376]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:59.376]                 ...future.FUN(...future.X_jj, ...)
[10:22:59.376]             })
[10:22:59.376]         }
[10:22:59.376]     }, args = future.call.arguments)
[10:22:59.376] }
[10:22:59.376] Lazy evaluation: FALSE
[10:22:59.376] Asynchronous evaluation: TRUE
[10:22:59.376] Local evaluation: TRUE
[10:22:59.376] Environment: R_GlobalEnv
[10:22:59.376] Capture standard output: TRUE
[10:22:59.376] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:59.376] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:59.376] Packages: <none>
[10:22:59.376] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:59.376] Resolved: FALSE
[10:22:59.376] Value: <not collected>
[10:22:59.376] Conditions captured: <none>
[10:22:59.376] Early signaling: FALSE
[10:22:59.376] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:59.376] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:59.387] Chunk #1 of 2 ... DONE
[10:22:59.387] Chunk #2 of 2 ...
[10:22:59.388]  - Finding globals in 'X' for chunk #2 ...
[10:22:59.388]    + additional globals found: [n=0] 
[10:22:59.388]    + additional namespaces needed: [n=0] 
[10:22:59.388]  - Finding globals in 'X' for chunk #2 ... DONE
[10:22:59.388]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[10:22:59.388]  - seeds: <none>
[10:22:59.388]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:59.407] Created future:
[10:22:59.408] MultisessionFuture:
[10:22:59.408] Label: ‘future_lapply-2’
[10:22:59.408] Expression:
[10:22:59.408] {
[10:22:59.408]     do.call(function(...) {
[10:22:59.408]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:59.408]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:59.408]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:59.408]             on.exit(options(oopts), add = TRUE)
[10:22:59.408]         }
[10:22:59.408]         {
[10:22:59.408]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:59.408]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:59.408]                 ...future.FUN(...future.X_jj, ...)
[10:22:59.408]             })
[10:22:59.408]         }
[10:22:59.408]     }, args = future.call.arguments)
[10:22:59.408] }
[10:22:59.408] Lazy evaluation: FALSE
[10:22:59.408] Asynchronous evaluation: TRUE
[10:22:59.408] Local evaluation: TRUE
[10:22:59.408] Environment: R_GlobalEnv
[10:22:59.408] Capture standard output: TRUE
[10:22:59.408] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:59.408] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:59.408] Packages: <none>
[10:22:59.408] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:59.408] Resolved: FALSE
[10:22:59.408] Value: <not collected>
[10:22:59.408] Conditions captured: <none>
[10:22:59.408] Early signaling: FALSE
[10:22:59.408] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:59.408] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:59.419] Chunk #2 of 2 ... DONE
[10:22:59.419] Launching 2 futures (chunks) ... DONE
[10:22:59.419] Resolving 2 futures (chunks) ...
[10:22:59.464]  - Number of value chunks collected: 2
[10:22:59.465] Resolving 2 futures (chunks) ... DONE
[10:22:59.465] Reducing values from 2 chunks ...
[10:22:59.465]  - Number of values collected after concatenation: 10
[10:22:59.465]  - Number of values expected: 10
[10:22:59.465] Reducing values from 2 chunks ... DONE
[10:22:59.465] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[10:22:59.469] future_lapply() ...
[10:22:59.472] Number of chunks: 1
[10:22:59.472] getGlobalsAndPackagesXApply() ...
[10:22:59.472]  - future.globals: TRUE
[10:22:59.474]  - globals found/used: [n=1] ‘FUN’
[10:22:59.474]  - needed namespaces: [n=0] 
[10:22:59.474] Finding globals ... DONE
[10:22:59.474]  - use_args: TRUE
[10:22:59.475]  - Getting '...' globals ...
[10:22:59.475]    - '...' content: [n=0] 
[10:22:59.475] List of 1
[10:22:59.475]  $ ...: list()
[10:22:59.475]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:59.475]  - attr(*, "where")=List of 1
[10:22:59.475]   ..$ ...:<environment: 0x5646eed518f8> 
[10:22:59.475]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:59.475]  - attr(*, "resolved")= logi TRUE
[10:22:59.475]  - attr(*, "total_size")= num NA
[10:22:59.477]  - Getting '...' globals ... DONE
[10:22:59.478] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:59.478] List of 2
[10:22:59.478]  $ ...future.FUN:function (x)  
[10:22:59.478]  $ ...          : list()
[10:22:59.478]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:59.478]  - attr(*, "where")=List of 2
[10:22:59.478]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:59.478]   ..$ ...          :<environment: 0x5646eed518f8> 
[10:22:59.478]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:59.478]  - attr(*, "resolved")= logi FALSE
[10:22:59.478]  - attr(*, "total_size")= num 1840
[10:22:59.480] Packages to be attached in all futures: [n=0] 
[10:22:59.480] getGlobalsAndPackagesXApply() ... DONE
[10:22:59.481] Number of futures (= number of chunks): 1
[10:22:59.481] Launching 1 futures (chunks) ...
[10:22:59.481] Chunk #1 of 1 ...
[10:22:59.481]  - Finding globals in 'X' for chunk #1 ...
[10:22:59.481]    + additional globals found: [n=0] 
[10:22:59.481]    + additional namespaces needed: [n=0] 
[10:22:59.482]  - Finding globals in 'X' for chunk #1 ... DONE
[10:22:59.482]  - seeds: <none>
[10:22:59.482]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[10:22:59.499] Created future:
[10:22:59.499] MultisessionFuture:
[10:22:59.499] Label: ‘future_lapply-1’
[10:22:59.499] Expression:
[10:22:59.499] {
[10:22:59.499]     do.call(function(...) {
[10:22:59.499]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[10:22:59.499]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[10:22:59.499]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[10:22:59.499]             on.exit(options(oopts), add = TRUE)
[10:22:59.499]         }
[10:22:59.499]         {
[10:22:59.499]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[10:22:59.499]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[10:22:59.499]                 ...future.FUN(...future.X_jj, ...)
[10:22:59.499]             })
[10:22:59.499]         }
[10:22:59.499]     }, args = future.call.arguments)
[10:22:59.499] }
[10:22:59.499] Lazy evaluation: FALSE
[10:22:59.499] Asynchronous evaluation: TRUE
[10:22:59.499] Local evaluation: TRUE
[10:22:59.499] Environment: R_GlobalEnv
[10:22:59.499] Capture standard output: TRUE
[10:22:59.499] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[10:22:59.499] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[10:22:59.499] Packages: <none>
[10:22:59.499] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[10:22:59.499] Resolved: FALSE
[10:22:59.499] Value: <not collected>
[10:22:59.499] Conditions captured: <none>
[10:22:59.499] Early signaling: FALSE
[10:22:59.499] Owner process: f428dd1b-3da3-6ca0-a891-f534f71a1bc7
[10:22:59.499] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[10:22:59.511] Chunk #1 of 1 ... DONE
[10:22:59.511] Launching 1 futures (chunks) ... DONE
[10:22:59.511] Resolving 1 futures (chunks) ...
[10:22:59.553]  - Number of value chunks collected: 1
[10:22:59.553] Resolving 1 futures (chunks) ... DONE
[10:22:59.553] Reducing values from 1 chunks ...
[10:22:59.553]  - Number of values collected after concatenation: 10
[10:22:59.553]  - Number of values expected: 10
[10:22:59.553] Reducing values from 1 chunks ... DONE
[10:22:59.554] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[10:22:59.557] future_lapply() ...
[10:22:59.561] Number of chunks: 1
[10:22:59.561] getGlobalsAndPackagesXApply() ...
[10:22:59.561] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[10:22:59.561] future_lapply() ...
[10:22:59.565] Number of chunks: 1
[10:22:59.565] getGlobalsAndPackagesXApply() ...
[10:22:59.565]  - future.globals: <name-value list> with names ‘1’
[10:22:59.565] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[10:22:59.565] future_lapply() ...
[10:22:59.568] Number of chunks: 1
[10:22:59.569] getGlobalsAndPackagesXApply() ...
[10:22:59.569]  - future.globals: ‘...future.FUN’
[10:22:59.569]  - use_args: TRUE
[10:22:59.569] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[10:22:59.569] future_lapply() ...
[10:22:59.572] Number of chunks: 1
[10:22:59.573] getGlobalsAndPackagesXApply() ...
[10:22:59.573]  - future.globals: ‘...future.FUN’
[10:22:59.573]  - use_args: TRUE
[10:22:59.573] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[10:22:59.573] future_lapply() ...
[10:22:59.579] Number of chunks: 1
[10:22:59.579] getGlobalsAndPackagesXApply() ...
[10:22:59.579]  - future.globals: TRUE
[10:22:59.581]  - globals found/used: [n=1] ‘FUN’
[10:22:59.581]  - needed namespaces: [n=0] 
[10:22:59.581] Finding globals ... DONE
[10:22:59.581]  - use_args: TRUE
[10:22:59.581]  - Getting '...' globals ...
[10:22:59.581]    - '...' content: [n=0] 
[10:22:59.581] List of 1
[10:22:59.581]  $ ...: list()
[10:22:59.581]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:59.581]  - attr(*, "where")=List of 1
[10:22:59.581]   ..$ ...:<environment: 0x5646f080ea88> 
[10:22:59.581]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:59.581]  - attr(*, "resolved")= logi TRUE
[10:22:59.581]  - attr(*, "total_size")= num NA
[10:22:59.584]  - Getting '...' globals ... DONE
[10:22:59.584] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[10:22:59.584] List of 2
[10:22:59.584]  $ ...future.FUN:function (f)  
[10:22:59.584]  $ ...          : list()
[10:22:59.584]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[10:22:59.584]  - attr(*, "where")=List of 2
[10:22:59.584]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[10:22:59.584]   ..$ ...          :<environment: 0x5646f080ea88> 
[10:22:59.584]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[10:22:59.584]  - attr(*, "resolved")= logi FALSE
[10:22:59.584]  - attr(*, "total_size")= num 336
[10:22:59.587] Packages to be attached in all futures: [n=0] 
[10:22:59.587] getGlobalsAndPackagesXApply() ... DONE
[10:22:59.587] Number of futures (= number of chunks): 1
[10:22:59.587] Launching 1 futures (chunks) ...
[10:22:59.587] Chunk #1 of 1 ...
[10:22:59.587]  - Finding globals in 'X' for chunk #1 ...
[10:22:59.589]    + additional globals found: [n=1] ‘...future.elements_ii’
[10:22:59.589]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
