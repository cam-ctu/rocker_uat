
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
[16:04:01.478] plan(): Setting new future strategy stack:
[16:04:01.479] List of future strategies:
[16:04:01.479] 1. sequential:
[16:04:01.479]    - args: function (..., envir = parent.frame())
[16:04:01.479]    - tweaked: FALSE
[16:04:01.479]    - call: future::plan("sequential")
[16:04:01.493] plan(): nbrOfWorkers() = 1
> library("listenv")
> options(future.debug = FALSE)
> 
> ## IMPORTANT: Since we're killing parallel workers, some of them will not
> ## get a chance to clean up their R temporary folders.  Here we configuring
> ## them to use temporary folders with this R process temporary folder.
> ## This way they'll be removed when this R process terminates
> Sys.setenv(TMPDIR = tempdir())
> 
> message("*** cluster() - terminating worker ...")
*** cluster() - terminating worker ...
> 
> message("Library paths: ", paste(sQuote(.libPaths()), collapse = ", "))
Library paths: ‘/usr/local/lib/R/site-library’, ‘/usr/local/lib/R/library’
> message("Package path: ", sQuote(system.file(package = "future")))
Package path: ‘/usr/local/lib/R/site-library/future’
> message("TMPDIR for parallel workers: ", sQuote(Sys.getenv("TMPDIR")))
TMPDIR for parallel workers: ‘/tmp/Rtmpgadlk6’
> 
> types <- "PSOCK"
> 
> ## Speed up CRAN checks: Skip on CRAN Windows 32-bit
> if (isWin32) types <- NULL
> 
> if (supportsMulticore()) types <- c(types, "FORK")
> 
> pid <- Sys.getpid()
> message("Main PID (original): ", pid)
Main PID (original): 80183
> cl <- NULL
> for (type in types) {
+   message(sprintf("Cluster type %s ...", sQuote(type)))
+   
+   cl <- parallel::makeCluster(1L, type = type, timeout = 60)
+   print(cl)
+ 
+   ## Crashing FORK:ed processes seems too harsh on R (< 3.3.0)
+   if (type != "FORK" || getRversion() >= "3.3.0") {
+   message("*** cluster() - crashed worker ...")
+   
+   plan(cluster, workers = cl, .skip = FALSE)
+   x %<-% 42L
+   stopifnot(x == 42L)
+   
+   ## Force R worker to terminate
+   ## It's not safe to use quit() here when using type = "FORK" [1]
+   ## [1] https://stat.ethz.ch/pipermail/r-devel/2021-August/080995.html
+   x %<-% tools::pskill(pid = Sys.getpid())
+   res <- tryCatch(y <- x, error = identity)
+   print(res)
+   stopifnot(
+     inherits(res, "error"),
+     inherits(res, "FutureError")
+   )
+ 
+   ## Cleanup
+   print(cl)
+   ## FIXME: Why doesn't this work here? It causes the below future to stall.
+   # parallel::stopCluster(cl)
+ 
+   ## Verify that the reset worked
+   cl <- parallel::makeCluster(1L, type = type, timeout = 60)
+   print(cl)
+   plan(cluster, workers = cl, .skip = FALSE)
+   x %<-% 43L
+   stopifnot(x == 43L)
+   
+   message("*** cluster() - crashed worker ... DONE")
+   } ## if (type != "FORK" || getRversion() >= "3.3.0")
+ 
+   ## Sanity checks
+   pid2 <- Sys.getpid()
+   message("Main PID (original): ", pid)
+   message("Main PID: ", pid2)
+   stopifnot(pid2 == pid)
+   
+   ## Cleanup
+   print(cl)
+   str(cl)
+   parallel::stopCluster(cl)
+ 
+   ## Sanity checks
+   pid2 <- Sys.getpid()
+   message("Main PID (original): ", pid)
+   message("Main PID: ", pid2)
+   stopifnot(pid2 == pid)
+ 
+   message(sprintf("Cluster type %s ... DONE", sQuote(type)))
+ } ## for (type ...)
Cluster type ‘PSOCK’ ...
socket cluster with 1 nodes on host ‘localhost’
*** cluster() - crashed worker ...
<FutureError in unserialize(node$con): ClusterFuture (<none>) failed to receive message results from cluster SOCKnode #1 (on ‘localhost’). The reason reported was ‘error reading from connection’>


Future UUID: b39cd3c4-7db3-ea04-e67e-33bb55e084a8


DEBUG: BEGIN TROUBLESHOOTING HELP
Future involved:
ClusterFuture:
Label: ‘<none>’
Expression:
tools::pskill(pid = Sys.getpid())
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c50ff151-9e3c-3ea2-fed4-3830c2b8e20f
Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’

DEBUG: END TROUBLESHOOTING HELP
socket cluster with 1 nodes on host ‘localhost’
socket cluster with 1 nodes on host ‘localhost’
*** cluster() - crashed worker ... DONE
Main PID (original): 80183
Main PID: 80183
socket cluster with 1 nodes on host ‘localhost’
List of 1
 $ :List of 3
  ..$ con : 'sockconn' int 5
  .. ..- attr(*, "conn_id")=<externalptr> 
  ..$ host: chr "localhost"
  ..$ rank: num 0
  ..- attr(*, "class")= chr "SOCKnode"
 - attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
Main PID (original): 80183
Main PID: 80183
Cluster type ‘PSOCK’ ... DONE
Cluster type ‘FORK’ ...
socket cluster with 1 nodes on host ‘localhost’
*** cluster() - crashed worker ...
<FutureError in unserialize(node$con): ClusterFuture (<none>) failed to receive message results from cluster forknode #1 (on ‘localhost’). The reason reported was ‘error reading from connection’>


Future UUID: 248828c9-4a5e-d5bc-bf40-61c1acebe7f5


DEBUG: BEGIN TROUBLESHOOTING HELP
Future involved:
ClusterFuture:
Label: ‘<none>’
Expression:
tools::pskill(pid = Sys.getpid())
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c50ff151-9e3c-3ea2-fed4-3830c2b8e20f
Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’

DEBUG: END TROUBLESHOOTING HELP
socket cluster with 1 nodes on host ‘localhost’
socket cluster with 1 nodes on host ‘localhost’
*** cluster() - crashed worker ... DONE
Main PID (original): 80183
Main PID: 80183
socket cluster with 1 nodes on host ‘localhost’
List of 1
 $ :List of 3
  ..$ con : 'sockconn' int 6
  .. ..- attr(*, "conn_id")=<externalptr> 
  ..$ host: chr "localhost"
  ..$ rank: int 1
  ..- attr(*, "class")= chr [1:2] "forknode" "SOCK0node"
 - attr(*, "class")= chr [1:2] "SOCKcluster" "cluster"
Main PID (original): 80183
Main PID: 80183
Cluster type ‘FORK’ ... DONE
> 
> message("*** cluster() - terminating worker ... DONE")
*** cluster() - terminating worker ... DONE
> 
> ## Sanity checks
> pid2 <- Sys.getpid()
> message("Main PID (original): ", pid)
Main PID (original): 80183
> message("Main PID: ", pid2)
Main PID: 80183
> stopifnot(pid2 == pid)
> 
> source("incl/end.R")
> 
