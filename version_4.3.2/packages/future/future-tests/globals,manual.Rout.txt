
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
[16:04:52.697] plan(): Setting new future strategy stack:
[16:04:52.697] List of future strategies:
[16:04:52.697] 1. sequential:
[16:04:52.697]    - args: function (..., envir = parent.frame())
[16:04:52.697]    - tweaked: FALSE
[16:04:52.697]    - call: future::plan("sequential")
[16:04:52.712] plan(): nbrOfWorkers() = 1
> options(future.debug=FALSE)
> 
> message("*** getGlobalsAndPackages() ...")
*** getGlobalsAndPackages() ...
> 
> FutureGlobals <- future:::FutureGlobals
> 
> globals <- structure(list(a = 1), where = list(a = globalenv()))
> globals <- FutureGlobals(globals, resolved = TRUE)
> gp <- getGlobalsAndPackages(expression(), globals = globals)
> 
> message("- getGlobalsAndPackages() - exception ...")
- getGlobalsAndPackages() - exception ...
> 
> res <- tryCatch({
+   gp <- getGlobalsAndPackages(expression(), globals = 42)
+ }, error = identity)
> stopifnot(inherits(res, "error"))
> 
> message("*** getGlobalsAndPackages() - ... DONE")
*** getGlobalsAndPackages() - ... DONE
> 
> message("*** Globals - manually ...")
*** Globals - manually ...
> 
> message("*** Globals manually specified as named list ...")
*** Globals manually specified as named list ...
> 
> globals <- list(
+   a = 1,
+   b = 2,
+   sumtwo = function(x) x[a] + x[b]
+ )
> 
> ## Assign 'globals' globally
> attachLocally(globals)
> 
> ## Truth
> v0 <- local({
+   x <- 1:10
+   sumtwo(a + b * x)
+ })
> 
> 
> message("*** Globals & packages - automatic ...")
*** Globals & packages - automatic ...
> 
> for (strategy in supportedStrategies()) {
+   message(sprintf("- Strategy: %s ...", strategy))
+   
+   plan(strategy)
+ 
+   message("- Globals - automatic ...")
+ 
+   attachLocally(globals)
+   f <- future({
+     x <- 1:10
+     sumtwo(a + b * x)
+   }, globals = TRUE)
+   print(f)
+   rm(list = names(globals))
+   y <- value(f)
+   print(y)
+   stopifnot(all.equal(y, v0))
+ 
+   attachLocally(globals)
+   f <- futureAssign("y", {
+     x <- 1:10
+     sumtwo(a + b * x)
+   }, globals = TRUE)
+   print(f)
+   rm(list = names(globals))
+   z <- value(f)
+   print(z)
+   stopifnot(all.equal(z, y), all.equal(y, v0))
+   
+   attachLocally(globals)
+   y %<-% {
+     x <- 1:10
+     sumtwo(a + b * x)
+   } %globals% TRUE
+   rm(list = names(globals))
+   print(y)
+   stopifnot(all.equal(y, v0))
+ 
+   attachLocally(globals)
+   f <- future({
+     x <- 1:10
+     sumtwo(a + b * x)
+   }, lazy = TRUE, globals = TRUE)
+   print(f)
+   rm(list = names(globals))
+   y <- value(f)
+   print(y)
+   stopifnot(all.equal(y, v0))
+ 
+   attachLocally(globals)
+   f <- futureAssign("y", {
+     x <- 1:10
+     sumtwo(a + b * x)
+         }, lazy = TRUE, globals = TRUE)
+   print(f)
+   rm(list = names(globals))
+   z <- value(f)
+   print(z)
+   stopifnot(all.equal(z, y), all.equal(y, v0))
+ 
+   ## Same with lazy evaluation
+   attachLocally(globals)
+   y %<-% {
+     x <- 1:10
+     sumtwo(a + b * x)
+   } %lazy% TRUE %globals% TRUE
+   rm(list = names(globals))
+   print(y)
+   stopifnot(all.equal(y, v0))
+ 
+   ## No need to search for globals
+   y %<-% { 1 } %globals% FALSE
+   print(y)
+   stopifnot(identical(y, 1))
+ 
+   ## Same with lazy evaluation
+   y %<-% { 1 } %lazy% TRUE %globals% FALSE
+   print(y)
+   stopifnot(identical(y, 1))
+ 
+   ## Exception - missing global
+   attachLocally(globals)
+   f <- future({
+     x <- 1:10
+     sumtwo(a + b * x)
+   }, globals = FALSE)
+   print(f)
+   rm(list = names(globals))
+   y <- tryCatch(value(f), error = identity)
+   if (!inherits(f, c("SequentialFuture", "UniprocessFuture", "MulticoreFuture"))) {
+     stopifnot(inherits(y, "simpleError"))
+   }
+ 
+   
+   message("- Globals manually specified as named list ...")
+   ## Make sure globals do not exist
+   rm(list = names(globals))
+   
+   f <- future({
+     x <- 1:10
+     sumtwo(a + b * x)
+   }, globals = globals)
+   print(f)
+   v <- value(f)
+   print(v)
+   stopifnot(all.equal(v, v0))
+ 
+   f <- future({
+     x <- 1:10
+     sumtwo(a + b * x)
+   }, lazy = TRUE, globals = globals)
+   print(f)
+   v <- value(f)
+   print(v)
+   stopifnot(all.equal(v, v0))
+ 
+   f <- future({
+     x <- 1:10
+     sumtwo(a + b * x)
+   }, lazy = TRUE, globals = structure(FALSE, add = globals))
+   print(f)
+   v <- value(f)
+   print(v)
+   stopifnot(all.equal(v, v0))
+ 
+   y %<-% {
+     x <- 1:10
+     sumtwo(a + b * x)
+   } %globals% globals
+   print(y)
+   stopifnot(all.equal(y, v0))
+ 
+   y %<-% {
+     x <- 1:10
+     sumtwo(a + b * x)
+   } %lazy% TRUE %globals% globals
+   print(y)
+   stopifnot(all.equal(y, v0))
+ 
+   y %<-% {
+     x <- 1:10
+     sumtwo(a + b * x)
+   } %lazy% TRUE %globals% structure(FALSE, add = globals)
+   print(y)
+   stopifnot(all.equal(y, v0))
+ 
+ 
+   message("- Globals manually specified by their names ...")
+   
+   attachLocally(globals)
+   f <- future({
+     x <- 1:10
+     sumtwo(a + b * x)
+   }, globals = c("a", "b", "sumtwo"))
+   print(f)
+   rm(list = names(globals))
+   v <- value(f)
+   print(v)
+   stopifnot(all.equal(v, v0))
+ 
+   attachLocally(globals)
+   f <- future({
+     x <- 1:10
+     sumtwo(a + b * x)
+   }, lazy = TRUE, globals = c("a", "b", "sumtwo"))
+   print(f)
+   rm(list = names(globals))
+   v <- value(f)
+   print(v)
+   stopifnot(all.equal(v, v0))
+ 
+   attachLocally(globals)
+   f <- future({
+     x <- 1:10
+     sumtwo(a + b * x)
+   }, lazy = TRUE, globals = structure(FALSE, add = c("a", "b", "sumtwo")))
+   print(f)
+   rm(list = names(globals))
+   v <- value(f)
+   print(v)
+   stopifnot(all.equal(v, v0))
+ 
+   attachLocally(globals)
+   y %<-% {
+     x <- 1:10
+     sumtwo(a + b * x)
+   } %globals% c("a", "b", "sumtwo")
+   rm(list = names(globals))
+   print(y)
+   stopifnot(all.equal(y, v0))
+ 
+   attachLocally(globals)
+   y %<-% {
+     x <- 1:10
+     sumtwo(a + b * x)
+   } %lazy% TRUE %globals% c("a", "b", "sumtwo")
+   rm(list = names(globals))
+   print(y)
+   stopifnot(all.equal(y, v0))
+ 
+   attachLocally(globals)
+   y %<-% {
+     x <- 1:10
+     sumtwo(a + b * x)
+   } %lazy% TRUE %globals% structure(FALSE, add = c("a", "b", "sumtwo"))
+   rm(list = names(globals))
+   print(y)
+   stopifnot(all.equal(y, v0))
+ 
+   
+   message("- Globals manually specified as named list - also with '...' ...")
+   x <- 1:10
+   y_truth <- x[2:3]
+   str(y_truth)
+   
+   ## Make sure it's possible to specify '...' as a global
+   sub <- function(x, ...) value(future(x[...], globals = c("x", "...")))
+   y <- sub(x, 2:3)
+   str(y)
+   stopifnot(identical(y, y_truth))
+ 
+   ## Make sure it's possible to specify '...' as a global (not just last)
+   sub <- function(x, ...) value(future(x[...], globals = c("...", "x")))
+   y <- sub(x, 2:3)
+   str(y)
+   stopifnot(identical(y, y_truth))
+   
+   ## And if '...' is forgotten, it may give an error
+   sub <- function(x, ...) value(future(x[...], globals = "x"))
+   y <- tryCatch(sub(x, 2:3), error = identity)
+   str(y)
+   stopifnot((strategy %in% c("multisession") && inherits(y, "error")) || identical(y, y_truth))
+ 
+ 
+   message("- Packages - manual ...")
+ 
+   a <- 42
+   message("  + future(..., globals = FALSE)")
+   res <- tryCatch({
+     f <- future({ 2 * a }, globals = FALSE)
+     v <- value(f)
+     print(head(v))
+   }, error = identity)
+   stopifnot(!inherits(f, "ClusterFuture") || inherits(res, "error"))
+ 
+   message("  + future(..., globals = structure(TRUE, ignore = 'a'))")
+   res <- tryCatch({
+     f <- future({ 2 * a }, globals = structure(TRUE, ignore = "a"))
+     v <- value(f)
+     print(head(v))
+   }, error = identity)
+   stopifnot(!inherits(f, "ClusterFuture") || inherits(res, "error"))
+ 
+   message("  + future(iris, globals = TRUE) without 'datasets'")
+   ## Make sure 'iris', and thereby the 'datasets' package,
+   ## is not picked up as a global
+   unloadNamespace("datasets")
+   stopifnot(!"dataset" %in% loadedNamespaces(), !exists("iris", mode = "list"))
+   
+   ns %<-% {
+     unloadNamespace("datasets")
+     loadedNamespaces()
+   }
+   print(ns)
+   stopifnot(!"dataset" %in% ns)
+ 
+   res <- tryCatch({
+     f <- future({ iris })
+     v <- value(f)
+     print(head(v))
+   }, error = identity)
+   stopifnot(inherits(res, "error"))
+ 
+   if (nbrOfWorkers() > 1L) {
+     f <- future({ iris }, packages = "datasets")
+     v <- value(f)
+     print(head(v))
+   }
+   
+   ns %<-% {
+     unloadNamespace("datasets")
+     loadedNamespaces()
+   }
+   print(ns)
+   stopifnot(!"dataset" %in% ns)
+ 
+   res <- tryCatch({
+     df %<-% { iris }
+     print(head(df))
+   }, error = identity)
+   stopifnot(inherits(res, "error"))
+ 
+   if (nbrOfWorkers() > 1L) {
+     df %<-% { iris } %packages% "datasets"
+     print(head(df))
+   }
+   
+   message(sprintf("- Strategy: %s ... DONE", strategy))
+ }
- Strategy: sequential ...
- Globals - automatic ...
SequentialFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: FALSE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 1.20 KiB (function ‘sumtwo’ of 1.09 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: 56 bytes of class ‘numeric’
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[1] 8
SequentialFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: FALSE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 1.20 KiB (function ‘sumtwo’ of 1.09 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: 56 bytes of class ‘numeric’
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[1] 8
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 1.20 KiB (function ‘sumtwo’ of 1.09 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 1.20 KiB (function ‘sumtwo’ of 1.09 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
[1] 8
[1] 1
[1] 1
SequentialFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: FALSE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: 56 bytes of class ‘numeric’
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
- Globals manually specified as named list ...
Warning in rm(list = names(globals)) : object 'a' not found
Warning in rm(list = names(globals)) : object 'b' not found
Warning in rm(list = names(globals)) : object 'sumtwo' not found
SequentialFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: FALSE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: 56 bytes of class ‘numeric’
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
[1] 8
[1] 8
[1] 8
- Globals manually specified by their names ...
SequentialFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: FALSE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: 56 bytes of class ‘numeric’
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
[1] 8
[1] 8
[1] 8
- Globals manually specified as named list - also with '...' ...
 int [1:2] 2 3
 int [1:2] 2 3
 int [1:2] 2 3
 int [1:2] 2 3
- Packages - manual ...
  + future(..., globals = FALSE)
[1] 84
  + future(..., globals = structure(TRUE, ignore = 'a'))
[1] 84
  + future(iris, globals = TRUE) without 'datasets'
 [1] "compiler"   "parallelly" "graphics"   "tools"      "parallel"  
 [6] "utils"      "listenv"    "grDevices"  "stats"      "codetools" 
[11] "methods"    "digest"     "globals"    "base"       "future"    
 [1] "compiler"   "parallelly" "graphics"   "tools"      "parallel"  
 [6] "utils"      "listenv"    "grDevices"  "stats"      "codetools" 
[11] "methods"    "digest"     "globals"    "base"       "future"    
- Strategy: sequential ... DONE
- Strategy: multicore ...
- Globals - automatic ...
MulticoreFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (function ‘sumtwo’ of 2.77 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[1] 8
MulticoreFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (function ‘sumtwo’ of 2.77 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[1] 8
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (function ‘sumtwo’ of 2.77 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (function ‘sumtwo’ of 2.77 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
[1] 8
[1] 1
[1] 1
MulticoreFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
- Globals manually specified as named list ...
Warning in rm(list = names(globals)) : object 'a' not found
Warning in rm(list = names(globals)) : object 'b' not found
Warning in rm(list = names(globals)) : object 'sumtwo' not found
MulticoreFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
[1] 8
[1] 8
[1] 8
- Globals manually specified by their names ...
MulticoreFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: TRUE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
[1] 8
[1] 8
[1] 8
- Globals manually specified as named list - also with '...' ...
 int [1:2] 2 3
 int [1:2] 2 3
 int [1:2] 2 3
 int [1:2] 2 3
- Packages - manual ...
  + future(..., globals = FALSE)
[1] 84
  + future(..., globals = structure(TRUE, ignore = 'a'))
[1] 84
  + future(iris, globals = TRUE) without 'datasets'
 [1] "compiler"   "parallelly" "graphics"   "tools"      "parallel"  
 [6] "utils"      "listenv"    "grDevices"  "stats"      "codetools" 
[11] "methods"    "digest"     "globals"    "base"       "future"    
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
6          5.4         3.9          1.7         0.4  setosa
 [1] "compiler"   "parallelly" "graphics"   "tools"      "parallel"  
 [6] "utils"      "listenv"    "grDevices"  "stats"      "codetools" 
[11] "methods"    "digest"     "globals"    "base"       "future"    
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
6          5.4         3.9          1.7         0.4  setosa
- Strategy: multicore ... DONE
- Strategy: multisession ...
- Globals - automatic ...
MultisessionFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (function ‘sumtwo’ of 2.77 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[1] 8
MultisessionFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (function ‘sumtwo’ of 2.77 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[1] 8
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (function ‘sumtwo’ of 2.77 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (function ‘sumtwo’ of 2.77 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
[1] 8
[1] 1
[1] 1
MultisessionFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: <none>
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
- Globals manually specified as named list ...
Warning in rm(list = names(globals)) : object 'a' not found
Warning in rm(list = names(globals)) : object 'b' not found
Warning in rm(list = names(globals)) : object 'sumtwo' not found
MultisessionFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
[1] 8
[1] 8
[1] 8
- Globals manually specified by their names ...
MultisessionFuture:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: FALSE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
Future:
Label: ‘<none>’
Expression:
{
    x <- 1:10
    sumtwo(a + b * x)
}
Lazy evaluation: TRUE
Asynchronous evaluation: TRUE
Local evaluation: TRUE
Environment: R_GlobalEnv
Capture standard output: TRUE
Capture condition classes: ‘condition’ (excluding ‘nothing’)
Globals: 3 objects totaling 2.88 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘sumtwo’ of 2.77 KiB)
Packages: <none>
L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
Resolved: FALSE
Value: <not collected>
Conditions captured: <none>
Early signaling: FALSE
Owner process: c4803ff5-793f-5af3-c851-973b1e5cc782
Class: ‘Future’, ‘environment’
[1] 8
[1] 8
[1] 8
[1] 8
- Globals manually specified as named list - also with '...' ...
 int [1:2] 2 3
 int [1:2] 2 3
 int [1:2] 2 3
List of 2
 $ message: chr "'...' used in an incorrect context"
 $ call   : language withCallingHandlers({     x[...] ...
 - attr(*, "class")= chr [1:3] "simpleError" "error" "condition"
- Packages - manual ...
  + future(..., globals = FALSE)
  + future(..., globals = structure(TRUE, ignore = 'a'))
  + future(iris, globals = TRUE) without 'datasets'
 [1] "compiler"   "parallelly" "graphics"   "tools"      "parallel"  
 [6] "utils"      "listenv"    "grDevices"  "stats"      "codetools" 
[11] "methods"    "digest"     "globals"    "base"       "future"    
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
6          5.4         3.9          1.7         0.4  setosa
 [1] "compiler"   "parallelly" "graphics"   "tools"      "parallel"  
 [6] "utils"      "listenv"    "grDevices"  "stats"      "codetools" 
[11] "methods"    "digest"     "globals"    "base"       "future"    
  Sepal.Length Sepal.Width Petal.Length Petal.Width Species
1          5.1         3.5          1.4         0.2  setosa
2          4.9         3.0          1.4         0.2  setosa
3          4.7         3.2          1.3         0.2  setosa
4          4.6         3.1          1.5         0.2  setosa
5          5.0         3.6          1.4         0.2  setosa
6          5.4         3.9          1.7         0.4  setosa
- Strategy: multisession ... DONE
> 
> message("*** Globals - manually ... DONE")
*** Globals - manually ... DONE
> 
> 
> source("incl/end.R")
> 
