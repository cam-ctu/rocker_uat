
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "pbkrtest"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('pbkrtest')
Loading required package: lme4
Loading required package: Matrix
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("compare_column_space")
> ### * compare_column_space
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: compare_column_space
> ### Title: Compare column spaces
> ### Aliases: compare_column_space
> 
> ### ** Examples
> 
> 
> A1 <- matrix(c(1,1,1,1,2,3), nrow=3)
> A2 <- A1[, 1, drop=FALSE]
> 
> compare_column_space(A1, A2)
[1] 1
> compare_column_space(A2, A1)
[1] 0
> compare_column_space(A1, A1)
[1] -1
> 
> 
> 
> 
> cleanEx()
> nameEx("data-beets")
> ### * data-beets
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: data-beets
> ### Title: Sugar beets data
> ### Aliases: data-beets beets
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(beets)
> 
> beets$bh <- with(beets, interaction(block, harvest))
> summary(aov(yield ~ block + sow + harvest + Error(bh), beets))

Error: bh
          Df Sum Sq Mean Sq  F value   Pr(>F)    
block      2   11.3     5.7    4.018 0.199292    
harvest    1 1725.2  1725.2 1225.000 0.000815 ***
Residuals  2    2.8     1.4                      
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Error: Within
          Df Sum Sq Mean Sq F value   Pr(>F)    
sow        4   8369  2092.3   119.7 1.13e-13 ***
Residuals 20    349    17.5                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> summary(aov(sugpct ~ block + sow + harvest + Error(bh), beets))

Error: bh
          Df  Sum Sq Mean Sq F value Pr(>F)  
block      2 0.03267 0.01633   2.579 0.2794  
harvest    1 0.09633 0.09633  15.211 0.0599 .
Residuals  2 0.01267 0.00633                 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Error: Within
          Df Sum Sq Mean Sq F value   Pr(>F)    
sow        4   1.01  0.2525     101 5.74e-13 ***
Residuals 20   0.05  0.0025                     
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> 
> 
> 
> cleanEx()
> nameEx("data-budworm")
> ### * data-budworm
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: data-budworm
> ### Title: Budworm data
> ### Aliases: data-budworm budworm
> ### Keywords: datasets
> 
> ### ** Examples
> 
> 
> data(budworm)
> 
> ## function to caclulate the empirical logits
> empirical.logit<- function(nevent,ntotal) {
+    y <- log((nevent + 0.5) / (ntotal - nevent + 0.5))
+    y
+ }
> 
> 
> # plot the empirical logits against log-dose
> 
> log.dose <- log(budworm$dose)
> emp.logit <- empirical.logit(budworm$ndead, budworm$ntotal)
> plot(log.dose, emp.logit, type='n', xlab='log-dose',ylab='emprirical logit')
> title('budworm: emprirical logits of probability to die ')
> male <- budworm$sex=='male'
> female <- budworm$sex=='female'
> lines(log.dose[male], emp.logit[male], type='b', lty=1, col=1)
> lines(log.dose[female], emp.logit[female], type='b', lty=2, col=2)
> legend(0.5, 2, legend=c('male', 'female'), lty=c(1,2), col=c(1,2))
> 
> ## Not run: 
> ##D * SAS example;
> ##D data budworm;
> ##D infile 'budworm.txt' firstobs=2;
> ##D input sex dose ndead ntotal;
> ##D run;
> ## End(Not run)
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("get_ddf_Lb")
> ### * get_ddf_Lb
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_ddf_Lb
> ### Title: Adjusted denominator degrees of freedom for linear estimate for
> ###   linear mixed model.
> ### Aliases: get_ddf_Lb get_Lb_ddf get_Lb_ddf.lmerMod Lb_ddf
> ###   get_ddf_Lb.lmerMod ddf_Lb
> ### Keywords: inference models
> 
> ### ** Examples
> 
> 
> (fmLarge <- lmer(Reaction ~ Days + (Days|Subject), sleepstudy))
Error in initializePtr() : 
  function 'cholmod_factor_ldetA' not provided by package 'Matrix'
Calls: lmer ... initialize -> <Anonymous> -> initializePtr -> .Call
Execution halted
