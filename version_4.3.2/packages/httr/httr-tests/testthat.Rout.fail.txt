
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(testthat)
> test_check("httr")
Loading required package: httr
[ FAIL 21 | WARN 0 | SKIP 9 | PASS 18 ]

══ Skipped tests (9) ═══════════════════════════════════════════════════════════
• httpbin is not reliable (7): 'test-body.r:12:3', 'test-config.r:5:3',
  'test-content.R:4:3', 'test-http-error.R:4:3', 'test-http-head.r:4:3',
  'test-oauth.R:4:3', 'test-response.r:5:3'
• On CRAN (2): 'test-ssl.R:4:3', 'test-upload-file.R:2:3'

══ Failed tests ════════════════════════════════════════════════════════════════
── Error ('test-body.r:11:1'): (code run outside of `test_that()`) ─────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-body.r:11:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-callback.R:3:1'): (code run outside of `test_that()`) ──────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-callback.R:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-config.r:4:1'): (code run outside of `test_that()`) ────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-config.r:4:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-content-parse.r:3:1'): (code run outside of `test_that()`) ─────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-content-parse.r:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-content.R:3:1'): (code run outside of `test_that()`) ───────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-content.R:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-header.r:5:1'): (code run outside of `test_that()`) ────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-header.r:5:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-http-condition.R:3:1'): (code run outside of `test_that()`) ────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-http-condition.R:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-http-error.R:3:1'): (code run outside of `test_that()`) ────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-http-error.R:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-http-head.r:3:1'): (code run outside of `test_that()`) ─────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-http-head.r:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-oauth_signature.R:6:1'): (code run outside of `test_that()`) ───
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-oauth_signature.R:6:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-oauth-cache.R:9:1'): (code run outside of `test_that()`) ───────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-oauth-cache.R:9:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-oauth-server-side.R:6:1'): (code run outside of `test_that()`) ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-oauth-server-side.R:6:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-oauth.R:3:1'): (code run outside of `test_that()`) ─────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-oauth.R:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-parse_media.R:3:1'): (code run outside of `test_that()`) ───────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-parse_media.R:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-request.r:3:1'): (code run outside of `test_that()`) ───────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-request.r:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-response.r:4:1'): (code run outside of `test_that()`) ──────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-response.r:4:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-retry.R:13:3'): sucessful requests terminate when terminate_on_success is true ──
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::expect_true(should_terminate(200L)) at test-retry.R:13:3
  2. │ └─testthat:::expect_waldo_constant(act, TRUE, info = info)
  3. │   └─testthat:::waldo_compare(...)
  4. └─base::loadNamespace(x)
  5.   ├─base::namespaceImportFrom(...)
  6.   │ └─base::asNamespace(ns)
  7.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
  8.     └─base::registerS3methods(nsInfo$S3methods, package, env)
  9.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 10.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 11.           └─base::get(genname, envir = envir)
── Error ('test-retry.R:3:1'): (code run outside of `test_that()`) ─────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-retry.R:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-ssl.R:3:1'): (code run outside of `test_that()`) ───────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-ssl.R:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-upload-file.R:1:1'): (code run outside of `test_that()`) ───────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-upload-file.R:1:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)
── Error ('test-url.r:3:1'): (code run outside of `test_that()`) ───────────────
Error in `get(genname, envir = envir)`: object 'compare_proxy' not found
Backtrace:
     ▆
  1. ├─testthat::test_check("httr")
  2. │ └─testthat::test_dir(...)
  3. │   └─testthat:::test_files(...)
  4. │     └─testthat:::test_files_serial(...)
  5. │       ├─testthat::with_reporter(...)
  6. │       │ └─base::tryCatch(...)
  7. │       │   └─base (local) tryCatchList(expr, classes, parentenv, handlers)
  8. │       │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
  9. │       │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 10. │       └─base::lapply(...)
 11. │         └─testthat (local) FUN(X[[i]], ...)
 12. │           └─testthat::source_file(path, env = env(env), desc = desc, error_call = error_call)
 13. │             └─testthat:::test_code(test = NULL, code = exprs, env = env, default_reporter = StopReporter$new())
 14. │               ├─base::tryCatch(...)
 15. │               │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)
 16. │               │   ├─base (local) tryCatchOne(...)
 17. │               │   │ └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 18. │               │   └─base (local) tryCatchList(expr, names[-nh], parentenv, handlers[-nh])
 19. │               │     └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])
 20. │               │       └─base (local) doTryCatch(return(expr), name, parentenv, handler)
 21. │               ├─base::withCallingHandlers(...)
 22. │               └─base::eval(code, test_env)
 23. │                 └─base::eval(code, test_env)
 24. │                   └─testthat::test_that(...) at test-url.r:3:1
 25. │                     └─testthat:::test_code(desc, code, env = parent.frame(), default_reporter = local_interactive_reporter())
 26. │                       └─testthat:::testthat_state_condition(before, after, call = sys.call(-1))
 27. │                         └─testthat:::waldo_compare(before, after, x_arg = "before", y_arg = "after")
 28. └─base::loadNamespace(x)
 29.   ├─base::namespaceImportFrom(...)
 30.   │ └─base::asNamespace(ns)
 31.   └─base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 32.     └─base::registerS3methods(nsInfo$S3methods, package, env)
 33.       └─base (local) register_S3_method_delayed(pkg, gen, cls, fun)
 34.         └─base::registerS3method(gen, cls, fun, envir = asNamespace(pkg))
 35.           └─base::get(genname, envir = envir)

[ FAIL 21 | WARN 0 | SKIP 9 | PASS 18 ]
Error: Test failures
Execution halted
