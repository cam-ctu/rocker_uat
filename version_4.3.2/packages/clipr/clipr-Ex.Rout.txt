
R version 4.3.2 (2023-10-31) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "clipr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('clipr')
Welcome to clipr. See ?write_clip for advisories on writing to the clipboard in R.
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("clipr_available")
> ### * clipr_available
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: clipr_available
> ### Title: Is the system clipboard available?
> ### Aliases: clipr_available dr_clipr
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # When using testthat:
> ##D library(testthat)
> ##D skip_if_not(clipr_available())
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("read_clip")
> ### * read_clip
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read_clip
> ### Title: Read clipboard
> ### Aliases: read_clip
> 
> ### ** Examples
> 
> ## Not run: 
> ##D clip_text <- read_clip()
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("write_clip")
> ### * write_clip
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: write_clip
> ### Title: Write clipboard
> ### Aliases: write_clip
> 
> ### ** Examples
> 
> ## Not run: 
> ##D text <- "Write to clipboard"
> ##D write_clip(text)
> ##D 
> ##D multiline <- c("Write", "to", "clipboard")
> ##D write_clip(multiline)
> ##D # Write
> ##D # to
> ##D # clipboard
> ##D 
> ##D write_clip(multiline, breaks = ",")
> ##D # write,to,clipboard
> ##D 
> ##D tbl <- data.frame(a=c(1,2,3), b=c(4,5,6))
> ##D write_clip(tbl)
> ## End(Not run)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.05 0.019 0.069 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
