
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(nlme)
> is64bit <- .Machine$sizeof.pointer == 8
> 
> options(digits = 10)# <- see more, as we have *no* *.Rout.save file here
> ## https://stat.ethz.ch/pipermail/r-help/2014-September/422123.html
> nfm <- nlme(circumference ~ SSlogis(age, Asym, xmid, scal),
+             data = Orange,
+             fixed = Asym + xmid + scal ~ 1)
Warning message:
In (function (model, data = sys.frame(sys.parent()), fixed, random,  :
  Iteration 1, LME step: nlminb() did not converge (code = 1). Do increase 'msMaxIter'!
> (sO <- summary(nfm))
Nonlinear mixed-effects model fit by maximum likelihood
  Model: circumference ~ SSlogis(age, Asym, xmid, scal) 
  Data: Orange 
          AIC         BIC       logLik
  279.9814995 295.5349801 -129.9907497

Random effects:
 Formula: list(Asym ~ 1, xmid ~ 1, scal ~ 1)
 Level: Tree
 Structure: General positive-definite, Log-Cholesky parametrization
         StdDev      Corr         
Asym     27.05191184 Asym   xmid  
xmid     24.25829823 -0.327       
scal     36.59583137 -0.992  0.443
Residual  7.32149169              

Fixed effects:  list(Asym ~ 1, xmid ~ 1, scal ~ 1) 
           Value   Std.Error DF     t-value p-value
Asym 192.0965359 14.05289806 28 13.66953173       0
xmid 727.5932769 34.58768260 28 21.03619619       0
scal 356.6043323 30.49713620 28 11.69304324       0
 Correlation: 
     Asym   xmid  
xmid  0.277       
scal -0.193  0.665

Standardized Within-Group Residuals:
          Min            Q1           Med            Q3           Max 
-1.8186101392 -0.5214263943  0.1742608263  0.5175996473  1.6452550550 

Number of Observations: 35
Number of Groups: 5 
> vc <- VarCorr(nfm, rdig = 5)# def. 3
> storage.mode(vc) <- "double" # -> (correct) NA warning
Warning message:
In storage.mode(vc) <- "double" : NAs introduced by coercion
> cfO <- sO$tTable
> if(FALSE)
+     dput(signif(cfO[,c("Std.Error", "t-value")], 8))
> if(FALSE)
+     dput(signif(as.numeric(vc[,"StdDev"]), 8))
> 
> cfO.Ts <- list(
+     stdE.T = cbind(
+         b64nx = ## R-devel 2016-01-11, 2017-09-18; [lynne]:
+             c(14.052671, 34.587947, 30.497593,  13.669776, 21.036087, 11.692943)
+       , b32nx = ## R-devel 2016-01-11, 2017-09-18 [florence, Fedora 24 Linux]:
+             c(14.053663, 34.589821, 30.49412,   13.668653, 21.034544, 11.693889)
+       , b32Win1 = ## R-devel 2017-09-17, i386-w64-mingw32/i386,
+             ## Windows Server 2008 R2 x64 (build 7601) Service Pack 1
+             c(14.053047, 34.588589, 30.4963,    13.669349, 21.035542, 11.693282)
+       , b32Win = ## R-devel 2017-09-18, Tomas K (Win.10)
+             c(14.051902, 34.579819, 30.499807,  13.670797, 21.041722, 11.692694)
+     ),
+     stdDev = cbind(
+         b64nx = ## R-devel 2016-01-11; [lynne]:
+             c(27.051312, 24.258159, 36.597078, 7.321525)
+       , b32nx = ## R-devel 2017-09-18; [florence, Fedora 24 Linux]:
+             c(27.053964, 24.275286, 36.58682,  7.3213653)
+       , b32Win = ## R-devel 2017-09-17, i386-w64-mingw32/i386, W.Server 2008 R2..
+             c(27.05234,  24.264936, 36.593554, 7.3214448)
+         ## for now
+     )
+ )
> ## Average number of decimal digits agreement :
> lapply(cfO.Ts, function(cc) round(-log10(apply(cc - rowMeans(cc), 1, sd)), 2))
$stdE.T
[1] 3.13 2.34 2.62 3.05 2.49 3.29

$stdDev
[1] 2.87 2.06 2.28 4.10

> ## $ stdE.T: num [1:6] 3.13 2.34 2.62 3.05 2.49 3.29
> ## $ stdDev: num [1:4] 2.87 2.06 2.28 4.1
> ## Pairwise distances (formatted, easier to read off):
> round(dist(1000 * t(cfO.Ts[["stdE.T"]])), 1)
        b64nx b32nx b32Win1
b32nx     4.6              
b32Win1   1.7   2.9        
b32Win   10.2  13.9    11.5
> ##         b64nx b32nx b32Win1
> ## b32nx     4.6
> ## b32Win1   1.7   2.9
> ## b32Win   10.2  13.9    11.5
> round(dist(1000 * t(cfO.Ts[["stdDev"]])), 1)
       b64nx b32nx
b32nx   20.1      
b32Win   7.7  12.5
> ##        b64nx b32nx
> ## b32nx   20.1
> ## b32Win   7.7  12.5
> 
> cName <- (if(is64bit) "b64nx"
+           else if(.Platform$OS.type == "Windows") {
+               if(grepl("Server 2008 R2", win.version(), fixed=TRUE))
+                   "b32Win1"
+               else
+                   "b32Win"
+           }
+           else "b32nx" ## 32-bit, non-Windows
+ )
> 
> cfO.T <- array(cfO.Ts[["stdE.T"]][, cName], dim = 3:2,
+                dimnames = list(c("Asym", "xmid", "scal"),
+                                c("Std.Error", "t-value")))
> vcSD <- setNames(cfO.Ts[["stdDev"]][, switch(cName, b64nx=, b32nx=, b32Win=cName,
+                                              b32Win1 = "b32Win")],
+ 		 c("Asym", "xmid", "scal", "Residual"))
> stopifnot(
+     identical(cfO[,"Value"], fixef(nfm)),
+     all.equal(cfO[,c("Std.Error", "t-value")], cfO.T, tol = 3e-4)
+    ,
+     cfO[,"DF"] == 28,
+     all.equal(vc[,"Variance"], vc[,"StdDev"]^2, tol= 5e-7)
+    ,
+     all.equal(vc[,"StdDev"], vcSD, tol = 6e-4) # 3.5e-4 (R 3.0.3, 32b)
+    ,
+     all.equal(unname(vc[2:3, 3:4]), # "Corr"
+               rbind(c(-0.3273, NA),
+ 		    c(-0.9920, 0.4430)), tol = 2e-3)# ~ 2e-4 / 8e-4
+ )
> 
> ## Confirm  predict(*, newdata=.)  works
> (n <- nrow(Orange)) # 35
[1] 35
> set.seed(17)
> newOr <- within(Orange[sample(n, 64, replace=TRUE), ],
+ 		age <- round(jitter(age, amount = 50)))
> fit.v <- predict(nfm, newdata = newOr)
> resiv <- newOr$circumference - fit.v
> res.T <- c(48, 115, 74, 15, 44, -94, 47, -51, 20, -52, -16, 12, -135,
+            -85, 136, 100, 24, 181, -88, -102, -26, 52, -148, 8, -83, 73,
+            -27, -34, 91, 42, 34, -8, 0, 83, 84, -90, -123, 94, -157, -11,
+            56, -164, -28, 72, 15, 148, 95, -122, 169, 84, -19, -124, 45,
+            -66, -10, 119, -110, -43, 12, 94, -108, 45, 48, 46)
> if(!all((res10 <- round(10 * as.vector(resiv))) == res.T)) {
+     iD <- which(res10 != res.T)
+     cat("Differing rounded residuals, at indices", paste(iD, collapse=", "),
+         "; with values:\n")
+     print(cbind(resiv, res10, res.T)[iD,])
+ }
Differing rounded residuals, at indices 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64 ; with values:
            resiv res10 res.T
5  -7.80637783685   -78    48
5  -9.89001942668   -99   115
4   5.45074885604    55    74
1  -1.17325246874   -12    15
3   3.50810269581    35    44
2  16.94555130893   169   -94
1   5.06730564057    51    47
5 -11.81813028756  -118   -51
3   4.41360974618    44    20
1 -12.27828492896  -123   -52
4   5.45120009035    55   -16
1  -0.47288832012    -5    12
3  -0.63473851054    -6  -135
3   2.42400341172    24   -85
3  -4.94394250382   -49   136
5  -0.01223068312     0   100
3  -9.67292673064   -97    24
2   2.35806643287    24   181
5   4.30248760767    43   -88
5  -6.36990826424   -64  -102
1  -2.89031911949   -29   -26
2   2.76733274145    28    52
4 -12.89035566792  -129  -148
5   0.96811403669    10     8
3 -10.75806018557  -108   -83
4   4.21839909302    42    73
5   2.42269014063    24   -27
1 -12.14131565126  -121   -34
2   3.88891868003    39    91
1 -12.14131565126  -121    42
4  -6.30148636488   -63    34
5  13.48884590463   135    -8
5  -2.85546921682   -29     0
3   0.64674685103     6    83
3   5.33101992297    53    84
2  12.77581914790   128   -90
2  -2.33687191776   -23  -123
2   6.50249939607    65    94
4   2.62593963770    26  -157
2   4.34285016342    43   -11
5  -5.50787217473   -55    56
2   9.07120682072    91  -164
2  -1.98544099812   -20   -28
3  -7.71491224531   -77    72
2  -2.18711858340   -22    15
3   6.98921104569    70   148
4  -0.75714699622    -8    95
1   0.47682087466     5  -122
3   8.12494859861    81   169
2  11.15234181068   112    84
1   2.25718448362    23   -19
5   1.62568016112    16  -124
3  -5.38578698405   -54    45
2   3.91557577246    39   -66
2  -9.73261825650   -97   -10
3   0.38272817383     4   119
1   6.27084765646    63  -110
5  -8.59943065997   -86   -43
2  -1.95936796596   -20    12
2   9.95460687208   100    94
5 -11.48944147038  -115  -108
5  14.84480799503   148    45
2   3.96766978014    40    48
1   2.34953413810    23    46
> ## -> indices  14 [64-bit]  or  27 [32-bit], respectively
> 
> 
> ## [Bug 16715] New: nlme: unable to use predict and augPredict ..
> ## Date: 17 Feb 2016 -- part 2 -- predict():
> ##
> ## Comment 4 daveauty@gmail.com 2016-03-08 -- modified by MM --
> 
> ## simulate density data then fit Michaelis-Menten equation of density as
> ## function of ring age. TreeIDs grouped by SP (spacing)
> set.seed(1)
> df <- data.frame(SP = rep(LETTERS[1:5], 60),
+ 		 expand.grid(TreeID = factor(1:12),
+                              age = seq(2, 50, 2)),
+                  stringsAsFactors = TRUE)
> df[,"dens"] <- with(df, (runif(1,10,20)*age)/(runif(1,9,10)+age)) + rnorm(25, 0, 1)
> str(df)
'data.frame':	300 obs. of  4 variables:
 $ SP    : Factor w/ 5 levels "A","B","C","D",..: 1 2 3 4 5 1 2 3 4 5 ...
 $ TreeID: Factor w/ 12 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
 $ age   : num  2 2 2 2 2 2 2 2 2 2 ...
 $ dens  : num  2.41 1.39 3.82 2.56 1.41 ...
> ## 'data.frame':	300 obs. of  4 variables:
> ##  $ SP    : Factor w/ 5 levels "A","B","C","D",..: 1 2 3 4 5 1 2 3 4 5 ...
> ##  $ TreeID: Factor w/ 12 levels "1","2","3","4",..: 1 2 3 4 5 6 7 8 9 10 ...
> ##  $ age   : num  2 2 2 2 2 2 2 2 2 2 ...
> ##  $ dens  : num  2.41 1.39 3.82 2.56 1.41 ...
> 
> ## mixed-effects model
> fit1 <- nlme(dens ~ a*age/(b+age),
+ 	     fixed = a+b ~ 1, random= a ~ 1|TreeID,
+ 	     start = c(a=15, b=5), data=df)
> summary(fit1)
Nonlinear mixed-effects model fit by maximum likelihood
  Model: dens ~ a * age/(b + age) 
  Data: df 
          AIC         BIC       logLik
  808.4069212 823.2220511 -400.2034606

Random effects:
 Formula: a ~ 1 | TreeID
                      a     Residual
StdDev: 2.772759271e-05 0.9185793399

Fixed effects:  a + b ~ 1 
         Value    Std.Error  DF     t-value p-value
a 12.758125793 0.1914871799 287 66.62652717       0
b  8.921206248 0.4906380773 287 18.18286566       0
 Correlation: 
  a    
b 0.918

Standardized Within-Group Residuals:
          Min            Q1           Med            Q3           Max 
-2.6420672714 -0.2833115741  0.2220191294  0.6630992117  1.6161028888 

Number of Observations: 300
Number of Groups: 12 
> fit1R <- update(fit1, method = "REML")
> ## allow fixed effects parameters to vary by 'SP':
> fit2 <- update(fit1, fixed = list(a ~ SP, b ~ SP),
+                start = c(a = rep(14, 5), b = rep(4, 5)))
> summary(fit2)
Nonlinear mixed-effects model fit by maximum likelihood
  Model: dens ~ a * age/(b + age) 
  Data: df 
         AIC         BIC      logLik
  799.210016 843.6554057 -387.605008

Random effects:
 Formula: a ~ 1 | TreeID
          a.(Intercept)     Residual
StdDev: 2.877037018e-05 0.8808025132

Fixed effects:  list(a ~ SP, b ~ SP) 
                     Value    Std.Error  DF      t-value p-value
a.(Intercept) 12.903085411 0.4091007685 279 31.540115305  0.0000
a.SPB         -0.170084518 0.5947105316 279 -0.285995471  0.7751
a.SPC         -0.643219825 0.5919816325 279 -1.086553687  0.2782
a.SPD          0.095662354 0.5731020459 279  0.166920281  0.8676
a.SPE         -0.008338933 0.5812270648 279 -0.014347118  0.9886
b.(Intercept)  8.646804016 1.0165457522 279  8.506064776  0.0000
b.SPB          0.686459276 1.5205832712 279  0.451444711  0.6520
b.SPC          0.672297716 1.5446580507 279  0.435240483  0.6637
b.SPD         -0.159835894 1.4178921598 279 -0.112727822  0.9103
b.SPE          0.221184031 1.4603631186 279  0.151458242  0.8797
 Correlation: 
              a.(In) a.SPB  a.SPC  a.SPD  a.SPE  b.(In) b.SPB  b.SPC  b.SPD 
a.SPB         -0.688                                                        
a.SPC         -0.691  0.475                                                 
a.SPD         -0.714  0.491  0.493                                          
a.SPE         -0.704  0.484  0.486  0.502                                   
b.(Intercept)  0.916 -0.630 -0.633 -0.654 -0.645                            
b.SPB         -0.612  0.919  0.423  0.437  0.431 -0.669                     
b.SPC         -0.603  0.415  0.918  0.430  0.424 -0.658  0.440              
b.SPD         -0.657  0.452  0.454  0.915  0.462 -0.717  0.479  0.472       
b.SPE         -0.637  0.438  0.441  0.455  0.917 -0.696  0.465  0.458  0.499

Standardized Within-Group Residuals:
           Min             Q1            Med             Q3            Max 
-2.39676504661 -0.45686320579  0.04081417626  0.74467663547  2.17580170898 

Number of Observations: 300
Number of Groups: 12 
> 
> ## make new data for predictions
> newdat <- expand.grid(SP = LETTERS[1:5], age = seq(1, 50, 1))
> n.pred1 <- predict(fit1, newdat, level=0) # works fine
> n.pred2 <- predict(fit2, newdat, level=0)
> ## in nlme 3.1-124, throws the error:
> ## Error in eval(expr, envir, enclos) : object 'SP' not found
> 
> ## New data with  never-yet observed levels of a random effect -- PR#16614 :
> set.seed(47)
> newD <- expand.grid(SP = LETTERS[2:4], age = runif(16, 1,50),
+                     TreeID = sample(c(sample(1:12, 7), 100:102)))
> n1prD0 <- predict(fit1, newD, level=0)
> n2prD0 <- predict(fit2, newD, level=0)
> n1prD1 <- predict(fit1, newD, level=1)   # failed in nlme <= 3.1-126
> n2prD1 <- predict(fit2, newD, level=1)   # ditto
> (n1prD01 <- predict(fit1, newD, level=0:1))#  "
    TreeID predict.fixed predict.TreeID
97       5  10.788697608   10.788697608
98       5  10.788697608   10.788697608
99       5  10.788697608   10.788697608
100      5   8.728189212    8.728189212
101      5   8.728189212    8.728189212
102      5   8.728189212    8.728189212
103      5  10.348507084   10.348507084
104      5  10.348507084   10.348507084
105      5  10.348507084   10.348507084
106      5  10.491889156   10.491889157
107      5  10.491889156   10.491889157
108      5  10.491889156   10.491889157
109      5   9.764878647    9.764878648
110      5   9.764878647    9.764878648
111      5   9.764878647    9.764878648
112      5  10.159568883   10.159568884
113      5  10.159568883   10.159568884
114      5  10.159568883   10.159568884
115      5   8.831372617    8.831372617
116      5   8.831372617    8.831372617
117      5   8.831372617    8.831372617
118      5   9.298569649    9.298569649
119      5   9.298569649    9.298569649
120      5   9.298569649    9.298569649
121      5   9.643529915    9.643529915
122      5   9.643529915    9.643529915
123      5   9.643529915    9.643529915
124      5  10.697735082   10.697735083
125      5  10.697735082   10.697735083
126      5  10.697735082   10.697735083
127      5   5.951768068    5.951768069
128      5   5.951768068    5.951768069
129      5   5.951768068    5.951768069
130      5  10.189950688   10.189950689
131      5  10.189950688   10.189950689
132      5  10.189950688   10.189950689
133      5   6.388445576    6.388445576
134      5   6.388445576    6.388445576
135      5   6.388445576    6.388445576
136      5   9.861056862    9.861056862
137      5   9.861056862    9.861056862
138      5   9.861056862    9.861056862
139      5   9.479675711    9.479675711
140      5   9.479675711    9.479675711
141      5   9.479675711    9.479675711
142      5  10.654979644   10.654979644
143      5  10.654979644   10.654979644
144      5  10.654979644   10.654979644
241     11  10.788697608   10.788697608
242     11  10.788697608   10.788697608
243     11  10.788697608   10.788697608
244     11   8.728189212    8.728189212
245     11   8.728189212    8.728189212
246     11   8.728189212    8.728189212
247     11  10.348507084   10.348507084
248     11  10.348507084   10.348507084
249     11  10.348507084   10.348507084
250     11  10.491889156   10.491889156
251     11  10.491889156   10.491889156
252     11  10.491889156   10.491889156
253     11   9.764878647    9.764878648
254     11   9.764878647    9.764878648
255     11   9.764878647    9.764878648
256     11  10.159568883   10.159568883
257     11  10.159568883   10.159568883
258     11  10.159568883   10.159568883
259     11   8.831372617    8.831372617
260     11   8.831372617    8.831372617
261     11   8.831372617    8.831372617
262     11   9.298569649    9.298569649
263     11   9.298569649    9.298569649
264     11   9.298569649    9.298569649
265     11   9.643529915    9.643529915
266     11   9.643529915    9.643529915
267     11   9.643529915    9.643529915
268     11  10.697735082   10.697735082
269     11  10.697735082   10.697735082
270     11  10.697735082   10.697735082
271     11   5.951768068    5.951768069
272     11   5.951768068    5.951768069
273     11   5.951768068    5.951768069
274     11  10.189950688   10.189950688
275     11  10.189950688   10.189950688
276     11  10.189950688   10.189950688
277     11   6.388445576    6.388445576
278     11   6.388445576    6.388445576
279     11   6.388445576    6.388445576
280     11   9.861056862    9.861056862
281     11   9.861056862    9.861056862
282     11   9.861056862    9.861056862
283     11   9.479675711    9.479675711
284     11   9.479675711    9.479675711
285     11   9.479675711    9.479675711
286     11  10.654979644   10.654979644
287     11  10.654979644   10.654979644
288     11  10.654979644   10.654979644
337    100  10.788697608             NA
338    100  10.788697608             NA
339    100  10.788697608             NA
340    100   8.728189212             NA
341    100   8.728189212             NA
342    100   8.728189212             NA
343    100  10.348507084             NA
344    100  10.348507084             NA
345    100  10.348507084             NA
346    100  10.491889156             NA
347    100  10.491889156             NA
348    100  10.491889156             NA
349    100   9.764878647             NA
350    100   9.764878647             NA
351    100   9.764878647             NA
352    100  10.159568883             NA
353    100  10.159568883             NA
354    100  10.159568883             NA
355    100   8.831372617             NA
356    100   8.831372617             NA
357    100   8.831372617             NA
358    100   9.298569649             NA
359    100   9.298569649             NA
360    100   9.298569649             NA
361    100   9.643529915             NA
362    100   9.643529915             NA
363    100   9.643529915             NA
364    100  10.697735082             NA
365    100  10.697735082             NA
366    100  10.697735082             NA
367    100   5.951768068             NA
368    100   5.951768068             NA
369    100   5.951768068             NA
370    100  10.189950688             NA
371    100  10.189950688             NA
372    100  10.189950688             NA
373    100   6.388445576             NA
374    100   6.388445576             NA
375    100   6.388445576             NA
376    100   9.861056862             NA
377    100   9.861056862             NA
378    100   9.861056862             NA
379    100   9.479675711             NA
380    100   9.479675711             NA
381    100   9.479675711             NA
382    100  10.654979644             NA
383    100  10.654979644             NA
384    100  10.654979644             NA
49       4  10.788697608   10.788697608
50       4  10.788697608   10.788697608
51       4  10.788697608   10.788697608
52       4   8.728189212    8.728189212
53       4   8.728189212    8.728189212
54       4   8.728189212    8.728189212
55       4  10.348507084   10.348507084
56       4  10.348507084   10.348507084
57       4  10.348507084   10.348507084
58       4  10.491889156   10.491889156
59       4  10.491889156   10.491889156
60       4  10.491889156   10.491889156
61       4   9.764878647    9.764878648
62       4   9.764878647    9.764878648
63       4   9.764878647    9.764878648
64       4  10.159568883   10.159568883
65       4  10.159568883   10.159568883
66       4  10.159568883   10.159568883
67       4   8.831372617    8.831372617
68       4   8.831372617    8.831372617
69       4   8.831372617    8.831372617
70       4   9.298569649    9.298569649
71       4   9.298569649    9.298569649
72       4   9.298569649    9.298569649
73       4   9.643529915    9.643529915
74       4   9.643529915    9.643529915
75       4   9.643529915    9.643529915
76       4  10.697735082   10.697735083
77       4  10.697735082   10.697735083
78       4  10.697735082   10.697735083
79       4   5.951768068    5.951768069
80       4   5.951768068    5.951768069
81       4   5.951768068    5.951768069
82       4  10.189950688   10.189950689
83       4  10.189950688   10.189950689
84       4  10.189950688   10.189950689
85       4   6.388445576    6.388445576
86       4   6.388445576    6.388445576
87       4   6.388445576    6.388445576
88       4   9.861056862    9.861056862
89       4   9.861056862    9.861056862
90       4   9.861056862    9.861056862
91       4   9.479675711    9.479675711
92       4   9.479675711    9.479675711
93       4   9.479675711    9.479675711
94       4  10.654979644   10.654979644
95       4  10.654979644   10.654979644
96       4  10.654979644   10.654979644
1        2  10.788697608   10.788697609
2        2  10.788697608   10.788697609
3        2  10.788697608   10.788697609
4        2   8.728189212    8.728189213
5        2   8.728189212    8.728189213
6        2   8.728189212    8.728189213
7        2  10.348507084   10.348507085
8        2  10.348507084   10.348507085
9        2  10.348507084   10.348507085
10       2  10.491889156   10.491889157
11       2  10.491889156   10.491889157
12       2  10.491889156   10.491889157
13       2   9.764878647    9.764878648
14       2   9.764878647    9.764878648
15       2   9.764878647    9.764878648
16       2  10.159568883   10.159568884
17       2  10.159568883   10.159568884
18       2  10.159568883   10.159568884
19       2   8.831372617    8.831372618
20       2   8.831372617    8.831372618
21       2   8.831372617    8.831372618
22       2   9.298569649    9.298569650
23       2   9.298569649    9.298569650
24       2   9.298569649    9.298569650
25       2   9.643529915    9.643529916
26       2   9.643529915    9.643529916
27       2   9.643529915    9.643529916
28       2  10.697735082   10.697735083
29       2  10.697735082   10.697735083
30       2  10.697735082   10.697735083
31       2   5.951768068    5.951768069
32       2   5.951768068    5.951768069
33       2   5.951768068    5.951768069
34       2  10.189950688   10.189950689
35       2  10.189950688   10.189950689
36       2  10.189950688   10.189950689
37       2   6.388445576    6.388445576
38       2   6.388445576    6.388445576
39       2   6.388445576    6.388445576
40       2   9.861056862    9.861056863
41       2   9.861056862    9.861056863
42       2   9.861056862    9.861056863
43       2   9.479675711    9.479675712
44       2   9.479675711    9.479675712
45       2   9.479675711    9.479675712
46       2  10.654979644   10.654979645
47       2  10.654979644   10.654979645
48       2  10.654979644   10.654979645
289     12  10.788697608   10.788697608
290     12  10.788697608   10.788697608
291     12  10.788697608   10.788697608
292     12   8.728189212    8.728189212
293     12   8.728189212    8.728189212
294     12   8.728189212    8.728189212
295     12  10.348507084   10.348507084
296     12  10.348507084   10.348507084
297     12  10.348507084   10.348507084
298     12  10.491889156   10.491889157
299     12  10.491889156   10.491889157
300     12  10.491889156   10.491889157
301     12   9.764878647    9.764878648
302     12   9.764878647    9.764878648
303     12   9.764878647    9.764878648
304     12  10.159568883   10.159568883
305     12  10.159568883   10.159568883
306     12  10.159568883   10.159568883
307     12   8.831372617    8.831372617
308     12   8.831372617    8.831372617
309     12   8.831372617    8.831372617
310     12   9.298569649    9.298569649
311     12   9.298569649    9.298569649
312     12   9.298569649    9.298569649
313     12   9.643529915    9.643529915
314     12   9.643529915    9.643529915
315     12   9.643529915    9.643529915
316     12  10.697735082   10.697735083
317     12  10.697735082   10.697735083
318     12  10.697735082   10.697735083
319     12   5.951768068    5.951768069
320     12   5.951768068    5.951768069
321     12   5.951768068    5.951768069
322     12  10.189950688   10.189950689
323     12  10.189950688   10.189950689
324     12  10.189950688   10.189950689
325     12   6.388445576    6.388445576
326     12   6.388445576    6.388445576
327     12   6.388445576    6.388445576
328     12   9.861056862    9.861056862
329     12   9.861056862    9.861056862
330     12   9.861056862    9.861056862
331     12   9.479675711    9.479675711
332     12   9.479675711    9.479675711
333     12   9.479675711    9.479675711
334     12  10.654979644   10.654979644
335     12  10.654979644   10.654979644
336     12  10.654979644   10.654979644
145      8  10.788697608   10.788697607
146      8  10.788697608   10.788697607
147      8  10.788697608   10.788697607
148      8   8.728189212    8.728189211
149      8   8.728189212    8.728189211
150      8   8.728189212    8.728189211
151      8  10.348507084   10.348507083
152      8  10.348507084   10.348507083
153      8  10.348507084   10.348507083
154      8  10.491889156   10.491889155
155      8  10.491889156   10.491889155
156      8  10.491889156   10.491889155
157      8   9.764878647    9.764878647
158      8   9.764878647    9.764878647
159      8   9.764878647    9.764878647
160      8  10.159568883   10.159568882
161      8  10.159568883   10.159568882
162      8  10.159568883   10.159568882
163      8   8.831372617    8.831372616
164      8   8.831372617    8.831372616
165      8   8.831372617    8.831372616
166      8   9.298569649    9.298569648
167      8   9.298569649    9.298569648
168      8   9.298569649    9.298569648
169      8   9.643529915    9.643529914
170      8   9.643529915    9.643529914
171      8   9.643529915    9.643529914
172      8  10.697735082   10.697735082
173      8  10.697735082   10.697735082
174      8  10.697735082   10.697735082
175      8   5.951768068    5.951768068
176      8   5.951768068    5.951768068
177      8   5.951768068    5.951768068
178      8  10.189950688   10.189950688
179      8  10.189950688   10.189950688
180      8  10.189950688   10.189950688
181      8   6.388445576    6.388445575
182      8   6.388445576    6.388445575
183      8   6.388445576    6.388445575
184      8   9.861056862    9.861056861
185      8   9.861056862    9.861056861
186      8   9.861056862    9.861056861
187      8   9.479675711    9.479675710
188      8   9.479675711    9.479675710
189      8   9.479675711    9.479675710
190      8  10.654979644   10.654979643
191      8  10.654979644   10.654979643
192      8  10.654979644   10.654979643
433    102  10.788697608             NA
434    102  10.788697608             NA
435    102  10.788697608             NA
436    102   8.728189212             NA
437    102   8.728189212             NA
438    102   8.728189212             NA
439    102  10.348507084             NA
440    102  10.348507084             NA
441    102  10.348507084             NA
442    102  10.491889156             NA
443    102  10.491889156             NA
444    102  10.491889156             NA
445    102   9.764878647             NA
446    102   9.764878647             NA
447    102   9.764878647             NA
448    102  10.159568883             NA
449    102  10.159568883             NA
450    102  10.159568883             NA
451    102   8.831372617             NA
452    102   8.831372617             NA
453    102   8.831372617             NA
454    102   9.298569649             NA
455    102   9.298569649             NA
456    102   9.298569649             NA
457    102   9.643529915             NA
458    102   9.643529915             NA
459    102   9.643529915             NA
460    102  10.697735082             NA
461    102  10.697735082             NA
462    102  10.697735082             NA
463    102   5.951768068             NA
464    102   5.951768068             NA
465    102   5.951768068             NA
466    102  10.189950688             NA
467    102  10.189950688             NA
468    102  10.189950688             NA
469    102   6.388445576             NA
470    102   6.388445576             NA
471    102   6.388445576             NA
472    102   9.861056862             NA
473    102   9.861056862             NA
474    102   9.861056862             NA
475    102   9.479675711             NA
476    102   9.479675711             NA
477    102   9.479675711             NA
478    102  10.654979644             NA
479    102  10.654979644             NA
480    102  10.654979644             NA
385    101  10.788697608             NA
386    101  10.788697608             NA
387    101  10.788697608             NA
388    101   8.728189212             NA
389    101   8.728189212             NA
390    101   8.728189212             NA
391    101  10.348507084             NA
392    101  10.348507084             NA
393    101  10.348507084             NA
394    101  10.491889156             NA
395    101  10.491889156             NA
396    101  10.491889156             NA
397    101   9.764878647             NA
398    101   9.764878647             NA
399    101   9.764878647             NA
400    101  10.159568883             NA
401    101  10.159568883             NA
402    101  10.159568883             NA
403    101   8.831372617             NA
404    101   8.831372617             NA
405    101   8.831372617             NA
406    101   9.298569649             NA
407    101   9.298569649             NA
408    101   9.298569649             NA
409    101   9.643529915             NA
410    101   9.643529915             NA
411    101   9.643529915             NA
412    101  10.697735082             NA
413    101  10.697735082             NA
414    101  10.697735082             NA
415    101   5.951768068             NA
416    101   5.951768068             NA
417    101   5.951768068             NA
418    101  10.189950688             NA
419    101  10.189950688             NA
420    101  10.189950688             NA
421    101   6.388445576             NA
422    101   6.388445576             NA
423    101   6.388445576             NA
424    101   9.861056862             NA
425    101   9.861056862             NA
426    101   9.861056862             NA
427    101   9.479675711             NA
428    101   9.479675711             NA
429    101   9.479675711             NA
430    101  10.654979644             NA
431    101  10.654979644             NA
432    101  10.654979644             NA
193      9  10.788697608   10.788697607
194      9  10.788697608   10.788697607
195      9  10.788697608   10.788697607
196      9   8.728189212    8.728189211
197      9   8.728189212    8.728189211
198      9   8.728189212    8.728189211
199      9  10.348507084   10.348507083
200      9  10.348507084   10.348507083
201      9  10.348507084   10.348507083
202      9  10.491889156   10.491889156
203      9  10.491889156   10.491889156
204      9  10.491889156   10.491889156
205      9   9.764878647    9.764878647
206      9   9.764878647    9.764878647
207      9   9.764878647    9.764878647
208      9  10.159568883   10.159568883
209      9  10.159568883   10.159568883
210      9  10.159568883   10.159568883
211      9   8.831372617    8.831372616
212      9   8.831372617    8.831372616
213      9   8.831372617    8.831372616
214      9   9.298569649    9.298569648
215      9   9.298569649    9.298569648
216      9   9.298569649    9.298569648
217      9   9.643529915    9.643529914
218      9   9.643529915    9.643529914
219      9   9.643529915    9.643529914
220      9  10.697735082   10.697735082
221      9  10.697735082   10.697735082
222      9  10.697735082   10.697735082
223      9   5.951768068    5.951768068
224      9   5.951768068    5.951768068
225      9   5.951768068    5.951768068
226      9  10.189950688   10.189950688
227      9  10.189950688   10.189950688
228      9  10.189950688   10.189950688
229      9   6.388445576    6.388445575
230      9   6.388445576    6.388445575
231      9   6.388445576    6.388445575
232      9   9.861056862    9.861056861
233      9   9.861056862    9.861056861
234      9   9.861056862    9.861056861
235      9   9.479675711    9.479675711
236      9   9.479675711    9.479675711
237      9   9.479675711    9.479675711
238      9  10.654979644   10.654979643
239      9  10.654979644   10.654979643
240      9  10.654979644   10.654979643
> (n2prD01 <- predict(fit2, newD, level=0:1))#  "
    TreeID predict.fixed predict.TreeID
97       5  10.691223170   10.691223170
98       5  10.296461839   10.296461839
99       5  11.075393501   11.075393502
100      5   8.585737598    8.585737598
101      5   8.270794581    8.270794582
102      5   9.031667478    9.031667479
103      5  10.238808348   10.238808349
104      5   9.861283692    9.861283693
105      5  10.641512296   10.641512296
106      5  10.386015148   10.386015149
107      5  10.002887172   10.002887172
108      5  10.783000683   10.783000683
109      5   9.641171765    9.641171765
110      5   9.286344667    9.286344668
111      5  10.063976117   10.063976117
112      5  10.045061408   10.045061409
113      5   9.674904014    9.674904015
114      5  10.454830700   10.454830700
115      5   8.690436650    8.690436650
116      5   8.371548553    8.371548553
117      5   9.134786357    9.134786358
118      5   9.165463082    9.165463083
119      5   8.828644301    8.828644302
120      5   9.600661596    9.600661597
121      5   9.517224050    9.517224050
122      5   9.167094089    9.167094089
123      5   9.943567233    9.943567234
124      5  10.597617248   10.597617249
125      5  10.206426086   10.206426086
126      5  10.985855161   10.985855162
127      5   5.797197269    5.797197270
128      5   5.586401062    5.586401062
129      5   6.225686453    6.225686453
130      5  10.076198753   10.076198754
131      5   9.704857937    9.704857937
132      5  10.484867975   10.484867976
133      5   6.232149555    6.232149556
134      5   6.005226210    6.005226210
135      5   6.671050826    6.671050826
136      5   9.739486434    9.739486434
137      5   9.380931087    9.380931087
138      5  10.159329342   10.159329343
139      5   9.350031285    9.350031285
140      5   9.006231697    9.006231697
141      5   9.780802934    9.780802934
142      5  10.553640463   10.553640464
143      5  10.164125899   10.164125900
144      5  10.943747493   10.943747494
241     11  10.691223170   10.691223169
242     11  10.296461839   10.296461839
243     11  11.075393501   11.075393501
244     11   8.585737598    8.585737598
245     11   8.270794581    8.270794581
246     11   9.031667478    9.031667478
247     11  10.238808348   10.238808348
248     11   9.861283692    9.861283692
249     11  10.641512296   10.641512296
250     11  10.386015148   10.386015148
251     11  10.002887172   10.002887172
252     11  10.783000683   10.783000683
253     11   9.641171765    9.641171765
254     11   9.286344667    9.286344667
255     11  10.063976117   10.063976116
256     11  10.045061408   10.045061408
257     11   9.674904014    9.674904014
258     11  10.454830700   10.454830700
259     11   8.690436650    8.690436650
260     11   8.371548553    8.371548553
261     11   9.134786357    9.134786357
262     11   9.165463082    9.165463082
263     11   8.828644301    8.828644301
264     11   9.600661596    9.600661596
265     11   9.517224050    9.517224050
266     11   9.167094089    9.167094089
267     11   9.943567233    9.943567233
268     11  10.597617248   10.597617248
269     11  10.206426086   10.206426086
270     11  10.985855161   10.985855161
271     11   5.797197269    5.797197269
272     11   5.586401062    5.586401062
273     11   6.225686453    6.225686453
274     11  10.076198753   10.076198753
275     11   9.704857937    9.704857937
276     11  10.484867975   10.484867975
277     11   6.232149555    6.232149555
278     11   6.005226210    6.005226210
279     11   6.671050826    6.671050826
280     11   9.739486434    9.739486434
281     11   9.380931087    9.380931087
282     11  10.159329342   10.159329342
283     11   9.350031285    9.350031285
284     11   9.006231697    9.006231696
285     11   9.780802934    9.780802934
286     11  10.553640463   10.553640463
287     11  10.164125899   10.164125899
288     11  10.943747493   10.943747493
337    100  10.691223170             NA
338    100  10.296461839             NA
339    100  11.075393501             NA
340    100   8.585737598             NA
341    100   8.270794581             NA
342    100   9.031667478             NA
343    100  10.238808348             NA
344    100   9.861283692             NA
345    100  10.641512296             NA
346    100  10.386015148             NA
347    100  10.002887172             NA
348    100  10.783000683             NA
349    100   9.641171765             NA
350    100   9.286344667             NA
351    100  10.063976117             NA
352    100  10.045061408             NA
353    100   9.674904014             NA
354    100  10.454830700             NA
355    100   8.690436650             NA
356    100   8.371548553             NA
357    100   9.134786357             NA
358    100   9.165463082             NA
359    100   8.828644301             NA
360    100   9.600661596             NA
361    100   9.517224050             NA
362    100   9.167094089             NA
363    100   9.943567233             NA
364    100  10.597617248             NA
365    100  10.206426086             NA
366    100  10.985855161             NA
367    100   5.797197269             NA
368    100   5.586401062             NA
369    100   6.225686453             NA
370    100  10.076198753             NA
371    100   9.704857937             NA
372    100  10.484867975             NA
373    100   6.232149555             NA
374    100   6.005226210             NA
375    100   6.671050826             NA
376    100   9.739486434             NA
377    100   9.380931087             NA
378    100  10.159329342             NA
379    100   9.350031285             NA
380    100   9.006231697             NA
381    100   9.780802934             NA
382    100  10.553640463             NA
383    100  10.164125899             NA
384    100  10.943747493             NA
49       4  10.691223170   10.691223170
50       4  10.296461839   10.296461839
51       4  11.075393501   11.075393501
52       4   8.585737598    8.585737598
53       4   8.270794581    8.270794582
54       4   9.031667478    9.031667479
55       4  10.238808348   10.238808349
56       4   9.861283692    9.861283692
57       4  10.641512296   10.641512296
58       4  10.386015148   10.386015149
59       4  10.002887172   10.002887172
60       4  10.783000683   10.783000683
61       4   9.641171765    9.641171765
62       4   9.286344667    9.286344668
63       4  10.063976117   10.063976117
64       4  10.045061408   10.045061408
65       4   9.674904014    9.674904015
66       4  10.454830700   10.454830700
67       4   8.690436650    8.690436650
68       4   8.371548553    8.371548553
69       4   9.134786357    9.134786358
70       4   9.165463082    9.165463083
71       4   8.828644301    8.828644301
72       4   9.600661596    9.600661597
73       4   9.517224050    9.517224050
74       4   9.167094089    9.167094089
75       4   9.943567233    9.943567233
76       4  10.597617248   10.597617249
77       4  10.206426086   10.206426086
78       4  10.985855161   10.985855162
79       4   5.797197269    5.797197270
80       4   5.586401062    5.586401062
81       4   6.225686453    6.225686453
82       4  10.076198753   10.076198754
83       4   9.704857937    9.704857937
84       4  10.484867975   10.484867976
85       4   6.232149555    6.232149556
86       4   6.005226210    6.005226210
87       4   6.671050826    6.671050826
88       4   9.739486434    9.739486434
89       4   9.380931087    9.380931087
90       4  10.159329342   10.159329342
91       4   9.350031285    9.350031285
92       4   9.006231697    9.006231697
93       4   9.780802934    9.780802934
94       4  10.553640463   10.553640464
95       4  10.164125899   10.164125900
96       4  10.943747493   10.943747493
1        2  10.691223170   10.691223171
2        2  10.296461839   10.296461840
3        2  11.075393501   11.075393502
4        2   8.585737598    8.585737599
5        2   8.270794581    8.270794582
6        2   9.031667478    9.031667479
7        2  10.238808348   10.238808350
8        2   9.861283692    9.861283693
9        2  10.641512296   10.641512297
10       2  10.386015148   10.386015149
11       2  10.002887172   10.002887173
12       2  10.783000683   10.783000684
13       2   9.641171765    9.641171766
14       2   9.286344667    9.286344668
15       2  10.063976117   10.063976118
16       2  10.045061408   10.045061409
17       2   9.674904014    9.674904015
18       2  10.454830700   10.454830701
19       2   8.690436650    8.690436651
20       2   8.371548553    8.371548554
21       2   9.134786357    9.134786358
22       2   9.165463082    9.165463083
23       2   8.828644301    8.828644302
24       2   9.600661596    9.600661597
25       2   9.517224050    9.517224051
26       2   9.167094089    9.167094090
27       2   9.943567233    9.943567234
28       2  10.597617248   10.597617249
29       2  10.206426086   10.206426087
30       2  10.985855161   10.985855162
31       2   5.797197269    5.797197270
32       2   5.586401062    5.586401062
33       2   6.225686453    6.225686454
34       2  10.076198753   10.076198754
35       2   9.704857937    9.704857938
36       2  10.484867975   10.484867977
37       2   6.232149555    6.232149556
38       2   6.005226210    6.005226211
39       2   6.671050826    6.671050826
40       2   9.739486434    9.739486435
41       2   9.380931087    9.380931088
42       2  10.159329342   10.159329343
43       2   9.350031285    9.350031286
44       2   9.006231697    9.006231698
45       2   9.780802934    9.780802935
46       2  10.553640463   10.553640464
47       2  10.164125899   10.164125901
48       2  10.943747493   10.943747494
289     12  10.691223170   10.691223170
290     12  10.296461839   10.296461839
291     12  11.075393501   11.075393501
292     12   8.585737598    8.585737598
293     12   8.270794581    8.270794582
294     12   9.031667478    9.031667479
295     12  10.238808348   10.238808349
296     12   9.861283692    9.861283692
297     12  10.641512296   10.641512296
298     12  10.386015148   10.386015148
299     12  10.002887172   10.002887172
300     12  10.783000683   10.783000683
301     12   9.641171765    9.641171765
302     12   9.286344667    9.286344668
303     12  10.063976117   10.063976117
304     12  10.045061408   10.045061408
305     12   9.674904014    9.674904015
306     12  10.454830700   10.454830700
307     12   8.690436650    8.690436650
308     12   8.371548553    8.371548553
309     12   9.134786357    9.134786358
310     12   9.165463082    9.165463083
311     12   8.828644301    8.828644301
312     12   9.600661596    9.600661597
313     12   9.517224050    9.517224050
314     12   9.167094089    9.167094089
315     12   9.943567233    9.943567233
316     12  10.597617248   10.597617249
317     12  10.206426086   10.206426086
318     12  10.985855161   10.985855161
319     12   5.797197269    5.797197270
320     12   5.586401062    5.586401062
321     12   6.225686453    6.225686453
322     12  10.076198753   10.076198754
323     12   9.704857937    9.704857937
324     12  10.484867975   10.484867976
325     12   6.232149555    6.232149556
326     12   6.005226210    6.005226210
327     12   6.671050826    6.671050826
328     12   9.739486434    9.739486434
329     12   9.380931087    9.380931087
330     12  10.159329342   10.159329342
331     12   9.350031285    9.350031285
332     12   9.006231697    9.006231697
333     12   9.780802934    9.780802934
334     12  10.553640463   10.553640463
335     12  10.164125899   10.164125900
336     12  10.943747493   10.943747493
145      8  10.691223170   10.691223168
146      8  10.296461839   10.296461838
147      8  11.075393501   11.075393500
148      8   8.585737598    8.585737597
149      8   8.270794581    8.270794580
150      8   9.031667478    9.031667477
151      8  10.238808348   10.238808347
152      8   9.861283692    9.861283691
153      8  10.641512296   10.641512295
154      8  10.386015148   10.386015147
155      8  10.002887172   10.002887170
156      8  10.783000683   10.783000682
157      8   9.641171765    9.641171764
158      8   9.286344667    9.286344666
159      8  10.063976117   10.063976115
160      8  10.045061408   10.045061407
161      8   9.674904014    9.674904013
162      8  10.454830700   10.454830699
163      8   8.690436650    8.690436649
164      8   8.371548553    8.371548552
165      8   9.134786357    9.134786356
166      8   9.165463082    9.165463081
167      8   8.828644301    8.828644300
168      8   9.600661596    9.600661595
169      8   9.517224050    9.517224049
170      8   9.167094089    9.167094088
171      8   9.943567233    9.943567232
172      8  10.597617248   10.597617247
173      8  10.206426086   10.206426084
174      8  10.985855161   10.985855160
175      8   5.797197269    5.797197269
176      8   5.586401062    5.586401061
177      8   6.225686453    6.225686452
178      8  10.076198753   10.076198752
179      8   9.704857937    9.704857936
180      8  10.484867975   10.484867974
181      8   6.232149555    6.232149555
182      8   6.005226210    6.005226209
183      8   6.671050826    6.671050825
184      8   9.739486434    9.739486433
185      8   9.380931087    9.380931086
186      8  10.159329342   10.159329341
187      8   9.350031285    9.350031284
188      8   9.006231697    9.006231695
189      8   9.780802934    9.780802933
190      8  10.553640463   10.553640462
191      8  10.164125899   10.164125898
192      8  10.943747493   10.943747492
433    102  10.691223170             NA
434    102  10.296461839             NA
435    102  11.075393501             NA
436    102   8.585737598             NA
437    102   8.270794581             NA
438    102   9.031667478             NA
439    102  10.238808348             NA
440    102   9.861283692             NA
441    102  10.641512296             NA
442    102  10.386015148             NA
443    102  10.002887172             NA
444    102  10.783000683             NA
445    102   9.641171765             NA
446    102   9.286344667             NA
447    102  10.063976117             NA
448    102  10.045061408             NA
449    102   9.674904014             NA
450    102  10.454830700             NA
451    102   8.690436650             NA
452    102   8.371548553             NA
453    102   9.134786357             NA
454    102   9.165463082             NA
455    102   8.828644301             NA
456    102   9.600661596             NA
457    102   9.517224050             NA
458    102   9.167094089             NA
459    102   9.943567233             NA
460    102  10.597617248             NA
461    102  10.206426086             NA
462    102  10.985855161             NA
463    102   5.797197269             NA
464    102   5.586401062             NA
465    102   6.225686453             NA
466    102  10.076198753             NA
467    102   9.704857937             NA
468    102  10.484867975             NA
469    102   6.232149555             NA
470    102   6.005226210             NA
471    102   6.671050826             NA
472    102   9.739486434             NA
473    102   9.380931087             NA
474    102  10.159329342             NA
475    102   9.350031285             NA
476    102   9.006231697             NA
477    102   9.780802934             NA
478    102  10.553640463             NA
479    102  10.164125899             NA
480    102  10.943747493             NA
385    101  10.691223170             NA
386    101  10.296461839             NA
387    101  11.075393501             NA
388    101   8.585737598             NA
389    101   8.270794581             NA
390    101   9.031667478             NA
391    101  10.238808348             NA
392    101   9.861283692             NA
393    101  10.641512296             NA
394    101  10.386015148             NA
395    101  10.002887172             NA
396    101  10.783000683             NA
397    101   9.641171765             NA
398    101   9.286344667             NA
399    101  10.063976117             NA
400    101  10.045061408             NA
401    101   9.674904014             NA
402    101  10.454830700             NA
403    101   8.690436650             NA
404    101   8.371548553             NA
405    101   9.134786357             NA
406    101   9.165463082             NA
407    101   8.828644301             NA
408    101   9.600661596             NA
409    101   9.517224050             NA
410    101   9.167094089             NA
411    101   9.943567233             NA
412    101  10.597617248             NA
413    101  10.206426086             NA
414    101  10.985855161             NA
415    101   5.797197269             NA
416    101   5.586401062             NA
417    101   6.225686453             NA
418    101  10.076198753             NA
419    101   9.704857937             NA
420    101  10.484867975             NA
421    101   6.232149555             NA
422    101   6.005226210             NA
423    101   6.671050826             NA
424    101   9.739486434             NA
425    101   9.380931087             NA
426    101  10.159329342             NA
427    101   9.350031285             NA
428    101   9.006231697             NA
429    101   9.780802934             NA
430    101  10.553640463             NA
431    101  10.164125899             NA
432    101  10.943747493             NA
193      9  10.691223170   10.691223169
194      9  10.296461839   10.296461838
195      9  11.075393501   11.075393500
196      9   8.585737598    8.585737597
197      9   8.270794581    8.270794581
198      9   9.031667478    9.031667478
199      9  10.238808348   10.238808348
200      9   9.861283692    9.861283692
201      9  10.641512296   10.641512295
202      9  10.386015148   10.386015148
203      9  10.002887172   10.002887171
204      9  10.783000683   10.783000682
205      9   9.641171765    9.641171764
206      9   9.286344667    9.286344667
207      9  10.063976117   10.063976116
208      9  10.045061408   10.045061408
209      9   9.674904014    9.674904014
210      9  10.454830700   10.454830699
211      9   8.690436650    8.690436650
212      9   8.371548553    8.371548552
213      9   9.134786357    9.134786357
214      9   9.165463082    9.165463082
215      9   8.828644301    8.828644301
216      9   9.600661596    9.600661596
217      9   9.517224050    9.517224049
218      9   9.167094089    9.167094088
219      9   9.943567233    9.943567233
220      9  10.597617248   10.597617248
221      9  10.206426086   10.206426085
222      9  10.985855161   10.985855161
223      9   5.797197269    5.797197269
224      9   5.586401062    5.586401061
225      9   6.225686453    6.225686453
226      9  10.076198753   10.076198753
227      9   9.704857937    9.704857936
228      9  10.484867975   10.484867975
229      9   6.232149555    6.232149555
230      9   6.005226210    6.005226210
231      9   6.671050826    6.671050825
232      9   9.739486434    9.739486433
233      9   9.380931087    9.380931086
234      9  10.159329342   10.159329341
235      9   9.350031285    9.350031284
236      9   9.006231697    9.006231696
237      9   9.780802934    9.780802933
238      9  10.553640463   10.553640463
239      9  10.164125899   10.164125899
240      9  10.943747493   10.943747493
> ## consistency :
> stopifnot(
+     identical(is.na(n1prD1), is.na(n2prD1)),
+     identical(sort(unique(newD[is.na(n2prD1), "TreeID"])), 100:102),
+     sort(unique( newD[is.na(n2prD1), "TreeID"] )) %in% 100:102 ,
+     all.equal(as.vector(n1prD0), n1prD01[,"predict.fixed"], tolerance= 1e-15),
+     all.equal(as.vector(n2prD0), n2prD01[,"predict.fixed"], tolerance= 1e-15),
+     all.equal(as.vector(n1prD1), n1prD01[,"predict.TreeID"],tolerance= 1e-15),
+     all.equal(as.vector(n2prD1), n2prD01[,"predict.TreeID"],tolerance= 1e-15))
> 
> ## new data with factor levels stored as character
> stopifnot(all.equal(predict(fit2, data.frame(SP="A", age=2), level = 0),
+                     predict(fit2, level = 0)[1], check.attributes = FALSE))
> ## in nlme <= 3.1-155, failed with
> ## Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : 
> ##   contrasts can be applied only to factors with 2 or more levels
> 
> ## model without intercept
> fit3 <- update(fit2, fixed = a + b ~ SP - 1)
> stopifnot(all.equal(predict(fit3, head(df, 3)),
+                     head(predict(fit3), 3), check.attributes = FALSE))
> ## in nlme <= 3.1-155, prediction failed if not all levels occurred
> ## Error in f %*% beta[fmap[[nm]]] : non-conformable arguments
> 
