
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "gridGraphics"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('gridGraphics')
Loading required package: grid
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("grid.echo")
> ### * grid.echo
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: grid.echo
> ### Title: Echo 'graphics' output using 'grid' graphics
> ### Aliases: grid.echo echoGrob
> ### Keywords: dplot
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # Echo existing drawing
> ##D plot(1)
> ##D grid.echo()
> ##D 
> ##D # Echo result of call to a plotting function
> ##D plotfun <- function() plot(1:10)
> ##D grid.echo(plotfun)
> ##D 
> ##D # Echo result of a plotting function (anonymous) into current viewport
> ##D grid.newpage()
> ##D pushViewport(viewport(x=0, width=.5, just="left"))
> ##D grid.rect(gp=gpar(col=NA, fill="grey"))
> ##D grid.echo(function() plot(1:10), newpage=FALSE)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("plotdiff")
> ### * plotdiff
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: plotdiff
> ### Title: Test for identical output from 'grid.echo()'
> ### Aliases: plotdiff plotdiffInit plotdiffResult
> ### Keywords: dplot
> 
> ### ** Examples
> 
> ## Not run: 
> ##D plotdiff(expression(plot(1)), "plot")
> ## End(Not run)
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.157 0.014 0.206 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
