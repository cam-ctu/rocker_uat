
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "httr"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('httr')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("BROWSE")
> ### * BROWSE
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: BROWSE
> ### Title: Open specified url in browser.
> ### Aliases: BROWSE
> 
> ### ** Examples
> 
> BROWSE("http://google.com")
Please point your browser to the following url: 
http://google.com
> BROWSE("http://had.co.nz")
Please point your browser to the following url: 
http://had.co.nz
> 
> 
> 
> cleanEx()
> nameEx("DELETE")
> ### * DELETE
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: DELETE
> ### Title: Send a DELETE request.
> ### Aliases: DELETE
> 
> ### ** Examples
> 
> ## Not run: 
> ##D DELETE("http://httpbin.org/delete")
> ##D POST("http://httpbin.org/delete")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("GET")
> ### * GET
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: GET
> ### Title: GET a url.
> ### Aliases: GET
> 
> ### ** Examples
> 
> GET("http://google.com/")
Response [http://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.5 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,n,p=(n=g.sdo)!=null?n:!0,q=0,r,t...
"&bver="+b(t.bv);t.dpf&&(c+="&dpf="+b(t.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> ## Not run: 
> ##D GET("http://google.com/", path = "search")
> ##D GET("http://google.com/", path = "search", query = list(q = "ham"))
> ## End(Not run)
> 
> # See what GET is doing with httpbin.org
> ## Not run: 
> ##D url <- "http://httpbin.org/get"
> ##D GET(url)
> ##D GET(url, add_headers(a = 1, b = 2))
> ##D GET(url, set_cookies(a = 1, b = 2))
> ##D GET(url, add_headers(a = 1, b = 2), set_cookies(a = 1, b = 2))
> ##D GET(url, authenticate("username", "password"))
> ##D GET(url, verbose())
> ## End(Not run)
> 
> # You might want to manually specify the handle so you can have multiple
> # independent logins to the same website.
> ## Not run: 
> ##D google <- handle("http://google.com")
> ##D GET(handle = google, path = "/")
> ##D GET(handle = google, path = "search")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("HEAD")
> ### * HEAD
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: HEAD
> ### Title: Get url HEADers.
> ### Aliases: HEAD
> 
> ### ** Examples
> 
> HEAD("http://google.com")
Response [http://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> headers(HEAD("http://google.com"))
$`content-type`
[1] "text/html; charset=ISO-8859-1"

$`content-security-policy-report-only`
[1] "object-src 'none';base-uri 'self';script-src 'nonce-_l7hOh0RhS10ao_fu_-mpA' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp"

$date
[1] "Mon, 25 Nov 2024 17:10:15 GMT"

$server
[1] "gws"

$`x-xss-protection`
[1] "0"

$`x-frame-options`
[1] "SAMEORIGIN"

$`transfer-encoding`
[1] "chunked"

$expires
[1] "Mon, 25 Nov 2024 17:10:15 GMT"

$`cache-control`
[1] "private"

$`set-cookie`
[1] "AEC=AZ6Zc-VbyrM49kXGZM8KSUMc5aXN9UvR_6KJHxLKO42ECtouv5mT24vyVw; expires=Sat, 24-May-2025 17:10:15 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax"

attr(,"class")
[1] "insensitive" "list"       
> 
> 
> 
> cleanEx()
> nameEx("POST")
> ### * POST
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: POST
> ### Title: POST file to a server.
> ### Aliases: POST
> 
> ### ** Examples
> 
> ## Not run: 
> ##D b2 <- "http://httpbin.org/post"
> ##D POST(b2, body = "A simple text string")
> ##D POST(b2, body = list(x = "A simple text string"))
> ##D POST(b2, body = list(y = upload_file(system.file("CITATION"))))
> ##D POST(b2, body = list(x = "A simple text string"), encode = "json")
> ##D 
> ##D # body can also be provided as a json string directly to deal
> ##D # with specific case, like an empty element in the json string.
> ##D # passing as string directly
> ##D POST(b2, body = '{"a":1,"b":{}}', encode = "raw")
> ##D # or building the json string before
> ##D json_body <- jsonlite::toJSON(list(a = 1, b = NULL), auto_unbox = TRUE)
> ##D POST(b2, body = json_body, encode = "raw")
> ##D 
> ##D # Various types of empty body:
> ##D POST(b2, body = NULL, verbose())
> ##D POST(b2, body = FALSE, verbose())
> ##D POST(b2, body = "", verbose())
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("PUT")
> ### * PUT
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: PUT
> ### Title: Send PUT request to server.
> ### Aliases: PUT
> 
> ### ** Examples
> 
> ## Not run: 
> ##D POST("http://httpbin.org/put")
> ##D PUT("http://httpbin.org/put")
> ##D 
> ##D b2 <- "http://httpbin.org/put"
> ##D PUT(b2, body = "A simple text string")
> ##D PUT(b2, body = list(x = "A simple text string"))
> ##D PUT(b2, body = list(y = upload_file(system.file("CITATION"))))
> ##D PUT(b2, body = list(x = "A simple text string"), encode = "json")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("RETRY")
> ### * RETRY
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: RETRY
> ### Title: Retry a request until it succeeds.
> ### Aliases: RETRY
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # Succeeds straight away
> ##D RETRY("GET", "http://httpbin.org/status/200")
> ##D # Never succeeds
> ##D RETRY("GET", "http://httpbin.org/status/500")
> ##D # Invalid hostname generates curl error condition and is retried but eventually
> ##D # raises an error condition.
> ##D RETRY("GET", "http://invalidhostname/")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("VERB")
> ### * VERB
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: VERB
> ### Title: VERB a url.
> ### Aliases: VERB
> 
> ### ** Examples
> 
> r <- VERB(
+   "PROPFIND", "http://svn.r-project.org/R/tags/",
+   add_headers(depth = 1), verbose()
+ )
-> PROPFIND /R/tags/ HTTP/1.1
-> Host: svn.r-project.org
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Accept: application/json, text/xml, application/xml, */*
-> depth: 1
-> Content-Length: 0
-> 
<- HTTP/1.1 207 Multi-Status
<- Date: Mon, 25 Nov 2024 17:10:15 GMT
<- Server: Apache/2.4.61 (Debian)
<- Upgrade: h2,h2c
<- Connection: Upgrade
<- Transfer-Encoding: chunked
<- Content-Type: text/xml; charset="utf-8"
<- 
> stop_for_status(r)
> content(r)
{xml_document}
<multistatus xmlns:D="DAV:">
 [1] <D:response xmlns:V="http://subversion.tigris.org/xmlns/dav/" xmlns:S="h ...
 [2] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [3] <D:response xmlns:V="http://subversion.tigris.org/xmlns/dav/" xmlns:S="h ...
 [4] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [5] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [6] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [7] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [8] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
 [9] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[10] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[11] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[12] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[13] <D:response xmlns:V="http://subversion.tigris.org/xmlns/dav/" xmlns:S="h ...
[14] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[15] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[16] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[17] <D:response xmlns:V="http://subversion.tigris.org/xmlns/dav/" xmlns:S="h ...
[18] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[19] <D:response xmlns:S="http://subversion.tigris.org/xmlns/svn/" xmlns:C="h ...
[20] <D:response xmlns:V="http://subversion.tigris.org/xmlns/dav/" xmlns:S="h ...
...
> 
> ## Not run: 
> ##D VERB("POST", url = "http://httpbin.org/post")
> ##D VERB("POST", url = "http://httpbin.org/post", body = "foobar")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("add_headers")
> ### * add_headers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: add_headers
> ### Title: Add additional headers to a request.
> ### Aliases: add_headers
> 
> ### ** Examples
> 
> add_headers(a = 1, b = 2)
<request>
Headers:
* a: 1
* b: 2
> add_headers(.headers = c(a = "1", b = "2"))
<request>
Headers:
* a: 1
* b: 2
> 
> ## Not run: 
> ##D GET("http://httpbin.org/headers")
> ##D 
> ##D # Add arbitrary headers
> ##D GET(
> ##D   "http://httpbin.org/headers",
> ##D   add_headers(version = version$version.string)
> ##D )
> ##D 
> ##D # Override default headers with empty strings
> ##D GET("http://httpbin.org/headers", add_headers(Accept = ""))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("authenticate")
> ### * authenticate
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: authenticate
> ### Title: Use http authentication.
> ### Aliases: authenticate
> 
> ### ** Examples
> 
> ## Not run: 
> ##D GET("http://httpbin.org/basic-auth/user/passwd")
> ##D GET(
> ##D   "http://httpbin.org/basic-auth/user/passwd",
> ##D   authenticate("user", "passwd")
> ##D )
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("cache_info")
> ### * cache_info
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cache_info
> ### Title: Compute caching information for a response.
> ### Aliases: cache_info rerequest
> 
> ### ** Examples
> 
> # Never cached, always causes redownload
> r1 <- GET("https://www.google.com")
> cache_info(r1)
<cache_info>  https://www.google.com/
  Cacheable:     TRUE
  Expires:       Mon, 25 Nov 2024 17:10:16 GMT <expired>
  Last-Modified: 
  Etag:          
> r1$date
[1] "2024-11-25 17:10:16 GMT"
> rerequest(r1)$date
[1] "2024-11-25 17:10:16 GMT"
> 
> # Expires in a year
> r2 <- GET("https://www.google.com/images/srpr/logo11w.png")
> cache_info(r2)
<cache_info>  https://www.google.com/images/srpr/logo11w.png
  Cacheable:     TRUE
  Expires:       Tue, 25 Nov 2025 17:10:16 GMT
  Last-Modified: Tue, 22 Oct 2019 18:30:00 GMT
  Etag:          
> r2$date
[1] "2024-11-25 17:10:16 GMT"
> rerequest(r2)$date
[1] "2024-11-25 17:10:16 GMT"
> 
> ## Not run: 
> ##D # Has last-modified and etag, so does revalidation
> ##D r3 <- GET("http://httpbin.org/cache")
> ##D cache_info(r3)
> ##D r3$date
> ##D rerequest(r3)$date
> ##D 
> ##D # Expires after 5 seconds
> ##D r4 <- GET("http://httpbin.org/cache/5")
> ##D cache_info(r4)
> ##D r4$date
> ##D rerequest(r4)$date
> ##D Sys.sleep(5)
> ##D cache_info(r4)
> ##D rerequest(r4)$date
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("config")
> ### * config
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: config
> ### Title: Set curl options.
> ### Aliases: config
> 
> ### ** Examples
> 
> # There are a number of ways to modify the configuration of a request
> # * you can add directly to a request
> HEAD("https://www.google.com", verbose())
-> HEAD / HTTP/2
-> Host: www.google.com
-> user-agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> accept-encoding: deflate, gzip, br, zstd
-> cookie: NID=519=ayfPz3SDgPFFHqz0WOU6KOrDrReIWQ8xsUAPrmS5sq78dxYOkNClWYE8DAYg8pzSOyUmUL7rFOP8lxgGTvQuJjV53p2CIFvj3OH_ioPBZ4SXP8iQmNbd1dG__VnX-pyWP03MmIyg9m2KSrapHX63c6f45qpm-4aDD-v51OXX_kJu7y3UWn0XtE_xogICWHlk0haSucOk; AEC=AZ6Zc-VUfdXb4CAJfrhdao1eu3iEjevhaafK-W01S9Jc97xTLX3TjlfECnU
-> accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/2 200 
<- content-type: text/html; charset=ISO-8859-1
<- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-3Sde8FijnMUxxRAKGrbIYg' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- accept-ch: Sec-CH-Prefers-Color-Scheme
<- date: Mon, 25 Nov 2024 17:10:16 GMT
<- server: gws
<- x-xss-protection: 0
<- x-frame-options: SAMEORIGIN
<- alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
<- 
Response [https://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> 
> # * you can wrap with with_config()
> with_config(verbose(), HEAD("https://www.google.com"))
-> HEAD / HTTP/2
-> Host: www.google.com
-> user-agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> accept-encoding: deflate, gzip, br, zstd
-> cookie: NID=519=ayfPz3SDgPFFHqz0WOU6KOrDrReIWQ8xsUAPrmS5sq78dxYOkNClWYE8DAYg8pzSOyUmUL7rFOP8lxgGTvQuJjV53p2CIFvj3OH_ioPBZ4SXP8iQmNbd1dG__VnX-pyWP03MmIyg9m2KSrapHX63c6f45qpm-4aDD-v51OXX_kJu7y3UWn0XtE_xogICWHlk0haSucOk; AEC=AZ6Zc-VUfdXb4CAJfrhdao1eu3iEjevhaafK-W01S9Jc97xTLX3TjlfECnU
-> accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/2 200 
<- content-type: text/html; charset=ISO-8859-1
<- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-FSoYFa-cHcJa2lbU_PjsXw' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- accept-ch: Sec-CH-Prefers-Color-Scheme
<- date: Mon, 25 Nov 2024 17:10:16 GMT
<- server: gws
<- x-xss-protection: 0
<- x-frame-options: SAMEORIGIN
<- alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
<- 
Response [https://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> 
> # * you can set global with set_config()
> old <- set_config(verbose())
> HEAD("https://www.google.com")
-> HEAD / HTTP/2
-> Host: www.google.com
-> user-agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> accept-encoding: deflate, gzip, br, zstd
-> cookie: NID=519=ayfPz3SDgPFFHqz0WOU6KOrDrReIWQ8xsUAPrmS5sq78dxYOkNClWYE8DAYg8pzSOyUmUL7rFOP8lxgGTvQuJjV53p2CIFvj3OH_ioPBZ4SXP8iQmNbd1dG__VnX-pyWP03MmIyg9m2KSrapHX63c6f45qpm-4aDD-v51OXX_kJu7y3UWn0XtE_xogICWHlk0haSucOk; AEC=AZ6Zc-VUfdXb4CAJfrhdao1eu3iEjevhaafK-W01S9Jc97xTLX3TjlfECnU
-> accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/2 200 
<- content-type: text/html; charset=ISO-8859-1
<- content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-xo835bxRJEezJfnfCxDgwQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- accept-ch: Sec-CH-Prefers-Color-Scheme
<- date: Mon, 25 Nov 2024 17:10:16 GMT
<- server: gws
<- x-xss-protection: 0
<- x-frame-options: SAMEORIGIN
<- alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
<- 
Response [https://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> # and re-establish the previous settings with
> set_config(old, override = TRUE)
> HEAD("https://www.google.com")
Response [https://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> # or
> reset_config()
> HEAD("https://www.google.com")
Response [https://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 204
  Content-Type: text/html
<EMPTY BODY>
> 
> # If available, you should use a friendly httr wrapper over RCurl
> # options. But you can pass Curl options (as listed in httr_options())
> # in config
> HEAD("https://www.google.com/", config(verbose = TRUE))
* Found bundle for host www.google.com: 0x55cb18e6de10 [can multiplex]
* Re-using existing connection! (#3) with host www.google.com
* Connected to www.google.com (142.251.167.105) port 443 (#3)
* Using Stream ID: 11 (easy handle 0x55cb1a057e30)
> HEAD / HTTP/2
Host: www.google.com
user-agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
accept-encoding: deflate, gzip, br, zstd
cookie: NID=519=ayfPz3SDgPFFHqz0WOU6KOrDrReIWQ8xsUAPrmS5sq78dxYOkNClWYE8DAYg8pzSOyUmUL7rFOP8lxgGTvQuJjV53p2CIFvj3OH_ioPBZ4SXP8iQmNbd1dG__VnX-pyWP03MmIyg9m2KSrapHX63c6f45qpm-4aDD-v51OXX_kJu7y3UWn0XtE_xogICWHlk0haSucOk; AEC=AZ6Zc-VUfdXb4CAJfrhdao1eu3iEjevhaafK-W01S9Jc97xTLX3TjlfECnU
accept: application/json, text/xml, application/xml, */*

< HTTP/2 200 
< content-type: text/html; charset=ISO-8859-1
< content-security-policy-report-only: object-src 'none';base-uri 'self';script-src 'nonce-joPu4tHBCf2notzjjSTD_g' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
< accept-ch: Sec-CH-Prefers-Color-Scheme
< date: Mon, 25 Nov 2024 17:10:16 GMT
< server: gws
< x-xss-protection: 0
< x-frame-options: SAMEORIGIN
< alt-svc: h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
< 
* Connection #3 to host www.google.com left intact
Response [https://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
<EMPTY BODY>
> 
> 
> 
> cleanEx()
> nameEx("content")
> ### * content
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: content
> ### Title: Extract content from a request.
> ### Aliases: content text_content parsed_content
> 
> ### ** Examples
> 
> ## Not run: 
> ##D r <- POST("http://httpbin.org/post", body = list(a = 1, b = 2))
> ##D content(r) # automatically parses JSON
> ##D cat(content(r, "text"), "\n") # text content
> ##D content(r, "raw") # raw bytes from server
> ##D 
> ##D rlogo <- content(GET("https://httpbin.org/image/png"))
> ##D plot(0:1, 0:1, type = "n")
> ##D rasterImage(rlogo, 0, 0, 1, 1)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("content_type")
> ### * content_type
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: content_type
> ### Title: Set content-type and accept headers.
> ### Aliases: content_type content_type_json content_type_xml accept
> ###   accept_json accept_xml
> 
> ### ** Examples
> 
> ## Not run: 
> ##D GET("http://httpbin.org/headers")
> ##D 
> ##D GET("http://httpbin.org/headers", accept_json())
> ##D GET("http://httpbin.org/headers", accept("text/csv"))
> ##D GET("http://httpbin.org/headers", accept(".doc"))
> ##D 
> ##D GET("http://httpbin.org/headers", content_type_xml())
> ##D GET("http://httpbin.org/headers", content_type("text/csv"))
> ##D GET("http://httpbin.org/headers", content_type(".xml"))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("cookies")
> ### * cookies
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: cookies
> ### Title: Access cookies in a response.
> ### Aliases: cookies
> 
> ### ** Examples
> 
> ## Not run: 
> ##D r <- GET("http://httpbin.org/cookies/set", query = list(a = 1, b = 2))
> ##D cookies(r)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("get_callback")
> ### * get_callback
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: get_callback
> ### Title: Install or uninstall a callback function
> ### Aliases: get_callback set_callback
> 
> ### ** Examples
> 
> ## Not run: 
> ##D ## Log all HTTP requests to the screeen
> ##D req_logger <- function(req) {
> ##D   cat("HTTP request to", sQuote(req$url), "\n")
> ##D }
> ##D 
> ##D old <- set_callback("request", req_logger)
> ##D g1 <- GET("https://httpbin.org")
> ##D g2 <- GET("https://httpbin.org/ip")
> ##D set_callback("request", old)
> ##D 
> ##D ## Log all HTTP requests and response status codes as well
> ##D req_logger2 <- function(req) {
> ##D   cat("HTTP request to", sQuote(req$url), "... ")
> ##D }
> ##D res_logger <- function(req, res) {
> ##D   cat(res$status_code, "\n")
> ##D }
> ##D 
> ##D old_req <- set_callback("request", req_logger2)
> ##D old_res <- set_callback("response", res_logger)
> ##D g3 <- GET("https://httpbin.org")
> ##D g4 <- GET("https://httpbin.org/ip")
> ##D set_callback("request", old_req)
> ##D set_callback("response", old_res)
> ##D 
> ##D ## Return a recorded response, without performing the HTTP request
> ##D replay <- function(req) {
> ##D   if (req$url == "https://httpbin.org") g3
> ##D }
> ##D old_req <- set_callback("request", replay)
> ##D grec <- GET("https://httpbin.org")
> ##D grec$date == g3$date
> ##D set_callback("request", old_req)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("handle")
> ### * handle
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: handle
> ### Title: Create a handle tied to a particular host.
> ### Aliases: handle
> 
> ### ** Examples
> 
> handle("http://google.com")
Host: http://google.com <NA>
> handle("https://google.com")
Host: https://google.com <NA>
> 
> h <- handle("http://google.com")
> GET(handle = h)
Response [http://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.5 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,n,p=(n=g.sdo)!=null?n:!0,q=0,r,t...
"&bver="+b(t.bv);t.dpf&&(c+="&dpf="+b(t.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> # Should see cookies sent back to server
> GET(handle = h, config = verbose())
-> GET / HTTP/1.1
-> Host: google.com
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=519=jSFZB10dqlSCoud7nNqDC7xW_codVHfTS0znCJBLIT61c1Yj4sBx5z_i6J0wqzsMHHsSl1E9KAcAOA-40J8Wuz5-FHK_W_1GppWGlk_w0ZMcSx8OGH6rJkqJ9O2BdQ13r98PXpqd1k_rnBZkcfvSk4lZs9116yFHeBXyRoLzm4PuJ70q32ultvfLLjNBcIv2wQqmpbCxsw
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- Location: http://www.google.com/
<- Content-Type: text/html; charset=UTF-8
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-GJ71gnYvbDVE81HlFbjmiQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Date: Mon, 25 Nov 2024 17:10:17 GMT
<- Expires: Wed, 25 Dec 2024 17:10:17 GMT
<- Cache-Control: public, max-age=2592000
<- Server: gws
<- Content-Length: 219
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- 
-> GET / HTTP/1.1
-> Host: www.google.com
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=519=jSFZB10dqlSCoud7nNqDC7xW_codVHfTS0znCJBLIT61c1Yj4sBx5z_i6J0wqzsMHHsSl1E9KAcAOA-40J8Wuz5-FHK_W_1GppWGlk_w0ZMcSx8OGH6rJkqJ9O2BdQ13r98PXpqd1k_rnBZkcfvSk4lZs9116yFHeBXyRoLzm4PuJ70q32ultvfLLjNBcIv2wQqmpbCxsw
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 200 OK
<- Date: Mon, 25 Nov 2024 17:10:17 GMT
<- Expires: -1
<- Cache-Control: private, max-age=0
<- Content-Type: text/html; charset=ISO-8859-1
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-lUdhemuX_hkUuSXq005_mQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Content-Encoding: gzip
<- Server: gws
<- Content-Length: 8327
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- Set-Cookie: AEC=AZ6Zc-X_EFnxekhbUl6EbQfjkb1u5sjpcVHTLwZ7P_88CQmMlekqNQ5SHw; expires=Sat, 24-May-2025 17:10:17 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax
<- 
Response [http://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.5 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,n,p=(n=g.sdo)!=null?n:!0,q=0,r,t...
"&bver="+b(t.bv);t.dpf&&(c+="&dpf="+b(t.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> 
> h <- handle("http://google.com", cookies = FALSE)
Warning: Cookies argument is deprecated
> GET(handle = h)$cookies
                 domain flag path secure          expiration name
1 #HttpOnly_.google.com TRUE    /  FALSE 2025-05-27 17:10:17  NID
                                                                                                                                                                                                         value
1 519=QhJgeuEQe9ZJq6eKv9CFNSZog-OD9XWujEN5H6ReNAyoPhvz-nUbxSJsIQ4j9v1urF8sCjERZMLDIzdxgMq9Q72tmb6T0O1abxnUWz9ehtbCq3cSojFmokrgmlrceHE-ryTAzu84Qt4MpXj0RpjO7zbC339JS12x7b8IKAVb1DzRJCGpNGO-nkF2pTeL1SzPEfzKIbhE
> ## Not run: 
> ##D # Using the preferred way of configuring the http methods
> ##D # will not work when using handle():
> ##D GET(handle = h, timeout(10))
> ##D # Passing named arguments will work properly:
> ##D GET(handle = h, config = list(timeout(10), add_headers(Accept = "")))
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("has_content")
> ### * has_content
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: has_content
> ### Title: Does the request have content associated with it?
> ### Aliases: has_content
> ### Keywords: internal
> 
> ### ** Examples
> 
> ## Not run: 
> ##D has_content(POST("http://httpbin.org/post", body = FALSE))
> ##D has_content(HEAD("http://httpbin.org/headers"))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("headers")
> ### * headers
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: headers
> ### Title: Extract the headers from a response
> ### Aliases: headers
> 
> ### ** Examples
> 
> ## Not run: 
> ##D r <- GET("http://httpbin.org/get")
> ##D headers(r)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("http_condition")
> ### * http_condition
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: http_condition
> ### Title: Generate a classed http condition.
> ### Aliases: http_condition
> ### Keywords: internal
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # You can use tryCatch to take different actions based on the type
> ##D # of error. Note that tryCatch will call the first handler that
> ##D # matches any classes of the condition, not the best matching, so
> ##D # always list handlers from most specific to least specific
> ##D f <- function(url) {
> ##D   tryCatch(stop_for_status(GET(url)),
> ##D     http_404 = function(c) "That url doesn't exist",
> ##D     http_403 = function(c) "You need to authenticate!",
> ##D     http_400 = function(c) "You made a mistake!",
> ##D     http_500 = function(c) "The server screwed up"
> ##D   )
> ##D }
> ##D f("http://httpbin.org/status/404")
> ##D f("http://httpbin.org/status/403")
> ##D f("http://httpbin.org/status/505")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("http_error")
> ### * http_error
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: http_error
> ### Title: Check for an http error.
> ### Aliases: http_error url_success url_ok
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # You can pass a url:
> ##D http_error("http://www.google.com")
> ##D http_error("http://httpbin.org/status/404")
> ##D 
> ##D # Or a request
> ##D r <- GET("http://httpbin.org/status/201")
> ##D http_error(r)
> ## End(Not run)
> 
> # Or an (integer) status code
> http_error(200L)
[1] FALSE
> http_error(404L)
[1] TRUE
> 
> 
> 
> cleanEx()
> nameEx("http_status")
> ### * http_status
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: http_status
> ### Title: Give information on the status of a request.
> ### Aliases: http_status
> 
> ### ** Examples
> 
> http_status(100)
$category
[1] "Information"

$reason
[1] "Continue"

$message
[1] "Information: (100) Continue"

> http_status(404)
$category
[1] "Client error"

$reason
[1] "Not Found"

$message
[1] "Client error: (404) Not Found"

> 
> ## Not run: 
> ##D x <- GET("http://httpbin.org/status/200")
> ##D http_status(x)
> ##D 
> ##D http_status(GET("http://httpbin.org/status/300"))
> ##D http_status(GET("http://httpbin.org/status/301"))
> ##D http_status(GET("http://httpbin.org/status/404"))
> ##D 
> ##D # errors out on unknown status
> ##D http_status(GET("http://httpbin.org/status/320"))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("http_type")
> ### * http_type
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: http_type
> ### Title: Extract the content type of a response
> ### Aliases: http_type
> 
> ### ** Examples
> 
> ## Not run: 
> ##D r1 <- GET("http://httpbin.org/image/png")
> ##D http_type(r1)
> ##D headers(r1)[["Content-Type"]]
> ##D 
> ##D r2 <- GET("http://httpbin.org/ip")
> ##D http_type(r2)
> ##D headers(r2)[["Content-Type"]]
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("httr_options")
> ### * httr_options
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: httr_options
> ### Title: List available options.
> ### Aliases: httr_options curl_docs
> 
> ### ** Examples
> 
> httr_options()
                          httr                            libcurl     type
1         abstract_unix_socket       CURLOPT_ABSTRACT_UNIX_SOCKET   string
2              accept_encoding            CURLOPT_ACCEPT_ENCODING   string
3             accepttimeout_ms           CURLOPT_ACCEPTTIMEOUT_MS  integer
4                address_scope              CURLOPT_ADDRESS_SCOPE  integer
5                       altsvc                     CURLOPT_ALTSVC   string
6                  altsvc_ctrl                CURLOPT_ALTSVC_CTRL  integer
7                       append                     CURLOPT_APPEND  integer
8                  autoreferer                CURLOPT_AUTOREFERER  integer
9                    aws_sigv4                  CURLOPT_AWS_SIGV4   string
10                  buffersize                 CURLOPT_BUFFERSIZE  integer
11                      cainfo                     CURLOPT_CAINFO   string
12                 cainfo_blob                CURLOPT_CAINFO_BLOB     <NA>
13                      capath                     CURLOPT_CAPATH   string
14                    certinfo                   CURLOPT_CERTINFO  integer
15          chunk_bgn_function         CURLOPT_CHUNK_BGN_FUNCTION function
16                  chunk_data                 CURLOPT_CHUNK_DATA   string
17          chunk_end_function         CURLOPT_CHUNK_END_FUNCTION function
18             closesocketdata            CURLOPT_CLOSESOCKETDATA   string
19         closesocketfunction        CURLOPT_CLOSESOCKETFUNCTION function
20                connect_only               CURLOPT_CONNECT_ONLY  integer
21                  connect_to                 CURLOPT_CONNECT_TO   string
22              connecttimeout             CURLOPT_CONNECTTIMEOUT  integer
23           connecttimeout_ms          CURLOPT_CONNECTTIMEOUT_MS  integer
24  conv_from_network_function CURLOPT_CONV_FROM_NETWORK_FUNCTION function
25     conv_from_utf8_function    CURLOPT_CONV_FROM_UTF8_FUNCTION function
26    conv_to_network_function   CURLOPT_CONV_TO_NETWORK_FUNCTION function
27                      cookie                     CURLOPT_COOKIE   string
28                  cookiefile                 CURLOPT_COOKIEFILE   string
29                   cookiejar                  CURLOPT_COOKIEJAR   string
30                  cookielist                 CURLOPT_COOKIELIST   string
31               cookiesession              CURLOPT_COOKIESESSION  integer
32              copypostfields             CURLOPT_COPYPOSTFIELDS   string
33                        crlf                       CURLOPT_CRLF  integer
34                     crlfile                    CURLOPT_CRLFILE   string
35                       curlu                      CURLOPT_CURLU   string
36               customrequest              CURLOPT_CUSTOMREQUEST   string
37                   debugdata                  CURLOPT_DEBUGDATA   string
38               debugfunction              CURLOPT_DEBUGFUNCTION function
39            default_protocol           CURLOPT_DEFAULT_PROTOCOL   string
40                 dirlistonly                CURLOPT_DIRLISTONLY  integer
41    disallow_username_in_url   CURLOPT_DISALLOW_USERNAME_IN_URL  integer
42           dns_cache_timeout          CURLOPT_DNS_CACHE_TIMEOUT  integer
43               dns_interface              CURLOPT_DNS_INTERFACE   string
44               dns_local_ip4              CURLOPT_DNS_LOCAL_IP4   string
45               dns_local_ip6              CURLOPT_DNS_LOCAL_IP6   string
46                 dns_servers                CURLOPT_DNS_SERVERS   string
47       dns_shuffle_addresses      CURLOPT_DNS_SHUFFLE_ADDRESSES  integer
48        dns_use_global_cache       CURLOPT_DNS_USE_GLOBAL_CACHE  integer
49          doh_ssl_verifyhost         CURLOPT_DOH_SSL_VERIFYHOST  integer
50          doh_ssl_verifypeer         CURLOPT_DOH_SSL_VERIFYPEER  integer
51        doh_ssl_verifystatus       CURLOPT_DOH_SSL_VERIFYSTATUS  integer
52                     doh_url                    CURLOPT_DOH_URL   string
53                   egdsocket                  CURLOPT_EGDSOCKET   string
54                 errorbuffer                CURLOPT_ERRORBUFFER   string
55       expect_100_timeout_ms      CURLOPT_EXPECT_100_TIMEOUT_MS  integer
56                 failonerror                CURLOPT_FAILONERROR  integer
57                    filetime                   CURLOPT_FILETIME  integer
58                fnmatch_data               CURLOPT_FNMATCH_DATA   string
59            fnmatch_function           CURLOPT_FNMATCH_FUNCTION function
60              followlocation             CURLOPT_FOLLOWLOCATION  integer
61                forbid_reuse               CURLOPT_FORBID_REUSE  integer
62               fresh_connect              CURLOPT_FRESH_CONNECT  integer
63                 ftp_account                CURLOPT_FTP_ACCOUNT   string
64     ftp_alternative_to_user    CURLOPT_FTP_ALTERNATIVE_TO_USER   string
65     ftp_create_missing_dirs    CURLOPT_FTP_CREATE_MISSING_DIRS  integer
66              ftp_filemethod             CURLOPT_FTP_FILEMETHOD  integer
67        ftp_response_timeout       CURLOPT_FTP_RESPONSE_TIMEOUT  integer
68            ftp_skip_pasv_ip           CURLOPT_FTP_SKIP_PASV_IP  integer
69                 ftp_ssl_ccc                CURLOPT_FTP_SSL_CCC  integer
70                ftp_use_eprt               CURLOPT_FTP_USE_EPRT  integer
71                ftp_use_epsv               CURLOPT_FTP_USE_EPSV  integer
72                ftp_use_pret               CURLOPT_FTP_USE_PRET  integer
73                     ftpport                    CURLOPT_FTPPORT   string
74                  ftpsslauth                 CURLOPT_FTPSSLAUTH  integer
75           gssapi_delegation          CURLOPT_GSSAPI_DELEGATION  integer
76   happy_eyeballs_timeout_ms  CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS  integer
77             haproxyprotocol            CURLOPT_HAPROXYPROTOCOL  integer
78                      header                     CURLOPT_HEADER  integer
79                  headerdata                 CURLOPT_HEADERDATA   string
80              headerfunction             CURLOPT_HEADERFUNCTION function
81                   headeropt                  CURLOPT_HEADEROPT  integer
82                        hsts                       CURLOPT_HSTS   string
83                   hsts_ctrl                  CURLOPT_HSTS_CTRL  integer
84                hstsreaddata               CURLOPT_HSTSREADDATA   string
85            hstsreadfunction           CURLOPT_HSTSREADFUNCTION function
86               hstswritedata              CURLOPT_HSTSWRITEDATA   string
87           hstswritefunction          CURLOPT_HSTSWRITEFUNCTION function
88       http_content_decoding      CURLOPT_HTTP_CONTENT_DECODING  integer
89      http_transfer_decoding     CURLOPT_HTTP_TRANSFER_DECODING  integer
90                http_version               CURLOPT_HTTP_VERSION  integer
91              http09_allowed             CURLOPT_HTTP09_ALLOWED  integer
92              http200aliases             CURLOPT_HTTP200ALIASES   string
93                    httpauth                   CURLOPT_HTTPAUTH  integer
94                     httpget                    CURLOPT_HTTPGET  integer
95                  httpheader                 CURLOPT_HTTPHEADER   string
96                    httppost                   CURLOPT_HTTPPOST   string
97             httpproxytunnel            CURLOPT_HTTPPROXYTUNNEL  integer
98       ignore_content_length      CURLOPT_IGNORE_CONTENT_LENGTH  integer
99                  infilesize                 CURLOPT_INFILESIZE  integer
100           infilesize_large           CURLOPT_INFILESIZE_LARGE   number
101                  interface                  CURLOPT_INTERFACE   string
102             interleavedata             CURLOPT_INTERLEAVEDATA   string
103         interleavefunction         CURLOPT_INTERLEAVEFUNCTION function
104                  ioctldata                  CURLOPT_IOCTLDATA   string
105              ioctlfunction              CURLOPT_IOCTLFUNCTION function
106                  ipresolve                  CURLOPT_IPRESOLVE  integer
107                 issuercert                 CURLOPT_ISSUERCERT   string
108            issuercert_blob            CURLOPT_ISSUERCERT_BLOB     <NA>
109      keep_sending_on_error      CURLOPT_KEEP_SENDING_ON_ERROR  integer
110                  keypasswd                  CURLOPT_KEYPASSWD   string
111                   krblevel                   CURLOPT_KRBLEVEL   string
112                  localport                  CURLOPT_LOCALPORT  integer
113             localportrange             CURLOPT_LOCALPORTRANGE  integer
114              login_options              CURLOPT_LOGIN_OPTIONS   string
115            low_speed_limit            CURLOPT_LOW_SPEED_LIMIT  integer
116             low_speed_time             CURLOPT_LOW_SPEED_TIME  integer
117                  mail_auth                  CURLOPT_MAIL_AUTH   string
118                  mail_from                  CURLOPT_MAIL_FROM   string
119                  mail_rcpt                  CURLOPT_MAIL_RCPT   string
120      mail_rcpt_alllowfails      CURLOPT_MAIL_RCPT_ALLLOWFAILS  integer
121       max_recv_speed_large       CURLOPT_MAX_RECV_SPEED_LARGE   number
122       max_send_speed_large       CURLOPT_MAX_SEND_SPEED_LARGE   number
123                maxage_conn                CURLOPT_MAXAGE_CONN  integer
124                maxconnects                CURLOPT_MAXCONNECTS  integer
125                maxfilesize                CURLOPT_MAXFILESIZE  integer
126          maxfilesize_large          CURLOPT_MAXFILESIZE_LARGE   number
127           maxlifetime_conn           CURLOPT_MAXLIFETIME_CONN  integer
128                  maxredirs                  CURLOPT_MAXREDIRS  integer
129               mime_options               CURLOPT_MIME_OPTIONS  integer
130                   mimepost                   CURLOPT_MIMEPOST   string
131                      netrc                      CURLOPT_NETRC  integer
132                 netrc_file                 CURLOPT_NETRC_FILE   string
133        new_directory_perms        CURLOPT_NEW_DIRECTORY_PERMS  integer
134             new_file_perms             CURLOPT_NEW_FILE_PERMS  integer
135                     nobody                     CURLOPT_NOBODY  integer
136                 noprogress                 CURLOPT_NOPROGRESS  integer
137                    noproxy                    CURLOPT_NOPROXY   string
138                   nosignal                   CURLOPT_NOSIGNAL  integer
139             opensocketdata             CURLOPT_OPENSOCKETDATA   string
140         opensocketfunction         CURLOPT_OPENSOCKETFUNCTION function
141                   password                   CURLOPT_PASSWORD   string
142                 path_as_is                 CURLOPT_PATH_AS_IS  integer
143            pinnedpublickey            CURLOPT_PINNEDPUBLICKEY   string
144                   pipewait                   CURLOPT_PIPEWAIT  integer
145                       port                       CURLOPT_PORT  integer
146                       post                       CURLOPT_POST  integer
147                 postfields                 CURLOPT_POSTFIELDS   string
148              postfieldsize              CURLOPT_POSTFIELDSIZE  integer
149        postfieldsize_large        CURLOPT_POSTFIELDSIZE_LARGE   number
150                  postquote                  CURLOPT_POSTQUOTE   string
151                  postredir                  CURLOPT_POSTREDIR  integer
152                  pre_proxy                  CURLOPT_PRE_PROXY   string
153                   prequote                   CURLOPT_PREQUOTE   string
154                 prereqdata                 CURLOPT_PREREQDATA   string
155             prereqfunction             CURLOPT_PREREQFUNCTION function
156                    private                    CURLOPT_PRIVATE   string
157           progressfunction           CURLOPT_PROGRESSFUNCTION function
158                  protocols                  CURLOPT_PROTOCOLS  integer
159                      proxy                      CURLOPT_PROXY   string
160               proxy_cainfo               CURLOPT_PROXY_CAINFO   string
161          proxy_cainfo_blob          CURLOPT_PROXY_CAINFO_BLOB     <NA>
162               proxy_capath               CURLOPT_PROXY_CAPATH   string
163              proxy_crlfile              CURLOPT_PROXY_CRLFILE   string
164           proxy_issuercert           CURLOPT_PROXY_ISSUERCERT   string
165      proxy_issuercert_blob      CURLOPT_PROXY_ISSUERCERT_BLOB     <NA>
166            proxy_keypasswd            CURLOPT_PROXY_KEYPASSWD   string
167      proxy_pinnedpublickey      CURLOPT_PROXY_PINNEDPUBLICKEY   string
168         proxy_service_name         CURLOPT_PROXY_SERVICE_NAME   string
169      proxy_ssl_cipher_list      CURLOPT_PROXY_SSL_CIPHER_LIST   string
170          proxy_ssl_options          CURLOPT_PROXY_SSL_OPTIONS  integer
171       proxy_ssl_verifyhost       CURLOPT_PROXY_SSL_VERIFYHOST  integer
172       proxy_ssl_verifypeer       CURLOPT_PROXY_SSL_VERIFYPEER  integer
173              proxy_sslcert              CURLOPT_PROXY_SSLCERT   string
174         proxy_sslcert_blob         CURLOPT_PROXY_SSLCERT_BLOB     <NA>
175          proxy_sslcerttype          CURLOPT_PROXY_SSLCERTTYPE   string
176               proxy_sslkey               CURLOPT_PROXY_SSLKEY   string
177          proxy_sslkey_blob          CURLOPT_PROXY_SSLKEY_BLOB     <NA>
178           proxy_sslkeytype           CURLOPT_PROXY_SSLKEYTYPE   string
179           proxy_sslversion           CURLOPT_PROXY_SSLVERSION  integer
180        proxy_tls13_ciphers        CURLOPT_PROXY_TLS13_CIPHERS   string
181     proxy_tlsauth_password     CURLOPT_PROXY_TLSAUTH_PASSWORD   string
182         proxy_tlsauth_type         CURLOPT_PROXY_TLSAUTH_TYPE   string
183     proxy_tlsauth_username     CURLOPT_PROXY_TLSAUTH_USERNAME   string
184        proxy_transfer_mode        CURLOPT_PROXY_TRANSFER_MODE  integer
185                  proxyauth                  CURLOPT_PROXYAUTH  integer
186                proxyheader                CURLOPT_PROXYHEADER   string
187              proxypassword              CURLOPT_PROXYPASSWORD   string
188                  proxyport                  CURLOPT_PROXYPORT  integer
189                  proxytype                  CURLOPT_PROXYTYPE  integer
190              proxyusername              CURLOPT_PROXYUSERNAME   string
191               proxyuserpwd               CURLOPT_PROXYUSERPWD   string
192                        put                        CURLOPT_PUT  integer
193                      quote                      CURLOPT_QUOTE   string
194                random_file                CURLOPT_RANDOM_FILE   string
195                      range                      CURLOPT_RANGE   string
196                   readdata                   CURLOPT_READDATA   string
197               readfunction               CURLOPT_READFUNCTION function
198            redir_protocols            CURLOPT_REDIR_PROTOCOLS  integer
199                    referer                    CURLOPT_REFERER   string
200             request_target             CURLOPT_REQUEST_TARGET   string
201                    resolve                    CURLOPT_RESOLVE   string
202        resolver_start_data        CURLOPT_RESOLVER_START_DATA   string
203    resolver_start_function    CURLOPT_RESOLVER_START_FUNCTION function
204                resume_from                CURLOPT_RESUME_FROM  integer
205          resume_from_large          CURLOPT_RESUME_FROM_LARGE   number
206           rtsp_client_cseq           CURLOPT_RTSP_CLIENT_CSEQ  integer
207               rtsp_request               CURLOPT_RTSP_REQUEST  integer
208           rtsp_server_cseq           CURLOPT_RTSP_SERVER_CSEQ  integer
209            rtsp_session_id            CURLOPT_RTSP_SESSION_ID   string
210            rtsp_stream_uri            CURLOPT_RTSP_STREAM_URI   string
211             rtsp_transport             CURLOPT_RTSP_TRANSPORT   string
212               sasl_authzid               CURLOPT_SASL_AUTHZID   string
213                    sasl_ir                    CURLOPT_SASL_IR  integer
214                   seekdata                   CURLOPT_SEEKDATA   string
215               seekfunction               CURLOPT_SEEKFUNCTION function
216               service_name               CURLOPT_SERVICE_NAME   string
217                      share                      CURLOPT_SHARE   string
218                sockoptdata                CURLOPT_SOCKOPTDATA   string
219            sockoptfunction            CURLOPT_SOCKOPTFUNCTION function
220                socks5_auth                CURLOPT_SOCKS5_AUTH  integer
221          socks5_gssapi_nec          CURLOPT_SOCKS5_GSSAPI_NEC  integer
222      socks5_gssapi_service      CURLOPT_SOCKS5_GSSAPI_SERVICE   string
223             ssh_auth_types             CURLOPT_SSH_AUTH_TYPES  integer
224            ssh_compression            CURLOPT_SSH_COMPRESSION  integer
225    ssh_host_public_key_md5    CURLOPT_SSH_HOST_PUBLIC_KEY_MD5   string
226 ssh_host_public_key_sha256 CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256   string
227                ssh_keydata                CURLOPT_SSH_KEYDATA   string
228            ssh_keyfunction            CURLOPT_SSH_KEYFUNCTION function
229             ssh_knownhosts             CURLOPT_SSH_KNOWNHOSTS   string
230        ssh_private_keyfile        CURLOPT_SSH_PRIVATE_KEYFILE   string
231         ssh_public_keyfile         CURLOPT_SSH_PUBLIC_KEYFILE   string
232            ssl_cipher_list            CURLOPT_SSL_CIPHER_LIST   string
233               ssl_ctx_data               CURLOPT_SSL_CTX_DATA   string
234           ssl_ctx_function           CURLOPT_SSL_CTX_FUNCTION function
235              ssl_ec_curves              CURLOPT_SSL_EC_CURVES   string
236            ssl_enable_alpn            CURLOPT_SSL_ENABLE_ALPN  integer
237             ssl_enable_npn             CURLOPT_SSL_ENABLE_NPN  integer
238             ssl_falsestart             CURLOPT_SSL_FALSESTART  integer
239                ssl_options                CURLOPT_SSL_OPTIONS  integer
240        ssl_sessionid_cache        CURLOPT_SSL_SESSIONID_CACHE  integer
241             ssl_verifyhost             CURLOPT_SSL_VERIFYHOST  integer
242             ssl_verifypeer             CURLOPT_SSL_VERIFYPEER  integer
243           ssl_verifystatus           CURLOPT_SSL_VERIFYSTATUS  integer
244                    sslcert                    CURLOPT_SSLCERT   string
245               sslcert_blob               CURLOPT_SSLCERT_BLOB     <NA>
246                sslcerttype                CURLOPT_SSLCERTTYPE   string
247                  sslengine                  CURLOPT_SSLENGINE   string
248          sslengine_default          CURLOPT_SSLENGINE_DEFAULT  integer
249                     sslkey                     CURLOPT_SSLKEY   string
250                sslkey_blob                CURLOPT_SSLKEY_BLOB     <NA>
251                 sslkeytype                 CURLOPT_SSLKEYTYPE   string
252                 sslversion                 CURLOPT_SSLVERSION  integer
253                     stderr                     CURLOPT_STDERR   string
254             stream_depends             CURLOPT_STREAM_DEPENDS   string
255           stream_depends_e           CURLOPT_STREAM_DEPENDS_E   string
256              stream_weight              CURLOPT_STREAM_WEIGHT  integer
257   suppress_connect_headers   CURLOPT_SUPPRESS_CONNECT_HEADERS  integer
258               tcp_fastopen               CURLOPT_TCP_FASTOPEN  integer
259              tcp_keepalive              CURLOPT_TCP_KEEPALIVE  integer
260               tcp_keepidle               CURLOPT_TCP_KEEPIDLE  integer
261              tcp_keepintvl              CURLOPT_TCP_KEEPINTVL  integer
262                tcp_nodelay                CURLOPT_TCP_NODELAY  integer
263              telnetoptions              CURLOPT_TELNETOPTIONS   string
264               tftp_blksize               CURLOPT_TFTP_BLKSIZE  integer
265            tftp_no_options            CURLOPT_TFTP_NO_OPTIONS  integer
266              timecondition              CURLOPT_TIMECONDITION  integer
267                    timeout                    CURLOPT_TIMEOUT  integer
268                 timeout_ms                 CURLOPT_TIMEOUT_MS  integer
269                  timevalue                  CURLOPT_TIMEVALUE  integer
270            timevalue_large            CURLOPT_TIMEVALUE_LARGE   number
271              tls13_ciphers              CURLOPT_TLS13_CIPHERS   string
272           tlsauth_password           CURLOPT_TLSAUTH_PASSWORD   string
273               tlsauth_type               CURLOPT_TLSAUTH_TYPE   string
274           tlsauth_username           CURLOPT_TLSAUTH_USERNAME   string
275                trailerdata                CURLOPT_TRAILERDATA   string
276            trailerfunction            CURLOPT_TRAILERFUNCTION function
277          transfer_encoding          CURLOPT_TRANSFER_ENCODING  integer
278               transfertext               CURLOPT_TRANSFERTEXT  integer
279           unix_socket_path           CURLOPT_UNIX_SOCKET_PATH   string
280          unrestricted_auth          CURLOPT_UNRESTRICTED_AUTH  integer
281         upkeep_interval_ms         CURLOPT_UPKEEP_INTERVAL_MS  integer
282                     upload                     CURLOPT_UPLOAD  integer
283          upload_buffersize          CURLOPT_UPLOAD_BUFFERSIZE  integer
284                        url                        CURLOPT_URL   string
285                    use_ssl                    CURLOPT_USE_SSL  integer
286                  useragent                  CURLOPT_USERAGENT   string
287                   username                   CURLOPT_USERNAME   string
288                    userpwd                    CURLOPT_USERPWD   string
289                    verbose                    CURLOPT_VERBOSE  integer
290              wildcardmatch              CURLOPT_WILDCARDMATCH  integer
291                  writedata                  CURLOPT_WRITEDATA   string
292              writefunction              CURLOPT_WRITEFUNCTION function
293               xferinfodata               CURLOPT_XFERINFODATA   string
294           xferinfofunction           CURLOPT_XFERINFOFUNCTION function
295             xoauth2_bearer             CURLOPT_XOAUTH2_BEARER   string
> httr_options("post")
                   httr                     libcurl    type
32       copypostfields      CURLOPT_COPYPOSTFIELDS  string
96             httppost            CURLOPT_HTTPPOST  string
130            mimepost            CURLOPT_MIMEPOST  string
146                post                CURLOPT_POST integer
147          postfields          CURLOPT_POSTFIELDS  string
148       postfieldsize       CURLOPT_POSTFIELDSIZE integer
149 postfieldsize_large CURLOPT_POSTFIELDSIZE_LARGE  number
150           postquote           CURLOPT_POSTQUOTE  string
151           postredir           CURLOPT_POSTREDIR integer
> 
> # Use curl_docs to read the curl documentation for each option.
> # You can use either the httr or curl option name.
> curl_docs("userpwd")
Please point your browser to the following url: 
http://curl.haxx.se/libcurl/c/CURLOPT_USERPWD.html
> curl_docs("CURLOPT_USERPWD")
Please point your browser to the following url: 
http://curl.haxx.se/libcurl/c/CURLOPT_USERPWD.html
> 
> 
> 
> cleanEx()
> nameEx("insensitive")
> ### * insensitive
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: insensitive
> ### Title: Create a vector with case insensitive name matching.
> ### Aliases: insensitive
> ### Keywords: internal
> 
> ### ** Examples
> 
> x <- c("abc" = 1, "def" = 2)
> x["ABC"]
<NA> 
  NA 
> y <- insensitive(x)
> y["ABC"]
abc 
  1 
> y[["ABC"]]
[1] 1
> 
> 
> 
> cleanEx()
> nameEx("jwt_signature")
> ### * jwt_signature
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: jwt_signature
> ### Title: Generate a JWT signature given credentials.
> ### Aliases: jwt_signature
> ### Keywords: internal
> 
> ### ** Examples
> 
> ## Not run: 
> ##D cred <- jsonlite::fromJSON("~/Desktop/httrtest-45693cbfac92.json")
> ##D jwt_signature(cred, "https://www.googleapis.com/auth/userinfo.profile")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("oauth_app")
> ### * oauth_app
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: oauth_app
> ### Title: Create an OAuth application.
> ### Aliases: oauth_app
> 
> ### ** Examples
> 
> ## Not run: 
> ##D google_app <- oauth_app(
> ##D   "google",
> ##D   key = "123456789.apps.googleusercontent.com",
> ##D   secret = "abcdefghijklmnopqrstuvwxyz"
> ##D )
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("oauth_endpoint")
> ### * oauth_endpoint
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: oauth_endpoint
> ### Title: Describe an OAuth endpoint.
> ### Aliases: oauth_endpoint
> 
> ### ** Examples
> 
> linkedin <- oauth_endpoint("requestToken", "authorize", "accessToken",
+   base_url = "https://api.linkedin.com/uas/oauth"
+ )
> github <- oauth_endpoint(NULL, "authorize", "access_token",
+   base_url = "https://github.com/login/oauth"
+ )
> facebook <- oauth_endpoint(
+   authorize = "https://www.facebook.com/dialog/oauth",
+   access = "https://graph.facebook.com/oauth/access_token"
+ )
> 
> oauth_endpoints
function (name) 
{
    switch(name, linkedin = oauth_endpoint(base_url = "https://www.linkedin.com/uas/oauth2", 
        authorize = "authorization", access = "accessToken"), 
        twitter = oauth_endpoint(base_url = "https://api.twitter.com/oauth", 
            request = "request_token", authorize = "authenticate", 
            access = "access_token"), vimeo = oauth_endpoint(base_url = "https://api.vimeo.com/oauth", 
            request = "request_token", authorize = "authorize", 
            access = "access_token"), yahoo = oauth_endpoint(base_url = "https://api.login.yahoo.com/oauth2", 
            request = "get_request_token", authorize = "request_auth", 
            access = "get_token"), google = oauth_endpoint(base_url = "https://accounts.google.com/o/oauth2", 
            authorize = "auth", access = "token", validate = "https://www.googleapis.com/oauth2/v1/tokeninfo", 
            revoke = "revoke"), tumblr = oauth_endpoint(base_url = "http://www.tumblr.com/oauth/", 
            request = "request_token", authorize = "authorize", 
            access = "access_token"), facebook = oauth_endpoint(authorize = "https://www.facebook.com/dialog/oauth", 
            access = "https://graph.facebook.com/oauth/access_token"), 
        github = oauth_endpoint(base_url = "https://github.com/login/oauth", 
            request = NULL, authorize = "authorize", access = "access_token"), 
        azure = oauth_endpoint(base_url = "https://login.windows.net/common/oauth2", 
            authorize = "authorize", access = "token"), meetup = oauth_endpoint(base_url = "https://secure.meetup.com/oauth2", 
            authorize = "authorize", access = "access"), stop("Unknown endpoint", 
            call. = FALSE))
}
<bytecode: 0x55cb193b6778>
<environment: namespace:httr>
> 
> 
> 
> cleanEx()
> nameEx("oauth_endpoints")
> ### * oauth_endpoints
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: oauth_endpoints
> ### Title: Popular oauth endpoints.
> ### Aliases: oauth_endpoints
> 
> ### ** Examples
> 
> oauth_endpoints("twitter")
<oauth_endpoint>
 request:   https://api.twitter.com/oauth/request_token
 authorize: https://api.twitter.com/oauth/authenticate
 access:    https://api.twitter.com/oauth/access_token
> 
> 
> 
> cleanEx()
> nameEx("oauth_service_token")
> ### * oauth_service_token
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: oauth_service_token
> ### Title: Generate OAuth token for service accounts.
> ### Aliases: oauth_service_token
> 
> ### ** Examples
> 
> ## Not run: 
> ##D endpoint <- oauth_endpoints("google")
> ##D secrets <- jsonlite::fromJSON("~/Desktop/httrtest-45693cbfac92.json")
> ##D scope <- "https://www.googleapis.com/auth/bigquery.readonly"
> ##D 
> ##D token <- oauth_service_token(endpoint, secrets, scope)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("parse_http_date")
> ### * parse_http_date
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: parse_http_date
> ### Title: Parse and print http dates.
> ### Aliases: parse_http_date http_date
> 
> ### ** Examples
> 
> parse_http_date("Sun, 06 Nov 1994 08:49:37 GMT")
[1] "1994-11-06 08:49:37 GMT"
> parse_http_date("Sunday, 06-Nov-94 08:49:37 GMT")
[1] "1994-11-06 08:49:37 GMT"
> parse_http_date("Sun Nov  6 08:49:37 1994")
[1] "1994-11-06 08:49:37 GMT"
> 
> http_date(Sys.time())
[1] "Mon, 25 Nov 2024 17:10:17 GMT"
> 
> 
> 
> cleanEx()
> nameEx("parse_media")
> ### * parse_media
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: parse_media
> ### Title: Parse a media type.
> ### Aliases: parse_media
> ### Keywords: internal
> 
> ### ** Examples
> 
> parse_media("text/plain")
$complete
[1] "text/plain"

$type
[1] "text"

$subtype
[1] "plain"

$params
list()

> parse_media("text/plain; charset=utf-8")
$complete
[1] "text/plain"

$type
[1] "text"

$subtype
[1] "plain"

$params
$params$charset
[1] "utf-8"


> parse_media("text/plain; charset=\"utf-8\"")
$complete
[1] "text/plain"

$type
[1] "text"

$subtype
[1] "plain"

$params
$params$charset
[1] "utf-8"


> parse_media("text/plain; randomparam=\";=;=\"")
$complete
[1] "text/plain"

$type
[1] "text"

$subtype
[1] "plain"

$params
$params$randomparam
[1] ";=;="


> 
> 
> 
> cleanEx()
> nameEx("parse_url")
> ### * parse_url
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: parse_url
> ### Title: Parse and build urls according to RFC3986.
> ### Aliases: parse_url build_url
> 
> ### ** Examples
> 
> parse_url("http://google.com/")
$scheme
[1] "http"

$hostname
[1] "google.com"

$port
NULL

$path
[1] ""

$query
NULL

$params
NULL

$fragment
NULL

$username
NULL

$password
NULL

attr(,"class")
[1] "url"
> parse_url("http://google.com:80/")
$scheme
[1] "http"

$hostname
[1] "google.com"

$port
[1] "80"

$path
[1] ""

$query
NULL

$params
NULL

$fragment
NULL

$username
NULL

$password
NULL

attr(,"class")
[1] "url"
> parse_url("http://google.com:80/?a=1&b=2")
$scheme
[1] "http"

$hostname
[1] "google.com"

$port
[1] "80"

$path
[1] ""

$query
$query$a
[1] "1"

$query$b
[1] "2"


$params
NULL

$fragment
NULL

$username
NULL

$password
NULL

attr(,"class")
[1] "url"
> 
> url <- parse_url("http://google.com/")
> url$scheme <- "https"
> url$query <- list(q = "hello")
> build_url(url)
[1] "https://google.com/?q=hello"
> 
> 
> 
> cleanEx()
> nameEx("progress")
> ### * progress
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: progress
> ### Title: Add a progress bar.
> ### Aliases: progress
> 
> ### ** Examples
> 
> cap_speed <- config(max_recv_speed_large = 10000)
> ## Not run: 
> ##D # If file size is known, you get a progress bar:
> ##D x <- GET("http://httpbin.org/bytes/102400", progress(), cap_speed)
> ##D # Otherwise you get the number of bytes downloaded:
> ##D x <- GET("http://httpbin.org/stream-bytes/102400", progress(), cap_speed)
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("set_config")
> ### * set_config
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_config
> ### Title: Set (and reset) global httr configuration.
> ### Aliases: set_config reset_config
> 
> ### ** Examples
> 
> GET("http://google.com")
Response [http://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.6 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,n,p=(n=g.sdo)!=null?n:!0,q=0,r,t...
"&bver="+b(t.bv);t.dpf&&(c+="&dpf="+b(t.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> set_config(verbose())
> GET("http://google.com")
-> GET / HTTP/1.1
-> Host: google.com
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=519=G91r908KnLIHDQl1zm4Vkq4CPMzzdFRI7yx3oLsJlTCgZydrhkHmqBhJpxjWedVbJFlXqfkz8h08kaxRg0iu__ugB97ZY0sGhQ73vk-R4B1s4Zvje2CctkaZJqwJcUZPr2LVaBWd03YK3BmFCl7SliI408N--L6p87jNlQ6ZJgHqB-EeQltfQFtQHqiGn6rQr-7THdkRqqYxsDFo
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- Location: http://www.google.com/
<- Content-Type: text/html; charset=UTF-8
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-5eE9BniDYBtC3wf9RTmfEQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Date: Mon, 25 Nov 2024 17:10:17 GMT
<- Expires: Wed, 25 Dec 2024 17:10:17 GMT
<- Cache-Control: public, max-age=2592000
<- Server: gws
<- Content-Length: 219
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- 
-> GET / HTTP/1.1
-> Host: www.google.com
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=519=G91r908KnLIHDQl1zm4Vkq4CPMzzdFRI7yx3oLsJlTCgZydrhkHmqBhJpxjWedVbJFlXqfkz8h08kaxRg0iu__ugB97ZY0sGhQ73vk-R4B1s4Zvje2CctkaZJqwJcUZPr2LVaBWd03YK3BmFCl7SliI408N--L6p87jNlQ6ZJgHqB-EeQltfQFtQHqiGn6rQr-7THdkRqqYxsDFo
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 200 OK
<- Date: Mon, 25 Nov 2024 17:10:17 GMT
<- Expires: -1
<- Cache-Control: private, max-age=0
<- Content-Type: text/html; charset=ISO-8859-1
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-bZGRBW4wMgwphRWKDkOA8g' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Content-Encoding: gzip
<- Server: gws
<- Content-Length: 8407
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- Set-Cookie: AEC=AZ6Zc-XmLI6RNRr0bYLDPtoW_OAorMhRK7vTaiG7xBHiWZJDe0RT0znZSw; expires=Sat, 24-May-2025 17:10:17 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax
<- 
Response [http://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.6 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,n,p=(n=g.sdo)!=null?n:!0,q=0,r,t...
"&bver="+b(t.bv);t.dpf&&(c+="&dpf="+b(t.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> reset_config()
> GET("http://google.com")
Response [http://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.5 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,n,p=(n=g.sdo)!=null?n:!0,q=0,r,t...
"&bver="+b(t.bv);t.dpf&&(c+="&dpf="+b(t.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> 
> 
> 
> cleanEx()
> nameEx("set_cookies")
> ### * set_cookies
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: set_cookies
> ### Title: Set cookies.
> ### Aliases: set_cookies
> 
> ### ** Examples
> 
> set_cookies(a = 1, b = 2)
<request>
Options:
* cookie: a=1;b=2
> set_cookies(.cookies = c(a = "1", b = "2"))
<request>
Options:
* cookie: a=1;b=2
> 
> ## Not run: 
> ##D GET("http://httpbin.org/cookies")
> ##D GET("http://httpbin.org/cookies", set_cookies(a = 1, b = 2))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("stop_for_status")
> ### * stop_for_status
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: stop_for_status
> ### Title: Take action on http error.
> ### Aliases: stop_for_status warn_for_status message_for_status
> 
> ### ** Examples
> 
> ## Not run: 
> ##D x <- GET("http://httpbin.org/status/200")
> ##D stop_for_status(x) # nothing happens
> ##D warn_for_status(x)
> ##D message_for_status(x)
> ##D 
> ##D x <- GET("http://httpbin.org/status/300")
> ##D stop_for_status(x)
> ##D warn_for_status(x)
> ##D message_for_status(x)
> ##D 
> ##D x <- GET("http://httpbin.org/status/404")
> ##D stop_for_status(x)
> ##D warn_for_status(x)
> ##D message_for_status(x)
> ##D 
> ##D # You can provide more information with the task argument
> ##D warn_for_status(x, "download spreadsheet")
> ##D message_for_status(x, "download spreadsheet")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("timeout")
> ### * timeout
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: timeout
> ### Title: Set maximum request time.
> ### Aliases: timeout
> 
> ### ** Examples
> 
> ## Not run: 
> ##D GET("http://httpbin.org/delay/3", timeout(1))
> ##D GET("http://httpbin.org/delay/1", timeout(2))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("upload_file")
> ### * upload_file
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: upload_file
> ### Title: Upload a file with 'POST()' or 'PUT()'.
> ### Aliases: upload_file
> 
> ### ** Examples
> 
> citation <- upload_file(system.file("CITATION"))
> ## Not run: 
> ##D POST("http://httpbin.org/post", body = citation)
> ##D POST("http://httpbin.org/post", body = list(y = citation))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("use_proxy")
> ### * use_proxy
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: use_proxy
> ### Title: Use a proxy to connect to the internet.
> ### Aliases: use_proxy
> 
> ### ** Examples
> 
> # See http://www.hidemyass.com/proxy-list for a list of public proxies
> # to test with
> # GET("http://had.co.nz", use_proxy("64.251.21.73", 8080), verbose())
> 
> 
> 
> cleanEx()
> nameEx("user_agent")
> ### * user_agent
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: user_agent
> ### Title: Set user agent.
> ### Aliases: user_agent
> 
> ### ** Examples
> 
> ## Not run: 
> ##D GET("http://httpbin.org/user-agent")
> ##D GET("http://httpbin.org/user-agent", user_agent("httr"))
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("verbose")
> ### * verbose
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: verbose
> ### Title: Give verbose output.
> ### Aliases: verbose
> 
> ### ** Examples
> 
> ## Not run: 
> ##D GET("http://httpbin.org", verbose())
> ##D GET("http://httpbin.org", verbose(info = TRUE))
> ##D 
> ##D f <- function() {
> ##D   GET("http://httpbin.org")
> ##D }
> ##D with_verbose(f())
> ##D with_verbose(f(), info = TRUE)
> ##D 
> ##D # verbose() makes it easy to see exactly what POST requests send
> ##D POST_verbose <- function(body, ...) {
> ##D   POST("https://httpbin.org/post", body = body, verbose(), ...)
> ##D   invisible()
> ##D }
> ##D POST_verbose(list(x = "a", y = "b"))
> ##D POST_verbose(list(x = "a", y = "b"), encode = "form")
> ##D POST_verbose(FALSE)
> ##D POST_verbose(NULL)
> ##D POST_verbose("")
> ##D POST_verbose("xyz")
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("with_config")
> ### * with_config
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: with_config
> ### Title: Execute code with configuration set.
> ### Aliases: with_config with_verbose
> 
> ### ** Examples
> 
> with_config(verbose(), {
+   GET("http://had.co.nz")
+   GET("http://google.com")
+ })
-> GET / HTTP/1.1
-> Host: had.co.nz
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- x-amz-id-2: /v9aUmLFyqgoQ/bZ5OgX0MLLIGa1qbsa6LA0z6okJqwQatUqRoB8yUaKOZaRJsVAkR/L+xYsR0I=
<- x-amz-request-id: JGCYEAZJC9VKEJ09
<- Date: Mon, 25 Nov 2024 17:10:19 GMT
<- Location: http://hadley.nz
<- Content-Length: 0
<- Server: AmazonS3
<- 
-> GET / HTTP/1.1
-> Host: hadley.nz
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- Connection: keep-alive
<- Content-Length: 162
<- Server: GitHub.com
<- Content-Type: text/html
<- Location: https://hadley.nz/
<- X-GitHub-Request-Id: 57BC:171C:27EB4F6:2CFC652:6744AF7A
<- Accept-Ranges: bytes
<- Age: 0
<- Date: Mon, 25 Nov 2024 17:10:18 GMT
<- Via: 1.1 varnish
<- X-Served-By: cache-iad-kcgs7200036-IAD
<- X-Cache: MISS
<- X-Cache-Hits: 0
<- X-Timer: S1732554618.482405,VS0,VE5
<- Vary: Accept-Encoding
<- X-Fastly-Request-ID: 2df78134242f2727e10f34790adf3ea355b1e01f
<- 
-> GET / HTTP/2
-> Host: hadley.nz
-> user-agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> accept-encoding: deflate, gzip, br, zstd
-> accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/2 200 
<- server: GitHub.com
<- content-type: text/html; charset=utf-8
<- last-modified: Mon, 11 Nov 2024 22:22:40 GMT
<- access-control-allow-origin: *
<- etag: W/"673283b0-50e3"
<- expires: Mon, 25 Nov 2024 16:12:08 GMT
<- cache-control: max-age=600
<- content-encoding: gzip
<- x-proxy-cache: MISS
<- x-github-request-id: 2B6A:3AC34D:45F5963:4F7DC02:67449F7F
<- accept-ranges: bytes
<- age: 0
<- date: Mon, 25 Nov 2024 17:10:18 GMT
<- via: 1.1 varnish
<- x-served-by: cache-iad-kcgs7200047-IAD
<- x-cache: HIT
<- x-cache-hits: 0
<- x-timer: S1732554619.533940,VS0,VE9
<- vary: Accept-Encoding
<- x-fastly-request-id: 0687953e1aa83016ee540e29d56a2deb05964890
<- content-length: 6331
<- 
-> GET / HTTP/1.1
-> Host: google.com
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=519=G91r908KnLIHDQl1zm4Vkq4CPMzzdFRI7yx3oLsJlTCgZydrhkHmqBhJpxjWedVbJFlXqfkz8h08kaxRg0iu__ugB97ZY0sGhQ73vk-R4B1s4Zvje2CctkaZJqwJcUZPr2LVaBWd03YK3BmFCl7SliI408N--L6p87jNlQ6ZJgHqB-EeQltfQFtQHqiGn6rQr-7THdkRqqYxsDFo
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- Location: http://www.google.com/
<- Content-Type: text/html; charset=UTF-8
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-wNykS51HNPljhpNzveV66Q' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Date: Mon, 25 Nov 2024 17:10:18 GMT
<- Expires: Wed, 25 Dec 2024 17:10:18 GMT
<- Cache-Control: public, max-age=2592000
<- Server: gws
<- Content-Length: 219
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- 
-> GET / HTTP/1.1
-> Host: www.google.com
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=519=G91r908KnLIHDQl1zm4Vkq4CPMzzdFRI7yx3oLsJlTCgZydrhkHmqBhJpxjWedVbJFlXqfkz8h08kaxRg0iu__ugB97ZY0sGhQ73vk-R4B1s4Zvje2CctkaZJqwJcUZPr2LVaBWd03YK3BmFCl7SliI408N--L6p87jNlQ6ZJgHqB-EeQltfQFtQHqiGn6rQr-7THdkRqqYxsDFo
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 200 OK
<- Date: Mon, 25 Nov 2024 17:10:18 GMT
<- Expires: -1
<- Cache-Control: private, max-age=0
<- Content-Type: text/html; charset=ISO-8859-1
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-bfpJvSi_Zmw_J_0t338rWA' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Content-Encoding: gzip
<- Server: gws
<- Content-Length: 8406
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- Set-Cookie: AEC=AZ6Zc-UjYprYsLT7lJcLEqq4E3h4cimI41n1N7KxEPGhOK_IzaksT602XFU; expires=Sat, 24-May-2025 17:10:18 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax
<- 
Response [http://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.6 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,n,p=(n=g.sdo)!=null?n:!0,q=0,r,t...
"&bver="+b(t.bv);t.dpf&&(c+="&dpf="+b(t.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> 
> # Or even easier:
> with_verbose(GET("http://google.com"))
-> GET / HTTP/1.1
-> Host: google.com
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=519=G91r908KnLIHDQl1zm4Vkq4CPMzzdFRI7yx3oLsJlTCgZydrhkHmqBhJpxjWedVbJFlXqfkz8h08kaxRg0iu__ugB97ZY0sGhQ73vk-R4B1s4Zvje2CctkaZJqwJcUZPr2LVaBWd03YK3BmFCl7SliI408N--L6p87jNlQ6ZJgHqB-EeQltfQFtQHqiGn6rQr-7THdkRqqYxsDFo
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 301 Moved Permanently
<- Location: http://www.google.com/
<- Content-Type: text/html; charset=UTF-8
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-OR2Cl_PTshXGGGd0Yms53A' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Date: Mon, 25 Nov 2024 17:10:18 GMT
<- Expires: Wed, 25 Dec 2024 17:10:18 GMT
<- Cache-Control: public, max-age=2592000
<- Server: gws
<- Content-Length: 219
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- 
-> GET / HTTP/1.1
-> Host: www.google.com
-> User-Agent: libcurl/7.81.0 r-curl/5.2.1 httr/1.4.7
-> Accept-Encoding: deflate, gzip, br, zstd
-> Cookie: NID=519=G91r908KnLIHDQl1zm4Vkq4CPMzzdFRI7yx3oLsJlTCgZydrhkHmqBhJpxjWedVbJFlXqfkz8h08kaxRg0iu__ugB97ZY0sGhQ73vk-R4B1s4Zvje2CctkaZJqwJcUZPr2LVaBWd03YK3BmFCl7SliI408N--L6p87jNlQ6ZJgHqB-EeQltfQFtQHqiGn6rQr-7THdkRqqYxsDFo
-> Accept: application/json, text/xml, application/xml, */*
-> 
<- HTTP/1.1 200 OK
<- Date: Mon, 25 Nov 2024 17:10:18 GMT
<- Expires: -1
<- Cache-Control: private, max-age=0
<- Content-Type: text/html; charset=ISO-8859-1
<- Content-Security-Policy-Report-Only: object-src 'none';base-uri 'self';script-src 'nonce-BxEzihWaAdBlpb0pbweuxQ' 'strict-dynamic' 'report-sample' 'unsafe-eval' 'unsafe-inline' https: http:;report-uri https://csp.withgoogle.com/csp/gws/other-hp
<- Content-Encoding: gzip
<- Server: gws
<- Content-Length: 8408
<- X-XSS-Protection: 0
<- X-Frame-Options: SAMEORIGIN
<- Set-Cookie: AEC=AZ6Zc-XBvzMSR88GkxRoCU2_3WBvjNkjraTf_FoX4qbWH2MVPglspeRT3g; expires=Sat, 24-May-2025 17:10:18 GMT; path=/; domain=.google.com; Secure; HttpOnly; SameSite=lax
<- 
Response [http://www.google.com/]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/html; charset=ISO-8859-1
  Size: 19.6 kB
<!doctype html><html itemscope="" itemtype="http://schema.org/WebPage" lang="...
var g=this||self;function k(){return window.google&&window.google.kOPI||null}...
function r(a,b,d,c,h){var e="";b.search("&ei=")===-1&&(e="&ei="+n(c),b.search...
document.documentElement.addEventListener("submit",function(b){var a;if(a=b.t...
</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;over...
var g=this||self;var k,l=(k=g.mei)!=null?k:1,n,p=(n=g.sdo)!=null?n:!0,q=0,r,t...
"&bver="+b(t.bv);t.dpf&&(c+="&dpf="+b(t.dpf));var f=a.lineNumber;f!==void 0&&...
if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.fo...
}
})();</script><div id="mngb"><div id=gbar><nobr><b class=gb1>Search</b> <a cl...
...
> 
> 
> 
> cleanEx()
> nameEx("write_disk")
> ### * write_disk
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: write_disk
> ### Title: Control where the response body is written.
> ### Aliases: write_disk write_memory
> 
> ### ** Examples
> 
> tmp <- tempfile()
> r1 <- GET("https://www.google.com", write_disk(tmp))
> readLines(tmp)
Warning in readLines(tmp) :
  incomplete final line found on '/tmp/Rtmpa7qjuh/filed16929359400'
 [1] "<!doctype html><html itemscope=\"\" itemtype=\"http://schema.org/WebPage\" lang=\"en\"><head><meta content=\"Search the world's information, including webpages, images, videos and more. Google has many special features to help you find exactly what you're looking for.\" name=\"description\"><meta content=\"noodp, \" name=\"robots\"><meta content=\"text/html; charset=UTF-8\" http-equiv=\"Content-Type\"><meta content=\"/images/branding/googleg/1x/googleg_standard_color_128dp.png\" itemprop=\"image\"><title>Google</title><script nonce=\"ZqZX9DPH1muzbYgajTMK2A\">(function(){var _g={kEI:'eq9EZ97iNoDj5NoPwv2usQo',kEXPI:'0,3700286,1098,538661,2872,2891,8348,64702,331294,21452,8155,23350,22436,9779,12415,33186,17056,36747,3801,2412,18985,31884,7734,18673,20675,340,1295,29276,27083,5213672,135,298,89,5991988,2841516,443,6,53,50,1,7,11,1,6,1,6,1,6,3,6,1,6,1,25,58,18,70,9,15,5,6,225,1,23934792,4043710,16673,25199209,8163,4636,16436,12024,72021,22623,884,14280,8182,5933,27321,16175,19011,2663,3431,3319,9125,13469,1285,9139,3077,1522,328,4456,1769,1116,5638,1219,1973,1,1,5,465,12989,6,10211,686,7851,22,21982,1134,212,13703,8210,883,1,2,1646,754,4134,8139,1,9675,12565,797,11899,3172,2,1797,10666,4145,5976,6,777,2088,4,393,1801,992,3,2,1,9,27,2281,3,2,2892,2933,1510,4,3836,41,3286,2,8594,1757,1,4952,2515,3,325,311,1,33,1351,97,47,883,328,1757,441,1,2253,6,3887,3690,2905,5511,659,3089,2,902,1572,336,1192,49,39,17,3,133,895,3,7,1681,1311,235,234,7,171,3952,808,34,808,1412,1220,1,1548,129,1374,88,302,325,2,236,518,418,357,6,2,192,343,2,207,3,292,737,2229,1,1076,1401,610,1579,42,144,1084,1383,110,339,198,258,498,1187,1317,192,1189,2003,352,706,417,125,30,253,2,115,4,8,380,464,4,549,212,1524,2,481,2,147,62,21,6,777,196,571,1,143,213,155,1086,14,1481,202,256,1208,107,3,3,173,249,704,1,36,619,1234,246,307,583,298,604,246,88,14,30,51,39,5,1893,258,883,454,2,630,292,5,4,4,4,2,358,1,5,4,4,4,1,56,163,105,90,2,7,105,93,66,184,73,271,18,7,1,92,257,536,52,297,70,169,76,351,204,15,150,6,1155,215,1,330,243,700,74,276,747,656,161,337,13,4,56,527,33,44,125,237,877,95,46,538,182,1639,671,2,21010640,359916,37198,18,2780,702,877,1770,3661,368,914,452,593,8,401,43',kBL:'Ql_i',kOPI:89978449};(function(){var a;((a=window.google)==null?0:a.stvsc)?google.kEI=_g.kEI:window.google=_g;}).call(this);})();(function(){google.sn='webhp';google.kHL='en';})();(function(){
 [2] "var g=this||self;function k(){return window.google&&window.google.kOPI||null};var l,m=[];function n(a){for(var b;a&&(!a.getAttribute||!(b=a.getAttribute(\"eid\")));)a=a.parentNode;return b||l}function p(a){for(var b=null;a&&(!a.getAttribute||!(b=a.getAttribute(\"leid\")));)a=a.parentNode;return b}function q(a){/^http:/i.test(a)&&window.location.protocol===\"https:\"&&(google.ml&&google.ml(Error(\"a\"),!1,{src:a,glmm:1}),a=\"\");return a}
 [3] "function r(a,b,d,c,h){var e=\"\";b.search(\"&ei=\")===-1&&(e=\"&ei=\"+n(c),b.search(\"&lei=\")===-1&&(c=p(c))&&(e+=\"&lei=\"+c));var f=b.search(\"&cshid=\")===-1&&a!==\"slh\";c=\"&zx=\"+Date.now().toString();g._cshid&&f&&(c+=\"&cshid=\"+g._cshid);(d=d())&&(c+=\"&opi=\"+d);return\"/\"+(h||\"gen_204\")+\"?atyp=i&ct=\"+String(a)+\"&cad=\"+(b+e+c)};l=google.kEI;google.getEI=n;google.getLEI=p;google.ml=function(){return null};google.log=function(a,b,d,c,h,e){e=e===void 0?k:e;d||(d=r(a,b,e,c,h));if(d=q(d)){a=new Image;var f=m.length;m[f]=a;a.onerror=a.onload=a.onabort=function(){delete m[f]};a.src=d}};google.logUrl=function(a,b){b=b===void 0?k:b;return r(\"\",a,b)};}).call(this);(function(){google.y={};google.sy=[];var d;(d=google).x||(d.x=function(a,b){if(a)var c=a.id;else{do c=Math.random();while(google.y[c])}google.y[c]=[a,b];return!1});var e;(e=google).sx||(e.sx=function(a){google.sy.push(a)});google.lm=[];var f;(f=google).plm||(f.plm=function(a){google.lm.push.apply(google.lm,a)});google.lq=[];var g;(g=google).load||(g.load=function(a,b,c){google.lq.push([[a],b,c])});var h;(h=google).loadAll||(h.loadAll=function(a,b){google.lq.push([a,b])});google.bx=!1;var k;(k=google).lx||(k.lx=function(){});var l=[],m;(m=google).fce||(m.fce=function(a,b,c,n){l.push([a,b,c,n])});google.qce=l;}).call(this);google.f={};(function(){
 [4] "document.documentElement.addEventListener(\"submit\",function(b){var a;if(a=b.target){var c=a.getAttribute(\"data-submitfalse\");a=c===\"1\"||c===\"q\"&&!a.elements.q.value?!0:!1}else a=!1;a&&(b.preventDefault(),b.stopPropagation())},!0);document.documentElement.addEventListener(\"click\",function(b){var a;a:{for(a=b.target;a&&a!==document.documentElement;a=a.parentElement)if(a.tagName===\"A\"){a=a.getAttribute(\"data-nohref\")===\"1\";break a}a=!1}a&&b.preventDefault()},!0);}).call(this);</script><style>#gbar,#guser{font-size:13px;padding-top:1px !important;}#gbar{height:22px}#guser{padding-bottom:7px !important;text-align:right}.gbh,.gbd{border-top:1px solid #c9d7f1;font-size:1px}.gbh{height:0;position:absolute;top:24px;width:100%}@media all{.gb1{height:22px;margin-right:.5em;vertical-align:top}#gbar{float:left}}a.gb1,a.gb4{text-decoration:underline !important}a.gb1,a.gb4{color:#00c !important}.gbi .gb4{color:#dd8e27 !important}.gbf .gb4{color:#900 !important}
 [5] "</style><style>body,td,a,p,.h{font-family:arial,sans-serif}body{margin:0;overflow-y:scroll}#gog{padding:3px 8px 0}td{line-height:.8em}.gac_m td{line-height:17px}form{margin-bottom:20px}.h{color:#1967d2}em{font-weight:bold;font-style:normal}.lst{height:25px;width:496px}.gsfi,.lst{font:18px arial,sans-serif}.gsfs{font:17px arial,sans-serif}.ds{display:inline-box;display:inline-block;margin:3px 0 4px;margin-left:4px}input{font-family:inherit}body{background:#fff;color:#000}a{color:#681da8;text-decoration:none}a:hover,a:active{text-decoration:underline}.fl a{color:#1967d2}a:visited{color:#681da8}.sblc{padding-top:5px}.sblc a{display:block;margin:2px 0;margin-left:13px;font-size:11px}.lsbb{background:#f8f9fa;border:solid 1px;border-color:#dadce0 #70757a #70757a #dadce0;height:30px}.lsbb{display:block}#WqQANb a{display:inline-block;margin:0 12px}.lsb{background:url(/images/nav_logo229.png) 0 -261px repeat-x;color:#000;border:none;cursor:pointer;height:30px;margin:0;outline:0;font:15px arial,sans-serif;vertical-align:top}.lsb:active{background:#dadce0}.lst:focus{outline:none}</style><script nonce=\"ZqZX9DPH1muzbYgajTMK2A\">(function(){window.google.erd={jsr:1,bv:2122,de:true}
 [6] "var g=this||self;var k,l=(k=g.mei)!=null?k:1,n,p=(n=g.sdo)!=null?n:!0,q=0,r,t=google.erd,v=t.jsr;google.ml=function(a,b,d,m,e){e=e===void 0?2:e;b&&(r=a&&a.message);d===void 0&&(d={});d.cad=\"ple_\"+google.ple+\".aple_\"+google.aple;if(google.dl)return google.dl(a,e,d,!0),null;b=d;if(v<0){window.console&&console.error(a,b);if(v===-2)throw a;b=!1}else b=!a||!a.message||a.message===\"Error loading script\"||q>=l&&!m?!1:!0;if(!b)return null;q++;d=d||{};b=encodeURIComponent;var c=\"/gen_204?atyp=i&ei=\"+b(google.kEI);google.kEXPI&&(c+=\"&jexpid=\"+b(google.kEXPI));c+=\"&srcpg=\"+b(google.sn)+\"&jsr=\"+b(t.jsr
 [7] "\"&bver=\"+b(t.bv);t.dpf&&(c+=\"&dpf=\"+b(t.dpf));var f=a.lineNumber;f!==void 0&&(c+=\"&line=\"+f);var h=a.fileName;h&&(h.indexOf(\"-extension:/\")>0&&(e=3),c+=\"&script=\"+b(h),f&&h===window.location.href&&(f=document.documentElement.outerHTML.split(\"\\n\")[f],c+=\"&cad=\"+b(f?f.substring(0,300):\"No script found.\")));google.ple&&google.ple===1&&(e=2);c+=\"&jsel=\"+e;for(var u in d)c+=\"&\",c+=b(u),c+=\"=\",c+=b(d[u]);c=c+\"&emsg=\"+b(a.name+\": \"+a.message);c=c+\"&jsst=\"+b(a.stack||\"N/A\");c.length>=12288&&(c=c.substr(0,12288));a=c;m||google.log(0,\"\",a);return a};window.onerror=function(a,b,d,m,e){r!==a&&(a=e instanceof Error?e:Error(a),d===void 0||\"lineNumber\"in a||(a.lineNumber=d),b===void 0||\"fileName\"in a||(a.fileName=b),google.ml(a,!1,void 0,!1,a.name===\"SyntaxError\"||a.message.substring(0,11)===\"SyntaxError\"||a.message.indexOf(\"Script error\")!==-1?3:0));r=null;p&&q>=l&&(window.onerror=null)};})();</script></head><body bgcolor=\"#fff\"><script nonce=\"ZqZX9DPH1muzbYgajTMK2A\">(function(){var src='/images/nav_logo229.png';var iesg=false;document.body.onload = function(){window.n && window.n();if (document.images){new Image().src=src;}
 [8] "if (!iesg){document.f&&document.f.q.focus();document.gbqf&&document.gbqf.q.focus();}
 [9] "}"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
[10] "})();</script><div id=\"mngb\"><div id=gbar><nobr><b class=gb1>Search</b> <a class=gb1 href=\"https://www.google.com/imghp?hl=en&tab=wi\">Images</a> <a class=gb1 href=\"https://maps.google.com/maps?hl=en&tab=wl\">Maps</a> <a class=gb1 href=\"https://play.google.com/?hl=en&tab=w8\">Play</a> <a class=gb1 href=\"https://www.youtube.com/?tab=w1\">YouTube</a> <a class=gb1 href=\"https://news.google.com/?tab=wn\">News</a> <a class=gb1 href=\"https://mail.google.com/mail/?tab=wm\">Gmail</a> <a class=gb1 href=\"https://drive.google.com/?tab=wo\">Drive</a> <a class=gb1 style=\"text-decoration:none\" href=\"https://www.google.com/intl/en/about/products?tab=wh\"><u>More</u> &raquo;</a></nobr></div><div id=guser width=100%><nobr><span id=gbn class=gbi></span><span id=gbf class=gbf></span><span id=gbe></span><a href=\"http://www.google.com/history/optout?hl=en\" class=gb4>Web History</a> | <a  href=\"/preferences?hl=en\" class=gb4>Settings</a> | <a target=_top id=gb_70 href=\"https://accounts.google.com/ServiceLogin?hl=en&passive=true&continue=https://www.google.com/&ec=GAZAAQ\" class=gb4>Sign in</a></nobr></div><div class=gbh style=left:0></div><div class=gbh style=right:0></div></div><center><br clear=\"all\" id=\"lgpd\"><div id=\"XjhHGf\"><img alt=\"Google\" height=\"92\" src=\"/images/branding/googlelogo/1x/googlelogo_white_background_color_272x92dp.png\" style=\"padding:28px 0 14px\" width=\"272\" id=\"hplogo\"><br><br></div><form action=\"/search\" name=\"f\"><table cellpadding=\"0\" cellspacing=\"0\"><tr valign=\"top\"><td width=\"25%\">&nbsp;</td><td align=\"center\" nowrap=\"\"><input name=\"ie\" value=\"ISO-8859-1\" type=\"hidden\"><input value=\"en\" name=\"hl\" type=\"hidden\"><input name=\"source\" type=\"hidden\" value=\"hp\"><input name=\"biw\" type=\"hidden\"><input name=\"bih\" type=\"hidden\"><div class=\"ds\" style=\"height:32px;margin:4px 0\"><input class=\"lst\" style=\"margin:0;padding:5px 8px 0 6px;vertical-align:top;color:#000\" autocomplete=\"off\" value=\"\" title=\"Google Search\" maxlength=\"2048\" name=\"q\" size=\"57\"></div><br style=\"line-height:0\"><span class=\"ds\"><span class=\"lsbb\"><input class=\"lsb\" value=\"Google Search\" name=\"btnG\" type=\"submit\"></span></span><span class=\"ds\"><span class=\"lsbb\"><input class=\"lsb\" id=\"tsuid_eq9EZ97iNoDj5NoPwv2usQo_1\" value=\"I'm Feeling Lucky\" name=\"btnI\" type=\"submit\"><script nonce=\"ZqZX9DPH1muzbYgajTMK2A\">(function(){var id='tsuid_eq9EZ97iNoDj5NoPwv2usQo_1';document.getElementById(id).onclick = function(){if (this.form.q.value){this.checked = 1;if (this.form.iflsig)this.form.iflsig.disabled = false;}
[11] "else top.location='/doodles/';};})();</script><input value=\"AL9hbdgAAAAAZ0S9ipbf0I8xJXlBU9_NhBWlh6SkKshO\" name=\"iflsig\" type=\"hidden\"></span></span></td><td class=\"fl sblc\" align=\"left\" nowrap=\"\" width=\"25%\"><a href=\"/advanced_search?hl=en&amp;authuser=0\">Advanced search</a></td></tr></table><input id=\"gbv\" name=\"gbv\" type=\"hidden\" value=\"1\"><script nonce=\"ZqZX9DPH1muzbYgajTMK2A\">(function(){var a,b=\"1\";if(document&&document.getElementById)if(typeof XMLHttpRequest!=\"undefined\")b=\"2\";else if(typeof ActiveXObject!=\"undefined\"){var c,d,e=[\"MSXML2.XMLHTTP.6.0\",\"MSXML2.XMLHTTP.3.0\",\"MSXML2.XMLHTTP\",\"Microsoft.XMLHTTP\"];for(c=0;d=e[c++];)try{new ActiveXObject(d),b=\"2\"}catch(h){}}a=b;if(a==\"2\"&&location.search.indexOf(\"&gbv=2\")==-1){var f=google.gbvu,g=document.getElementById(\"gbv\");g&&(g.value=a);f&&window.setTimeout(function(){location.href=f},0)};}).call(this);</script></form><div style=\"font-size:83%;min-height:3.5em\"><br><div id=\"K7FuCf\"><style>.U8K5Lc{font-size:small;margin-bottom:32px}.U8K5Lc a.qDTOof{display:inline-block;text-decoration:none}.U8K5Lc img{border:none;margin-right:5px;vertical-align:middle}</style><div class=\"U8K5Lc\" data-ved=\"0ahUKEwjeh_T0_PeJAxWAMVkFHcK-K6YQnIcBCAU\"><span>Get in the game: </span><a href=\"https://www.google.com/url?q=https://blog.google/technology/ai/world-chess-championships-2024/%3Futm_source%3Dhpp%26utm_medium%3Dreferral&amp;source=hpp&amp;id=19045625&amp;ct=3&amp;usg=AOvVaw2m4hYBoATDYjdywM_nxNZz&amp;sa=X&amp;ved=0ahUKEwjeh_T0_PeJAxWAMVkFHcK-K6YQ8IcBCAY\" rel=\"nofollow\">5 ways to discover chess during the World Championship</a></div></div></div><span id=\"footer\"><div style=\"font-size:10pt\"><div style=\"margin:19px auto;text-align:center\" id=\"WqQANb\"><a href=\"/intl/en/ads/\">Advertising</a><a href=\"/services/\">Business Solutions</a><a href=\"/intl/en/about.html\">About Google</a></div></div><p style=\"font-size:8pt;color:#70757a\">&copy; 2024 - <a href=\"/intl/en/policies/privacy/\">Privacy</a> - <a href=\"/intl/en/policies/terms/\">Terms</a></p></span></center><script nonce=\"ZqZX9DPH1muzbYgajTMK2A\">(function(){window.google.cdo={height:757,width:1440};(function(){var a=window.innerWidth,b=window.innerHeight;if(!a||!b){var c=window.document,d=c.compatMode==\"CSS1Compat\"?c.documentElement:c.body;a=d.clientWidth;b=d.clientHeight}if(a&&b&&(a!=google.cdo.width||b!=google.cdo.height)){var e=google,f=e.log,g=\"/client_204?&atyp=i&biw=\"+a+\"&bih=\"+b+\"&ei=\"+google.kEI,h=\"\",k=window.google&&window.google.kOPI||null;k&&(h+=\"&opi=\"+k);f.call(e,\"\",\"\",g+h)};}).call(this);})();</script>  <script nonce=\"ZqZX9DPH1muzbYgajTMK2A\">(function(){google.xjs={basecomb:'/xjs/_/js/k\\x3dxjs.hp.en.OJ970Hq9NbE.es5.O/ck\\x3dxjs.hp.mmB1lklTJJc.L.X.O/am\\x3dBAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQBAAAAAAAAAAAYAAAwGgAAAAIAAgQAAAAAAAAAAAAAAEQAAAoAwgQAACC-IwAQAIsAAPAC/d\\x3d1/ed\\x3d1/dg\\x3d0/ujg\\x3d1/rs\\x3dACT90oErZdi3YGBE92CVk9qHfAhwqQhJ0A',basecss:'/xjs/_/ss/k\\x3dxjs.hp.mmB1lklTJJc.L.X.O/am\\x3dBAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAwAgAAAAIAAgQAAAAAAAAAAAAAAEQAAAoAwgQ/rs\\x3dACT90oG_O7l9vqJQJOxroj246lVyRXT3rg',basejs:'/xjs/_/js/k\\x3dxjs.hp.en.OJ970Hq9NbE.es5.O/am\\x3dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAYAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACC-IwAQAIsAAPAC/dg\\x3d0/rs\\x3dACT90oFAqc0-E4a3JPvMNe4vg478yMwlkw',excm:[]};})();</script>       <script nonce=\"ZqZX9DPH1muzbYgajTMK2A\">(function(){var u='/xjs/_/js/k\\x3dxjs.hp.en.OJ970Hq9NbE.es5.O/am\\x3dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAYAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACC-IwAQAIsAAPAC/d\\x3d1/ed\\x3d1/dg\\x3d3/rs\\x3dACT90oFAqc0-E4a3JPvMNe4vg478yMwlkw/m\\x3dsb_he,d';var st=1;var amd=1000;var mmd=0;var pod=true;"
[12] "var e=this||self;function f(){var a,b,d;if(b=a=(b=window.google)==null?void 0:(d=b.ia)==null?void 0:d.r.B2Jtyd)b=a.m,b=b===1||b===5;return b&&a.cbfd!=null&&a.cbvi!=null?a:void 0};function g(){var a=[u];if(!google.dp){for(var b=0;b<a.length;b++){var d=a[b],c=document.createElement(\"link\");c.as=\"script\";c.href=d;c.rel=\"preload\";document.body.appendChild(c)}google.dp=!0}};google.ps===void 0&&(google.ps=[]);function h(){var a=u,b=function(){};google.lx=google.stvsc?b:function(){k(a);google.lx=b};google.bx||google.lx()}function l(a,b){b&&(a.src=b);var d=a.onload;a.onload=function(c){d&&d(c);google.ps=google.ps.filter(function(C){return a!==C})};google.ps.push(a);document.body.appendChild(a)}google.as=l;function k(a){google.timers&&google.timers.load&&google.tick&&google.tick(\"load\",\"xjsls\");var b=document.createElement(\"script\");b.onerror=function(){google.ple=1};b.onload=function(){google.ple=0};google.xjsus=void 0;l(b,a);google.aple=-1;google.dp=!0};function m(a){var b=a.getAttribute(\"jscontroller\");return(b===\"UBXHI\"||b===\"R3fhkb\"||b===\"TSZEqd\")&&a.hasAttribute(\"data-src\")}function n(){for(var a=document.getElementsByTagName(\"img\"),b=0,d=a.length;b<d;b++){var c=a[b];if(c.hasAttribute(\"data-lzy_\")&&Number(c.getAttribute(\"data-atf\"))&1&&!m(c))return!0}return!1}for(var p=document.getElementsByTagName(\"img\"),q=0,r=p.length;q<r;++q){var t=p[q];Number(t.getAttribute(\"data-atf\"))&1&&m(t)&&(t.src=t.getAttribute(\"data-src\"))};var w,x,y,z,A,B;function D(){google.xjsu=u;e._F_jsUrl=u;A=function(){h()};w=!1;x=(st===1||st===3)&&!!google.caft&&!n();y=f();z=(st===2||st===3)&&!!y&&!n();B=pod}function E(){w||x||z||(A(),w=!0)}setTimeout(function(){google&&google.tick&&google.timers&&google.timers.load&&google.tick(\"load\",\"xjspls\");D();if(x||z){if(x){var a=function(){x=!1;E()};google.caft(a);window.setTimeout(a,amd)}z&&(a=function(){z=!1;E()},y.cbvi.push(a),window.setTimeout(a,mmd));B&&(w||g())}else A()},0);})();window._ = window._ || {};window._DumpException = _._DumpException = function(e){throw e;};window._s = window._s || {};_s._DumpException = _._DumpException;window._qs = window._qs || {};_qs._DumpException = _._DumpException;(function(){var t=[4,65536,0,0,0,0,0,0,66560,0,268437504,203161606,20506,268959769,20971520,0,0,671088912,4988960,797442048,135266339,556,47];window._F_toggles = window._xjs_toggles = t;})();window._F_installCss = window._F_installCss || function(css){};(function(){google.jl={bfl:0,dw:false,ine:false,ubm:false,uwp:true,vs:false};})();(function(){var pmc='{\\x22d\\x22:{},\\x22sb_he\\x22:{\\x22agen\\x22:false,\\x22cgen\\x22:false,\\x22client\\x22:\\x22heirloom-hp\\x22,\\x22dh\\x22:true,\\x22ds\\x22:\\x22\\x22,\\x22fl\\x22:true,\\x22host\\x22:\\x22google.com\\x22,\\x22jsonp\\x22:true,\\x22msgs\\x22:{\\x22cibl\\x22:\\x22Clear Search\\x22,\\x22dym\\x22:\\x22Did you mean:\\x22,\\x22lcky\\x22:\\x22I\\\\u0026#39;m Feeling Lucky\\x22,\\x22lml\\x22:\\x22Learn more\\x22,\\x22psrc\\x22:\\x22This search was removed from your \\\\u003Ca href\\x3d\\\\\\x22/history\\\\\\x22\\\\u003EWeb History\\\\u003C/a\\\\u003E\\x22,\\x22psrl\\x22:\\x22Remove\\x22,\\x22sbit\\x22:\\x22Search by image\\x22,\\x22srch\\x22:\\x22Google Search\\x22},\\x22ovr\\x22:{},\\x22pq\\x22:\\x22\\x22,\\x22rfs\\x22:[],\\x22stok\\x22:\\x22eLzv0rR-ARftYU8aDXGrGys8_jE\\x22}}';google.pmc=JSON.parse(pmc);})();(function(){var b=function(a){var c=0;return function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}}};"                                                                                                                                                                                                                                                                                                                                  
[13] "var e=this||self;var g,h;a:{for(var k=[\"CLOSURE_FLAGS\"],l=e,n=0;n<k.length;n++)if(l=l[k[n]],l==null){h=null;break a}h=l}var p=h&&h[610401301];g=p!=null?p:!1;var q,r=e.navigator;q=r?r.userAgentData||null:null;function t(a){return g?q?q.brands.some(function(c){return(c=c.brand)&&c.indexOf(a)!=-1}):!1:!1}function u(a){var c;a:{if(c=e.navigator)if(c=c.userAgent)break a;c=\"\"}return c.indexOf(a)!=-1};function v(){return g?!!q&&q.brands.length>0:!1}function w(){return u(\"Safari\")&&!(x()||(v()?0:u(\"Coast\"))||(v()?0:u(\"Opera\"))||(v()?0:u(\"Edge\"))||(v()?t(\"Microsoft Edge\"):u(\"Edg/\"))||(v()?t(\"Opera\"):u(\"OPR\"))||u(\"Firefox\")||u(\"FxiOS\")||u(\"Silk\")||u(\"Android\"))}function x(){return v()?t(\"Chromium\"):(u(\"Chrome\")||u(\"CriOS\"))&&!(v()?0:u(\"Edge\"))||u(\"Silk\")}function y(){return u(\"Android\")&&!(x()||u(\"Firefox\")||u(\"FxiOS\")||(v()?0:u(\"Opera\"))||u(\"Silk\"))};var z=v()?!1:u(\"Trident\")||u(\"MSIE\");y();x();w();var A=!z&&!w(),D=function(a){if(/-[a-z]/.test(\"ved\"))return null;if(A&&a.dataset){if(y()&&!(\"ved\"in a.dataset))return null;a=a.dataset.ved;return a===void 0?null:a}return a.getAttribute(\"data-\"+\"ved\".replace(/([A-Z])/g,\"-$1\").toLowerCase())};var E=[],F=null;function G(a){a=a.target;var c=performance.now(),f=[],H=f.concat,d=E;if(!(d instanceof Array)){var m=typeof Symbol!=\"undefined\"&&Symbol.iterator&&d[Symbol.iterator];if(m)d=m.call(d);else if(typeof d.length==\"number\")d={next:b(d)};else throw Error(\"b`\"+String(d));for(var B=[];!(m=d.next()).done;)B.push(m.value);d=B}E=H.call(f,d,[c]);if(a&&a instanceof HTMLElement)if(a===F){if(c=E.length>=4)c=(E[E.length-1]-E[E.length-4])/1E3<5;if(c){c=google.getEI(a);a.hasAttribute(\"data-ved\")?f=a?D(a)||\"\":\"\":f=(f="                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       
[14] "a.closest(\"[data-ved]\"))?D(f)||\"\":\"\";f=f||\"\";if(a.hasAttribute(\"jsname\"))a=a.getAttribute(\"jsname\");else{var C;a=(C=a.closest(\"[jsname]\"))==null?void 0:C.getAttribute(\"jsname\")}google.log(\"rcm\",\"&ei=\"+c+\"&tgtved=\"+f+\"&jsname=\"+(a||\"\"))}}else F=a,E=[c]}window.document.addEventListener(\"DOMContentLoaded\",function(){document.body.addEventListener(\"click\",G)});}).call(this);</script></body></html
> 
> # The default
> r2 <- GET("https://www.google.com", write_memory())
> 
> # Save a very large file
> ## Not run: 
> ##D GET(
> ##D   "http://www2.census.gov/acs2011_5yr/pums/csv_pus.zip",
> ##D   write_disk("csv_pus.zip"), progress()
> ##D )
> ## End(Not run)
> 
> 
> 
> cleanEx()
> nameEx("write_stream")
> ### * write_stream
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: write_stream
> ### Title: Process output in a streaming manner.
> ### Aliases: write_stream
> 
> ### ** Examples
> 
> GET(
+   "https://github.com/jeroen/data/raw/gh-pages/diamonds.json",
+   write_stream(function(x) {
+     print(length(x))
+     length(x)
+   })
+ )
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 8530
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 13507
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 21447
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 20010
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 25244
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 25383
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 32768
[1] 11226
Response [https://raw.githubusercontent.com/jeroen/data/gh-pages/diamonds.json]
  Date: 2024-11-25 17:10
  Status: 200
  Content-Type: text/plain; charset=utf-8
<EMPTY BODY>
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.508 0.039 5.209 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
