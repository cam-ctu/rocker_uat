
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "globals"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('globals')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("globalsByName")
> ### * globalsByName
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: globalsByName
> ### Title: Locates and retrieves a set of global variables by their names
> ### Aliases: globalsByName
> 
> ### ** Examples
> 
> f <- function(x = 42, ...) {
+   globalsByName("x")
+ }
> 
> globals <- f()
> str(globals)
List of 1
 $ x: num 42
 - attr(*, "where")=List of 1
  ..$ x:<environment: 0x56ffd1202d38> 
 - attr(*, "class")= chr [1:2] "Globals" "list"
> 
> globals <- f(3.14)
> str(globals)
List of 1
 $ x: num 3.14
 - attr(*, "where")=List of 1
  ..$ x:<environment: 0x56ffd1447dd0> 
 - attr(*, "class")= chr [1:2] "Globals" "list"
> 
> 
> g <- function(x = 42, ...) {
+   globalsByName("...")
+ }
> 
> globals <- g()
> str(globals)
List of 1
 $ ...: list()
  ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
 - attr(*, "where")=List of 1
  ..$ ...:<environment: 0x56ffd1cdc848> 
 - attr(*, "class")= chr [1:2] "Globals" "list"
> 
> globals <- g(3.14)
> str(globals)
List of 1
 $ ...: list()
  ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
 - attr(*, "where")=List of 1
  ..$ ...:<environment: 0x56ffd1d95680> 
 - attr(*, "class")= chr [1:2] "Globals" "list"
> 
> globals <- g(3.14, 1L, b = 2L, c = 3L)
> str(globals)
List of 1
 $ ...:List of 3
  ..$  : int 1
  ..$ b: int 2
  ..$ c: int 3
  ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
 - attr(*, "where")=List of 1
  ..$ ...:<environment: 0x56ffd043a428> 
 - attr(*, "class")= chr [1:2] "Globals" "list"
> 
> 
> h <- function(x = 42, ...) {
+   globalsByName("..2")
+ }
> 
> globals <- h(x = 3.14, a = 1, b = 2)
> str(globals)
List of 1
 $ ..2:List of 1
  ..$ : num 2
  ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
 - attr(*, "where")=List of 1
  ..$ ..2:<environment: 0x56ffcf78b218> 
 - attr(*, "class")= chr [1:2] "Globals" "list"
> 
> globals <- g(3.14)
> str(globals)
List of 1
 $ ...: list()
  ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
 - attr(*, "where")=List of 1
  ..$ ...:<environment: 0x56ffcf266338> 
 - attr(*, "class")= chr [1:2] "Globals" "list"
> 
> globals <- g(3.14, 1L, b = 2L, c = 3L)
> str(globals)
List of 1
 $ ...:List of 3
  ..$  : int 1
  ..$ b: int 2
  ..$ c: int 3
  ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
 - attr(*, "where")=List of 1
  ..$ ...:<environment: 0x56ffced59c18> 
 - attr(*, "class")= chr [1:2] "Globals" "list"
> 
> 
> 
> cleanEx()
> nameEx("globalsOf")
> ### * globalsOf
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: findGlobals
> ### Title: Get all global objects of an expression
> ### Aliases: findGlobals globalsOf
> 
> ### ** Examples
> 
> b <- 2
> expr <- substitute({ a <- b; b <- 1 })
> 
> ## Will _not_ identify 'b' (because it's also a local)
> globalsC <- globalsOf(expr, method = "conservative")
> print(globalsC)
$`{`
.Primitive("{")

$`<-`
.Primitive("<-")

attr(,"where")
attr(,"where")$`{`
<environment: base>

attr(,"where")$`<-`
<environment: base>

attr(,"class")
[1] "Globals" "list"   
> 
> ## Will identify 'b'
> globalsL <- globalsOf(expr, method = "liberal")
> print(globalsL)
$`{`
.Primitive("{")

$`<-`
.Primitive("<-")

$b
[1] 2

attr(,"where")
attr(,"where")$`{`
<environment: base>

attr(,"where")$`<-`
<environment: base>

attr(,"where")$b
<environment: R_GlobalEnv>

attr(,"class")
[1] "Globals" "list"   
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.188 0.018 0.209 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
