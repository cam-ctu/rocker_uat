
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "downlit"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('downlit')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("autolink")
> ### * autolink
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: autolink
> ### Title: Automatically link inline code
> ### Aliases: autolink autolink_url
> 
> ### ** Examples
> 
> autolink("stats::median()")
[1] "<a href='https://rdrr.io/r/stats/median.html'>stats::median()</a>"
> autolink("vignette('grid', package = 'grid')")
[1] "<a href='https://cran.rstudio.com/web/packages/grid/vignettes/grid.pdf'>vignette('grid', package = 'grid')</a>"
> 
> autolink_url("stats::median()")
[1] "https://rdrr.io/r/stats/median.html"
> 
> 
> 
> cleanEx()
> nameEx("downlit_html_path")
> ### * downlit_html_path
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: downlit_html_path
> ### Title: Syntax highlight and link an HTML page
> ### Aliases: downlit_html_path downlit_html_node
> 
> ### ** Examples
> 
> ## Don't show: 
> if (rlang::is_installed("xml2")) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ node <- xml2::read_xml("<p><code>base::t()</code></p>")
+ node
+ 
+ # node is modified in place
+ downlit_html_node(node)
+ node
+ ## Don't show: 
+ }) # examplesIf
> node <- xml2::read_xml("<p><code>base::t()</code></p>")
> node
{xml_document}
<p>
[1] <code>base::t()</code>
> downlit_html_node(node)
> node
{xml_document}
<p>
[1] <code>\n  <a href="https://rdrr.io/r/base/t.html">base::t()</a>\n</code>
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("downlit_md_path")
> ### * downlit_md_path
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: downlit_md_path
> ### Title: Syntax highlight and link a md document
> ### Aliases: downlit_md_path downlit_md_string
> 
> ### ** Examples
> 
> ## Don't show: 
> if (rlang::is_installed("rmarkdown")) (if (getRversion() >= "3.4") withAutoprint else force)({ # examplesIf
+ ## End(Don't show)
+ if (rmarkdown::pandoc_available("1.19")) {
+ downlit_md_string("`base::t()`")
+ downlit_md_string("`base::t`")
+ downlit_md_string("* `base::t`")
+ 
+ # But don't highlight in headings
+ downlit_md_string("## `base::t`")
+ }
+ ## Don't show: 
+ }) # examplesIf
> if (rmarkdown::pandoc_available("1.19")) {
+     downlit_md_string("`base::t()`")
+     downlit_md_string("`base::t`")
+     downlit_md_string("* `base::t`")
+     downlit_md_string("## `base::t`")
+ }
[1] "## `base::t`\n"
> ## End(Don't show)
> 
> 
> 
> cleanEx()
> nameEx("evaluate_and_highlight")
> ### * evaluate_and_highlight
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: evaluate_and_highlight
> ### Title: Evaluate code and syntax highlight the results
> ### Aliases: evaluate_and_highlight
> 
> ### ** Examples
> 
> cat(evaluate_and_highlight("1 + 2"))
<span class='r-in'><span><span class='fl'>1</span> <span class='op'>+</span> <span class='fl'>2</span></span></span>
<span class='r-out co'><span class='r-pr'>#&gt;</span> [1] 3</span>
> cat(evaluate_and_highlight("x <- 1:10\nmean(x)"))
<span class='r-in'><span><span class='va'>x</span> <span class='op'>&lt;-</span> <span class='fl'>1</span><span class='op'>:</span><span class='fl'>10</span></span></span>
<span class='r-in'><span><span class='fu'><a href='https://rdrr.io/r/base/mean.html'>mean</a></span><span class='op'>(</span><span class='va'>x</span><span class='op'>)</span></span></span>
<span class='r-out co'><span class='r-pr'>#&gt;</span> [1] 5.5</span>
> 
> # -----------------------------------------------------------------
> # evaluate_and_highlight() powers pkgdown's documentation formatting so
> # here I include a few examples to make sure everything looks good
> # -----------------------------------------------------------------
> 
> blue <- function(x) paste0("\033[34m", x, "\033[39m")
> f <- function(x) {
+   cat("This is some output. My favourite colour is ", blue("blue"), ".\n", sep = "")
+   message("This is a message. My favourite fruit is ", blue("blueberries"))
+   warning("Now at stage ", blue("blue"), "!")
+ }
> f()
This is some output. My favourite colour is [34mblue[39m.
This is a message. My favourite fruit is [34mblueberries[39m
Warning in f() : Now at stage [34mblue[39m!
> 
> plot(1:10)
> 
> 
> 
> cleanEx()
> nameEx("highlight")
> ### * highlight
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: highlight
> ### Title: Highlight and link a code block
> ### Aliases: highlight classes_pandoc classes_chroma
> 
> ### ** Examples
> 
> cat(highlight("1 + 1"))
<span><span class='m'>1</span> <span class='o'>+</span> <span class='m'>1</span></span>> cat(highlight("base::t(1:3)"))
<span><span class='nf'>base</span><span class='nf'>::</span><span class='nf'><a href='https://rdrr.io/r/base/t.html'>t</a></span><span class='o'>(</span><span class='m'>1</span><span class='o'>:</span><span class='m'>3</span><span class='o'>)</span></span>> 
> # Unparseable R code returns NA
> cat(highlight("base::t("))
NA> 
> 
> 
> cleanEx()
> nameEx("href_topic")
> ### * href_topic
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: href_topic
> ### Title: Generate url for topic/article/package
> ### Aliases: href_topic href_article href_package
> ### Keywords: internal
> 
> ### ** Examples
> 
> href_topic("t")
[1] "https://rdrr.io/r/base/t.html"
> href_topic("DOESN'T EXIST")
[1] NA
> href_topic("href_topic", "downlit")
[1] "https://downlit.r-lib.org/reference/href_topic.html"
> 
> href_package("downlit")
[1] "https://downlit.r-lib.org/"
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.402 0.035 0.877 0.019 0.026 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
