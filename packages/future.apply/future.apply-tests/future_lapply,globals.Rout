
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[17:59:34.608] plan(): Setting new future strategy stack:
[17:59:34.609] List of future strategies:
[17:59:34.609] 1. sequential:
[17:59:34.609]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[17:59:34.609]    - tweaked: FALSE
[17:59:34.609]    - call: future::plan("sequential")
[17:59:34.637] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[17:59:35.528] future_lapply() ...
[17:59:35.539] Number of chunks: 1
[17:59:35.540] getGlobalsAndPackagesXApply() ...
[17:59:35.540]  - future.globals: FALSE
[17:59:35.546]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:59:35.546]  - needed namespaces: [n=0] 
[17:59:35.546] Finding globals ... DONE
[17:59:35.547]  - use_args: TRUE
[17:59:35.547]  - Getting '...' globals ...
[17:59:35.549]    - '...' content: [n=0] 
[17:59:35.549] List of 1
[17:59:35.549]  $ ...: list()
[17:59:35.549]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.549]  - attr(*, "where")=List of 1
[17:59:35.549]   ..$ ...:<environment: 0x615ed0b110b8> 
[17:59:35.549]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:35.549]  - attr(*, "resolved")= logi TRUE
[17:59:35.549]  - attr(*, "total_size")= num NA
[17:59:35.556]  - Getting '...' globals ... DONE
[17:59:35.556] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:59:35.556] List of 3
[17:59:35.556]  $ ...future.FUN        :function (x)  
[17:59:35.556]  $ future.call.arguments: list()
[17:59:35.556]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.556]  $ ...                  : list()
[17:59:35.556]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.556]  - attr(*, "where")=List of 3
[17:59:35.556]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:59:35.556]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:59:35.556]   ..$ ...                  :<environment: 0x615ed0b110b8> 
[17:59:35.556]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:35.556]  - attr(*, "resolved")= logi FALSE
[17:59:35.556]  - attr(*, "total_size")= num 3824
[17:59:35.565] Packages to be attached in all futures: [n=1] ‘utils’
[17:59:35.565] getGlobalsAndPackagesXApply() ... DONE
[17:59:35.566] Number of futures (= number of chunks): 1
[17:59:35.566] Launching 1 futures (chunks) ...
[17:59:35.566] Chunk #1 of 1 ...
[17:59:35.567]  - seeds: <none>
[17:59:35.567]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:35.586] Created future:
[17:59:35.587] ClusterFuture:
[17:59:35.587] Label: ‘future_lapply-1’
[17:59:35.587] Expression:
[17:59:35.587] {
[17:59:35.587]     do.call(function(...) {
[17:59:35.587]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:35.587]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:35.587]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:35.587]             on.exit(options(oopts), add = TRUE)
[17:59:35.587]         }
[17:59:35.587]         {
[17:59:35.587]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:35.587]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:35.587]                 ...future.FUN(...future.X_jj, ...)
[17:59:35.587]             })
[17:59:35.587]         }
[17:59:35.587]     }, args = future.call.arguments)
[17:59:35.587] }
[17:59:35.587] Lazy evaluation: FALSE
[17:59:35.587] Asynchronous evaluation: TRUE
[17:59:35.587] Local evaluation: TRUE
[17:59:35.587] Environment: R_GlobalEnv
[17:59:35.587] Capture standard output: TRUE
[17:59:35.587] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:35.587] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:35.587] Packages: 1 packages (‘utils’)
[17:59:35.587] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:35.587] Resolved: FALSE
[17:59:35.587] Value: <not collected>
[17:59:35.587] Conditions captured: <none>
[17:59:35.587] Early signaling: FALSE
[17:59:35.587] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:35.587] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:35.603] Chunk #1 of 1 ... DONE
[17:59:35.603] Launching 1 futures (chunks) ... DONE
[17:59:35.604] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[17:59:35.636] future_lapply() ...
[17:59:35.639] Number of chunks: 1
[17:59:35.640] getGlobalsAndPackagesXApply() ...
[17:59:35.640]  - future.globals: TRUE
[17:59:35.651]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[17:59:35.651]  - needed namespaces: [n=1] ‘stats’
[17:59:35.652] Finding globals ... DONE
[17:59:35.652]  - use_args: TRUE
[17:59:35.652]  - Getting '...' globals ...
[17:59:35.654]    - '...' content: [n=0] 
[17:59:35.654] List of 1
[17:59:35.654]  $ ...: list()
[17:59:35.654]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.654]  - attr(*, "where")=List of 1
[17:59:35.654]   ..$ ...:<environment: 0x615ed297c880> 
[17:59:35.654]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:35.654]  - attr(*, "resolved")= logi TRUE
[17:59:35.654]  - attr(*, "total_size")= num NA
[17:59:35.664]  - Getting '...' globals ... DONE
[17:59:35.664] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[17:59:35.665] List of 4
[17:59:35.665]  $ ...future.FUN:function (x)  
[17:59:35.665]  $ a            : num 1
[17:59:35.665]  $ b            : num 2
[17:59:35.665]  $ ...          : list()
[17:59:35.665]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.665]  - attr(*, "where")=List of 4
[17:59:35.665]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:35.665]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:35.665]   ..$ b            :<environment: R_EmptyEnv> 
[17:59:35.665]   ..$ ...          :<environment: 0x615ed297c880> 
[17:59:35.665]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:35.665]  - attr(*, "resolved")= logi FALSE
[17:59:35.665]  - attr(*, "total_size")= num 3936
[17:59:35.677] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[17:59:35.678] getGlobalsAndPackagesXApply() ... DONE
[17:59:35.678] Number of futures (= number of chunks): 1
[17:59:35.679] Launching 1 futures (chunks) ...
[17:59:35.679] Chunk #1 of 1 ...
[17:59:35.679]  - Finding globals in 'X' for chunk #1 ...
[17:59:35.680]    + additional globals found: [n=0] 
[17:59:35.685]    + additional namespaces needed: [n=0] 
[17:59:35.686]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:35.686]  - seeds: <none>
[17:59:35.686]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:35.711] Created future:
[17:59:35.712] ClusterFuture:
[17:59:35.712] Label: ‘future_lapply-1’
[17:59:35.712] Expression:
[17:59:35.712] {
[17:59:35.712]     do.call(function(...) {
[17:59:35.712]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:35.712]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:35.712]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:35.712]             on.exit(options(oopts), add = TRUE)
[17:59:35.712]         }
[17:59:35.712]         {
[17:59:35.712]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:35.712]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:35.712]                 ...future.FUN(...future.X_jj, ...)
[17:59:35.712]             })
[17:59:35.712]         }
[17:59:35.712]     }, args = future.call.arguments)
[17:59:35.712] }
[17:59:35.712] Lazy evaluation: FALSE
[17:59:35.712] Asynchronous evaluation: TRUE
[17:59:35.712] Local evaluation: TRUE
[17:59:35.712] Environment: R_GlobalEnv
[17:59:35.712] Capture standard output: TRUE
[17:59:35.712] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:35.712] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:59:35.712] Packages: 2 packages (‘stats’, ‘utils’)
[17:59:35.712] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:35.712] Resolved: FALSE
[17:59:35.712] Value: <not collected>
[17:59:35.712] Conditions captured: <none>
[17:59:35.712] Early signaling: FALSE
[17:59:35.712] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:35.712] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:35.726] Chunk #1 of 1 ... DONE
[17:59:35.726] Launching 1 futures (chunks) ... DONE
[17:59:35.726] Resolving 1 futures (chunks) ...
[17:59:35.757]  - Number of value chunks collected: 1
[17:59:35.757] Resolving 1 futures (chunks) ... DONE
[17:59:35.758] Reducing values from 1 chunks ...
[17:59:35.758]  - Number of values collected after concatenation: 1
[17:59:35.758]  - Number of values expected: 1
[17:59:35.759] Reducing values from 1 chunks ... DONE
[17:59:35.759] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[17:59:35.760] future_lapply() ...
[17:59:35.762] Number of chunks: 1
[17:59:35.762] getGlobalsAndPackagesXApply() ...
[17:59:35.762]  - future.globals: ‘a’, ‘b’
[17:59:35.763]  - use_args: TRUE
[17:59:35.764] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[17:59:35.764] List of 4
[17:59:35.764]  $ a            : num 1
[17:59:35.764]  $ b            : num 2
[17:59:35.764]  $ ...future.FUN:function (x)  
[17:59:35.764]  $ ...          : list()
[17:59:35.764]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.764]  - attr(*, "where")=List of 4
[17:59:35.764]   ..$ a            :<environment: R_GlobalEnv> 
[17:59:35.764]   ..$ b            :<environment: R_GlobalEnv> 
[17:59:35.764]   ..$ ...future.FUN:<environment: 0x615ed186a568> 
[17:59:35.764]   ..$ ...          :<environment: 0x615ed186a568> 
[17:59:35.764]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:35.764]  - attr(*, "resolved")= logi FALSE
[17:59:35.764]  - attr(*, "total_size")= num NA
[17:59:35.775] Packages to be attached in all futures: [n=1] ‘utils’
[17:59:35.776] getGlobalsAndPackagesXApply() ... DONE
[17:59:35.776] Number of futures (= number of chunks): 1
[17:59:35.777] Launching 1 futures (chunks) ...
[17:59:35.777] Chunk #1 of 1 ...
[17:59:35.777]  - seeds: <none>
[17:59:35.777]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:35.801] Created future:
[17:59:35.802] ClusterFuture:
[17:59:35.802] Label: ‘future_lapply-1’
[17:59:35.802] Expression:
[17:59:35.802] {
[17:59:35.802]     do.call(function(...) {
[17:59:35.802]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:35.802]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:35.802]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:35.802]             on.exit(options(oopts), add = TRUE)
[17:59:35.802]         }
[17:59:35.802]         {
[17:59:35.802]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:35.802]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:35.802]                 ...future.FUN(...future.X_jj, ...)
[17:59:35.802]             })
[17:59:35.802]         }
[17:59:35.802]     }, args = future.call.arguments)
[17:59:35.802] }
[17:59:35.802] Lazy evaluation: FALSE
[17:59:35.802] Asynchronous evaluation: TRUE
[17:59:35.802] Local evaluation: TRUE
[17:59:35.802] Environment: R_GlobalEnv
[17:59:35.802] Capture standard output: TRUE
[17:59:35.802] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:35.802] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:59:35.802] Packages: 1 packages (‘utils’)
[17:59:35.802] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:35.802] Resolved: FALSE
[17:59:35.802] Value: <not collected>
[17:59:35.802] Conditions captured: <none>
[17:59:35.802] Early signaling: FALSE
[17:59:35.802] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:35.802] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:35.816] Chunk #1 of 1 ... DONE
[17:59:35.817] Launching 1 futures (chunks) ... DONE
[17:59:35.817] Resolving 1 futures (chunks) ...
[17:59:35.847]  - Number of value chunks collected: 1
[17:59:35.848] Resolving 1 futures (chunks) ... DONE
[17:59:35.848] Reducing values from 1 chunks ...
[17:59:35.848]  - Number of values collected after concatenation: 1
[17:59:35.849]  - Number of values expected: 1
[17:59:35.849] Reducing values from 1 chunks ... DONE
[17:59:35.849] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[17:59:35.850] future_lapply() ...
[17:59:35.852] Number of chunks: 1
[17:59:35.853] getGlobalsAndPackagesXApply() ...
[17:59:35.853]  - future.globals: <name-value list> with names ‘2’, ‘3’
[17:59:35.854]  - use_args: TRUE
[17:59:35.854]  - Getting '...' globals ...
[17:59:35.855]    - '...' content: [n=0] 
[17:59:35.855] List of 1
[17:59:35.855]  $ ...: list()
[17:59:35.855]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.855]  - attr(*, "where")=List of 1
[17:59:35.855]   ..$ ...:<environment: 0x615ed0c02f48> 
[17:59:35.855]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:35.855]  - attr(*, "resolved")= logi TRUE
[17:59:35.855]  - attr(*, "total_size")= num NA
[17:59:35.863]  - Getting '...' globals ... DONE
[17:59:35.864] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[17:59:35.865] List of 4
[17:59:35.865]  $ a            : num 2
[17:59:35.865]  $ b            : num 3
[17:59:35.865]  $ ...future.FUN:function (x)  
[17:59:35.865]  $ ...          : list()
[17:59:35.865]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.865]  - attr(*, "where")=List of 4
[17:59:35.865]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:35.865]   ..$ b            :<environment: R_EmptyEnv> 
[17:59:35.865]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:59:35.865]   ..$ ...          :<environment: 0x615ed0c02f48> 
[17:59:35.865]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:35.865]  - attr(*, "resolved")= logi FALSE
[17:59:35.865]  - attr(*, "total_size")= num NA
[17:59:35.877] Packages to be attached in all futures: [n=1] ‘utils’
[17:59:35.877] getGlobalsAndPackagesXApply() ... DONE
[17:59:35.878] Number of futures (= number of chunks): 1
[17:59:35.878] Launching 1 futures (chunks) ...
[17:59:35.878] Chunk #1 of 1 ...
[17:59:35.879]  - seeds: <none>
[17:59:35.879]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:35.905] Created future:
[17:59:35.905] ClusterFuture:
[17:59:35.905] Label: ‘future_lapply-1’
[17:59:35.905] Expression:
[17:59:35.905] {
[17:59:35.905]     do.call(function(...) {
[17:59:35.905]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:35.905]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:35.905]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:35.905]             on.exit(options(oopts), add = TRUE)
[17:59:35.905]         }
[17:59:35.905]         {
[17:59:35.905]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:35.905]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:35.905]                 ...future.FUN(...future.X_jj, ...)
[17:59:35.905]             })
[17:59:35.905]         }
[17:59:35.905]     }, args = future.call.arguments)
[17:59:35.905] }
[17:59:35.905] Lazy evaluation: FALSE
[17:59:35.905] Asynchronous evaluation: TRUE
[17:59:35.905] Local evaluation: TRUE
[17:59:35.905] Environment: R_GlobalEnv
[17:59:35.905] Capture standard output: TRUE
[17:59:35.905] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:35.905] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:59:35.905] Packages: 1 packages (‘utils’)
[17:59:35.905] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:35.905] Resolved: FALSE
[17:59:35.905] Value: <not collected>
[17:59:35.905] Conditions captured: <none>
[17:59:35.905] Early signaling: FALSE
[17:59:35.905] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:35.905] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:35.920] Chunk #1 of 1 ... DONE
[17:59:35.920] Launching 1 futures (chunks) ... DONE
[17:59:35.920] Resolving 1 futures (chunks) ...
[17:59:35.951]  - Number of value chunks collected: 1
[17:59:35.951] Resolving 1 futures (chunks) ... DONE
[17:59:35.951] Reducing values from 1 chunks ...
[17:59:35.952]  - Number of values collected after concatenation: 1
[17:59:35.952]  - Number of values expected: 1
[17:59:35.952] Reducing values from 1 chunks ... DONE
[17:59:35.953] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[17:59:35.954] future_lapply() ...
[17:59:35.956] Number of chunks: 1
[17:59:35.956] getGlobalsAndPackagesXApply() ...
[17:59:35.957]  - future.globals: FALSE
[17:59:35.960]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[17:59:35.960]  - needed namespaces: [n=0] 
[17:59:35.961] Finding globals ... DONE
[17:59:35.961]  - use_args: TRUE
[17:59:35.961]  - Getting '...' globals ...
[17:59:35.962]    - '...' content: [n=0] 
[17:59:35.963] List of 1
[17:59:35.963]  $ ...: list()
[17:59:35.963]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.963]  - attr(*, "where")=List of 1
[17:59:35.963]   ..$ ...:<environment: 0x615ed28c3998> 
[17:59:35.963]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:35.963]  - attr(*, "resolved")= logi TRUE
[17:59:35.963]  - attr(*, "total_size")= num NA
[17:59:35.971]  - Getting '...' globals ... DONE
[17:59:35.972] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:59:35.972] List of 4
[17:59:35.972]  $ d                    : num 42
[17:59:35.972]  $ ...future.FUN        :function (x)  
[17:59:35.972]  $ future.call.arguments: list()
[17:59:35.972]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.972]  $ ...                  : list()
[17:59:35.972]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:35.972]  - attr(*, "where")=List of 4
[17:59:35.972]   ..$ d                    :<environment: R_EmptyEnv> 
[17:59:35.972]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:59:35.972]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:59:35.972]   ..$ ...                  :<environment: 0x615ed28c3998> 
[17:59:35.972]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:35.972]  - attr(*, "resolved")= logi FALSE
[17:59:35.972]  - attr(*, "total_size")= num 784
[17:59:35.984] Packages to be attached in all futures: [n=0] 
[17:59:35.984] getGlobalsAndPackagesXApply() ... DONE
[17:59:35.984] Number of futures (= number of chunks): 1
[17:59:35.985] Launching 1 futures (chunks) ...
[17:59:35.985] Chunk #1 of 1 ...
[17:59:35.985]  - seeds: <none>
[17:59:35.986]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.009] Created future:
[17:59:36.009] ClusterFuture:
[17:59:36.009] Label: ‘future_lapply-1’
[17:59:36.009] Expression:
[17:59:36.009] {
[17:59:36.009]     do.call(function(...) {
[17:59:36.009]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.009]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.009]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.009]             on.exit(options(oopts), add = TRUE)
[17:59:36.009]         }
[17:59:36.009]         {
[17:59:36.009]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.009]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.009]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.009]             })
[17:59:36.009]         }
[17:59:36.009]     }, args = future.call.arguments)
[17:59:36.009] }
[17:59:36.009] Lazy evaluation: FALSE
[17:59:36.009] Asynchronous evaluation: TRUE
[17:59:36.009] Local evaluation: TRUE
[17:59:36.009] Environment: R_GlobalEnv
[17:59:36.009] Capture standard output: TRUE
[17:59:36.009] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.009] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:59:36.009] Packages: <none>
[17:59:36.009] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.009] Resolved: FALSE
[17:59:36.009] Value: <not collected>
[17:59:36.009] Conditions captured: <none>
[17:59:36.009] Early signaling: FALSE
[17:59:36.009] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.009] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:36.023] Chunk #1 of 1 ... DONE
[17:59:36.023] Launching 1 futures (chunks) ... DONE
[17:59:36.023] Resolving 1 futures (chunks) ...
[17:59:36.057]  - Number of value chunks collected: 1
[17:59:36.057] Resolving 1 futures (chunks) ... DONE
[17:59:36.057] Reducing values from 1 chunks ...
[17:59:36.057]  - Number of values collected after concatenation: 2
[17:59:36.058]  - Number of values expected: 2
[17:59:36.058] Reducing values from 1 chunks ... DONE
[17:59:36.058] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[17:59:36.059] future_lapply() ...
[17:59:36.060] Number of chunks: 1
[17:59:36.060] getGlobalsAndPackagesXApply() ...
[17:59:36.061]  - future.globals: TRUE
[17:59:36.065]  - globals found/used: [n=1] ‘FUN’
[17:59:36.065]  - needed namespaces: [n=0] 
[17:59:36.065] Finding globals ... DONE
[17:59:36.066]  - use_args: TRUE
[17:59:36.066]  - Getting '...' globals ...
[17:59:36.067]    - '...' content: [n=0] 
[17:59:36.067] List of 1
[17:59:36.067]  $ ...: list()
[17:59:36.067]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.067]  - attr(*, "where")=List of 1
[17:59:36.067]   ..$ ...:<environment: 0x615ed1d4eb30> 
[17:59:36.067]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.067]  - attr(*, "resolved")= logi TRUE
[17:59:36.067]  - attr(*, "total_size")= num NA
[17:59:36.073]  - Getting '...' globals ... DONE
[17:59:36.073] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:36.073] List of 2
[17:59:36.073]  $ ...future.FUN:function (x)  
[17:59:36.073]  $ ...          : list()
[17:59:36.073]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.073]  - attr(*, "where")=List of 2
[17:59:36.073]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.073]   ..$ ...          :<environment: 0x615ed1d4eb30> 
[17:59:36.073]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.073]  - attr(*, "resolved")= logi FALSE
[17:59:36.073]  - attr(*, "total_size")= num 728
[17:59:36.079] Packages to be attached in all futures: [n=0] 
[17:59:36.079] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.080] Number of futures (= number of chunks): 1
[17:59:36.080] Launching 1 futures (chunks) ...
[17:59:36.080] Chunk #1 of 1 ...
[17:59:36.080]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.081]    + additional globals found: [n=0] 
[17:59:36.081]    + additional namespaces needed: [n=0] 
[17:59:36.081]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.082]  - seeds: <none>
[17:59:36.082]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.098] Created future:
[17:59:36.098] ClusterFuture:
[17:59:36.098] Label: ‘future_lapply-1’
[17:59:36.098] Expression:
[17:59:36.098] {
[17:59:36.098]     do.call(function(...) {
[17:59:36.098]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.098]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.098]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.098]             on.exit(options(oopts), add = TRUE)
[17:59:36.098]         }
[17:59:36.098]         {
[17:59:36.098]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.098]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.098]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.098]             })
[17:59:36.098]         }
[17:59:36.098]     }, args = future.call.arguments)
[17:59:36.098] }
[17:59:36.098] Lazy evaluation: FALSE
[17:59:36.098] Asynchronous evaluation: TRUE
[17:59:36.098] Local evaluation: TRUE
[17:59:36.098] Environment: R_GlobalEnv
[17:59:36.098] Capture standard output: TRUE
[17:59:36.098] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.098] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:36.098] Packages: <none>
[17:59:36.098] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.098] Resolved: FALSE
[17:59:36.098] Value: <not collected>
[17:59:36.098] Conditions captured: <none>
[17:59:36.098] Early signaling: FALSE
[17:59:36.098] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.098] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:36.111] Chunk #1 of 1 ... DONE
[17:59:36.112] Launching 1 futures (chunks) ... DONE
[17:59:36.112] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[17:59:36.268] future_lapply() ...
[17:59:36.270] Number of chunks: 1
[17:59:36.270] getGlobalsAndPackagesXApply() ...
[17:59:36.270]  - future.globals: TRUE
[17:59:36.281]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:59:36.281]  - needed namespaces: [n=0] 
[17:59:36.281] Finding globals ... DONE
[17:59:36.281]  - use_args: TRUE
[17:59:36.282]  - Getting '...' globals ...
[17:59:36.282]    - '...' content: [n=0] 
[17:59:36.283] List of 1
[17:59:36.283]  $ ...: list()
[17:59:36.283]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.283]  - attr(*, "where")=List of 1
[17:59:36.283]   ..$ ...:<environment: 0x615ed27bddb8> 
[17:59:36.283]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.283]  - attr(*, "resolved")= logi TRUE
[17:59:36.283]  - attr(*, "total_size")= num NA
[17:59:36.288]  - Getting '...' globals ... DONE
[17:59:36.288] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:59:36.288] List of 6
[17:59:36.288]  $ ...future.FUN:function (i)  
[17:59:36.288]  $ caller       :function (a, b, FUN = call_my_add)  
[17:59:36.288]  $ args         :List of 1
[17:59:36.288]   ..$ FUN:function (a, b)  
[17:59:36.288]  $ call_my_add  :function (a, b)  
[17:59:36.288]  $ my_add       :function (a, b)  
[17:59:36.288]  $ ...          : list()
[17:59:36.288]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.288]  - attr(*, "where")=List of 6
[17:59:36.288]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.288]   ..$ caller       :<environment: R_EmptyEnv> 
[17:59:36.288]   ..$ args         :<environment: R_EmptyEnv> 
[17:59:36.288]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:59:36.288]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:59:36.288]   ..$ ...          :<environment: 0x615ed27bddb8> 
[17:59:36.288]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.288]  - attr(*, "resolved")= logi FALSE
[17:59:36.288]  - attr(*, "total_size")= num 6664
[17:59:36.301] Packages to be attached in all futures: [n=0] 
[17:59:36.301] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.302] Number of futures (= number of chunks): 1
[17:59:36.302] Launching 1 futures (chunks) ...
[17:59:36.302] Chunk #1 of 1 ...
[17:59:36.302]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.303]    + additional globals found: [n=0] 
[17:59:36.303]    + additional namespaces needed: [n=0] 
[17:59:36.304]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.304]  - seeds: <none>
[17:59:36.304]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.315] Created future:
[17:59:36.315] SequentialFuture:
[17:59:36.315] Label: ‘future_lapply-1’
[17:59:36.315] Expression:
[17:59:36.315] {
[17:59:36.315]     do.call(function(...) {
[17:59:36.315]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.315]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.315]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.315]             on.exit(options(oopts), add = TRUE)
[17:59:36.315]         }
[17:59:36.315]         {
[17:59:36.315]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.315]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.315]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.315]             })
[17:59:36.315]         }
[17:59:36.315]     }, args = future.call.arguments)
[17:59:36.315] }
[17:59:36.315] Lazy evaluation: FALSE
[17:59:36.315] Asynchronous evaluation: FALSE
[17:59:36.315] Local evaluation: TRUE
[17:59:36.315] Environment: 0x615ed27be218
[17:59:36.315] Capture standard output: TRUE
[17:59:36.315] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.315] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:59:36.315] Packages: <none>
[17:59:36.315] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.315] Resolved: TRUE
[17:59:36.315] Value: 168 bytes of class ‘list’
[17:59:36.315] Early signaling: FALSE
[17:59:36.315] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.315] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.318] Chunk #1 of 1 ... DONE
[17:59:36.318] Launching 1 futures (chunks) ... DONE
[17:59:36.318] Resolving 1 futures (chunks) ...
[17:59:36.319]  - Number of value chunks collected: 1
[17:59:36.319] Resolving 1 futures (chunks) ... DONE
[17:59:36.320] Reducing values from 1 chunks ...
[17:59:36.320]  - Number of values collected after concatenation: 3
[17:59:36.320]  - Number of values expected: 3
[17:59:36.320] Reducing values from 1 chunks ... DONE
[17:59:36.320] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:59:36.321] future_lapply() ...
[17:59:36.327] Number of chunks: 1
[17:59:36.328] getGlobalsAndPackagesXApply() ...
[17:59:36.328]  - future.globals: TRUE
[17:59:36.333]  - globals found/used: [n=1] ‘FUN’
[17:59:36.333]  - needed namespaces: [n=0] 
[17:59:36.334] Finding globals ... DONE
[17:59:36.334]  - use_args: TRUE
[17:59:36.334]  - Getting '...' globals ...
[17:59:36.335]    - '...' content: [n=1] ‘what’
[17:59:36.335] List of 1
[17:59:36.335]  $ ...:List of 1
[17:59:36.335]   ..$ what:function (x)  
[17:59:36.335]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.335]  - attr(*, "where")=List of 1
[17:59:36.335]   ..$ ...:<environment: 0x615ed16087a0> 
[17:59:36.335]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.335]  - attr(*, "resolved")= logi TRUE
[17:59:36.335]  - attr(*, "total_size")= num NA
[17:59:36.340]  - Getting '...' globals ... DONE
[17:59:36.341] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:36.341] List of 2
[17:59:36.341]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:59:36.341]  $ ...          :List of 1
[17:59:36.341]   ..$ what:function (x)  
[17:59:36.341]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.341]  - attr(*, "where")=List of 2
[17:59:36.341]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.341]   ..$ ...          :<environment: 0x615ed16087a0> 
[17:59:36.341]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.341]  - attr(*, "resolved")= logi FALSE
[17:59:36.341]  - attr(*, "total_size")= num 12192
[17:59:36.349] Packages to be attached in all futures: [n=0] 
[17:59:36.349] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.349] Number of futures (= number of chunks): 1
[17:59:36.349] Launching 1 futures (chunks) ...
[17:59:36.350] Chunk #1 of 1 ...
[17:59:36.350]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.351]    + additional globals found: [n=0] 
[17:59:36.351]    + additional namespaces needed: [n=0] 
[17:59:36.351]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.351]  - seeds: <none>
[17:59:36.351]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.356] Created future:
[17:59:36.356] SequentialFuture:
[17:59:36.356] Label: ‘future_lapply-1’
[17:59:36.356] Expression:
[17:59:36.356] {
[17:59:36.356]     do.call(function(...) {
[17:59:36.356]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.356]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.356]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.356]             on.exit(options(oopts), add = TRUE)
[17:59:36.356]         }
[17:59:36.356]         {
[17:59:36.356]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.356]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.356]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.356]             })
[17:59:36.356]         }
[17:59:36.356]     }, args = future.call.arguments)
[17:59:36.356] }
[17:59:36.356] Lazy evaluation: FALSE
[17:59:36.356] Asynchronous evaluation: FALSE
[17:59:36.356] Local evaluation: TRUE
[17:59:36.356] Environment: R_GlobalEnv
[17:59:36.356] Capture standard output: TRUE
[17:59:36.356] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.356] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:36.356] Packages: <none>
[17:59:36.356] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.356] Resolved: TRUE
[17:59:36.356] Value: 56 bytes of class ‘list’
[17:59:36.356] Early signaling: FALSE
[17:59:36.356] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.356] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.358] Chunk #1 of 1 ... DONE
[17:59:36.358] Launching 1 futures (chunks) ... DONE
[17:59:36.359] Resolving 1 futures (chunks) ...
[17:59:36.359]  - Number of value chunks collected: 1
[17:59:36.360] Resolving 1 futures (chunks) ... DONE
[17:59:36.360] Reducing values from 1 chunks ...
[17:59:36.360]  - Number of values collected after concatenation: 1
[17:59:36.360]  - Number of values expected: 1
[17:59:36.360] Reducing values from 1 chunks ... DONE
[17:59:36.360] future_lapply() ... DONE
[17:59:36.361] future_lapply() ...
[17:59:36.363] Number of chunks: 1
[17:59:36.363] getGlobalsAndPackagesXApply() ...
[17:59:36.364]  - future.globals: TRUE
[17:59:36.370]  - globals found/used: [n=1] ‘FUN’
[17:59:36.371]  - needed namespaces: [n=0] 
[17:59:36.371] Finding globals ... DONE
[17:59:36.371]  - use_args: TRUE
[17:59:36.371]  - Getting '...' globals ...
[17:59:36.372]    - '...' content: [n=1] ‘what’
[17:59:36.372] List of 1
[17:59:36.372]  $ ...:List of 1
[17:59:36.372]   ..$ what:function (...)  
[17:59:36.372]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.372]  - attr(*, "where")=List of 1
[17:59:36.372]   ..$ ...:<environment: 0x615ed24e13d0> 
[17:59:36.372]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.372]  - attr(*, "resolved")= logi TRUE
[17:59:36.372]  - attr(*, "total_size")= num NA
[17:59:36.378]  - Getting '...' globals ... DONE
[17:59:36.378] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:36.378] List of 2
[17:59:36.378]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:59:36.378]  $ ...          :List of 1
[17:59:36.378]   ..$ what:function (...)  
[17:59:36.378]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.378]  - attr(*, "where")=List of 2
[17:59:36.378]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.378]   ..$ ...          :<environment: 0x615ed24e13d0> 
[17:59:36.378]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.378]  - attr(*, "resolved")= logi FALSE
[17:59:36.378]  - attr(*, "total_size")= num 12584
[17:59:36.384] Packages to be attached in all futures: [n=0] 
[17:59:36.384] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.385] Number of futures (= number of chunks): 1
[17:59:36.385] Launching 1 futures (chunks) ...
[17:59:36.385] Chunk #1 of 1 ...
[17:59:36.386]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.386]    + additional globals found: [n=0] 
[17:59:36.386]    + additional namespaces needed: [n=0] 
[17:59:36.387]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.387]  - seeds: <none>
[17:59:36.387]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.393] Created future:
[17:59:36.393] SequentialFuture:
[17:59:36.393] Label: ‘future_lapply-1’
[17:59:36.393] Expression:
[17:59:36.393] {
[17:59:36.393]     do.call(function(...) {
[17:59:36.393]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.393]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.393]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.393]             on.exit(options(oopts), add = TRUE)
[17:59:36.393]         }
[17:59:36.393]         {
[17:59:36.393]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.393]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.393]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.393]             })
[17:59:36.393]         }
[17:59:36.393]     }, args = future.call.arguments)
[17:59:36.393] }
[17:59:36.393] Lazy evaluation: FALSE
[17:59:36.393] Asynchronous evaluation: FALSE
[17:59:36.393] Local evaluation: TRUE
[17:59:36.393] Environment: R_GlobalEnv
[17:59:36.393] Capture standard output: TRUE
[17:59:36.393] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.393] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:36.393] Packages: <none>
[17:59:36.393] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.393] Resolved: TRUE
[17:59:36.393] Value: 56 bytes of class ‘list’
[17:59:36.393] Early signaling: FALSE
[17:59:36.393] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.393] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.395] Chunk #1 of 1 ... DONE
[17:59:36.396] Launching 1 futures (chunks) ... DONE
[17:59:36.396] Resolving 1 futures (chunks) ...
[17:59:36.397]  - Number of value chunks collected: 1
[17:59:36.397] Resolving 1 futures (chunks) ... DONE
[17:59:36.397] Reducing values from 1 chunks ...
[17:59:36.397]  - Number of values collected after concatenation: 1
[17:59:36.397]  - Number of values expected: 1
[17:59:36.398] Reducing values from 1 chunks ... DONE
[17:59:36.398] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:59:36.399] future_lapply() ...
[17:59:36.402] Number of chunks: 1
[17:59:36.402] getGlobalsAndPackagesXApply() ...
[17:59:36.403]  - future.globals: TRUE
[17:59:36.406]  - globals found/used: [n=1] ‘FUN’
[17:59:36.406]  - needed namespaces: [n=0] 
[17:59:36.406] Finding globals ... DONE
[17:59:36.406]  - use_args: TRUE
[17:59:36.406]  - Getting '...' globals ...
[17:59:36.407]    - '...' content: [n=1] ‘b’
[17:59:36.407] List of 1
[17:59:36.407]  $ ...:List of 1
[17:59:36.407]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:59:36.407]   .. ..$ a: int [1:2] 1 2
[17:59:36.407]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.407]  - attr(*, "where")=List of 1
[17:59:36.407]   ..$ ...:<environment: 0x615ed2f11db0> 
[17:59:36.407]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.407]  - attr(*, "resolved")= logi TRUE
[17:59:36.407]  - attr(*, "total_size")= num NA
[17:59:36.414]  - Getting '...' globals ... DONE
[17:59:36.414] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:36.414] List of 2
[17:59:36.414]  $ ...future.FUN:function (a, b)  
[17:59:36.414]  $ ...          :List of 1
[17:59:36.414]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:59:36.414]   .. ..$ a: int [1:2] 1 2
[17:59:36.414]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.414]  - attr(*, "where")=List of 2
[17:59:36.414]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.414]   ..$ ...          :<environment: 0x615ed2f11db0> 
[17:59:36.414]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.414]  - attr(*, "resolved")= logi FALSE
[17:59:36.414]  - attr(*, "total_size")= num 1440
[17:59:36.421] Packages to be attached in all futures: [n=0] 
[17:59:36.421] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.422] Number of futures (= number of chunks): 1
[17:59:36.422] Launching 1 futures (chunks) ...
[17:59:36.422] Chunk #1 of 1 ...
[17:59:36.422]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.423]    + additional globals found: [n=0] 
[17:59:36.423]    + additional namespaces needed: [n=0] 
[17:59:36.423]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.423]  - seeds: <none>
[17:59:36.424]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.428] Created future:
[17:59:36.428] SequentialFuture:
[17:59:36.428] Label: ‘future_lapply-1’
[17:59:36.428] Expression:
[17:59:36.428] {
[17:59:36.428]     do.call(function(...) {
[17:59:36.428]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.428]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.428]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.428]             on.exit(options(oopts), add = TRUE)
[17:59:36.428]         }
[17:59:36.428]         {
[17:59:36.428]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.428]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.428]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.428]             })
[17:59:36.428]         }
[17:59:36.428]     }, args = future.call.arguments)
[17:59:36.428] }
[17:59:36.428] Lazy evaluation: FALSE
[17:59:36.428] Asynchronous evaluation: FALSE
[17:59:36.428] Local evaluation: TRUE
[17:59:36.428] Environment: R_GlobalEnv
[17:59:36.428] Capture standard output: TRUE
[17:59:36.428] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.428] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:36.428] Packages: <none>
[17:59:36.428] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.428] Resolved: TRUE
[17:59:36.428] Value: 112 bytes of class ‘list’
[17:59:36.428] Early signaling: FALSE
[17:59:36.428] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.428] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.430] Chunk #1 of 1 ... DONE
[17:59:36.431] Launching 1 futures (chunks) ... DONE
[17:59:36.431] Resolving 1 futures (chunks) ...
[17:59:36.432]  - Number of value chunks collected: 1
[17:59:36.432] Resolving 1 futures (chunks) ... DONE
[17:59:36.432] Reducing values from 1 chunks ...
[17:59:36.432]  - Number of values collected after concatenation: 1
[17:59:36.432]  - Number of values expected: 1
[17:59:36.433] Reducing values from 1 chunks ... DONE
[17:59:36.433] future_lapply() ... DONE
[17:59:36.433] future_lapply() ...
[17:59:36.434] Number of chunks: 1
[17:59:36.434] getGlobalsAndPackagesXApply() ...
[17:59:36.434]  - future.globals: TRUE
[17:59:36.437]  - globals found/used: [n=1] ‘FUN’
[17:59:36.438]  - needed namespaces: [n=0] 
[17:59:36.438] Finding globals ... DONE
[17:59:36.438]  - use_args: TRUE
[17:59:36.438]  - Getting '...' globals ...
[17:59:36.439]    - '...' content: [n=1] ‘b’
[17:59:36.439] List of 1
[17:59:36.439]  $ ...:List of 1
[17:59:36.439]   ..$ b:<environment: 0x615ed118d860> 
[17:59:36.439]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.439]  - attr(*, "where")=List of 1
[17:59:36.439]   ..$ ...:<environment: 0x615ed118e3f8> 
[17:59:36.439]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.439]  - attr(*, "resolved")= logi TRUE
[17:59:36.439]  - attr(*, "total_size")= num NA
[17:59:36.444]  - Getting '...' globals ... DONE
[17:59:36.445] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:36.445] List of 2
[17:59:36.445]  $ ...future.FUN:function (a, b)  
[17:59:36.445]  $ ...          :List of 1
[17:59:36.445]   ..$ b:<environment: 0x615ed118d860> 
[17:59:36.445]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.445]  - attr(*, "where")=List of 2
[17:59:36.445]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.445]   ..$ ...          :<environment: 0x615ed118e3f8> 
[17:59:36.445]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.445]  - attr(*, "resolved")= logi FALSE
[17:59:36.445]  - attr(*, "total_size")= num 1440
[17:59:36.451] Packages to be attached in all futures: [n=0] 
[17:59:36.451] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.451] Number of futures (= number of chunks): 1
[17:59:36.452] Launching 1 futures (chunks) ...
[17:59:36.452] Chunk #1 of 1 ...
[17:59:36.452]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.453]    + additional globals found: [n=0] 
[17:59:36.453]    + additional namespaces needed: [n=0] 
[17:59:36.453]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.453]  - seeds: <none>
[17:59:36.453]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.458] Created future:
[17:59:36.458] SequentialFuture:
[17:59:36.458] Label: ‘future_lapply-1’
[17:59:36.458] Expression:
[17:59:36.458] {
[17:59:36.458]     do.call(function(...) {
[17:59:36.458]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.458]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.458]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.458]             on.exit(options(oopts), add = TRUE)
[17:59:36.458]         }
[17:59:36.458]         {
[17:59:36.458]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.458]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.458]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.458]             })
[17:59:36.458]         }
[17:59:36.458]     }, args = future.call.arguments)
[17:59:36.458] }
[17:59:36.458] Lazy evaluation: FALSE
[17:59:36.458] Asynchronous evaluation: FALSE
[17:59:36.458] Local evaluation: TRUE
[17:59:36.458] Environment: R_GlobalEnv
[17:59:36.458] Capture standard output: TRUE
[17:59:36.458] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.458] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:36.458] Packages: <none>
[17:59:36.458] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.458] Resolved: TRUE
[17:59:36.458] Value: 120 bytes of class ‘list’
[17:59:36.458] Early signaling: FALSE
[17:59:36.458] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.458] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.460] Chunk #1 of 1 ... DONE
[17:59:36.460] Launching 1 futures (chunks) ... DONE
[17:59:36.461] Resolving 1 futures (chunks) ...
[17:59:36.461]  - Number of value chunks collected: 1
[17:59:36.462] Resolving 1 futures (chunks) ... DONE
[17:59:36.462] Reducing values from 1 chunks ...
[17:59:36.462]  - Number of values collected after concatenation: 1
[17:59:36.462]  - Number of values expected: 1
[17:59:36.462] Reducing values from 1 chunks ... DONE
[17:59:36.463] future_lapply() ... DONE
[17:59:36.463] future_lapply() ...
[17:59:36.464] Number of chunks: 1
[17:59:36.464] getGlobalsAndPackagesXApply() ...
[17:59:36.464]  - future.globals: TRUE
[17:59:36.468]  - globals found/used: [n=1] ‘FUN’
[17:59:36.469]  - needed namespaces: [n=0] 
[17:59:36.469] Finding globals ... DONE
[17:59:36.469]  - use_args: TRUE
[17:59:36.469]  - Getting '...' globals ...
[17:59:36.470]    - '...' content: [n=1] ‘b’
[17:59:36.470] List of 1
[17:59:36.470]  $ ...:List of 1
[17:59:36.470]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:59:36.470]   .. .. ..@ slots     :List of 4
[17:59:36.470]   .. .. .. ..$ .Data  : chr "function"
[17:59:36.470]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. ..$ target : chr "signature"
[17:59:36.470]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. ..$ defined: chr "signature"
[17:59:36.470]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. ..$ generic: chr "character"
[17:59:36.470]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. ..@ contains  :List of 3
[17:59:36.470]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.470]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ superClass: chr "function"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.470]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.470]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.470]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.470]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.470]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.470]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.470]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.470]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.470]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.470]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.470]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.470]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.470]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.470]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.470]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.470]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ by        : chr "function"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.470]   .. .. .. .. .. ..@ distance  : num 2
[17:59:36.470]   .. .. ..@ virtual   : logi FALSE
[17:59:36.470]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:59:36.470]  list()
[17:59:36.470]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:59:36.470]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:36.470]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:36.470]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:36.470]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:59:36.470]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:36.470]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:36.470]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:36.470]   .. .. .. .. ..$ generic: chr(0) 
[17:59:36.470]   .. .. ..@ validity  : NULL
[17:59:36.470]   .. .. ..@ access    : list()
[17:59:36.470]   .. .. ..@ className : chr "MethodDefinition"
[17:59:36.470]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. ..@ subclasses:List of 7
[17:59:36.470]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.470]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.470]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.470]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.470]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.470]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.470]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.470]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.470]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.470]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.470]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.470]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.470]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.470]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.470]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.470]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.470]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.470]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.470]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.470]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.470]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.470]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.470]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.470]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.470]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.470]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.470]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.470]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.470]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.470]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.470]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.470]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.470]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.470]   .. .. .. .. .. ..@ distance  : num 2
[17:59:36.470]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.470]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.470]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.470]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.470]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.470]   .. .. .. .. .. ..@ distance  : num 2
[17:59:36.470]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.470]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.470]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.470]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.470]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.470]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:36.470]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.470]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.470]   .. .. .. .. .. ..@ distance  : num 2
[17:59:36.470]   .. .. ..@ versionKey:<externalptr> 
[17:59:36.470]   .. .. ..@ sealed    : logi TRUE
[17:59:36.470]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.470]  - attr(*, "where")=List of 1
[17:59:36.470]   ..$ ...:<environment: 0x615ed26087b8> 
[17:59:36.470]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.470]  - attr(*, "resolved")= logi TRUE
[17:59:36.470]  - attr(*, "total_size")= num NA
[17:59:36.568]  - Getting '...' globals ... DONE
[17:59:36.568] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:36.569] List of 2
[17:59:36.569]  $ ...future.FUN:function (a, b)  
[17:59:36.569]  $ ...          :List of 1
[17:59:36.569]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:59:36.569]   .. .. ..@ slots     :List of 4
[17:59:36.569]   .. .. .. ..$ .Data  : chr "function"
[17:59:36.569]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. ..$ target : chr "signature"
[17:59:36.569]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. ..$ defined: chr "signature"
[17:59:36.569]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. ..$ generic: chr "character"
[17:59:36.569]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. ..@ contains  :List of 3
[17:59:36.569]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.569]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ superClass: chr "function"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.569]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.569]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.569]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.569]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.569]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.569]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.569]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.569]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.569]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.569]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.569]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.569]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.569]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.569]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.569]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.569]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ by        : chr "function"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.569]   .. .. .. .. .. ..@ distance  : num 2
[17:59:36.569]   .. .. ..@ virtual   : logi FALSE
[17:59:36.569]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:59:36.569]  list()
[17:59:36.569]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:59:36.569]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:36.569]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:36.569]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:36.569]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:59:36.569]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:36.569]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:36.569]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:36.569]   .. .. .. .. ..$ generic: chr(0) 
[17:59:36.569]   .. .. ..@ validity  : NULL
[17:59:36.569]   .. .. ..@ access    : list()
[17:59:36.569]   .. .. ..@ className : chr "MethodDefinition"
[17:59:36.569]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. ..@ subclasses:List of 7
[17:59:36.569]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.569]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.569]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.569]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.569]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.569]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.569]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.569]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.569]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.569]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.569]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.569]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.569]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.569]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.569]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.569]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.569]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.569]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.569]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.569]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.569]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.569]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.569]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.569]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.569]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.569]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:36.569]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.569]   .. .. .. .. .. ..@ distance  : num 1
[17:59:36.569]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.569]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.569]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.569]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.569]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.569]   .. .. .. .. .. ..@ distance  : num 2
[17:59:36.569]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.569]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.569]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.569]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.569]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.569]   .. .. .. .. .. ..@ distance  : num 2
[17:59:36.569]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:36.569]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:36.569]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:36.569]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:36.569]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:36.569]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:36.569]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:36.569]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:36.569]   .. .. .. .. .. ..@ distance  : num 2
[17:59:36.569]   .. .. ..@ versionKey:<externalptr> 
[17:59:36.569]   .. .. ..@ sealed    : logi TRUE
[17:59:36.569]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.569]  - attr(*, "where")=List of 2
[17:59:36.569]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.569]   ..$ ...          :<environment: 0x615ed26087b8> 
[17:59:36.569]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.569]  - attr(*, "resolved")= logi FALSE
[17:59:36.569]  - attr(*, "total_size")= num 405168
[17:59:36.668] Packages to be attached in all futures: [n=0] 
[17:59:36.668] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.669] Number of futures (= number of chunks): 1
[17:59:36.669] Launching 1 futures (chunks) ...
[17:59:36.669] Chunk #1 of 1 ...
[17:59:36.669]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.670]    + additional globals found: [n=0] 
[17:59:36.670]    + additional namespaces needed: [n=0] 
[17:59:36.670]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.671]  - seeds: <none>
[17:59:36.671]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.675] Created future:
[17:59:36.676] SequentialFuture:
[17:59:36.676] Label: ‘future_lapply-1’
[17:59:36.676] Expression:
[17:59:36.676] {
[17:59:36.676]     do.call(function(...) {
[17:59:36.676]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.676]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.676]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.676]             on.exit(options(oopts), add = TRUE)
[17:59:36.676]         }
[17:59:36.676]         {
[17:59:36.676]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.676]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.676]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.676]             })
[17:59:36.676]         }
[17:59:36.676]     }, args = future.call.arguments)
[17:59:36.676] }
[17:59:36.676] Lazy evaluation: FALSE
[17:59:36.676] Asynchronous evaluation: FALSE
[17:59:36.676] Local evaluation: TRUE
[17:59:36.676] Environment: R_GlobalEnv
[17:59:36.676] Capture standard output: TRUE
[17:59:36.676] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.676] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:36.676] Packages: <none>
[17:59:36.676] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.676] Resolved: TRUE
[17:59:36.676] Value: 112 bytes of class ‘list’
[17:59:36.676] Early signaling: FALSE
[17:59:36.676] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.676] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.678] Chunk #1 of 1 ... DONE
[17:59:36.678] Launching 1 futures (chunks) ... DONE
[17:59:36.678] Resolving 1 futures (chunks) ...
[17:59:36.679]  - Number of value chunks collected: 1
[17:59:36.679] Resolving 1 futures (chunks) ... DONE
[17:59:36.679] Reducing values from 1 chunks ...
[17:59:36.679]  - Number of values collected after concatenation: 1
[17:59:36.680]  - Number of values expected: 1
[17:59:36.680] Reducing values from 1 chunks ... DONE
[17:59:36.680] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:59:36.684] future_lapply() ...
[17:59:36.684] Number of chunks: 1
[17:59:36.685] getGlobalsAndPackagesXApply() ...
[17:59:36.685]  - future.globals: TRUE
[17:59:36.687]  - globals found/used: [n=1] ‘FUN’
[17:59:36.688]  - needed namespaces: [n=0] 
[17:59:36.688] Finding globals ... DONE
[17:59:36.688]  - use_args: TRUE
[17:59:36.688]  - Getting '...' globals ...
[17:59:36.689]    - '...' content: [n=0] 
[17:59:36.689] List of 1
[17:59:36.689]  $ ...: list()
[17:59:36.689]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.689]  - attr(*, "where")=List of 1
[17:59:36.689]   ..$ ...:<environment: 0x615ed15c62e0> 
[17:59:36.689]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.689]  - attr(*, "resolved")= logi TRUE
[17:59:36.689]  - attr(*, "total_size")= num NA
[17:59:36.694]  - Getting '...' globals ... DONE
[17:59:36.694] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:36.695] List of 2
[17:59:36.695]  $ ...future.FUN:function (f)  
[17:59:36.695]  $ ...          : list()
[17:59:36.695]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.695]  - attr(*, "where")=List of 2
[17:59:36.695]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.695]   ..$ ...          :<environment: 0x615ed15c62e0> 
[17:59:36.695]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.695]  - attr(*, "resolved")= logi FALSE
[17:59:36.695]  - attr(*, "total_size")= num 1008
[17:59:36.700] Packages to be attached in all futures: [n=0] 
[17:59:36.700] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.700] Number of futures (= number of chunks): 1
[17:59:36.701] Launching 1 futures (chunks) ...
[17:59:36.701] Chunk #1 of 1 ...
[17:59:36.701]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.706]    + additional globals found: [n=2] ‘a’, ‘b’
[17:59:36.706]    + additional namespaces needed: [n=1] ‘tools’
[17:59:36.706]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.706]  - seeds: <none>
[17:59:36.707]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:59:36.712] Created future:
[17:59:36.712] SequentialFuture:
[17:59:36.712] Label: ‘future_lapply-1’
[17:59:36.712] Expression:
[17:59:36.712] {
[17:59:36.712]     do.call(function(...) {
[17:59:36.712]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.712]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.712]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.712]             on.exit(options(oopts), add = TRUE)
[17:59:36.712]         }
[17:59:36.712]         {
[17:59:36.712]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.712]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.712]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.712]             })
[17:59:36.712]         }
[17:59:36.712]     }, args = future.call.arguments)
[17:59:36.712] }
[17:59:36.712] Lazy evaluation: FALSE
[17:59:36.712] Asynchronous evaluation: FALSE
[17:59:36.712] Local evaluation: TRUE
[17:59:36.712] Environment: R_GlobalEnv
[17:59:36.712] Capture standard output: TRUE
[17:59:36.712] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.712] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:59:36.712] Packages: 1 packages (‘tools’)
[17:59:36.712] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.712] Resolved: TRUE
[17:59:36.712] Value: 224 bytes of class ‘list’
[17:59:36.712] Early signaling: FALSE
[17:59:36.712] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.712] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.714] Chunk #1 of 1 ... DONE
[17:59:36.715] Launching 1 futures (chunks) ... DONE
[17:59:36.715] Resolving 1 futures (chunks) ...
[17:59:36.716]  - Number of value chunks collected: 1
[17:59:36.716] Resolving 1 futures (chunks) ... DONE
[17:59:36.716] Reducing values from 1 chunks ...
[17:59:36.716]  - Number of values collected after concatenation: 4
[17:59:36.716]  - Number of values expected: 4
[17:59:36.717] Reducing values from 1 chunks ... DONE
[17:59:36.717] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:59:36.722] future_lapply() ...
[17:59:36.723] Number of chunks: 1
[17:59:36.724] getGlobalsAndPackagesXApply() ...
[17:59:36.724]  - future.globals: TRUE
[17:59:36.728]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:59:36.728]  - needed namespaces: [n=0] 
[17:59:36.728] Finding globals ... DONE
[17:59:36.729]  - use_args: TRUE
[17:59:36.729]  - Getting '...' globals ...
[17:59:36.729]    - '...' content: [n=0] 
[17:59:36.730] List of 1
[17:59:36.730]  $ ...: list()
[17:59:36.730]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.730]  - attr(*, "where")=List of 1
[17:59:36.730]   ..$ ...:<environment: 0x615ed24fd708> 
[17:59:36.730]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.730]  - attr(*, "resolved")= logi TRUE
[17:59:36.730]  - attr(*, "total_size")= num NA
[17:59:36.735]  - Getting '...' globals ... DONE
[17:59:36.735] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:59:36.735] List of 3
[17:59:36.735]  $ ...future.FUN        :function (x)  
[17:59:36.735]  $ future.call.arguments:List of 1
[17:59:36.735]   ..$ a: num 1
[17:59:36.735]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.735]  $ ...                  : list()
[17:59:36.735]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.735]  - attr(*, "where")=List of 3
[17:59:36.735]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:59:36.735]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:59:36.735]   ..$ ...                  :<environment: 0x615ed24fd708> 
[17:59:36.735]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.735]  - attr(*, "resolved")= logi FALSE
[17:59:36.735]  - attr(*, "total_size")= num 1272
[17:59:36.742] Packages to be attached in all futures: [n=0] 
[17:59:36.743] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.743] Number of futures (= number of chunks): 1
[17:59:36.743] Launching 1 futures (chunks) ...
[17:59:36.743] Chunk #1 of 1 ...
[17:59:36.744]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.744]    + additional globals found: [n=0] 
[17:59:36.744]    + additional namespaces needed: [n=0] 
[17:59:36.745]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.745]  - seeds: <none>
[17:59:36.745]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.750] Created future:
[17:59:36.750] SequentialFuture:
[17:59:36.750] Label: ‘future_lapply-1’
[17:59:36.750] Expression:
[17:59:36.750] {
[17:59:36.750]     do.call(function(...) {
[17:59:36.750]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.750]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.750]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.750]             on.exit(options(oopts), add = TRUE)
[17:59:36.750]         }
[17:59:36.750]         {
[17:59:36.750]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.750]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.750]                 ...future.FUN(...future.X_jj)
[17:59:36.750]             })
[17:59:36.750]         }
[17:59:36.750]     }, args = future.call.arguments)
[17:59:36.750] }
[17:59:36.750] Lazy evaluation: FALSE
[17:59:36.750] Asynchronous evaluation: FALSE
[17:59:36.750] Local evaluation: TRUE
[17:59:36.750] Environment: 0x615ed24fda88
[17:59:36.750] Capture standard output: TRUE
[17:59:36.750] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.750] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:36.750] Packages: <none>
[17:59:36.750] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.750] Resolved: TRUE
[17:59:36.750] Value: 56 bytes of class ‘list’
[17:59:36.750] Early signaling: FALSE
[17:59:36.750] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.750] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.752] Chunk #1 of 1 ... DONE
[17:59:36.752] Launching 1 futures (chunks) ... DONE
[17:59:36.753] Resolving 1 futures (chunks) ...
[17:59:36.753]  - Number of value chunks collected: 1
[17:59:36.754] Resolving 1 futures (chunks) ... DONE
[17:59:36.754] Reducing values from 1 chunks ...
[17:59:36.754]  - Number of values collected after concatenation: 1
[17:59:36.754]  - Number of values expected: 1
[17:59:36.754] Reducing values from 1 chunks ... DONE
[17:59:36.755] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:59:36.757] future_lapply() ...
[17:59:36.761] Number of chunks: 1
[17:59:36.761] getGlobalsAndPackagesXApply() ...
[17:59:36.761]  - future.globals: TRUE
[17:59:36.765]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:59:36.766]  - needed namespaces: [n=0] 
[17:59:36.766] Finding globals ... DONE
[17:59:36.766]  - use_args: TRUE
[17:59:36.766]  - Getting '...' globals ...
[17:59:36.767]    - '...' content: [n=0] 
[17:59:36.767] List of 1
[17:59:36.767]  $ ...: list()
[17:59:36.767]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.767]  - attr(*, "where")=List of 1
[17:59:36.767]   ..$ ...:<environment: 0x615ed2edabb0> 
[17:59:36.767]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.767]  - attr(*, "resolved")= logi TRUE
[17:59:36.767]  - attr(*, "total_size")= num NA
[17:59:36.773]  - Getting '...' globals ... DONE
[17:59:36.773] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:59:36.773] List of 3
[17:59:36.773]  $ ...future.FUN:function (ii)  
[17:59:36.773]  $ a            : num 1
[17:59:36.773]  $ ...          : list()
[17:59:36.773]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.773]  - attr(*, "where")=List of 3
[17:59:36.773]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.773]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:36.773]   ..$ ...          :<environment: 0x615ed2edabb0> 
[17:59:36.773]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.773]  - attr(*, "resolved")= logi FALSE
[17:59:36.773]  - attr(*, "total_size")= num 2984
[17:59:36.780] Packages to be attached in all futures: [n=0] 
[17:59:36.781] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.781] Number of futures (= number of chunks): 1
[17:59:36.781] Launching 1 futures (chunks) ...
[17:59:36.781] Chunk #1 of 1 ...
[17:59:36.782]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.782]    + additional globals found: [n=0] 
[17:59:36.782]    + additional namespaces needed: [n=0] 
[17:59:36.783]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.783]  - seeds: <none>
[17:59:36.783]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.788] Created future:
[17:59:36.789] SequentialFuture:
[17:59:36.789] Label: ‘future_lapply-1’
[17:59:36.789] Expression:
[17:59:36.789] {
[17:59:36.789]     do.call(function(...) {
[17:59:36.789]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.789]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.789]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.789]             on.exit(options(oopts), add = TRUE)
[17:59:36.789]         }
[17:59:36.789]         {
[17:59:36.789]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.789]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.789]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.789]             })
[17:59:36.789]         }
[17:59:36.789]     }, args = future.call.arguments)
[17:59:36.789] }
[17:59:36.789] Lazy evaluation: FALSE
[17:59:36.789] Asynchronous evaluation: FALSE
[17:59:36.789] Local evaluation: TRUE
[17:59:36.789] Environment: R_GlobalEnv
[17:59:36.789] Capture standard output: TRUE
[17:59:36.789] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.789] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:59:36.789] Packages: <none>
[17:59:36.789] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.789] Resolved: TRUE
[17:59:36.789] Value: 56 bytes of class ‘list’
[17:59:36.789] Early signaling: FALSE
[17:59:36.789] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.789] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.791] Chunk #1 of 1 ... DONE
[17:59:36.791] Launching 1 futures (chunks) ... DONE
[17:59:36.792] Resolving 1 futures (chunks) ...
[17:59:36.792]  - Number of value chunks collected: 1
[17:59:36.793] Resolving 1 futures (chunks) ... DONE
[17:59:36.793] Reducing values from 1 chunks ...
[17:59:36.793]  - Number of values collected after concatenation: 1
[17:59:36.793]  - Number of values expected: 1
[17:59:36.793] Reducing values from 1 chunks ... DONE
[17:59:36.794] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:59:36.794] future_lapply() ...
[17:59:36.796] Number of chunks: 1
[17:59:36.796] getGlobalsAndPackagesXApply() ...
[17:59:36.796]  - future.globals: TRUE
[17:59:36.801]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:59:36.801]  - needed namespaces: [n=0] 
[17:59:36.802] Finding globals ... DONE
[17:59:36.802]  - use_args: TRUE
[17:59:36.802]  - Getting '...' globals ...
[17:59:36.803]    - '...' content: [n=0] 
[17:59:36.803] List of 1
[17:59:36.803]  $ ...: list()
[17:59:36.803]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.803]  - attr(*, "where")=List of 1
[17:59:36.803]   ..$ ...:<environment: 0x615ed1119398> 
[17:59:36.803]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.803]  - attr(*, "resolved")= logi TRUE
[17:59:36.803]  - attr(*, "total_size")= num NA
[17:59:36.808]  - Getting '...' globals ... DONE
[17:59:36.809] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:59:36.809] List of 3
[17:59:36.809]  $ ...future.FUN:function (ii)  
[17:59:36.809]  $ a            : num 1
[17:59:36.809]  $ ...          : list()
[17:59:36.809]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.809]  - attr(*, "where")=List of 3
[17:59:36.809]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.809]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:36.809]   ..$ ...          :<environment: 0x615ed1119398> 
[17:59:36.809]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.809]  - attr(*, "resolved")= logi FALSE
[17:59:36.809]  - attr(*, "total_size")= num 2984
[17:59:36.816] Packages to be attached in all futures: [n=0] 
[17:59:36.816] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.817] Number of futures (= number of chunks): 1
[17:59:36.817] Launching 1 futures (chunks) ...
[17:59:36.817] Chunk #1 of 1 ...
[17:59:36.818]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.818]    + additional globals found: [n=0] 
[17:59:36.818]    + additional namespaces needed: [n=0] 
[17:59:36.819]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.819]  - seeds: <none>
[17:59:36.819]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.826] Created future:
[17:59:36.826] SequentialFuture:
[17:59:36.826] Label: ‘future_lapply-1’
[17:59:36.826] Expression:
[17:59:36.826] {
[17:59:36.826]     do.call(function(...) {
[17:59:36.826]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.826]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.826]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.826]             on.exit(options(oopts), add = TRUE)
[17:59:36.826]         }
[17:59:36.826]         {
[17:59:36.826]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.826]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.826]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.826]             })
[17:59:36.826]         }
[17:59:36.826]     }, args = future.call.arguments)
[17:59:36.826] }
[17:59:36.826] Lazy evaluation: FALSE
[17:59:36.826] Asynchronous evaluation: FALSE
[17:59:36.826] Local evaluation: TRUE
[17:59:36.826] Environment: R_GlobalEnv
[17:59:36.826] Capture standard output: TRUE
[17:59:36.826] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.826] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:59:36.826] Packages: <none>
[17:59:36.826] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.826] Resolved: TRUE
[17:59:36.826] Value: 56 bytes of class ‘list’
[17:59:36.826] Early signaling: FALSE
[17:59:36.826] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.826] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.829] Chunk #1 of 1 ... DONE
[17:59:36.829] Launching 1 futures (chunks) ... DONE
[17:59:36.829] Resolving 1 futures (chunks) ...
[17:59:36.830]  - Number of value chunks collected: 1
[17:59:36.830] Resolving 1 futures (chunks) ... DONE
[17:59:36.831] Reducing values from 1 chunks ...
[17:59:36.831]  - Number of values collected after concatenation: 1
[17:59:36.831]  - Number of values expected: 1
[17:59:36.831] Reducing values from 1 chunks ... DONE
[17:59:36.831] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:59:36.832] future_lapply() ...
[17:59:36.833] Number of chunks: 1
[17:59:36.833] getGlobalsAndPackagesXApply() ...
[17:59:36.833]  - future.globals: <name-value list> with names ‘42’
[17:59:36.834]  - use_args: TRUE
[17:59:36.834]  - Getting '...' globals ...
[17:59:36.835]    - '...' content: [n=0] 
[17:59:36.835] List of 1
[17:59:36.835]  $ ...: list()
[17:59:36.835]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.835]  - attr(*, "where")=List of 1
[17:59:36.835]   ..$ ...:<environment: 0x615ed273ac40> 
[17:59:36.835]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.835]  - attr(*, "resolved")= logi TRUE
[17:59:36.835]  - attr(*, "total_size")= num NA
[17:59:36.840]  - Getting '...' globals ... DONE
[17:59:36.841] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:59:36.841] List of 3
[17:59:36.841]  $ a            : num 42
[17:59:36.841]  $ ...future.FUN:function (x)  
[17:59:36.841]  $ ...          : list()
[17:59:36.841]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.841]  - attr(*, "where")=List of 3
[17:59:36.841]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:36.841]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:59:36.841]   ..$ ...          :<environment: 0x615ed273ac40> 
[17:59:36.841]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.841]  - attr(*, "resolved")= logi FALSE
[17:59:36.841]  - attr(*, "total_size")= num NA
[17:59:36.848] Packages to be attached in all futures: [n=0] 
[17:59:36.849] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.849] Number of futures (= number of chunks): 1
[17:59:36.849] Launching 1 futures (chunks) ...
[17:59:36.850] Chunk #1 of 1 ...
[17:59:36.850]  - seeds: <none>
[17:59:36.850]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.856] Created future:
[17:59:36.857] SequentialFuture:
[17:59:36.857] Label: ‘future_lapply-1’
[17:59:36.857] Expression:
[17:59:36.857] {
[17:59:36.857]     do.call(function(...) {
[17:59:36.857]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.857]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.857]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.857]             on.exit(options(oopts), add = TRUE)
[17:59:36.857]         }
[17:59:36.857]         {
[17:59:36.857]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.857]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.857]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.857]             })
[17:59:36.857]         }
[17:59:36.857]     }, args = future.call.arguments)
[17:59:36.857] }
[17:59:36.857] Lazy evaluation: FALSE
[17:59:36.857] Asynchronous evaluation: FALSE
[17:59:36.857] Local evaluation: TRUE
[17:59:36.857] Environment: R_GlobalEnv
[17:59:36.857] Capture standard output: TRUE
[17:59:36.857] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.857] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:59:36.857] Packages: <none>
[17:59:36.857] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.857] Resolved: TRUE
[17:59:36.857] Value: 56 bytes of class ‘list’
[17:59:36.857] Early signaling: FALSE
[17:59:36.857] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.857] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:59:36.859] Chunk #1 of 1 ... DONE
[17:59:36.859] Launching 1 futures (chunks) ... DONE
[17:59:36.859] Resolving 1 futures (chunks) ...
[17:59:36.860]  - Number of value chunks collected: 1
[17:59:36.860] Resolving 1 futures (chunks) ... DONE
[17:59:36.861] Reducing values from 1 chunks ...
[17:59:36.861]  - Number of values collected after concatenation: 1
[17:59:36.861]  - Number of values expected: 1
[17:59:36.861] Reducing values from 1 chunks ... DONE
[17:59:36.861] future_lapply() ... DONE
List of 1
 $ : num 42
[17:59:36.877] future_lapply() ...
[17:59:36.887] Number of chunks: 2
[17:59:36.887] getGlobalsAndPackagesXApply() ...
[17:59:36.887]  - future.globals: TRUE
[17:59:36.896]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:59:36.897]  - needed namespaces: [n=0] 
[17:59:36.897] Finding globals ... DONE
[17:59:36.897]  - use_args: TRUE
[17:59:36.897]  - Getting '...' globals ...
[17:59:36.898]    - '...' content: [n=0] 
[17:59:36.898] List of 1
[17:59:36.898]  $ ...: list()
[17:59:36.898]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.898]  - attr(*, "where")=List of 1
[17:59:36.898]   ..$ ...:<environment: 0x615ed1bcb168> 
[17:59:36.898]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.898]  - attr(*, "resolved")= logi TRUE
[17:59:36.898]  - attr(*, "total_size")= num NA
[17:59:36.903]  - Getting '...' globals ... DONE
[17:59:36.904] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:59:36.904] List of 6
[17:59:36.904]  $ ...future.FUN:function (i)  
[17:59:36.904]  $ caller       :function (a, b, FUN = call_my_add)  
[17:59:36.904]  $ args         :List of 1
[17:59:36.904]   ..$ FUN:function (a, b)  
[17:59:36.904]  $ call_my_add  :function (a, b)  
[17:59:36.904]  $ my_add       :function (a, b)  
[17:59:36.904]  $ ...          : list()
[17:59:36.904]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:36.904]  - attr(*, "where")=List of 6
[17:59:36.904]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:36.904]   ..$ caller       :<environment: R_EmptyEnv> 
[17:59:36.904]   ..$ args         :<environment: R_EmptyEnv> 
[17:59:36.904]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:59:36.904]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:59:36.904]   ..$ ...          :<environment: 0x615ed1bcb168> 
[17:59:36.904]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:36.904]  - attr(*, "resolved")= logi FALSE
[17:59:36.904]  - attr(*, "total_size")= num 24120
[17:59:36.914] Packages to be attached in all futures: [n=0] 
[17:59:36.914] getGlobalsAndPackagesXApply() ... DONE
[17:59:36.914] Number of futures (= number of chunks): 2
[17:59:36.914] Launching 2 futures (chunks) ...
[17:59:36.915] Chunk #1 of 2 ...
[17:59:36.915]  - Finding globals in 'X' for chunk #1 ...
[17:59:36.916]    + additional globals found: [n=0] 
[17:59:36.916]    + additional namespaces needed: [n=0] 
[17:59:36.916]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:36.916]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:36.916]  - seeds: <none>
[17:59:36.917]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.934] Created future:
[17:59:36.935] MulticoreFuture:
[17:59:36.935] Label: ‘future_lapply-1’
[17:59:36.935] Expression:
[17:59:36.935] {
[17:59:36.935]     do.call(function(...) {
[17:59:36.935]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.935]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.935]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.935]             on.exit(options(oopts), add = TRUE)
[17:59:36.935]         }
[17:59:36.935]         {
[17:59:36.935]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.935]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.935]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.935]             })
[17:59:36.935]         }
[17:59:36.935]     }, args = future.call.arguments)
[17:59:36.935] }
[17:59:36.935] Lazy evaluation: FALSE
[17:59:36.935] Asynchronous evaluation: TRUE
[17:59:36.935] Local evaluation: TRUE
[17:59:36.935] Environment: 0x615ed1eeb0d8
[17:59:36.935] Capture standard output: TRUE
[17:59:36.935] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.935] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:59:36.935] Packages: <none>
[17:59:36.935] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.935] Resolved: TRUE
[17:59:36.935] Value: <not collected>
[17:59:36.935] Conditions captured: <none>
[17:59:36.935] Early signaling: FALSE
[17:59:36.935] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.935] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:36.951] Chunk #1 of 2 ... DONE
[17:59:36.951] Chunk #2 of 2 ...
[17:59:36.952]  - Finding globals in 'X' for chunk #2 ...
[17:59:36.953]    + additional globals found: [n=0] 
[17:59:36.953]    + additional namespaces needed: [n=0] 
[17:59:36.954]  - Finding globals in 'X' for chunk #2 ... DONE
[17:59:36.954]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:36.954]  - seeds: <none>
[17:59:36.955]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:36.972] Created future:
[17:59:36.972] MulticoreFuture:
[17:59:36.972] Label: ‘future_lapply-2’
[17:59:36.972] Expression:
[17:59:36.972] {
[17:59:36.972]     do.call(function(...) {
[17:59:36.972]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:36.972]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:36.972]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:36.972]             on.exit(options(oopts), add = TRUE)
[17:59:36.972]         }
[17:59:36.972]         {
[17:59:36.972]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:36.972]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:36.972]                 ...future.FUN(...future.X_jj, ...)
[17:59:36.972]             })
[17:59:36.972]         }
[17:59:36.972]     }, args = future.call.arguments)
[17:59:36.972] }
[17:59:36.972] Lazy evaluation: FALSE
[17:59:36.972] Asynchronous evaluation: TRUE
[17:59:36.972] Local evaluation: TRUE
[17:59:36.972] Environment: 0x615ed1eeb0d8
[17:59:36.972] Capture standard output: TRUE
[17:59:36.972] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:36.972] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:59:36.972] Packages: <none>
[17:59:36.972] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:36.972] Resolved: TRUE
[17:59:36.972] Value: <not collected>
[17:59:36.972] Conditions captured: <none>
[17:59:36.972] Early signaling: FALSE
[17:59:36.972] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:36.972] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:36.988] Chunk #2 of 2 ... DONE
[17:59:36.988] Launching 2 futures (chunks) ... DONE
[17:59:36.988] Resolving 2 futures (chunks) ...
[17:59:36.997]  - Number of value chunks collected: 2
[17:59:36.997] Resolving 2 futures (chunks) ... DONE
[17:59:36.997] Reducing values from 2 chunks ...
[17:59:36.998]  - Number of values collected after concatenation: 3
[17:59:36.998]  - Number of values expected: 3
[17:59:36.998] Reducing values from 2 chunks ... DONE
[17:59:36.999] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:59:36.999] future_lapply() ...
[17:59:37.008] Number of chunks: 1
[17:59:37.009] getGlobalsAndPackagesXApply() ...
[17:59:37.009]  - future.globals: TRUE
[17:59:37.015]  - globals found/used: [n=1] ‘FUN’
[17:59:37.016]  - needed namespaces: [n=0] 
[17:59:37.016] Finding globals ... DONE
[17:59:37.016]  - use_args: TRUE
[17:59:37.016]  - Getting '...' globals ...
[17:59:37.017]    - '...' content: [n=1] ‘what’
[17:59:37.017] List of 1
[17:59:37.017]  $ ...:List of 1
[17:59:37.017]   ..$ what:function (x)  
[17:59:37.017]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.017]  - attr(*, "where")=List of 1
[17:59:37.017]   ..$ ...:<environment: 0x615ed2995978> 
[17:59:37.017]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.017]  - attr(*, "resolved")= logi TRUE
[17:59:37.017]  - attr(*, "total_size")= num NA
[17:59:37.024]  - Getting '...' globals ... DONE
[17:59:37.024] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:37.025] List of 2
[17:59:37.025]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:59:37.025]  $ ...          :List of 1
[17:59:37.025]   ..$ what:function (x)  
[17:59:37.025]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.025]  - attr(*, "where")=List of 2
[17:59:37.025]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:37.025]   ..$ ...          :<environment: 0x615ed2995978> 
[17:59:37.025]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.025]  - attr(*, "resolved")= logi FALSE
[17:59:37.025]  - attr(*, "total_size")= num 12192
[17:59:37.036] Packages to be attached in all futures: [n=0] 
[17:59:37.036] getGlobalsAndPackagesXApply() ... DONE
[17:59:37.037] Number of futures (= number of chunks): 1
[17:59:37.037] Launching 1 futures (chunks) ...
[17:59:37.037] Chunk #1 of 1 ...
[17:59:37.037]  - Finding globals in 'X' for chunk #1 ...
[17:59:37.038]    + additional globals found: [n=0] 
[17:59:37.038]    + additional namespaces needed: [n=0] 
[17:59:37.039]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:37.039]  - seeds: <none>
[17:59:37.039]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:37.053] Created future:
[17:59:37.053] MulticoreFuture:
[17:59:37.053] Label: ‘future_lapply-1’
[17:59:37.053] Expression:
[17:59:37.053] {
[17:59:37.053]     do.call(function(...) {
[17:59:37.053]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.053]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.053]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.053]             on.exit(options(oopts), add = TRUE)
[17:59:37.053]         }
[17:59:37.053]         {
[17:59:37.053]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.053]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.053]                 ...future.FUN(...future.X_jj, ...)
[17:59:37.053]             })
[17:59:37.053]         }
[17:59:37.053]     }, args = future.call.arguments)
[17:59:37.053] }
[17:59:37.053] Lazy evaluation: FALSE
[17:59:37.053] Asynchronous evaluation: TRUE
[17:59:37.053] Local evaluation: TRUE
[17:59:37.053] Environment: R_GlobalEnv
[17:59:37.053] Capture standard output: TRUE
[17:59:37.053] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.053] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:37.053] Packages: <none>
[17:59:37.053] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.053] Resolved: TRUE
[17:59:37.053] Value: <not collected>
[17:59:37.053] Conditions captured: <none>
[17:59:37.053] Early signaling: FALSE
[17:59:37.053] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.053] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.069] Chunk #1 of 1 ... DONE
[17:59:37.069] Launching 1 futures (chunks) ... DONE
[17:59:37.069] Resolving 1 futures (chunks) ...
[17:59:37.072]  - Number of value chunks collected: 1
[17:59:37.073] Resolving 1 futures (chunks) ... DONE
[17:59:37.073] Reducing values from 1 chunks ...
[17:59:37.073]  - Number of values collected after concatenation: 1
[17:59:37.074]  - Number of values expected: 1
[17:59:37.074] Reducing values from 1 chunks ... DONE
[17:59:37.074] future_lapply() ... DONE
[17:59:37.075] future_lapply() ...
[17:59:37.084] Number of chunks: 1
[17:59:37.085] getGlobalsAndPackagesXApply() ...
[17:59:37.085]  - future.globals: TRUE
[17:59:37.092]  - globals found/used: [n=1] ‘FUN’
[17:59:37.092]  - needed namespaces: [n=0] 
[17:59:37.092] Finding globals ... DONE
[17:59:37.092]  - use_args: TRUE
[17:59:37.093]  - Getting '...' globals ...
[17:59:37.093]    - '...' content: [n=1] ‘what’
[17:59:37.094] List of 1
[17:59:37.094]  $ ...:List of 1
[17:59:37.094]   ..$ what:function (...)  
[17:59:37.094]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.094]  - attr(*, "where")=List of 1
[17:59:37.094]   ..$ ...:<environment: 0x615ed159d228> 
[17:59:37.094]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.094]  - attr(*, "resolved")= logi TRUE
[17:59:37.094]  - attr(*, "total_size")= num NA
[17:59:37.101]  - Getting '...' globals ... DONE
[17:59:37.101] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:37.101] List of 2
[17:59:37.101]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:59:37.101]  $ ...          :List of 1
[17:59:37.101]   ..$ what:function (...)  
[17:59:37.101]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.101]  - attr(*, "where")=List of 2
[17:59:37.101]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:37.101]   ..$ ...          :<environment: 0x615ed159d228> 
[17:59:37.101]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.101]  - attr(*, "resolved")= logi FALSE
[17:59:37.101]  - attr(*, "total_size")= num 13352
[17:59:37.108] Packages to be attached in all futures: [n=0] 
[17:59:37.108] getGlobalsAndPackagesXApply() ... DONE
[17:59:37.109] Number of futures (= number of chunks): 1
[17:59:37.109] Launching 1 futures (chunks) ...
[17:59:37.109] Chunk #1 of 1 ...
[17:59:37.110]  - Finding globals in 'X' for chunk #1 ...
[17:59:37.110]    + additional globals found: [n=0] 
[17:59:37.111]    + additional namespaces needed: [n=0] 
[17:59:37.111]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:37.111]  - seeds: <none>
[17:59:37.111]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:37.126] Created future:
[17:59:37.127] MulticoreFuture:
[17:59:37.127] Label: ‘future_lapply-1’
[17:59:37.127] Expression:
[17:59:37.127] {
[17:59:37.127]     do.call(function(...) {
[17:59:37.127]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.127]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.127]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.127]             on.exit(options(oopts), add = TRUE)
[17:59:37.127]         }
[17:59:37.127]         {
[17:59:37.127]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.127]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.127]                 ...future.FUN(...future.X_jj, ...)
[17:59:37.127]             })
[17:59:37.127]         }
[17:59:37.127]     }, args = future.call.arguments)
[17:59:37.127] }
[17:59:37.127] Lazy evaluation: FALSE
[17:59:37.127] Asynchronous evaluation: TRUE
[17:59:37.127] Local evaluation: TRUE
[17:59:37.127] Environment: R_GlobalEnv
[17:59:37.127] Capture standard output: TRUE
[17:59:37.127] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.127] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:37.127] Packages: <none>
[17:59:37.127] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.127] Resolved: FALSE
[17:59:37.127] Value: <not collected>
[17:59:37.127] Conditions captured: <none>
[17:59:37.127] Early signaling: FALSE
[17:59:37.127] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.127] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.142] Chunk #1 of 1 ... DONE
[17:59:37.143] Launching 1 futures (chunks) ... DONE
[17:59:37.143] Resolving 1 futures (chunks) ...
[17:59:37.146]  - Number of value chunks collected: 1
[17:59:37.147] Resolving 1 futures (chunks) ... DONE
[17:59:37.147] Reducing values from 1 chunks ...
[17:59:37.147]  - Number of values collected after concatenation: 1
[17:59:37.148]  - Number of values expected: 1
[17:59:37.148] Reducing values from 1 chunks ... DONE
[17:59:37.148] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:59:37.149] future_lapply() ...
[17:59:37.156] Number of chunks: 1
[17:59:37.157] getGlobalsAndPackagesXApply() ...
[17:59:37.157]  - future.globals: TRUE
[17:59:37.161]  - globals found/used: [n=1] ‘FUN’
[17:59:37.162]  - needed namespaces: [n=0] 
[17:59:37.162] Finding globals ... DONE
[17:59:37.162]  - use_args: TRUE
[17:59:37.162]  - Getting '...' globals ...
[17:59:37.163]    - '...' content: [n=1] ‘b’
[17:59:37.163] List of 1
[17:59:37.163]  $ ...:List of 1
[17:59:37.163]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:59:37.163]   .. ..$ a: int [1:2] 1 2
[17:59:37.163]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.163]  - attr(*, "where")=List of 1
[17:59:37.163]   ..$ ...:<environment: 0x615ed2543ca8> 
[17:59:37.163]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.163]  - attr(*, "resolved")= logi TRUE
[17:59:37.163]  - attr(*, "total_size")= num NA
[17:59:37.171]  - Getting '...' globals ... DONE
[17:59:37.171] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:37.172] List of 2
[17:59:37.172]  $ ...future.FUN:function (a, b)  
[17:59:37.172]  $ ...          :List of 1
[17:59:37.172]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:59:37.172]   .. ..$ a: int [1:2] 1 2
[17:59:37.172]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.172]  - attr(*, "where")=List of 2
[17:59:37.172]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:37.172]   ..$ ...          :<environment: 0x615ed2543ca8> 
[17:59:37.172]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.172]  - attr(*, "resolved")= logi FALSE
[17:59:37.172]  - attr(*, "total_size")= num 1440
[17:59:37.179] Packages to be attached in all futures: [n=0] 
[17:59:37.180] getGlobalsAndPackagesXApply() ... DONE
[17:59:37.180] Number of futures (= number of chunks): 1
[17:59:37.180] Launching 1 futures (chunks) ...
[17:59:37.181] Chunk #1 of 1 ...
[17:59:37.181]  - Finding globals in 'X' for chunk #1 ...
[17:59:37.182]    + additional globals found: [n=0] 
[17:59:37.182]    + additional namespaces needed: [n=0] 
[17:59:37.182]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:37.182]  - seeds: <none>
[17:59:37.182]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:37.196] Created future:
[17:59:37.197] MulticoreFuture:
[17:59:37.197] Label: ‘future_lapply-1’
[17:59:37.197] Expression:
[17:59:37.197] {
[17:59:37.197]     do.call(function(...) {
[17:59:37.197]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.197]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.197]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.197]             on.exit(options(oopts), add = TRUE)
[17:59:37.197]         }
[17:59:37.197]         {
[17:59:37.197]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.197]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.197]                 ...future.FUN(...future.X_jj, ...)
[17:59:37.197]             })
[17:59:37.197]         }
[17:59:37.197]     }, args = future.call.arguments)
[17:59:37.197] }
[17:59:37.197] Lazy evaluation: FALSE
[17:59:37.197] Asynchronous evaluation: TRUE
[17:59:37.197] Local evaluation: TRUE
[17:59:37.197] Environment: R_GlobalEnv
[17:59:37.197] Capture standard output: TRUE
[17:59:37.197] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.197] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:37.197] Packages: <none>
[17:59:37.197] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.197] Resolved: FALSE
[17:59:37.197] Value: <not collected>
[17:59:37.197] Conditions captured: <none>
[17:59:37.197] Early signaling: FALSE
[17:59:37.197] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.197] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.220] Chunk #1 of 1 ... DONE
[17:59:37.221] Launching 1 futures (chunks) ... DONE
[17:59:37.221] Resolving 1 futures (chunks) ...
[17:59:37.228]  - Number of value chunks collected: 1
[17:59:37.229] Resolving 1 futures (chunks) ... DONE
[17:59:37.229] Reducing values from 1 chunks ...
[17:59:37.229]  - Number of values collected after concatenation: 1
[17:59:37.230]  - Number of values expected: 1
[17:59:37.230] Reducing values from 1 chunks ... DONE
[17:59:37.230] future_lapply() ... DONE
[17:59:37.231] future_lapply() ...
[17:59:37.238] Number of chunks: 1
[17:59:37.238] getGlobalsAndPackagesXApply() ...
[17:59:37.238]  - future.globals: TRUE
[17:59:37.243]  - globals found/used: [n=1] ‘FUN’
[17:59:37.244]  - needed namespaces: [n=0] 
[17:59:37.244] Finding globals ... DONE
[17:59:37.244]  - use_args: TRUE
[17:59:37.244]  - Getting '...' globals ...
[17:59:37.245]    - '...' content: [n=1] ‘b’
[17:59:37.245] List of 1
[17:59:37.245]  $ ...:List of 1
[17:59:37.245]   ..$ b:<environment: 0x615ed1ea4b70> 
[17:59:37.245]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.245]  - attr(*, "where")=List of 1
[17:59:37.245]   ..$ ...:<environment: 0x615ed1ea5628> 
[17:59:37.245]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.245]  - attr(*, "resolved")= logi TRUE
[17:59:37.245]  - attr(*, "total_size")= num NA
[17:59:37.252]  - Getting '...' globals ... DONE
[17:59:37.252] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:37.253] List of 2
[17:59:37.253]  $ ...future.FUN:function (a, b)  
[17:59:37.253]  $ ...          :List of 1
[17:59:37.253]   ..$ b:<environment: 0x615ed1ea4b70> 
[17:59:37.253]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.253]  - attr(*, "where")=List of 2
[17:59:37.253]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:37.253]   ..$ ...          :<environment: 0x615ed1ea5628> 
[17:59:37.253]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.253]  - attr(*, "resolved")= logi FALSE
[17:59:37.253]  - attr(*, "total_size")= num 1440
[17:59:37.260] Packages to be attached in all futures: [n=0] 
[17:59:37.260] getGlobalsAndPackagesXApply() ... DONE
[17:59:37.260] Number of futures (= number of chunks): 1
[17:59:37.261] Launching 1 futures (chunks) ...
[17:59:37.261] Chunk #1 of 1 ...
[17:59:37.261]  - Finding globals in 'X' for chunk #1 ...
[17:59:37.262]    + additional globals found: [n=0] 
[17:59:37.262]    + additional namespaces needed: [n=0] 
[17:59:37.262]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:37.262]  - seeds: <none>
[17:59:37.263]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:37.276] Created future:
[17:59:37.277] MulticoreFuture:
[17:59:37.277] Label: ‘future_lapply-1’
[17:59:37.277] Expression:
[17:59:37.277] {
[17:59:37.277]     do.call(function(...) {
[17:59:37.277]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.277]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.277]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.277]             on.exit(options(oopts), add = TRUE)
[17:59:37.277]         }
[17:59:37.277]         {
[17:59:37.277]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.277]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.277]                 ...future.FUN(...future.X_jj, ...)
[17:59:37.277]             })
[17:59:37.277]         }
[17:59:37.277]     }, args = future.call.arguments)
[17:59:37.277] }
[17:59:37.277] Lazy evaluation: FALSE
[17:59:37.277] Asynchronous evaluation: TRUE
[17:59:37.277] Local evaluation: TRUE
[17:59:37.277] Environment: R_GlobalEnv
[17:59:37.277] Capture standard output: TRUE
[17:59:37.277] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.277] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:37.277] Packages: <none>
[17:59:37.277] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.277] Resolved: TRUE
[17:59:37.277] Value: <not collected>
[17:59:37.277] Conditions captured: <none>
[17:59:37.277] Early signaling: FALSE
[17:59:37.277] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.277] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.292] Chunk #1 of 1 ... DONE
[17:59:37.292] Launching 1 futures (chunks) ... DONE
[17:59:37.293] Resolving 1 futures (chunks) ...
[17:59:37.296]  - Number of value chunks collected: 1
[17:59:37.296] Resolving 1 futures (chunks) ... DONE
[17:59:37.296] Reducing values from 1 chunks ...
[17:59:37.297]  - Number of values collected after concatenation: 1
[17:59:37.297]  - Number of values expected: 1
[17:59:37.297] Reducing values from 1 chunks ... DONE
[17:59:37.298] future_lapply() ... DONE
[17:59:37.298] future_lapply() ...
[17:59:37.306] Number of chunks: 1
[17:59:37.306] getGlobalsAndPackagesXApply() ...
[17:59:37.306]  - future.globals: TRUE
[17:59:37.312]  - globals found/used: [n=1] ‘FUN’
[17:59:37.312]  - needed namespaces: [n=0] 
[17:59:37.312] Finding globals ... DONE
[17:59:37.312]  - use_args: TRUE
[17:59:37.313]  - Getting '...' globals ...
[17:59:37.314]    - '...' content: [n=1] ‘b’
[17:59:37.314] List of 1
[17:59:37.314]  $ ...:List of 1
[17:59:37.314]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:59:37.314]   .. .. ..@ slots     :List of 4
[17:59:37.314]   .. .. .. ..$ .Data  : chr "function"
[17:59:37.314]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. ..$ target : chr "signature"
[17:59:37.314]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. ..$ defined: chr "signature"
[17:59:37.314]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. ..$ generic: chr "character"
[17:59:37.314]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. ..@ contains  :List of 3
[17:59:37.314]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.314]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ superClass: chr "function"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.314]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.314]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.314]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.314]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.314]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.314]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.314]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.314]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.314]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.314]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.314]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.314]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.314]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.314]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.314]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.314]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ by        : chr "function"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.314]   .. .. .. .. .. ..@ distance  : num 2
[17:59:37.314]   .. .. ..@ virtual   : logi FALSE
[17:59:37.314]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:59:37.314]  list()
[17:59:37.314]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:59:37.314]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:37.314]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:37.314]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:37.314]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:59:37.314]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:37.314]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:37.314]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:37.314]   .. .. .. .. ..$ generic: chr(0) 
[17:59:37.314]   .. .. ..@ validity  : NULL
[17:59:37.314]   .. .. ..@ access    : list()
[17:59:37.314]   .. .. ..@ className : chr "MethodDefinition"
[17:59:37.314]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. ..@ subclasses:List of 7
[17:59:37.314]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.314]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.314]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.314]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.314]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.314]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.314]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.314]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.314]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.314]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.314]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.314]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.314]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.314]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.314]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.314]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.314]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.314]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.314]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.314]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.314]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.314]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.314]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.314]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.314]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.314]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.314]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.314]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.314]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.314]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.314]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.314]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.314]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.314]   .. .. .. .. .. ..@ distance  : num 2
[17:59:37.314]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.314]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.314]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.314]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.314]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.314]   .. .. .. .. .. ..@ distance  : num 2
[17:59:37.314]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.314]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.314]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.314]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.314]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.314]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:37.314]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.314]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.314]   .. .. .. .. .. ..@ distance  : num 2
[17:59:37.314]   .. .. ..@ versionKey:<externalptr> 
[17:59:37.314]   .. .. ..@ sealed    : logi TRUE
[17:59:37.314]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.314]  - attr(*, "where")=List of 1
[17:59:37.314]   ..$ ...:<environment: 0x615ed0bce020> 
[17:59:37.314]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.314]  - attr(*, "resolved")= logi TRUE
[17:59:37.314]  - attr(*, "total_size")= num NA
[17:59:37.424]  - Getting '...' globals ... DONE
[17:59:37.425] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:37.425] List of 2
[17:59:37.425]  $ ...future.FUN:function (a, b)  
[17:59:37.425]  $ ...          :List of 1
[17:59:37.425]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:59:37.425]   .. .. ..@ slots     :List of 4
[17:59:37.425]   .. .. .. ..$ .Data  : chr "function"
[17:59:37.425]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. ..$ target : chr "signature"
[17:59:37.425]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. ..$ defined: chr "signature"
[17:59:37.425]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. ..$ generic: chr "character"
[17:59:37.425]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. ..@ contains  :List of 3
[17:59:37.425]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.425]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ superClass: chr "function"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.425]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.425]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.425]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.425]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.425]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.425]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.425]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.425]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.425]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.425]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.425]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.425]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.425]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.425]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.425]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.425]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ by        : chr "function"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.425]   .. .. .. .. .. ..@ distance  : num 2
[17:59:37.425]   .. .. ..@ virtual   : logi FALSE
[17:59:37.425]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:59:37.425]  list()
[17:59:37.425]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:59:37.425]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:37.425]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:37.425]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:37.425]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:59:37.425]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:37.425]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:37.425]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:37.425]   .. .. .. .. ..$ generic: chr(0) 
[17:59:37.425]   .. .. ..@ validity  : NULL
[17:59:37.425]   .. .. ..@ access    : list()
[17:59:37.425]   .. .. ..@ className : chr "MethodDefinition"
[17:59:37.425]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. ..@ subclasses:List of 7
[17:59:37.425]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.425]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.425]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.425]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.425]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.425]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.425]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.425]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.425]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.425]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.425]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.425]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.425]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.425]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.425]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.425]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.425]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.425]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.425]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.425]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.425]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.425]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.425]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.425]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.425]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.425]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:37.425]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.425]   .. .. .. .. .. ..@ distance  : num 1
[17:59:37.425]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.425]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.425]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.425]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.425]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.425]   .. .. .. .. .. ..@ distance  : num 2
[17:59:37.425]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.425]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.425]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.425]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.425]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.425]   .. .. .. .. .. ..@ distance  : num 2
[17:59:37.425]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:37.425]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:37.425]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:37.425]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:37.425]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:37.425]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:37.425]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:37.425]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:37.425]   .. .. .. .. .. ..@ distance  : num 2
[17:59:37.425]   .. .. ..@ versionKey:<externalptr> 
[17:59:37.425]   .. .. ..@ sealed    : logi TRUE
[17:59:37.425]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.425]  - attr(*, "where")=List of 2
[17:59:37.425]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:37.425]   ..$ ...          :<environment: 0x615ed0bce020> 
[17:59:37.425]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.425]  - attr(*, "resolved")= logi FALSE
[17:59:37.425]  - attr(*, "total_size")= num 405168
[17:59:37.523] Packages to be attached in all futures: [n=0] 
[17:59:37.523] getGlobalsAndPackagesXApply() ... DONE
[17:59:37.523] Number of futures (= number of chunks): 1
[17:59:37.524] Launching 1 futures (chunks) ...
[17:59:37.524] Chunk #1 of 1 ...
[17:59:37.524]  - Finding globals in 'X' for chunk #1 ...
[17:59:37.525]    + additional globals found: [n=0] 
[17:59:37.525]    + additional namespaces needed: [n=0] 
[17:59:37.525]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:37.525]  - seeds: <none>
[17:59:37.525]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:37.541] Created future:
[17:59:37.541] MulticoreFuture:
[17:59:37.541] Label: ‘future_lapply-1’
[17:59:37.541] Expression:
[17:59:37.541] {
[17:59:37.541]     do.call(function(...) {
[17:59:37.541]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.541]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.541]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.541]             on.exit(options(oopts), add = TRUE)
[17:59:37.541]         }
[17:59:37.541]         {
[17:59:37.541]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.541]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.541]                 ...future.FUN(...future.X_jj, ...)
[17:59:37.541]             })
[17:59:37.541]         }
[17:59:37.541]     }, args = future.call.arguments)
[17:59:37.541] }
[17:59:37.541] Lazy evaluation: FALSE
[17:59:37.541] Asynchronous evaluation: TRUE
[17:59:37.541] Local evaluation: TRUE
[17:59:37.541] Environment: R_GlobalEnv
[17:59:37.541] Capture standard output: TRUE
[17:59:37.541] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.541] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:37.541] Packages: <none>
[17:59:37.541] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.541] Resolved: TRUE
[17:59:37.541] Value: <not collected>
[17:59:37.541] Conditions captured: <none>
[17:59:37.541] Early signaling: FALSE
[17:59:37.541] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.541] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.557] Chunk #1 of 1 ... DONE
[17:59:37.558] Launching 1 futures (chunks) ... DONE
[17:59:37.558] Resolving 1 futures (chunks) ...
[17:59:37.561]  - Number of value chunks collected: 1
[17:59:37.562] Resolving 1 futures (chunks) ... DONE
[17:59:37.562] Reducing values from 1 chunks ...
[17:59:37.562]  - Number of values collected after concatenation: 1
[17:59:37.562]  - Number of values expected: 1
[17:59:37.563] Reducing values from 1 chunks ... DONE
[17:59:37.563] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:59:37.568] future_lapply() ...
[17:59:37.576] Number of chunks: 2
[17:59:37.576] getGlobalsAndPackagesXApply() ...
[17:59:37.576]  - future.globals: TRUE
[17:59:37.580]  - globals found/used: [n=1] ‘FUN’
[17:59:37.580]  - needed namespaces: [n=0] 
[17:59:37.580] Finding globals ... DONE
[17:59:37.581]  - use_args: TRUE
[17:59:37.581]  - Getting '...' globals ...
[17:59:37.582]    - '...' content: [n=0] 
[17:59:37.582] List of 1
[17:59:37.582]  $ ...: list()
[17:59:37.582]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.582]  - attr(*, "where")=List of 1
[17:59:37.582]   ..$ ...:<environment: 0x615ed188ea68> 
[17:59:37.582]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.582]  - attr(*, "resolved")= logi TRUE
[17:59:37.582]  - attr(*, "total_size")= num NA
[17:59:37.588]  - Getting '...' globals ... DONE
[17:59:37.588] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:37.588] List of 2
[17:59:37.588]  $ ...future.FUN:function (f)  
[17:59:37.588]  $ ...          : list()
[17:59:37.588]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.588]  - attr(*, "where")=List of 2
[17:59:37.588]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:37.588]   ..$ ...          :<environment: 0x615ed188ea68> 
[17:59:37.588]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.588]  - attr(*, "resolved")= logi FALSE
[17:59:37.588]  - attr(*, "total_size")= num 1008
[17:59:37.595] Packages to be attached in all futures: [n=0] 
[17:59:37.595] getGlobalsAndPackagesXApply() ... DONE
[17:59:37.595] Number of futures (= number of chunks): 2
[17:59:37.596] Launching 2 futures (chunks) ...
[17:59:37.596] Chunk #1 of 2 ...
[17:59:37.596]  - Finding globals in 'X' for chunk #1 ...
[17:59:37.600]    + additional globals found: [n=2] ‘a’, ‘b’
[17:59:37.600]    + additional namespaces needed: [n=0] 
[17:59:37.601]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:37.601]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:37.601]  - seeds: <none>
[17:59:37.601]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:59:37.615] Created future:
[17:59:37.616] MulticoreFuture:
[17:59:37.616] Label: ‘future_lapply-1’
[17:59:37.616] Expression:
[17:59:37.616] {
[17:59:37.616]     do.call(function(...) {
[17:59:37.616]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.616]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.616]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.616]             on.exit(options(oopts), add = TRUE)
[17:59:37.616]         }
[17:59:37.616]         {
[17:59:37.616]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.616]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.616]                 ...future.FUN(...future.X_jj, ...)
[17:59:37.616]             })
[17:59:37.616]         }
[17:59:37.616]     }, args = future.call.arguments)
[17:59:37.616] }
[17:59:37.616] Lazy evaluation: FALSE
[17:59:37.616] Asynchronous evaluation: TRUE
[17:59:37.616] Local evaluation: TRUE
[17:59:37.616] Environment: R_GlobalEnv
[17:59:37.616] Capture standard output: TRUE
[17:59:37.616] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.616] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:59:37.616] Packages: <none>
[17:59:37.616] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.616] Resolved: TRUE
[17:59:37.616] Value: <not collected>
[17:59:37.616] Conditions captured: <none>
[17:59:37.616] Early signaling: FALSE
[17:59:37.616] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.616] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.631] Chunk #1 of 2 ... DONE
[17:59:37.631] Chunk #2 of 2 ...
[17:59:37.632]  - Finding globals in 'X' for chunk #2 ...
[17:59:37.639]    + additional globals found: [n=2] ‘a’, ‘b’
[17:59:37.639]    + additional namespaces needed: [n=1] ‘tools’
[17:59:37.640]  - Finding globals in 'X' for chunk #2 ... DONE
[17:59:37.640]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:37.641]  - seeds: <none>
[17:59:37.641]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:59:37.658] Created future:
[17:59:37.659] MulticoreFuture:
[17:59:37.659] Label: ‘future_lapply-2’
[17:59:37.659] Expression:
[17:59:37.659] {
[17:59:37.659]     do.call(function(...) {
[17:59:37.659]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.659]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.659]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.659]             on.exit(options(oopts), add = TRUE)
[17:59:37.659]         }
[17:59:37.659]         {
[17:59:37.659]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.659]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.659]                 ...future.FUN(...future.X_jj, ...)
[17:59:37.659]             })
[17:59:37.659]         }
[17:59:37.659]     }, args = future.call.arguments)
[17:59:37.659] }
[17:59:37.659] Lazy evaluation: FALSE
[17:59:37.659] Asynchronous evaluation: TRUE
[17:59:37.659] Local evaluation: TRUE
[17:59:37.659] Environment: R_GlobalEnv
[17:59:37.659] Capture standard output: TRUE
[17:59:37.659] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.659] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:59:37.659] Packages: 1 packages (‘tools’)
[17:59:37.659] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.659] Resolved: FALSE
[17:59:37.659] Value: <not collected>
[17:59:37.659] Conditions captured: <none>
[17:59:37.659] Early signaling: FALSE
[17:59:37.659] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.659] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.675] Chunk #2 of 2 ... DONE
[17:59:37.675] Launching 2 futures (chunks) ... DONE
[17:59:37.675] Resolving 2 futures (chunks) ...
[17:59:37.683]  - Number of value chunks collected: 2
[17:59:37.684] Resolving 2 futures (chunks) ... DONE
[17:59:37.684] Reducing values from 2 chunks ...
[17:59:37.685]  - Number of values collected after concatenation: 4
[17:59:37.685]  - Number of values expected: 4
[17:59:37.685] Reducing values from 2 chunks ... DONE
[17:59:37.686] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:59:37.693] future_lapply() ...
[17:59:37.701] Number of chunks: 1
[17:59:37.702] getGlobalsAndPackagesXApply() ...
[17:59:37.702]  - future.globals: TRUE
[17:59:37.707]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:59:37.708]  - needed namespaces: [n=0] 
[17:59:37.708] Finding globals ... DONE
[17:59:37.708]  - use_args: TRUE
[17:59:37.708]  - Getting '...' globals ...
[17:59:37.709]    - '...' content: [n=0] 
[17:59:37.709] List of 1
[17:59:37.709]  $ ...: list()
[17:59:37.709]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.709]  - attr(*, "where")=List of 1
[17:59:37.709]   ..$ ...:<environment: 0x615ed28b09c8> 
[17:59:37.709]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.709]  - attr(*, "resolved")= logi TRUE
[17:59:37.709]  - attr(*, "total_size")= num NA
[17:59:37.715]  - Getting '...' globals ... DONE
[17:59:37.715] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:59:37.716] List of 3
[17:59:37.716]  $ ...future.FUN        :function (x)  
[17:59:37.716]  $ future.call.arguments:List of 1
[17:59:37.716]   ..$ a: num 1
[17:59:37.716]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.716]  $ ...                  : list()
[17:59:37.716]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.716]  - attr(*, "where")=List of 3
[17:59:37.716]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:59:37.716]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:59:37.716]   ..$ ...                  :<environment: 0x615ed28b09c8> 
[17:59:37.716]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.716]  - attr(*, "resolved")= logi FALSE
[17:59:37.716]  - attr(*, "total_size")= num 1272
[17:59:37.727] Packages to be attached in all futures: [n=0] 
[17:59:37.727] getGlobalsAndPackagesXApply() ... DONE
[17:59:37.728] Number of futures (= number of chunks): 1
[17:59:37.728] Launching 1 futures (chunks) ...
[17:59:37.728] Chunk #1 of 1 ...
[17:59:37.729]  - Finding globals in 'X' for chunk #1 ...
[17:59:37.729]    + additional globals found: [n=0] 
[17:59:37.729]    + additional namespaces needed: [n=0] 
[17:59:37.730]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:37.730]  - seeds: <none>
[17:59:37.730]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:37.744] Created future:
[17:59:37.744] MulticoreFuture:
[17:59:37.744] Label: ‘future_lapply-1’
[17:59:37.744] Expression:
[17:59:37.744] {
[17:59:37.744]     do.call(function(...) {
[17:59:37.744]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.744]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.744]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.744]             on.exit(options(oopts), add = TRUE)
[17:59:37.744]         }
[17:59:37.744]         {
[17:59:37.744]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.744]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.744]                 ...future.FUN(...future.X_jj)
[17:59:37.744]             })
[17:59:37.744]         }
[17:59:37.744]     }, args = future.call.arguments)
[17:59:37.744] }
[17:59:37.744] Lazy evaluation: FALSE
[17:59:37.744] Asynchronous evaluation: TRUE
[17:59:37.744] Local evaluation: TRUE
[17:59:37.744] Environment: 0x615ed28b0e28
[17:59:37.744] Capture standard output: TRUE
[17:59:37.744] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.744] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:37.744] Packages: <none>
[17:59:37.744] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.744] Resolved: TRUE
[17:59:37.744] Value: <not collected>
[17:59:37.744] Conditions captured: <none>
[17:59:37.744] Early signaling: FALSE
[17:59:37.744] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.744] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.760] Chunk #1 of 1 ... DONE
[17:59:37.760] Launching 1 futures (chunks) ... DONE
[17:59:37.760] Resolving 1 futures (chunks) ...
[17:59:37.763]  - Number of value chunks collected: 1
[17:59:37.764] Resolving 1 futures (chunks) ... DONE
[17:59:37.764] Reducing values from 1 chunks ...
[17:59:37.764]  - Number of values collected after concatenation: 1
[17:59:37.765]  - Number of values expected: 1
[17:59:37.765] Reducing values from 1 chunks ... DONE
[17:59:37.765] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:59:37.768] future_lapply() ...
[17:59:37.777] Number of chunks: 1
[17:59:37.777] getGlobalsAndPackagesXApply() ...
[17:59:37.778]  - future.globals: TRUE
[17:59:37.783]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:59:37.783]  - needed namespaces: [n=0] 
[17:59:37.783] Finding globals ... DONE
[17:59:37.783]  - use_args: TRUE
[17:59:37.784]  - Getting '...' globals ...
[17:59:37.784]    - '...' content: [n=0] 
[17:59:37.785] List of 1
[17:59:37.785]  $ ...: list()
[17:59:37.785]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.785]  - attr(*, "where")=List of 1
[17:59:37.785]   ..$ ...:<environment: 0x615ed15eabc0> 
[17:59:37.785]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.785]  - attr(*, "resolved")= logi TRUE
[17:59:37.785]  - attr(*, "total_size")= num NA
[17:59:37.791]  - Getting '...' globals ... DONE
[17:59:37.791] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:59:37.792] List of 3
[17:59:37.792]  $ ...future.FUN:function (ii)  
[17:59:37.792]  $ a            : num 1
[17:59:37.792]  $ ...          : list()
[17:59:37.792]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.792]  - attr(*, "where")=List of 3
[17:59:37.792]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:37.792]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:37.792]   ..$ ...          :<environment: 0x615ed15eabc0> 
[17:59:37.792]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.792]  - attr(*, "resolved")= logi FALSE
[17:59:37.792]  - attr(*, "total_size")= num 2984
[17:59:37.799] Packages to be attached in all futures: [n=0] 
[17:59:37.800] getGlobalsAndPackagesXApply() ... DONE
[17:59:37.800] Number of futures (= number of chunks): 1
[17:59:37.800] Launching 1 futures (chunks) ...
[17:59:37.801] Chunk #1 of 1 ...
[17:59:37.801]  - Finding globals in 'X' for chunk #1 ...
[17:59:37.801]    + additional globals found: [n=0] 
[17:59:37.802]    + additional namespaces needed: [n=0] 
[17:59:37.802]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:37.802]  - seeds: <none>
[17:59:37.802]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:37.816] Created future:
[17:59:37.817] MulticoreFuture:
[17:59:37.817] Label: ‘future_lapply-1’
[17:59:37.817] Expression:
[17:59:37.817] {
[17:59:37.817]     do.call(function(...) {
[17:59:37.817]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.817]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.817]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.817]             on.exit(options(oopts), add = TRUE)
[17:59:37.817]         }
[17:59:37.817]         {
[17:59:37.817]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.817]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.817]                 ...future.FUN(...future.X_jj, ...)
[17:59:37.817]             })
[17:59:37.817]         }
[17:59:37.817]     }, args = future.call.arguments)
[17:59:37.817] }
[17:59:37.817] Lazy evaluation: FALSE
[17:59:37.817] Asynchronous evaluation: TRUE
[17:59:37.817] Local evaluation: TRUE
[17:59:37.817] Environment: R_GlobalEnv
[17:59:37.817] Capture standard output: TRUE
[17:59:37.817] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.817] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:59:37.817] Packages: <none>
[17:59:37.817] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.817] Resolved: TRUE
[17:59:37.817] Value: <not collected>
[17:59:37.817] Conditions captured: <none>
[17:59:37.817] Early signaling: FALSE
[17:59:37.817] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.817] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.833] Chunk #1 of 1 ... DONE
[17:59:37.833] Launching 1 futures (chunks) ... DONE
[17:59:37.833] Resolving 1 futures (chunks) ...
[17:59:37.836]  - Number of value chunks collected: 1
[17:59:37.837] Resolving 1 futures (chunks) ... DONE
[17:59:37.837] Reducing values from 1 chunks ...
[17:59:37.837]  - Number of values collected after concatenation: 1
[17:59:37.838]  - Number of values expected: 1
[17:59:37.838] Reducing values from 1 chunks ... DONE
[17:59:37.838] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:59:37.839] future_lapply() ...
[17:59:37.847] Number of chunks: 1
[17:59:37.848] getGlobalsAndPackagesXApply() ...
[17:59:37.848]  - future.globals: TRUE
[17:59:37.853]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:59:37.853]  - needed namespaces: [n=0] 
[17:59:37.854] Finding globals ... DONE
[17:59:37.854]  - use_args: TRUE
[17:59:37.854]  - Getting '...' globals ...
[17:59:37.855]    - '...' content: [n=0] 
[17:59:37.855] List of 1
[17:59:37.855]  $ ...: list()
[17:59:37.855]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.855]  - attr(*, "where")=List of 1
[17:59:37.855]   ..$ ...:<environment: 0x615ecf044838> 
[17:59:37.855]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.855]  - attr(*, "resolved")= logi TRUE
[17:59:37.855]  - attr(*, "total_size")= num NA
[17:59:37.861]  - Getting '...' globals ... DONE
[17:59:37.862] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:59:37.862] List of 3
[17:59:37.862]  $ ...future.FUN:function (ii)  
[17:59:37.862]  $ a            : num 1
[17:59:37.862]  $ ...          : list()
[17:59:37.862]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.862]  - attr(*, "where")=List of 3
[17:59:37.862]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:37.862]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:37.862]   ..$ ...          :<environment: 0x615ecf044838> 
[17:59:37.862]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.862]  - attr(*, "resolved")= logi FALSE
[17:59:37.862]  - attr(*, "total_size")= num 2984
[17:59:37.869] Packages to be attached in all futures: [n=0] 
[17:59:37.869] getGlobalsAndPackagesXApply() ... DONE
[17:59:37.870] Number of futures (= number of chunks): 1
[17:59:37.870] Launching 1 futures (chunks) ...
[17:59:37.870] Chunk #1 of 1 ...
[17:59:37.871]  - Finding globals in 'X' for chunk #1 ...
[17:59:37.871]    + additional globals found: [n=0] 
[17:59:37.871]    + additional namespaces needed: [n=0] 
[17:59:37.872]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:37.872]  - seeds: <none>
[17:59:37.872]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:37.886] Created future:
[17:59:37.887] MulticoreFuture:
[17:59:37.887] Label: ‘future_lapply-1’
[17:59:37.887] Expression:
[17:59:37.887] {
[17:59:37.887]     do.call(function(...) {
[17:59:37.887]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.887]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.887]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.887]             on.exit(options(oopts), add = TRUE)
[17:59:37.887]         }
[17:59:37.887]         {
[17:59:37.887]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.887]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.887]                 ...future.FUN(...future.X_jj, ...)
[17:59:37.887]             })
[17:59:37.887]         }
[17:59:37.887]     }, args = future.call.arguments)
[17:59:37.887] }
[17:59:37.887] Lazy evaluation: FALSE
[17:59:37.887] Asynchronous evaluation: TRUE
[17:59:37.887] Local evaluation: TRUE
[17:59:37.887] Environment: R_GlobalEnv
[17:59:37.887] Capture standard output: TRUE
[17:59:37.887] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.887] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:59:37.887] Packages: <none>
[17:59:37.887] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.887] Resolved: TRUE
[17:59:37.887] Value: <not collected>
[17:59:37.887] Conditions captured: <none>
[17:59:37.887] Early signaling: FALSE
[17:59:37.887] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.887] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.902] Chunk #1 of 1 ... DONE
[17:59:37.902] Launching 1 futures (chunks) ... DONE
[17:59:37.902] Resolving 1 futures (chunks) ...
[17:59:37.906]  - Number of value chunks collected: 1
[17:59:37.911] Resolving 1 futures (chunks) ... DONE
[17:59:37.911] Reducing values from 1 chunks ...
[17:59:37.912]  - Number of values collected after concatenation: 1
[17:59:37.912]  - Number of values expected: 1
[17:59:37.912] Reducing values from 1 chunks ... DONE
[17:59:37.912] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:59:37.913] future_lapply() ...
[17:59:37.920] Number of chunks: 1
[17:59:37.921] getGlobalsAndPackagesXApply() ...
[17:59:37.921]  - future.globals: <name-value list> with names ‘42’
[17:59:37.922]  - use_args: TRUE
[17:59:37.922]  - Getting '...' globals ...
[17:59:37.923]    - '...' content: [n=0] 
[17:59:37.923] List of 1
[17:59:37.923]  $ ...: list()
[17:59:37.923]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.923]  - attr(*, "where")=List of 1
[17:59:37.923]   ..$ ...:<environment: 0x615ed1f6ee38> 
[17:59:37.923]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.923]  - attr(*, "resolved")= logi TRUE
[17:59:37.923]  - attr(*, "total_size")= num NA
[17:59:37.930]  - Getting '...' globals ... DONE
[17:59:37.931] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:59:37.931] List of 3
[17:59:37.931]  $ a            : num 42
[17:59:37.931]  $ ...future.FUN:function (x)  
[17:59:37.931]  $ ...          : list()
[17:59:37.931]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:37.931]  - attr(*, "where")=List of 3
[17:59:37.931]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:37.931]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:59:37.931]   ..$ ...          :<environment: 0x615ed1f6ee38> 
[17:59:37.931]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:37.931]  - attr(*, "resolved")= logi FALSE
[17:59:37.931]  - attr(*, "total_size")= num NA
[17:59:37.939] Packages to be attached in all futures: [n=0] 
[17:59:37.940] getGlobalsAndPackagesXApply() ... DONE
[17:59:37.940] Number of futures (= number of chunks): 1
[17:59:37.940] Launching 1 futures (chunks) ...
[17:59:37.941] Chunk #1 of 1 ...
[17:59:37.941]  - seeds: <none>
[17:59:37.941]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:37.957] Created future:
[17:59:37.958] MulticoreFuture:
[17:59:37.958] Label: ‘future_lapply-1’
[17:59:37.958] Expression:
[17:59:37.958] {
[17:59:37.958]     do.call(function(...) {
[17:59:37.958]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:37.958]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:37.958]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:37.958]             on.exit(options(oopts), add = TRUE)
[17:59:37.958]         }
[17:59:37.958]         {
[17:59:37.958]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:37.958]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:37.958]                 ...future.FUN(...future.X_jj, ...)
[17:59:37.958]             })
[17:59:37.958]         }
[17:59:37.958]     }, args = future.call.arguments)
[17:59:37.958] }
[17:59:37.958] Lazy evaluation: FALSE
[17:59:37.958] Asynchronous evaluation: TRUE
[17:59:37.958] Local evaluation: TRUE
[17:59:37.958] Environment: R_GlobalEnv
[17:59:37.958] Capture standard output: TRUE
[17:59:37.958] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:37.958] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:59:37.958] Packages: <none>
[17:59:37.958] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:37.958] Resolved: FALSE
[17:59:37.958] Value: <not collected>
[17:59:37.958] Conditions captured: <none>
[17:59:37.958] Early signaling: FALSE
[17:59:37.958] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:37.958] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:37.974] Chunk #1 of 1 ... DONE
[17:59:37.974] Launching 1 futures (chunks) ... DONE
[17:59:37.975] Resolving 1 futures (chunks) ...
[17:59:37.981]  - Number of value chunks collected: 1
[17:59:37.981] Resolving 1 futures (chunks) ... DONE
[17:59:37.981] Reducing values from 1 chunks ...
[17:59:37.982]  - Number of values collected after concatenation: 1
[17:59:37.983]  - Number of values expected: 1
[17:59:37.984] Reducing values from 1 chunks ... DONE
[17:59:37.984] future_lapply() ... DONE
List of 1
 $ : num 42
[17:59:38.565] future_lapply() ...
[17:59:38.575] Number of chunks: 2
[17:59:38.576] getGlobalsAndPackagesXApply() ...
[17:59:38.576]  - future.globals: TRUE
[17:59:38.590]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:59:38.591]  - needed namespaces: [n=0] 
[17:59:38.591] Finding globals ... DONE
[17:59:38.592]  - use_args: TRUE
[17:59:38.592]  - Getting '...' globals ...
[17:59:38.593]    - '...' content: [n=0] 
[17:59:38.593] List of 1
[17:59:38.593]  $ ...: list()
[17:59:38.593]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:38.593]  - attr(*, "where")=List of 1
[17:59:38.593]   ..$ ...:<environment: 0x615ecfc894b0> 
[17:59:38.593]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:38.593]  - attr(*, "resolved")= logi TRUE
[17:59:38.593]  - attr(*, "total_size")= num NA
[17:59:38.600]  - Getting '...' globals ... DONE
[17:59:38.601] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:59:38.601] List of 6
[17:59:38.601]  $ ...future.FUN:function (i)  
[17:59:38.601]  $ caller       :function (a, b, FUN = call_my_add)  
[17:59:38.601]  $ args         :List of 1
[17:59:38.601]   ..$ FUN:function (a, b)  
[17:59:38.601]  $ call_my_add  :function (a, b)  
[17:59:38.601]  $ my_add       :function (a, b)  
[17:59:38.601]  $ ...          : list()
[17:59:38.601]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:38.601]  - attr(*, "where")=List of 6
[17:59:38.601]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:38.601]   ..$ caller       :<environment: R_EmptyEnv> 
[17:59:38.601]   ..$ args         :<environment: R_EmptyEnv> 
[17:59:38.601]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:59:38.601]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:59:38.601]   ..$ ...          :<environment: 0x615ecfc894b0> 
[17:59:38.601]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:38.601]  - attr(*, "resolved")= logi FALSE
[17:59:38.601]  - attr(*, "total_size")= num 24120
[17:59:38.614] Packages to be attached in all futures: [n=0] 
[17:59:38.615] getGlobalsAndPackagesXApply() ... DONE
[17:59:38.615] Number of futures (= number of chunks): 2
[17:59:38.616] Launching 2 futures (chunks) ...
[17:59:38.616] Chunk #1 of 2 ...
[17:59:38.616]  - Finding globals in 'X' for chunk #1 ...
[17:59:38.617]    + additional globals found: [n=0] 
[17:59:38.617]    + additional namespaces needed: [n=0] 
[17:59:38.618]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:38.618]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:38.618]  - seeds: <none>
[17:59:38.618]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:38.699] Created future:
[17:59:38.699] MultisessionFuture:
[17:59:38.699] Label: ‘future_lapply-1’
[17:59:38.699] Expression:
[17:59:38.699] {
[17:59:38.699]     do.call(function(...) {
[17:59:38.699]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:38.699]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:38.699]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:38.699]             on.exit(options(oopts), add = TRUE)
[17:59:38.699]         }
[17:59:38.699]         {
[17:59:38.699]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:38.699]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:38.699]                 ...future.FUN(...future.X_jj, ...)
[17:59:38.699]             })
[17:59:38.699]         }
[17:59:38.699]     }, args = future.call.arguments)
[17:59:38.699] }
[17:59:38.699] Lazy evaluation: FALSE
[17:59:38.699] Asynchronous evaluation: TRUE
[17:59:38.699] Local evaluation: TRUE
[17:59:38.699] Environment: 0x615ecfc89018
[17:59:38.699] Capture standard output: TRUE
[17:59:38.699] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:38.699] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:59:38.699] Packages: <none>
[17:59:38.699] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:38.699] Resolved: FALSE
[17:59:38.699] Value: <not collected>
[17:59:38.699] Conditions captured: <none>
[17:59:38.699] Early signaling: FALSE
[17:59:38.699] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:38.699] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:38.715] Chunk #1 of 2 ... DONE
[17:59:38.715] Chunk #2 of 2 ...
[17:59:38.715]  - Finding globals in 'X' for chunk #2 ...
[17:59:38.716]    + additional globals found: [n=0] 
[17:59:38.717]    + additional namespaces needed: [n=0] 
[17:59:38.717]  - Finding globals in 'X' for chunk #2 ... DONE
[17:59:38.718]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:38.718]  - seeds: <none>
[17:59:38.718]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:38.856] Created future:
[17:59:38.856] MultisessionFuture:
[17:59:38.856] Label: ‘future_lapply-2’
[17:59:38.856] Expression:
[17:59:38.856] {
[17:59:38.856]     do.call(function(...) {
[17:59:38.856]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:38.856]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:38.856]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:38.856]             on.exit(options(oopts), add = TRUE)
[17:59:38.856]         }
[17:59:38.856]         {
[17:59:38.856]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:38.856]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:38.856]                 ...future.FUN(...future.X_jj, ...)
[17:59:38.856]             })
[17:59:38.856]         }
[17:59:38.856]     }, args = future.call.arguments)
[17:59:38.856] }
[17:59:38.856] Lazy evaluation: FALSE
[17:59:38.856] Asynchronous evaluation: TRUE
[17:59:38.856] Local evaluation: TRUE
[17:59:38.856] Environment: 0x615ecfc89018
[17:59:38.856] Capture standard output: TRUE
[17:59:38.856] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:38.856] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:59:38.856] Packages: <none>
[17:59:38.856] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:38.856] Resolved: FALSE
[17:59:38.856] Value: <not collected>
[17:59:38.856] Conditions captured: <none>
[17:59:38.856] Early signaling: FALSE
[17:59:38.856] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:38.856] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:38.872] Chunk #2 of 2 ... DONE
[17:59:38.872] Launching 2 futures (chunks) ... DONE
[17:59:38.873] Resolving 2 futures (chunks) ...
[17:59:38.971]  - Number of value chunks collected: 2
[17:59:38.971] Resolving 2 futures (chunks) ... DONE
[17:59:38.972] Reducing values from 2 chunks ...
[17:59:38.972]  - Number of values collected after concatenation: 3
[17:59:38.972]  - Number of values expected: 3
[17:59:38.973] Reducing values from 2 chunks ... DONE
[17:59:38.973] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:59:38.973] future_lapply() ...
[17:59:38.984] Number of chunks: 1
[17:59:38.984] getGlobalsAndPackagesXApply() ...
[17:59:38.984]  - future.globals: TRUE
[17:59:38.990]  - globals found/used: [n=1] ‘FUN’
[17:59:38.991]  - needed namespaces: [n=0] 
[17:59:38.991] Finding globals ... DONE
[17:59:38.991]  - use_args: TRUE
[17:59:38.991]  - Getting '...' globals ...
[17:59:38.992]    - '...' content: [n=1] ‘what’
[17:59:38.993] List of 1
[17:59:38.993]  $ ...:List of 1
[17:59:38.993]   ..$ what:function (x)  
[17:59:38.993]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:38.993]  - attr(*, "where")=List of 1
[17:59:38.993]   ..$ ...:<environment: 0x615ed11db250> 
[17:59:38.993]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:38.993]  - attr(*, "resolved")= logi TRUE
[17:59:38.993]  - attr(*, "total_size")= num NA
[17:59:38.999]  - Getting '...' globals ... DONE
[17:59:38.999] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:38.999] List of 2
[17:59:38.999]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:59:38.999]  $ ...          :List of 1
[17:59:38.999]   ..$ what:function (x)  
[17:59:38.999]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:38.999]  - attr(*, "where")=List of 2
[17:59:38.999]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:38.999]   ..$ ...          :<environment: 0x615ed11db250> 
[17:59:38.999]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:38.999]  - attr(*, "resolved")= logi FALSE
[17:59:38.999]  - attr(*, "total_size")= num 12192
[17:59:39.006] Packages to be attached in all futures: [n=0] 
[17:59:39.007] getGlobalsAndPackagesXApply() ... DONE
[17:59:39.007] Number of futures (= number of chunks): 1
[17:59:39.007] Launching 1 futures (chunks) ...
[17:59:39.008] Chunk #1 of 1 ...
[17:59:39.008]  - Finding globals in 'X' for chunk #1 ...
[17:59:39.009]    + additional globals found: [n=0] 
[17:59:39.009]    + additional namespaces needed: [n=0] 
[17:59:39.009]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:39.009]  - seeds: <none>
[17:59:39.010]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:39.048] Created future:
[17:59:39.048] MultisessionFuture:
[17:59:39.048] Label: ‘future_lapply-1’
[17:59:39.048] Expression:
[17:59:39.048] {
[17:59:39.048]     do.call(function(...) {
[17:59:39.048]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:39.048]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:39.048]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:39.048]             on.exit(options(oopts), add = TRUE)
[17:59:39.048]         }
[17:59:39.048]         {
[17:59:39.048]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:39.048]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:39.048]                 ...future.FUN(...future.X_jj, ...)
[17:59:39.048]             })
[17:59:39.048]         }
[17:59:39.048]     }, args = future.call.arguments)
[17:59:39.048] }
[17:59:39.048] Lazy evaluation: FALSE
[17:59:39.048] Asynchronous evaluation: TRUE
[17:59:39.048] Local evaluation: TRUE
[17:59:39.048] Environment: R_GlobalEnv
[17:59:39.048] Capture standard output: TRUE
[17:59:39.048] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:39.048] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:39.048] Packages: <none>
[17:59:39.048] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:39.048] Resolved: FALSE
[17:59:39.048] Value: <not collected>
[17:59:39.048] Conditions captured: <none>
[17:59:39.048] Early signaling: FALSE
[17:59:39.048] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:39.048] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:39.061] Chunk #1 of 1 ... DONE
[17:59:39.062] Launching 1 futures (chunks) ... DONE
[17:59:39.062] Resolving 1 futures (chunks) ...
[17:59:39.091]  - Number of value chunks collected: 1
[17:59:39.092] Resolving 1 futures (chunks) ... DONE
[17:59:39.092] Reducing values from 1 chunks ...
[17:59:39.092]  - Number of values collected after concatenation: 1
[17:59:39.092]  - Number of values expected: 1
[17:59:39.092] Reducing values from 1 chunks ... DONE
[17:59:39.093] future_lapply() ... DONE
[17:59:39.093] future_lapply() ...
[17:59:39.101] Number of chunks: 1
[17:59:39.102] getGlobalsAndPackagesXApply() ...
[17:59:39.102]  - future.globals: TRUE
[17:59:39.108]  - globals found/used: [n=1] ‘FUN’
[17:59:39.109]  - needed namespaces: [n=0] 
[17:59:39.109] Finding globals ... DONE
[17:59:39.109]  - use_args: TRUE
[17:59:39.109]  - Getting '...' globals ...
[17:59:39.110]    - '...' content: [n=1] ‘what’
[17:59:39.110] List of 1
[17:59:39.110]  $ ...:List of 1
[17:59:39.110]   ..$ what:function (...)  
[17:59:39.110]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:39.110]  - attr(*, "where")=List of 1
[17:59:39.110]   ..$ ...:<environment: 0x615ed2ac9600> 
[17:59:39.110]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:39.110]  - attr(*, "resolved")= logi TRUE
[17:59:39.110]  - attr(*, "total_size")= num NA
[17:59:39.130]  - Getting '...' globals ... DONE
[17:59:39.130] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:39.131] List of 2
[17:59:39.131]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:59:39.131]  $ ...          :List of 1
[17:59:39.131]   ..$ what:function (...)  
[17:59:39.131]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:39.131]  - attr(*, "where")=List of 2
[17:59:39.131]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:39.131]   ..$ ...          :<environment: 0x615ed2ac9600> 
[17:59:39.131]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:39.131]  - attr(*, "resolved")= logi FALSE
[17:59:39.131]  - attr(*, "total_size")= num 13352
[17:59:39.137] Packages to be attached in all futures: [n=0] 
[17:59:39.137] getGlobalsAndPackagesXApply() ... DONE
[17:59:39.137] Number of futures (= number of chunks): 1
[17:59:39.138] Launching 1 futures (chunks) ...
[17:59:39.138] Chunk #1 of 1 ...
[17:59:39.138]  - Finding globals in 'X' for chunk #1 ...
[17:59:39.139]    + additional globals found: [n=0] 
[17:59:39.139]    + additional namespaces needed: [n=0] 
[17:59:39.139]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:39.139]  - seeds: <none>
[17:59:39.140]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:39.170] Created future:
[17:59:39.170] MultisessionFuture:
[17:59:39.170] Label: ‘future_lapply-1’
[17:59:39.170] Expression:
[17:59:39.170] {
[17:59:39.170]     do.call(function(...) {
[17:59:39.170]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:39.170]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:39.170]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:39.170]             on.exit(options(oopts), add = TRUE)
[17:59:39.170]         }
[17:59:39.170]         {
[17:59:39.170]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:39.170]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:39.170]                 ...future.FUN(...future.X_jj, ...)
[17:59:39.170]             })
[17:59:39.170]         }
[17:59:39.170]     }, args = future.call.arguments)
[17:59:39.170] }
[17:59:39.170] Lazy evaluation: FALSE
[17:59:39.170] Asynchronous evaluation: TRUE
[17:59:39.170] Local evaluation: TRUE
[17:59:39.170] Environment: R_GlobalEnv
[17:59:39.170] Capture standard output: TRUE
[17:59:39.170] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:39.170] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:39.170] Packages: <none>
[17:59:39.170] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:39.170] Resolved: FALSE
[17:59:39.170] Value: <not collected>
[17:59:39.170] Conditions captured: <none>
[17:59:39.170] Early signaling: FALSE
[17:59:39.170] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:39.170] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:39.183] Chunk #1 of 1 ... DONE
[17:59:39.183] Launching 1 futures (chunks) ... DONE
[17:59:39.183] Resolving 1 futures (chunks) ...
[17:59:39.215]  - Number of value chunks collected: 1
[17:59:39.215] Resolving 1 futures (chunks) ... DONE
[17:59:39.215] Reducing values from 1 chunks ...
[17:59:39.216]  - Number of values collected after concatenation: 1
[17:59:39.216]  - Number of values expected: 1
[17:59:39.216] Reducing values from 1 chunks ... DONE
[17:59:39.216] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:59:39.217] future_lapply() ...
[17:59:39.225] Number of chunks: 1
[17:59:39.225] getGlobalsAndPackagesXApply() ...
[17:59:39.225]  - future.globals: TRUE
[17:59:39.229]  - globals found/used: [n=1] ‘FUN’
[17:59:39.229]  - needed namespaces: [n=0] 
[17:59:39.229] Finding globals ... DONE
[17:59:39.230]  - use_args: TRUE
[17:59:39.230]  - Getting '...' globals ...
[17:59:39.231]    - '...' content: [n=1] ‘b’
[17:59:39.231] List of 1
[17:59:39.231]  $ ...:List of 1
[17:59:39.231]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:59:39.231]   .. ..$ a: int [1:2] 1 2
[17:59:39.231]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:39.231]  - attr(*, "where")=List of 1
[17:59:39.231]   ..$ ...:<environment: 0x615ed0bea7a0> 
[17:59:39.231]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:39.231]  - attr(*, "resolved")= logi TRUE
[17:59:39.231]  - attr(*, "total_size")= num NA
[17:59:39.238]  - Getting '...' globals ... DONE
[17:59:39.238] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:39.239] List of 2
[17:59:39.239]  $ ...future.FUN:function (a, b)  
[17:59:39.239]  $ ...          :List of 1
[17:59:39.239]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:59:39.239]   .. ..$ a: int [1:2] 1 2
[17:59:39.239]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:39.239]  - attr(*, "where")=List of 2
[17:59:39.239]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:39.239]   ..$ ...          :<environment: 0x615ed0bea7a0> 
[17:59:39.239]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:39.239]  - attr(*, "resolved")= logi FALSE
[17:59:39.239]  - attr(*, "total_size")= num 1440
[17:59:39.247] Packages to be attached in all futures: [n=0] 
[17:59:39.247] getGlobalsAndPackagesXApply() ... DONE
[17:59:39.247] Number of futures (= number of chunks): 1
[17:59:39.248] Launching 1 futures (chunks) ...
[17:59:39.248] Chunk #1 of 1 ...
[17:59:39.248]  - Finding globals in 'X' for chunk #1 ...
[17:59:39.249]    + additional globals found: [n=0] 
[17:59:39.249]    + additional namespaces needed: [n=0] 
[17:59:39.249]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:39.250]  - seeds: <none>
[17:59:39.250]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:39.281] Created future:
[17:59:39.281] MultisessionFuture:
[17:59:39.281] Label: ‘future_lapply-1’
[17:59:39.281] Expression:
[17:59:39.281] {
[17:59:39.281]     do.call(function(...) {
[17:59:39.281]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:39.281]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:39.281]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:39.281]             on.exit(options(oopts), add = TRUE)
[17:59:39.281]         }
[17:59:39.281]         {
[17:59:39.281]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:39.281]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:39.281]                 ...future.FUN(...future.X_jj, ...)
[17:59:39.281]             })
[17:59:39.281]         }
[17:59:39.281]     }, args = future.call.arguments)
[17:59:39.281] }
[17:59:39.281] Lazy evaluation: FALSE
[17:59:39.281] Asynchronous evaluation: TRUE
[17:59:39.281] Local evaluation: TRUE
[17:59:39.281] Environment: R_GlobalEnv
[17:59:39.281] Capture standard output: TRUE
[17:59:39.281] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:39.281] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:39.281] Packages: <none>
[17:59:39.281] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:39.281] Resolved: FALSE
[17:59:39.281] Value: <not collected>
[17:59:39.281] Conditions captured: <none>
[17:59:39.281] Early signaling: FALSE
[17:59:39.281] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:39.281] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:39.297] Chunk #1 of 1 ... DONE
[17:59:39.298] Launching 1 futures (chunks) ... DONE
[17:59:39.298] Resolving 1 futures (chunks) ...
[17:59:39.327]  - Number of value chunks collected: 1
[17:59:39.327] Resolving 1 futures (chunks) ... DONE
[17:59:39.327] Reducing values from 1 chunks ...
[17:59:39.327]  - Number of values collected after concatenation: 1
[17:59:39.328]  - Number of values expected: 1
[17:59:39.328] Reducing values from 1 chunks ... DONE
[17:59:39.328] future_lapply() ... DONE
[17:59:39.328] future_lapply() ...
[17:59:39.335] Number of chunks: 1
[17:59:39.335] getGlobalsAndPackagesXApply() ...
[17:59:39.335]  - future.globals: TRUE
[17:59:39.339]  - globals found/used: [n=1] ‘FUN’
[17:59:39.339]  - needed namespaces: [n=0] 
[17:59:39.340] Finding globals ... DONE
[17:59:39.341]  - use_args: TRUE
[17:59:39.341]  - Getting '...' globals ...
[17:59:39.342]    - '...' content: [n=1] ‘b’
[17:59:39.342] List of 1
[17:59:39.342]  $ ...:List of 1
[17:59:39.342]   ..$ b:<environment: 0x615ed2ad3750> 
[17:59:39.342]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:39.342]  - attr(*, "where")=List of 1
[17:59:39.342]   ..$ ...:<environment: 0x615ed2ad2c98> 
[17:59:39.342]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:39.342]  - attr(*, "resolved")= logi TRUE
[17:59:39.342]  - attr(*, "total_size")= num NA
[17:59:39.351]  - Getting '...' globals ... DONE
[17:59:39.351] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:39.351] List of 2
[17:59:39.351]  $ ...future.FUN:function (a, b)  
[17:59:39.351]  $ ...          :List of 1
[17:59:39.351]   ..$ b:<environment: 0x615ed2ad3750> 
[17:59:39.351]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:39.351]  - attr(*, "where")=List of 2
[17:59:39.351]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:39.351]   ..$ ...          :<environment: 0x615ed2ad2c98> 
[17:59:39.351]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:39.351]  - attr(*, "resolved")= logi FALSE
[17:59:39.351]  - attr(*, "total_size")= num 1440
[17:59:39.358] Packages to be attached in all futures: [n=0] 
[17:59:39.359] getGlobalsAndPackagesXApply() ... DONE
[17:59:39.362] Number of futures (= number of chunks): 1
[17:59:39.362] Launching 1 futures (chunks) ...
[17:59:39.365] Chunk #1 of 1 ...
[17:59:39.365]  - Finding globals in 'X' for chunk #1 ...
[17:59:39.367]    + additional globals found: [n=0] 
[17:59:39.367]    + additional namespaces needed: [n=0] 
[17:59:39.367]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:39.368]  - seeds: <none>
[17:59:39.368]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:39.422] Created future:
[17:59:39.422] MultisessionFuture:
[17:59:39.422] Label: ‘future_lapply-1’
[17:59:39.422] Expression:
[17:59:39.422] {
[17:59:39.422]     do.call(function(...) {
[17:59:39.422]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:39.422]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:39.422]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:39.422]             on.exit(options(oopts), add = TRUE)
[17:59:39.422]         }
[17:59:39.422]         {
[17:59:39.422]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:39.422]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:39.422]                 ...future.FUN(...future.X_jj, ...)
[17:59:39.422]             })
[17:59:39.422]         }
[17:59:39.422]     }, args = future.call.arguments)
[17:59:39.422] }
[17:59:39.422] Lazy evaluation: FALSE
[17:59:39.422] Asynchronous evaluation: TRUE
[17:59:39.422] Local evaluation: TRUE
[17:59:39.422] Environment: R_GlobalEnv
[17:59:39.422] Capture standard output: TRUE
[17:59:39.422] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:39.422] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:39.422] Packages: <none>
[17:59:39.422] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:39.422] Resolved: FALSE
[17:59:39.422] Value: <not collected>
[17:59:39.422] Conditions captured: <none>
[17:59:39.422] Early signaling: FALSE
[17:59:39.422] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:39.422] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:39.435] Chunk #1 of 1 ... DONE
[17:59:39.435] Launching 1 futures (chunks) ... DONE
[17:59:39.435] Resolving 1 futures (chunks) ...
[17:59:39.465]  - Number of value chunks collected: 1
[17:59:39.465] Resolving 1 futures (chunks) ... DONE
[17:59:39.466] Reducing values from 1 chunks ...
[17:59:39.466]  - Number of values collected after concatenation: 1
[17:59:39.466]  - Number of values expected: 1
[17:59:39.466] Reducing values from 1 chunks ... DONE
[17:59:39.466] future_lapply() ... DONE
[17:59:39.467] future_lapply() ...
[17:59:39.473] Number of chunks: 1
[17:59:39.473] getGlobalsAndPackagesXApply() ...
[17:59:39.473]  - future.globals: TRUE
[17:59:39.478]  - globals found/used: [n=1] ‘FUN’
[17:59:39.478]  - needed namespaces: [n=0] 
[17:59:39.478] Finding globals ... DONE
[17:59:39.478]  - use_args: TRUE
[17:59:39.478]  - Getting '...' globals ...
[17:59:39.479]    - '...' content: [n=1] ‘b’
[17:59:39.479] List of 1
[17:59:39.479]  $ ...:List of 1
[17:59:39.479]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:59:39.479]   .. .. ..@ slots     :List of 4
[17:59:39.479]   .. .. .. ..$ .Data  : chr "function"
[17:59:39.479]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. ..$ target : chr "signature"
[17:59:39.479]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. ..$ defined: chr "signature"
[17:59:39.479]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. ..$ generic: chr "character"
[17:59:39.479]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. ..@ contains  :List of 3
[17:59:39.479]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.479]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ superClass: chr "function"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.479]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.479]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.479]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.479]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.479]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.479]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.479]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.479]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.479]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.479]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.479]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.479]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.479]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.479]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.479]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.479]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ by        : chr "function"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.479]   .. .. .. .. .. ..@ distance  : num 2
[17:59:39.479]   .. .. ..@ virtual   : logi FALSE
[17:59:39.479]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:59:39.479]  list()
[17:59:39.479]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:59:39.479]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:39.479]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:39.479]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:39.479]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:59:39.479]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:39.479]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:39.479]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:39.479]   .. .. .. .. ..$ generic: chr(0) 
[17:59:39.479]   .. .. ..@ validity  : NULL
[17:59:39.479]   .. .. ..@ access    : list()
[17:59:39.479]   .. .. ..@ className : chr "MethodDefinition"
[17:59:39.479]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. ..@ subclasses:List of 7
[17:59:39.479]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.479]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.479]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.479]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.479]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.479]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.479]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.479]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.479]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.479]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.479]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.479]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.479]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.479]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.479]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.479]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.479]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.479]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.479]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.479]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.479]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.479]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.479]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.479]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.479]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.479]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.479]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.479]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.479]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.479]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.479]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.479]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.479]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.479]   .. .. .. .. .. ..@ distance  : num 2
[17:59:39.479]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.479]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.479]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.479]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.479]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.479]   .. .. .. .. .. ..@ distance  : num 2
[17:59:39.479]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.479]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.479]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.479]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.479]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.479]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:39.479]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.479]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.479]   .. .. .. .. .. ..@ distance  : num 2
[17:59:39.479]   .. .. ..@ versionKey:<externalptr> 
[17:59:39.479]   .. .. ..@ sealed    : logi TRUE
[17:59:39.479]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:39.479]  - attr(*, "where")=List of 1
[17:59:39.479]   ..$ ...:<environment: 0x615ed15202f0> 
[17:59:39.479]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:39.479]  - attr(*, "resolved")= logi TRUE
[17:59:39.479]  - attr(*, "total_size")= num NA
[17:59:39.576]  - Getting '...' globals ... DONE
[17:59:39.577] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:39.577] List of 2
[17:59:39.577]  $ ...future.FUN:function (a, b)  
[17:59:39.577]  $ ...          :List of 1
[17:59:39.577]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:59:39.577]   .. .. ..@ slots     :List of 4
[17:59:39.577]   .. .. .. ..$ .Data  : chr "function"
[17:59:39.577]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. ..$ target : chr "signature"
[17:59:39.577]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. ..$ defined: chr "signature"
[17:59:39.577]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. ..$ generic: chr "character"
[17:59:39.577]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. ..@ contains  :List of 3
[17:59:39.577]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.577]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ superClass: chr "function"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.577]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.577]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.577]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.577]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.577]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.577]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.577]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.577]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.577]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.577]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.577]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.577]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.577]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.577]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.577]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.577]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ by        : chr "function"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.577]   .. .. .. .. .. ..@ distance  : num 2
[17:59:39.577]   .. .. ..@ virtual   : logi FALSE
[17:59:39.577]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:59:39.577]  list()
[17:59:39.577]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:59:39.577]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:39.577]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:39.577]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:39.577]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:59:39.577]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:59:39.577]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:59:39.577]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:59:39.577]   .. .. .. .. ..$ generic: chr(0) 
[17:59:39.577]   .. .. ..@ validity  : NULL
[17:59:39.577]   .. .. ..@ access    : list()
[17:59:39.577]   .. .. ..@ className : chr "MethodDefinition"
[17:59:39.577]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. ..@ subclasses:List of 7
[17:59:39.577]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.577]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.577]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.577]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.577]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.577]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.577]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.577]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.577]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.577]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.577]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.577]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.577]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.577]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.577]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.577]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.577]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.577]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.577]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.577]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.577]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.577]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.577]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.577]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.577]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.577]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ by        : chr(0) 
[17:59:39.577]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.577]   .. .. .. .. .. ..@ distance  : num 1
[17:59:39.577]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.577]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.577]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.577]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.577]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.577]   .. .. .. .. .. ..@ distance  : num 2
[17:59:39.577]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.577]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.577]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.577]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.577]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.577]   .. .. .. .. .. ..@ distance  : num 2
[17:59:39.577]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:59:39.577]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ package   : chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:59:39.577]   .. .. .. .. .. ..@ test      :function (object)  
[17:59:39.577]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:59:39.577]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:59:39.577]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:59:39.577]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:59:39.577]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:59:39.577]   .. .. .. .. .. ..@ distance  : num 2
[17:59:39.577]   .. .. ..@ versionKey:<externalptr> 
[17:59:39.577]   .. .. ..@ sealed    : logi TRUE
[17:59:39.577]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:39.577]  - attr(*, "where")=List of 2
[17:59:39.577]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:39.577]   ..$ ...          :<environment: 0x615ed15202f0> 
[17:59:39.577]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:39.577]  - attr(*, "resolved")= logi FALSE
[17:59:39.577]  - attr(*, "total_size")= num 405168
[17:59:39.679] Packages to be attached in all futures: [n=0] 
[17:59:39.680] getGlobalsAndPackagesXApply() ... DONE
[17:59:39.680] Number of futures (= number of chunks): 1
[17:59:39.680] Launching 1 futures (chunks) ...
[17:59:39.680] Chunk #1 of 1 ...
[17:59:39.681]  - Finding globals in 'X' for chunk #1 ...
[17:59:39.681]    + additional globals found: [n=0] 
[17:59:39.682]    + additional namespaces needed: [n=0] 
[17:59:39.682]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:39.682]  - seeds: <none>
[17:59:39.682]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:39.755] Created future:
[17:59:39.756] MultisessionFuture:
[17:59:39.756] Label: ‘future_lapply-1’
[17:59:39.756] Expression:
[17:59:39.756] {
[17:59:39.756]     do.call(function(...) {
[17:59:39.756]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:39.756]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:39.756]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:39.756]             on.exit(options(oopts), add = TRUE)
[17:59:39.756]         }
[17:59:39.756]         {
[17:59:39.756]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:39.756]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:39.756]                 ...future.FUN(...future.X_jj, ...)
[17:59:39.756]             })
[17:59:39.756]         }
[17:59:39.756]     }, args = future.call.arguments)
[17:59:39.756] }
[17:59:39.756] Lazy evaluation: FALSE
[17:59:39.756] Asynchronous evaluation: TRUE
[17:59:39.756] Local evaluation: TRUE
[17:59:39.756] Environment: R_GlobalEnv
[17:59:39.756] Capture standard output: TRUE
[17:59:39.756] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:39.756] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:39.756] Packages: <none>
[17:59:39.756] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:39.756] Resolved: FALSE
[17:59:39.756] Value: <not collected>
[17:59:39.756] Conditions captured: <none>
[17:59:39.756] Early signaling: FALSE
[17:59:39.756] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:39.756] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:39.769] Chunk #1 of 1 ... DONE
[17:59:39.770] Launching 1 futures (chunks) ... DONE
[17:59:39.770] Resolving 1 futures (chunks) ...
[17:59:39.802]  - Number of value chunks collected: 1
[17:59:39.802] Resolving 1 futures (chunks) ... DONE
[17:59:39.802] Reducing values from 1 chunks ...
[17:59:39.802]  - Number of values collected after concatenation: 1
[17:59:39.803]  - Number of values expected: 1
[17:59:39.803] Reducing values from 1 chunks ... DONE
[17:59:39.803] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:59:39.809] future_lapply() ...
[17:59:39.819] Number of chunks: 2
[17:59:39.819] getGlobalsAndPackagesXApply() ...
[17:59:39.819]  - future.globals: TRUE
[17:59:39.823]  - globals found/used: [n=1] ‘FUN’
[17:59:39.823]  - needed namespaces: [n=0] 
[17:59:39.824] Finding globals ... DONE
[17:59:39.824]  - use_args: TRUE
[17:59:39.824]  - Getting '...' globals ...
[17:59:39.825]    - '...' content: [n=0] 
[17:59:39.825] List of 1
[17:59:39.825]  $ ...: list()
[17:59:39.825]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:39.825]  - attr(*, "where")=List of 1
[17:59:39.825]   ..$ ...:<environment: 0x615ed202f610> 
[17:59:39.825]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:39.825]  - attr(*, "resolved")= logi TRUE
[17:59:39.825]  - attr(*, "total_size")= num NA
[17:59:39.834]  - Getting '...' globals ... DONE
[17:59:39.834] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:39.834] List of 2
[17:59:39.834]  $ ...future.FUN:function (f)  
[17:59:39.834]  $ ...          : list()
[17:59:39.834]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:39.834]  - attr(*, "where")=List of 2
[17:59:39.834]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:39.834]   ..$ ...          :<environment: 0x615ed202f610> 
[17:59:39.834]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:39.834]  - attr(*, "resolved")= logi FALSE
[17:59:39.834]  - attr(*, "total_size")= num 1008
[17:59:39.840] Packages to be attached in all futures: [n=0] 
[17:59:39.840] getGlobalsAndPackagesXApply() ... DONE
[17:59:39.841] Number of futures (= number of chunks): 2
[17:59:39.841] Launching 2 futures (chunks) ...
[17:59:39.841] Chunk #1 of 2 ...
[17:59:39.842]  - Finding globals in 'X' for chunk #1 ...
[17:59:39.845]    + additional globals found: [n=2] ‘a’, ‘b’
[17:59:39.845]    + additional namespaces needed: [n=0] 
[17:59:39.846]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:39.846]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:39.846]  - seeds: <none>
[17:59:39.846]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:59:39.877] Created future:
[17:59:39.878] MultisessionFuture:
[17:59:39.878] Label: ‘future_lapply-1’
[17:59:39.878] Expression:
[17:59:39.878] {
[17:59:39.878]     do.call(function(...) {
[17:59:39.878]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:39.878]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:39.878]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:39.878]             on.exit(options(oopts), add = TRUE)
[17:59:39.878]         }
[17:59:39.878]         {
[17:59:39.878]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:39.878]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:39.878]                 ...future.FUN(...future.X_jj, ...)
[17:59:39.878]             })
[17:59:39.878]         }
[17:59:39.878]     }, args = future.call.arguments)
[17:59:39.878] }
[17:59:39.878] Lazy evaluation: FALSE
[17:59:39.878] Asynchronous evaluation: TRUE
[17:59:39.878] Local evaluation: TRUE
[17:59:39.878] Environment: R_GlobalEnv
[17:59:39.878] Capture standard output: TRUE
[17:59:39.878] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:39.878] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:59:39.878] Packages: <none>
[17:59:39.878] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:39.878] Resolved: FALSE
[17:59:39.878] Value: <not collected>
[17:59:39.878] Conditions captured: <none>
[17:59:39.878] Early signaling: FALSE
[17:59:39.878] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:39.878] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:39.890] Chunk #1 of 2 ... DONE
[17:59:39.891] Chunk #2 of 2 ...
[17:59:39.891]  - Finding globals in 'X' for chunk #2 ...
[17:59:39.895]    + additional globals found: [n=2] ‘a’, ‘b’
[17:59:39.895]    + additional namespaces needed: [n=1] ‘tools’
[17:59:39.895]  - Finding globals in 'X' for chunk #2 ... DONE
[17:59:39.896]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:39.896]  - seeds: <none>
[17:59:39.896]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:59:39.928] Created future:
[17:59:39.929] MultisessionFuture:
[17:59:39.929] Label: ‘future_lapply-2’
[17:59:39.929] Expression:
[17:59:39.929] {
[17:59:39.929]     do.call(function(...) {
[17:59:39.929]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:39.929]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:39.929]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:39.929]             on.exit(options(oopts), add = TRUE)
[17:59:39.929]         }
[17:59:39.929]         {
[17:59:39.929]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:39.929]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:39.929]                 ...future.FUN(...future.X_jj, ...)
[17:59:39.929]             })
[17:59:39.929]         }
[17:59:39.929]     }, args = future.call.arguments)
[17:59:39.929] }
[17:59:39.929] Lazy evaluation: FALSE
[17:59:39.929] Asynchronous evaluation: TRUE
[17:59:39.929] Local evaluation: TRUE
[17:59:39.929] Environment: R_GlobalEnv
[17:59:39.929] Capture standard output: TRUE
[17:59:39.929] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:39.929] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:59:39.929] Packages: 1 packages (‘tools’)
[17:59:39.929] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:39.929] Resolved: FALSE
[17:59:39.929] Value: <not collected>
[17:59:39.929] Conditions captured: <none>
[17:59:39.929] Early signaling: FALSE
[17:59:39.929] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:39.929] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:39.942] Chunk #2 of 2 ... DONE
[17:59:39.942] Launching 2 futures (chunks) ... DONE
[17:59:39.942] Resolving 2 futures (chunks) ...
[17:59:39.988]  - Number of value chunks collected: 2
[17:59:39.988] Resolving 2 futures (chunks) ... DONE
[17:59:39.988] Reducing values from 2 chunks ...
[17:59:39.988]  - Number of values collected after concatenation: 4
[17:59:39.988]  - Number of values expected: 4
[17:59:39.989] Reducing values from 2 chunks ... DONE
[17:59:39.989] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:59:39.994] future_lapply() ...
[17:59:40.001] Number of chunks: 1
[17:59:40.001] getGlobalsAndPackagesXApply() ...
[17:59:40.001]  - future.globals: TRUE
[17:59:40.006]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:59:40.006]  - needed namespaces: [n=0] 
[17:59:40.006] Finding globals ... DONE
[17:59:40.006]  - use_args: TRUE
[17:59:40.007]  - Getting '...' globals ...
[17:59:40.007]    - '...' content: [n=0] 
[17:59:40.008] List of 1
[17:59:40.008]  $ ...: list()
[17:59:40.008]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.008]  - attr(*, "where")=List of 1
[17:59:40.008]   ..$ ...:<environment: 0x615ed1565058> 
[17:59:40.008]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.008]  - attr(*, "resolved")= logi TRUE
[17:59:40.008]  - attr(*, "total_size")= num NA
[17:59:40.013]  - Getting '...' globals ... DONE
[17:59:40.013] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:59:40.013] List of 3
[17:59:40.013]  $ ...future.FUN        :function (x)  
[17:59:40.013]  $ future.call.arguments:List of 1
[17:59:40.013]   ..$ a: num 1
[17:59:40.013]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.013]  $ ...                  : list()
[17:59:40.013]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.013]  - attr(*, "where")=List of 3
[17:59:40.013]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:59:40.013]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:59:40.013]   ..$ ...                  :<environment: 0x615ed1565058> 
[17:59:40.013]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.013]  - attr(*, "resolved")= logi FALSE
[17:59:40.013]  - attr(*, "total_size")= num 1272
[17:59:40.021] Packages to be attached in all futures: [n=0] 
[17:59:40.021] getGlobalsAndPackagesXApply() ... DONE
[17:59:40.021] Number of futures (= number of chunks): 1
[17:59:40.021] Launching 1 futures (chunks) ...
[17:59:40.022] Chunk #1 of 1 ...
[17:59:40.022]  - Finding globals in 'X' for chunk #1 ...
[17:59:40.022]    + additional globals found: [n=0] 
[17:59:40.023]    + additional namespaces needed: [n=0] 
[17:59:40.023]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:40.023]  - seeds: <none>
[17:59:40.023]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.057] Created future:
[17:59:40.057] MultisessionFuture:
[17:59:40.057] Label: ‘future_lapply-1’
[17:59:40.057] Expression:
[17:59:40.057] {
[17:59:40.057]     do.call(function(...) {
[17:59:40.057]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.057]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.057]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.057]             on.exit(options(oopts), add = TRUE)
[17:59:40.057]         }
[17:59:40.057]         {
[17:59:40.057]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.057]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.057]                 ...future.FUN(...future.X_jj)
[17:59:40.057]             })
[17:59:40.057]         }
[17:59:40.057]     }, args = future.call.arguments)
[17:59:40.057] }
[17:59:40.057] Lazy evaluation: FALSE
[17:59:40.057] Asynchronous evaluation: TRUE
[17:59:40.057] Local evaluation: TRUE
[17:59:40.057] Environment: 0x615ed15653d8
[17:59:40.057] Capture standard output: TRUE
[17:59:40.057] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.057] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:40.057] Packages: <none>
[17:59:40.057] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.057] Resolved: FALSE
[17:59:40.057] Value: <not collected>
[17:59:40.057] Conditions captured: <none>
[17:59:40.057] Early signaling: FALSE
[17:59:40.057] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.057] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:40.070] Chunk #1 of 1 ... DONE
[17:59:40.071] Launching 1 futures (chunks) ... DONE
[17:59:40.071] Resolving 1 futures (chunks) ...
[17:59:40.101]  - Number of value chunks collected: 1
[17:59:40.102] Resolving 1 futures (chunks) ... DONE
[17:59:40.102] Reducing values from 1 chunks ...
[17:59:40.102]  - Number of values collected after concatenation: 1
[17:59:40.102]  - Number of values expected: 1
[17:59:40.102] Reducing values from 1 chunks ... DONE
[17:59:40.103] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:59:40.105] future_lapply() ...
[17:59:40.112] Number of chunks: 1
[17:59:40.112] getGlobalsAndPackagesXApply() ...
[17:59:40.112]  - future.globals: TRUE
[17:59:40.117]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:59:40.118]  - needed namespaces: [n=0] 
[17:59:40.118] Finding globals ... DONE
[17:59:40.118]  - use_args: TRUE
[17:59:40.118]  - Getting '...' globals ...
[17:59:40.119]    - '...' content: [n=0] 
[17:59:40.119] List of 1
[17:59:40.119]  $ ...: list()
[17:59:40.119]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.119]  - attr(*, "where")=List of 1
[17:59:40.119]   ..$ ...:<environment: 0x615ed1be0a30> 
[17:59:40.119]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.119]  - attr(*, "resolved")= logi TRUE
[17:59:40.119]  - attr(*, "total_size")= num NA
[17:59:40.125]  - Getting '...' globals ... DONE
[17:59:40.125] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:59:40.125] List of 3
[17:59:40.125]  $ ...future.FUN:function (ii)  
[17:59:40.125]  $ a            : num 1
[17:59:40.125]  $ ...          : list()
[17:59:40.125]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.125]  - attr(*, "where")=List of 3
[17:59:40.125]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:40.125]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:40.125]   ..$ ...          :<environment: 0x615ed1be0a30> 
[17:59:40.125]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.125]  - attr(*, "resolved")= logi FALSE
[17:59:40.125]  - attr(*, "total_size")= num 2984
[17:59:40.133] Packages to be attached in all futures: [n=0] 
[17:59:40.133] getGlobalsAndPackagesXApply() ... DONE
[17:59:40.133] Number of futures (= number of chunks): 1
[17:59:40.134] Launching 1 futures (chunks) ...
[17:59:40.134] Chunk #1 of 1 ...
[17:59:40.134]  - Finding globals in 'X' for chunk #1 ...
[17:59:40.135]    + additional globals found: [n=0] 
[17:59:40.135]    + additional namespaces needed: [n=0] 
[17:59:40.135]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:40.135]  - seeds: <none>
[17:59:40.135]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.167] Created future:
[17:59:40.167] MultisessionFuture:
[17:59:40.167] Label: ‘future_lapply-1’
[17:59:40.167] Expression:
[17:59:40.167] {
[17:59:40.167]     do.call(function(...) {
[17:59:40.167]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.167]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.167]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.167]             on.exit(options(oopts), add = TRUE)
[17:59:40.167]         }
[17:59:40.167]         {
[17:59:40.167]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.167]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.167]                 ...future.FUN(...future.X_jj, ...)
[17:59:40.167]             })
[17:59:40.167]         }
[17:59:40.167]     }, args = future.call.arguments)
[17:59:40.167] }
[17:59:40.167] Lazy evaluation: FALSE
[17:59:40.167] Asynchronous evaluation: TRUE
[17:59:40.167] Local evaluation: TRUE
[17:59:40.167] Environment: R_GlobalEnv
[17:59:40.167] Capture standard output: TRUE
[17:59:40.167] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.167] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:59:40.167] Packages: <none>
[17:59:40.167] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.167] Resolved: FALSE
[17:59:40.167] Value: <not collected>
[17:59:40.167] Conditions captured: <none>
[17:59:40.167] Early signaling: FALSE
[17:59:40.167] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.167] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:40.180] Chunk #1 of 1 ... DONE
[17:59:40.181] Launching 1 futures (chunks) ... DONE
[17:59:40.181] Resolving 1 futures (chunks) ...
[17:59:40.211]  - Number of value chunks collected: 1
[17:59:40.212] Resolving 1 futures (chunks) ... DONE
[17:59:40.212] Reducing values from 1 chunks ...
[17:59:40.212]  - Number of values collected after concatenation: 1
[17:59:40.212]  - Number of values expected: 1
[17:59:40.212] Reducing values from 1 chunks ... DONE
[17:59:40.213] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:59:40.213] future_lapply() ...
[17:59:40.220] Number of chunks: 1
[17:59:40.220] getGlobalsAndPackagesXApply() ...
[17:59:40.220]  - future.globals: TRUE
[17:59:40.224]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:59:40.225]  - needed namespaces: [n=0] 
[17:59:40.225] Finding globals ... DONE
[17:59:40.225]  - use_args: TRUE
[17:59:40.225]  - Getting '...' globals ...
[17:59:40.226]    - '...' content: [n=0] 
[17:59:40.226] List of 1
[17:59:40.226]  $ ...: list()
[17:59:40.226]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.226]  - attr(*, "where")=List of 1
[17:59:40.226]   ..$ ...:<environment: 0x615ed28f1d10> 
[17:59:40.226]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.226]  - attr(*, "resolved")= logi TRUE
[17:59:40.226]  - attr(*, "total_size")= num NA
[17:59:40.231]  - Getting '...' globals ... DONE
[17:59:40.231] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:59:40.232] List of 3
[17:59:40.232]  $ ...future.FUN:function (ii)  
[17:59:40.232]  $ a            : num 1
[17:59:40.232]  $ ...          : list()
[17:59:40.232]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.232]  - attr(*, "where")=List of 3
[17:59:40.232]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:40.232]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:40.232]   ..$ ...          :<environment: 0x615ed28f1d10> 
[17:59:40.232]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.232]  - attr(*, "resolved")= logi FALSE
[17:59:40.232]  - attr(*, "total_size")= num 2984
[17:59:40.238] Packages to be attached in all futures: [n=0] 
[17:59:40.238] getGlobalsAndPackagesXApply() ... DONE
[17:59:40.239] Number of futures (= number of chunks): 1
[17:59:40.239] Launching 1 futures (chunks) ...
[17:59:40.239] Chunk #1 of 1 ...
[17:59:40.239]  - Finding globals in 'X' for chunk #1 ...
[17:59:40.240]    + additional globals found: [n=0] 
[17:59:40.240]    + additional namespaces needed: [n=0] 
[17:59:40.240]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:40.240]  - seeds: <none>
[17:59:40.241]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.272] Created future:
[17:59:40.273] MultisessionFuture:
[17:59:40.273] Label: ‘future_lapply-1’
[17:59:40.273] Expression:
[17:59:40.273] {
[17:59:40.273]     do.call(function(...) {
[17:59:40.273]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.273]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.273]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.273]             on.exit(options(oopts), add = TRUE)
[17:59:40.273]         }
[17:59:40.273]         {
[17:59:40.273]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.273]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.273]                 ...future.FUN(...future.X_jj, ...)
[17:59:40.273]             })
[17:59:40.273]         }
[17:59:40.273]     }, args = future.call.arguments)
[17:59:40.273] }
[17:59:40.273] Lazy evaluation: FALSE
[17:59:40.273] Asynchronous evaluation: TRUE
[17:59:40.273] Local evaluation: TRUE
[17:59:40.273] Environment: R_GlobalEnv
[17:59:40.273] Capture standard output: TRUE
[17:59:40.273] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.273] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:59:40.273] Packages: <none>
[17:59:40.273] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.273] Resolved: FALSE
[17:59:40.273] Value: <not collected>
[17:59:40.273] Conditions captured: <none>
[17:59:40.273] Early signaling: FALSE
[17:59:40.273] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.273] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:40.286] Chunk #1 of 1 ... DONE
[17:59:40.286] Launching 1 futures (chunks) ... DONE
[17:59:40.286] Resolving 1 futures (chunks) ...
[17:59:40.317]  - Number of value chunks collected: 1
[17:59:40.318] Resolving 1 futures (chunks) ... DONE
[17:59:40.318] Reducing values from 1 chunks ...
[17:59:40.321]  - Number of values collected after concatenation: 1
[17:59:40.321]  - Number of values expected: 1
[17:59:40.321] Reducing values from 1 chunks ... DONE
[17:59:40.322] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:59:40.322] future_lapply() ...
[17:59:40.329] Number of chunks: 1
[17:59:40.329] getGlobalsAndPackagesXApply() ...
[17:59:40.330]  - future.globals: <name-value list> with names ‘42’
[17:59:40.330]  - use_args: TRUE
[17:59:40.330]  - Getting '...' globals ...
[17:59:40.331]    - '...' content: [n=0] 
[17:59:40.331] List of 1
[17:59:40.331]  $ ...: list()
[17:59:40.331]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.331]  - attr(*, "where")=List of 1
[17:59:40.331]   ..$ ...:<environment: 0x615ed001bef0> 
[17:59:40.331]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.331]  - attr(*, "resolved")= logi TRUE
[17:59:40.331]  - attr(*, "total_size")= num NA
[17:59:40.337]  - Getting '...' globals ... DONE
[17:59:40.337] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:59:40.337] List of 3
[17:59:40.337]  $ a            : num 42
[17:59:40.337]  $ ...future.FUN:function (x)  
[17:59:40.337]  $ ...          : list()
[17:59:40.337]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.337]  - attr(*, "where")=List of 3
[17:59:40.337]   ..$ a            :<environment: R_EmptyEnv> 
[17:59:40.337]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:59:40.337]   ..$ ...          :<environment: 0x615ed001bef0> 
[17:59:40.337]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.337]  - attr(*, "resolved")= logi FALSE
[17:59:40.337]  - attr(*, "total_size")= num NA
[17:59:40.347] Packages to be attached in all futures: [n=0] 
[17:59:40.347] getGlobalsAndPackagesXApply() ... DONE
[17:59:40.347] Number of futures (= number of chunks): 1
[17:59:40.348] Launching 1 futures (chunks) ...
[17:59:40.348] Chunk #1 of 1 ...
[17:59:40.348]  - seeds: <none>
[17:59:40.348]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.380] Created future:
[17:59:40.381] MultisessionFuture:
[17:59:40.381] Label: ‘future_lapply-1’
[17:59:40.381] Expression:
[17:59:40.381] {
[17:59:40.381]     do.call(function(...) {
[17:59:40.381]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.381]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.381]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.381]             on.exit(options(oopts), add = TRUE)
[17:59:40.381]         }
[17:59:40.381]         {
[17:59:40.381]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.381]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.381]                 ...future.FUN(...future.X_jj, ...)
[17:59:40.381]             })
[17:59:40.381]         }
[17:59:40.381]     }, args = future.call.arguments)
[17:59:40.381] }
[17:59:40.381] Lazy evaluation: FALSE
[17:59:40.381] Asynchronous evaluation: TRUE
[17:59:40.381] Local evaluation: TRUE
[17:59:40.381] Environment: R_GlobalEnv
[17:59:40.381] Capture standard output: TRUE
[17:59:40.381] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.381] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:59:40.381] Packages: <none>
[17:59:40.381] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.381] Resolved: FALSE
[17:59:40.381] Value: <not collected>
[17:59:40.381] Conditions captured: <none>
[17:59:40.381] Early signaling: FALSE
[17:59:40.381] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.381] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:40.394] Chunk #1 of 1 ... DONE
[17:59:40.394] Launching 1 futures (chunks) ... DONE
[17:59:40.394] Resolving 1 futures (chunks) ...
[17:59:40.426]  - Number of value chunks collected: 1
[17:59:40.426] Resolving 1 futures (chunks) ... DONE
[17:59:40.426] Reducing values from 1 chunks ...
[17:59:40.426]  - Number of values collected after concatenation: 1
[17:59:40.427]  - Number of values expected: 1
[17:59:40.427] Reducing values from 1 chunks ... DONE
[17:59:40.427] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[17:59:40.429] future_lapply() ...
[17:59:40.436] Number of chunks: 2
[17:59:40.436] getGlobalsAndPackagesXApply() ...
[17:59:40.436]  - future.globals: TRUE
[17:59:40.440]  - globals found/used: [n=1] ‘FUN’
[17:59:40.441]  - needed namespaces: [n=0] 
[17:59:40.441] Finding globals ... DONE
[17:59:40.441]  - use_args: TRUE
[17:59:40.441]  - Getting '...' globals ...
[17:59:40.442]    - '...' content: [n=0] 
[17:59:40.442] List of 1
[17:59:40.442]  $ ...: list()
[17:59:40.442]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.442]  - attr(*, "where")=List of 1
[17:59:40.442]   ..$ ...:<environment: 0x615ed081a028> 
[17:59:40.442]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.442]  - attr(*, "resolved")= logi TRUE
[17:59:40.442]  - attr(*, "total_size")= num NA
[17:59:40.448]  - Getting '...' globals ... DONE
[17:59:40.448] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:40.448] List of 2
[17:59:40.448]  $ ...future.FUN:function (y)  
[17:59:40.448]  $ ...          : list()
[17:59:40.448]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.448]  - attr(*, "where")=List of 2
[17:59:40.448]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:40.448]   ..$ ...          :<environment: 0x615ed081a028> 
[17:59:40.448]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.448]  - attr(*, "resolved")= logi FALSE
[17:59:40.448]  - attr(*, "total_size")= num 280
[17:59:40.453] Packages to be attached in all futures: [n=0] 
[17:59:40.454] getGlobalsAndPackagesXApply() ... DONE
[17:59:40.454] Number of futures (= number of chunks): 2
[17:59:40.454] Launching 2 futures (chunks) ...
[17:59:40.455] Chunk #1 of 2 ...
[17:59:40.455]  - Finding globals in 'X' for chunk #1 ...
[17:59:40.455]    + additional globals found: [n=0] 
[17:59:40.456]    + additional namespaces needed: [n=0] 
[17:59:40.456]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:40.456]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:40.456]  - seeds: <none>
[17:59:40.456]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.487] Created future:
[17:59:40.488] MultisessionFuture:
[17:59:40.488] Label: ‘future_lapply-1’
[17:59:40.488] Expression:
[17:59:40.488] {
[17:59:40.488]     do.call(function(...) {
[17:59:40.488]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.488]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.488]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.488]             on.exit(options(oopts), add = TRUE)
[17:59:40.488]         }
[17:59:40.488]         {
[17:59:40.488]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.488]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.488]                 ...future.FUN(...future.X_jj, ...)
[17:59:40.488]             })
[17:59:40.488]         }
[17:59:40.488]     }, args = future.call.arguments)
[17:59:40.488] }
[17:59:40.488] Lazy evaluation: FALSE
[17:59:40.488] Asynchronous evaluation: TRUE
[17:59:40.488] Local evaluation: TRUE
[17:59:40.488] Environment: 0x615ed0819bc8
[17:59:40.488] Capture standard output: TRUE
[17:59:40.488] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.488] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:40.488] Packages: <none>
[17:59:40.488] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.488] Resolved: FALSE
[17:59:40.488] Value: <not collected>
[17:59:40.488] Conditions captured: <none>
[17:59:40.488] Early signaling: FALSE
[17:59:40.488] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.488] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:40.501] Chunk #1 of 2 ... DONE
[17:59:40.503] Chunk #2 of 2 ...
[17:59:40.503]  - Finding globals in 'X' for chunk #2 ...
[17:59:40.504]    + additional globals found: [n=0] 
[17:59:40.504]    + additional namespaces needed: [n=0] 
[17:59:40.504]  - Finding globals in 'X' for chunk #2 ... DONE
[17:59:40.504]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:40.505]  - seeds: <none>
[17:59:40.505]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.536] Created future:
[17:59:40.536] MultisessionFuture:
[17:59:40.536] Label: ‘future_lapply-2’
[17:59:40.536] Expression:
[17:59:40.536] {
[17:59:40.536]     do.call(function(...) {
[17:59:40.536]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.536]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.536]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.536]             on.exit(options(oopts), add = TRUE)
[17:59:40.536]         }
[17:59:40.536]         {
[17:59:40.536]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.536]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.536]                 ...future.FUN(...future.X_jj, ...)
[17:59:40.536]             })
[17:59:40.536]         }
[17:59:40.536]     }, args = future.call.arguments)
[17:59:40.536] }
[17:59:40.536] Lazy evaluation: FALSE
[17:59:40.536] Asynchronous evaluation: TRUE
[17:59:40.536] Local evaluation: TRUE
[17:59:40.536] Environment: 0x615ed0819bc8
[17:59:40.536] Capture standard output: TRUE
[17:59:40.536] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.536] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:40.536] Packages: <none>
[17:59:40.536] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.536] Resolved: FALSE
[17:59:40.536] Value: <not collected>
[17:59:40.536] Conditions captured: <none>
[17:59:40.536] Early signaling: FALSE
[17:59:40.536] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.536] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:40.549] Chunk #2 of 2 ... DONE
[17:59:40.549] Launching 2 futures (chunks) ... DONE
[17:59:40.549] Resolving 2 futures (chunks) ...
[17:59:40.581]  - Number of value chunks collected: 2
[17:59:40.581] Resolving 2 futures (chunks) ... DONE
[17:59:40.582] Reducing values from 2 chunks ...
[17:59:40.582]  - Number of values collected after concatenation: 2
[17:59:40.582]  - Number of values expected: 2
[17:59:40.582] Reducing values from 2 chunks ... DONE
[17:59:40.583] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[17:59:40.584] future_lapply() ...
[17:59:40.595] Number of chunks: 2
[17:59:40.595] getGlobalsAndPackagesXApply() ...
[17:59:40.595]  - future.globals: TRUE
[17:59:40.599]  - globals found/used: [n=1] ‘FUN’
[17:59:40.599]  - needed namespaces: [n=0] 
[17:59:40.599] Finding globals ... DONE
[17:59:40.599]  - use_args: TRUE
[17:59:40.600]  - Getting '...' globals ...
[17:59:40.601]    - '...' content: [n=0] 
[17:59:40.601] List of 1
[17:59:40.601]  $ ...: list()
[17:59:40.601]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.601]  - attr(*, "where")=List of 1
[17:59:40.601]   ..$ ...:<environment: 0x615ed25147e0> 
[17:59:40.601]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.601]  - attr(*, "resolved")= logi TRUE
[17:59:40.601]  - attr(*, "total_size")= num NA
[17:59:40.607]  - Getting '...' globals ... DONE
[17:59:40.607] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:40.608] List of 2
[17:59:40.608]  $ ...future.FUN:function (y)  
[17:59:40.608]  $ ...          : list()
[17:59:40.608]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.608]  - attr(*, "where")=List of 2
[17:59:40.608]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:40.608]   ..$ ...          :<environment: 0x615ed25147e0> 
[17:59:40.608]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.608]  - attr(*, "resolved")= logi FALSE
[17:59:40.608]  - attr(*, "total_size")= num 280
[17:59:40.615] Packages to be attached in all futures: [n=0] 
[17:59:40.615] getGlobalsAndPackagesXApply() ... DONE
[17:59:40.615] Number of futures (= number of chunks): 2
[17:59:40.616] Launching 2 futures (chunks) ...
[17:59:40.616] Chunk #1 of 2 ...
[17:59:40.616]  - Finding globals in 'X' for chunk #1 ...
[17:59:40.617]    + additional globals found: [n=0] 
[17:59:40.617]    + additional namespaces needed: [n=0] 
[17:59:40.617]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:40.618]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:40.618]  - seeds: <none>
[17:59:40.618]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.653] Created future:
[17:59:40.654] MultisessionFuture:
[17:59:40.654] Label: ‘future_lapply-1’
[17:59:40.654] Expression:
[17:59:40.654] {
[17:59:40.654]     do.call(function(...) {
[17:59:40.654]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.654]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.654]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.654]             on.exit(options(oopts), add = TRUE)
[17:59:40.654]         }
[17:59:40.654]         {
[17:59:40.654]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.654]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.654]                 ...future.FUN(...future.X_jj, ...)
[17:59:40.654]             })
[17:59:40.654]         }
[17:59:40.654]     }, args = future.call.arguments)
[17:59:40.654] }
[17:59:40.654] Lazy evaluation: FALSE
[17:59:40.654] Asynchronous evaluation: TRUE
[17:59:40.654] Local evaluation: TRUE
[17:59:40.654] Environment: 0x615ed2514d20
[17:59:40.654] Capture standard output: TRUE
[17:59:40.654] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.654] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:40.654] Packages: <none>
[17:59:40.654] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.654] Resolved: FALSE
[17:59:40.654] Value: <not collected>
[17:59:40.654] Conditions captured: <none>
[17:59:40.654] Early signaling: FALSE
[17:59:40.654] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.654] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:40.667] Chunk #1 of 2 ... DONE
[17:59:40.668] Chunk #2 of 2 ...
[17:59:40.668]  - Finding globals in 'X' for chunk #2 ...
[17:59:40.669]    + additional globals found: [n=0] 
[17:59:40.669]    + additional namespaces needed: [n=0] 
[17:59:40.669]  - Finding globals in 'X' for chunk #2 ... DONE
[17:59:40.669]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:40.670]  - seeds: <none>
[17:59:40.670]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.704] Created future:
[17:59:40.704] MultisessionFuture:
[17:59:40.704] Label: ‘future_lapply-2’
[17:59:40.704] Expression:
[17:59:40.704] {
[17:59:40.704]     do.call(function(...) {
[17:59:40.704]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.704]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.704]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.704]             on.exit(options(oopts), add = TRUE)
[17:59:40.704]         }
[17:59:40.704]         {
[17:59:40.704]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.704]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.704]                 ...future.FUN(...future.X_jj, ...)
[17:59:40.704]             })
[17:59:40.704]         }
[17:59:40.704]     }, args = future.call.arguments)
[17:59:40.704] }
[17:59:40.704] Lazy evaluation: FALSE
[17:59:40.704] Asynchronous evaluation: TRUE
[17:59:40.704] Local evaluation: TRUE
[17:59:40.704] Environment: 0x615ed2514d20
[17:59:40.704] Capture standard output: TRUE
[17:59:40.704] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.704] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:40.704] Packages: <none>
[17:59:40.704] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.704] Resolved: FALSE
[17:59:40.704] Value: <not collected>
[17:59:40.704] Conditions captured: <none>
[17:59:40.704] Early signaling: FALSE
[17:59:40.704] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.704] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:40.719] Chunk #2 of 2 ... DONE
[17:59:40.719] Launching 2 futures (chunks) ... DONE
[17:59:40.719] Resolving 2 futures (chunks) ...
[17:59:40.749]  - Number of value chunks collected: 2
[17:59:40.749] Resolving 2 futures (chunks) ... DONE
[17:59:40.749] Reducing values from 2 chunks ...
[17:59:40.749]  - Number of values collected after concatenation: 2
[17:59:40.750]  - Number of values expected: 2
[17:59:40.750] Reducing values from 2 chunks ... DONE
[17:59:40.750] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[17:59:40.755] future_lapply() ...
[17:59:40.763] Number of chunks: 2
[17:59:40.763] getGlobalsAndPackagesXApply() ...
[17:59:40.763]  - future.globals: TRUE
[17:59:40.767] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[17:59:40.767] future_lapply() ...
[17:59:40.774] Number of chunks: 2
[17:59:40.775] getGlobalsAndPackagesXApply() ...
[17:59:40.775]  - future.globals: TRUE
[17:59:40.780]  - globals found/used: [n=1] ‘FUN’
[17:59:40.780]  - needed namespaces: [n=0] 
[17:59:40.780] Finding globals ... DONE
[17:59:40.781]  - use_args: TRUE
[17:59:40.781]  - Getting '...' globals ...
[17:59:40.781]    - '...' content: [n=0] 
[17:59:40.782] List of 1
[17:59:40.782]  $ ...: list()
[17:59:40.782]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.782]  - attr(*, "where")=List of 1
[17:59:40.782]   ..$ ...:<environment: 0x615ed139e768> 
[17:59:40.782]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.782]  - attr(*, "resolved")= logi TRUE
[17:59:40.782]  - attr(*, "total_size")= num NA
[17:59:40.787]  - Getting '...' globals ... DONE
[17:59:40.787] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:40.787] List of 2
[17:59:40.787]  $ ...future.FUN:function (x)  
[17:59:40.787]  $ ...          : list()
[17:59:40.787]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.787]  - attr(*, "where")=List of 2
[17:59:40.787]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:40.787]   ..$ ...          :<environment: 0x615ed139e768> 
[17:59:40.787]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.787]  - attr(*, "resolved")= logi FALSE
[17:59:40.787]  - attr(*, "total_size")= num 1840
[17:59:40.793] Packages to be attached in all futures: [n=0] 
[17:59:40.793] getGlobalsAndPackagesXApply() ... DONE
[17:59:40.793] Number of futures (= number of chunks): 2
[17:59:40.793] Launching 2 futures (chunks) ...
[17:59:40.794] Chunk #1 of 2 ...
[17:59:40.794]  - Finding globals in 'X' for chunk #1 ...
[17:59:40.794]    + additional globals found: [n=0] 
[17:59:40.795]    + additional namespaces needed: [n=0] 
[17:59:40.795]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:40.795]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:40.795]  - seeds: <none>
[17:59:40.795]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.828] Created future:
[17:59:40.829] MultisessionFuture:
[17:59:40.829] Label: ‘future_lapply-1’
[17:59:40.829] Expression:
[17:59:40.829] {
[17:59:40.829]     do.call(function(...) {
[17:59:40.829]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.829]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.829]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.829]             on.exit(options(oopts), add = TRUE)
[17:59:40.829]         }
[17:59:40.829]         {
[17:59:40.829]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.829]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.829]                 ...future.FUN(...future.X_jj, ...)
[17:59:40.829]             })
[17:59:40.829]         }
[17:59:40.829]     }, args = future.call.arguments)
[17:59:40.829] }
[17:59:40.829] Lazy evaluation: FALSE
[17:59:40.829] Asynchronous evaluation: TRUE
[17:59:40.829] Local evaluation: TRUE
[17:59:40.829] Environment: R_GlobalEnv
[17:59:40.829] Capture standard output: TRUE
[17:59:40.829] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.829] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:40.829] Packages: <none>
[17:59:40.829] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.829] Resolved: FALSE
[17:59:40.829] Value: <not collected>
[17:59:40.829] Conditions captured: <none>
[17:59:40.829] Early signaling: FALSE
[17:59:40.829] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.829] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:40.842] Chunk #1 of 2 ... DONE
[17:59:40.842] Chunk #2 of 2 ...
[17:59:40.842]  - Finding globals in 'X' for chunk #2 ...
[17:59:40.843]    + additional globals found: [n=0] 
[17:59:40.843]    + additional namespaces needed: [n=0] 
[17:59:40.843]  - Finding globals in 'X' for chunk #2 ... DONE
[17:59:40.843]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:59:40.844]  - seeds: <none>
[17:59:40.844]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.873] Created future:
[17:59:40.873] MultisessionFuture:
[17:59:40.873] Label: ‘future_lapply-2’
[17:59:40.873] Expression:
[17:59:40.873] {
[17:59:40.873]     do.call(function(...) {
[17:59:40.873]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.873]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.873]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.873]             on.exit(options(oopts), add = TRUE)
[17:59:40.873]         }
[17:59:40.873]         {
[17:59:40.873]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.873]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.873]                 ...future.FUN(...future.X_jj, ...)
[17:59:40.873]             })
[17:59:40.873]         }
[17:59:40.873]     }, args = future.call.arguments)
[17:59:40.873] }
[17:59:40.873] Lazy evaluation: FALSE
[17:59:40.873] Asynchronous evaluation: TRUE
[17:59:40.873] Local evaluation: TRUE
[17:59:40.873] Environment: R_GlobalEnv
[17:59:40.873] Capture standard output: TRUE
[17:59:40.873] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.873] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:59:40.873] Packages: <none>
[17:59:40.873] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.873] Resolved: FALSE
[17:59:40.873] Value: <not collected>
[17:59:40.873] Conditions captured: <none>
[17:59:40.873] Early signaling: FALSE
[17:59:40.873] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.873] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:40.886] Chunk #2 of 2 ... DONE
[17:59:40.886] Launching 2 futures (chunks) ... DONE
[17:59:40.886] Resolving 2 futures (chunks) ...
[17:59:40.918]  - Number of value chunks collected: 2
[17:59:40.919] Resolving 2 futures (chunks) ... DONE
[17:59:40.919] Reducing values from 2 chunks ...
[17:59:40.919]  - Number of values collected after concatenation: 10
[17:59:40.919]  - Number of values expected: 10
[17:59:40.920] Reducing values from 2 chunks ... DONE
[17:59:40.920] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[17:59:40.939] future_lapply() ...
[17:59:40.947] Number of chunks: 10
[17:59:40.947] getGlobalsAndPackagesXApply() ...
[17:59:40.948]  - future.globals: TRUE
[17:59:40.951]  - globals found/used: [n=1] ‘FUN’
[17:59:40.951]  - needed namespaces: [n=0] 
[17:59:40.951] Finding globals ... DONE
[17:59:40.952]  - use_args: TRUE
[17:59:40.952]  - Getting '...' globals ...
[17:59:40.953]    - '...' content: [n=0] 
[17:59:40.953] List of 1
[17:59:40.953]  $ ...: list()
[17:59:40.953]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.953]  - attr(*, "where")=List of 1
[17:59:40.953]   ..$ ...:<environment: 0x615ecf290678> 
[17:59:40.953]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.953]  - attr(*, "resolved")= logi TRUE
[17:59:40.953]  - attr(*, "total_size")= num NA
[17:59:40.958]  - Getting '...' globals ... DONE
[17:59:40.958] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:40.958] List of 2
[17:59:40.958]  $ ...future.FUN:function (x)  
[17:59:40.958]  $ ...          : list()
[17:59:40.958]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:40.958]  - attr(*, "where")=List of 2
[17:59:40.958]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:40.958]   ..$ ...          :<environment: 0x615ecf290678> 
[17:59:40.958]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:40.958]  - attr(*, "resolved")= logi FALSE
[17:59:40.958]  - attr(*, "total_size")= num 1840
[17:59:40.964] Packages to be attached in all futures: [n=0] 
[17:59:40.964] getGlobalsAndPackagesXApply() ... DONE
[17:59:40.965] Number of futures (= number of chunks): 10
[17:59:40.965] Launching 10 futures (chunks) ...
[17:59:40.965] Chunk #1 of 10 ...
[17:59:40.965]  - Finding globals in 'X' for chunk #1 ...
[17:59:40.966]    + additional globals found: [n=0] 
[17:59:40.966]    + additional namespaces needed: [n=0] 
[17:59:40.966]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:40.967]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:59:40.967]  - seeds: <none>
[17:59:40.967]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:40.998] Created future:
[17:59:40.998] MultisessionFuture:
[17:59:40.998] Label: ‘future_lapply-1’
[17:59:40.998] Expression:
[17:59:40.998] {
[17:59:40.998]     do.call(function(...) {
[17:59:40.998]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:40.998]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:40.998]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:40.998]             on.exit(options(oopts), add = TRUE)
[17:59:40.998]         }
[17:59:40.998]         {
[17:59:40.998]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:40.998]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:40.998]                 ...future.FUN(...future.X_jj, ...)
[17:59:40.998]             })
[17:59:40.998]         }
[17:59:40.998]     }, args = future.call.arguments)
[17:59:40.998] }
[17:59:40.998] Lazy evaluation: FALSE
[17:59:40.998] Asynchronous evaluation: TRUE
[17:59:40.998] Local evaluation: TRUE
[17:59:40.998] Environment: R_GlobalEnv
[17:59:40.998] Capture standard output: TRUE
[17:59:40.998] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:40.998] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:40.998] Packages: <none>
[17:59:40.998] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:40.998] Resolved: FALSE
[17:59:40.998] Value: <not collected>
[17:59:40.998] Conditions captured: <none>
[17:59:40.998] Early signaling: FALSE
[17:59:40.998] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:40.998] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.012] Chunk #1 of 10 ... DONE
[17:59:41.013] Chunk #2 of 10 ...
[17:59:41.013]  - Finding globals in 'X' for chunk #2 ...
[17:59:41.013]    + additional globals found: [n=0] 
[17:59:41.014]    + additional namespaces needed: [n=0] 
[17:59:41.014]  - Finding globals in 'X' for chunk #2 ... DONE
[17:59:41.014]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:59:41.014]  - seeds: <none>
[17:59:41.015]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.049] Created future:
[17:59:41.049] MultisessionFuture:
[17:59:41.049] Label: ‘future_lapply-2’
[17:59:41.049] Expression:
[17:59:41.049] {
[17:59:41.049]     do.call(function(...) {
[17:59:41.049]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.049]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.049]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.049]             on.exit(options(oopts), add = TRUE)
[17:59:41.049]         }
[17:59:41.049]         {
[17:59:41.049]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.049]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.049]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.049]             })
[17:59:41.049]         }
[17:59:41.049]     }, args = future.call.arguments)
[17:59:41.049] }
[17:59:41.049] Lazy evaluation: FALSE
[17:59:41.049] Asynchronous evaluation: TRUE
[17:59:41.049] Local evaluation: TRUE
[17:59:41.049] Environment: R_GlobalEnv
[17:59:41.049] Capture standard output: TRUE
[17:59:41.049] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.049] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.049] Packages: <none>
[17:59:41.049] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.049] Resolved: FALSE
[17:59:41.049] Value: <not collected>
[17:59:41.049] Conditions captured: <none>
[17:59:41.049] Early signaling: FALSE
[17:59:41.049] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.049] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.062] Chunk #2 of 10 ... DONE
[17:59:41.062] Chunk #3 of 10 ...
[17:59:41.062]  - Finding globals in 'X' for chunk #3 ...
[17:59:41.063]    + additional globals found: [n=0] 
[17:59:41.063]    + additional namespaces needed: [n=0] 
[17:59:41.063]  - Finding globals in 'X' for chunk #3 ... DONE
[17:59:41.064]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:59:41.064]  - seeds: <none>
[17:59:41.064]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.106] Created future:
[17:59:41.106] MultisessionFuture:
[17:59:41.106] Label: ‘future_lapply-3’
[17:59:41.106] Expression:
[17:59:41.106] {
[17:59:41.106]     do.call(function(...) {
[17:59:41.106]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.106]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.106]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.106]             on.exit(options(oopts), add = TRUE)
[17:59:41.106]         }
[17:59:41.106]         {
[17:59:41.106]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.106]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.106]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.106]             })
[17:59:41.106]         }
[17:59:41.106]     }, args = future.call.arguments)
[17:59:41.106] }
[17:59:41.106] Lazy evaluation: FALSE
[17:59:41.106] Asynchronous evaluation: TRUE
[17:59:41.106] Local evaluation: TRUE
[17:59:41.106] Environment: R_GlobalEnv
[17:59:41.106] Capture standard output: TRUE
[17:59:41.106] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.106] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.106] Packages: <none>
[17:59:41.106] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.106] Resolved: FALSE
[17:59:41.106] Value: <not collected>
[17:59:41.106] Conditions captured: <none>
[17:59:41.106] Early signaling: FALSE
[17:59:41.106] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.106] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.119] Chunk #3 of 10 ... DONE
[17:59:41.120] Chunk #4 of 10 ...
[17:59:41.120]  - Finding globals in 'X' for chunk #4 ...
[17:59:41.121]    + additional globals found: [n=0] 
[17:59:41.121]    + additional namespaces needed: [n=0] 
[17:59:41.121]  - Finding globals in 'X' for chunk #4 ... DONE
[17:59:41.121]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:59:41.122]  - seeds: <none>
[17:59:41.122]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.183] Created future:
[17:59:41.183] MultisessionFuture:
[17:59:41.183] Label: ‘future_lapply-4’
[17:59:41.183] Expression:
[17:59:41.183] {
[17:59:41.183]     do.call(function(...) {
[17:59:41.183]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.183]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.183]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.183]             on.exit(options(oopts), add = TRUE)
[17:59:41.183]         }
[17:59:41.183]         {
[17:59:41.183]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.183]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.183]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.183]             })
[17:59:41.183]         }
[17:59:41.183]     }, args = future.call.arguments)
[17:59:41.183] }
[17:59:41.183] Lazy evaluation: FALSE
[17:59:41.183] Asynchronous evaluation: TRUE
[17:59:41.183] Local evaluation: TRUE
[17:59:41.183] Environment: R_GlobalEnv
[17:59:41.183] Capture standard output: TRUE
[17:59:41.183] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.183] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.183] Packages: <none>
[17:59:41.183] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.183] Resolved: FALSE
[17:59:41.183] Value: <not collected>
[17:59:41.183] Conditions captured: <none>
[17:59:41.183] Early signaling: FALSE
[17:59:41.183] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.183] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.197] Chunk #4 of 10 ... DONE
[17:59:41.197] Chunk #5 of 10 ...
[17:59:41.197]  - Finding globals in 'X' for chunk #5 ...
[17:59:41.198]    + additional globals found: [n=0] 
[17:59:41.198]    + additional namespaces needed: [n=0] 
[17:59:41.199]  - Finding globals in 'X' for chunk #5 ... DONE
[17:59:41.199]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:59:41.199]  - seeds: <none>
[17:59:41.200]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.244] Created future:
[17:59:41.245] MultisessionFuture:
[17:59:41.245] Label: ‘future_lapply-5’
[17:59:41.245] Expression:
[17:59:41.245] {
[17:59:41.245]     do.call(function(...) {
[17:59:41.245]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.245]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.245]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.245]             on.exit(options(oopts), add = TRUE)
[17:59:41.245]         }
[17:59:41.245]         {
[17:59:41.245]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.245]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.245]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.245]             })
[17:59:41.245]         }
[17:59:41.245]     }, args = future.call.arguments)
[17:59:41.245] }
[17:59:41.245] Lazy evaluation: FALSE
[17:59:41.245] Asynchronous evaluation: TRUE
[17:59:41.245] Local evaluation: TRUE
[17:59:41.245] Environment: R_GlobalEnv
[17:59:41.245] Capture standard output: TRUE
[17:59:41.245] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.245] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.245] Packages: <none>
[17:59:41.245] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.245] Resolved: FALSE
[17:59:41.245] Value: <not collected>
[17:59:41.245] Conditions captured: <none>
[17:59:41.245] Early signaling: FALSE
[17:59:41.245] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.245] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.259] Chunk #5 of 10 ... DONE
[17:59:41.259] Chunk #6 of 10 ...
[17:59:41.259]  - Finding globals in 'X' for chunk #6 ...
[17:59:41.260]    + additional globals found: [n=0] 
[17:59:41.260]    + additional namespaces needed: [n=0] 
[17:59:41.260]  - Finding globals in 'X' for chunk #6 ... DONE
[17:59:41.260]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:59:41.261]  - seeds: <none>
[17:59:41.261]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.303] Created future:
[17:59:41.304] MultisessionFuture:
[17:59:41.304] Label: ‘future_lapply-6’
[17:59:41.304] Expression:
[17:59:41.304] {
[17:59:41.304]     do.call(function(...) {
[17:59:41.304]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.304]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.304]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.304]             on.exit(options(oopts), add = TRUE)
[17:59:41.304]         }
[17:59:41.304]         {
[17:59:41.304]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.304]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.304]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.304]             })
[17:59:41.304]         }
[17:59:41.304]     }, args = future.call.arguments)
[17:59:41.304] }
[17:59:41.304] Lazy evaluation: FALSE
[17:59:41.304] Asynchronous evaluation: TRUE
[17:59:41.304] Local evaluation: TRUE
[17:59:41.304] Environment: R_GlobalEnv
[17:59:41.304] Capture standard output: TRUE
[17:59:41.304] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.304] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.304] Packages: <none>
[17:59:41.304] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.304] Resolved: FALSE
[17:59:41.304] Value: <not collected>
[17:59:41.304] Conditions captured: <none>
[17:59:41.304] Early signaling: FALSE
[17:59:41.304] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.304] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.317] Chunk #6 of 10 ... DONE
[17:59:41.317] Chunk #7 of 10 ...
[17:59:41.317]  - Finding globals in 'X' for chunk #7 ...
[17:59:41.318]    + additional globals found: [n=0] 
[17:59:41.318]    + additional namespaces needed: [n=0] 
[17:59:41.318]  - Finding globals in 'X' for chunk #7 ... DONE
[17:59:41.319]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:59:41.319]  - seeds: <none>
[17:59:41.319]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.371] Created future:
[17:59:41.371] MultisessionFuture:
[17:59:41.371] Label: ‘future_lapply-7’
[17:59:41.371] Expression:
[17:59:41.371] {
[17:59:41.371]     do.call(function(...) {
[17:59:41.371]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.371]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.371]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.371]             on.exit(options(oopts), add = TRUE)
[17:59:41.371]         }
[17:59:41.371]         {
[17:59:41.371]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.371]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.371]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.371]             })
[17:59:41.371]         }
[17:59:41.371]     }, args = future.call.arguments)
[17:59:41.371] }
[17:59:41.371] Lazy evaluation: FALSE
[17:59:41.371] Asynchronous evaluation: TRUE
[17:59:41.371] Local evaluation: TRUE
[17:59:41.371] Environment: R_GlobalEnv
[17:59:41.371] Capture standard output: TRUE
[17:59:41.371] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.371] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.371] Packages: <none>
[17:59:41.371] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.371] Resolved: FALSE
[17:59:41.371] Value: <not collected>
[17:59:41.371] Conditions captured: <none>
[17:59:41.371] Early signaling: FALSE
[17:59:41.371] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.371] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.385] Chunk #7 of 10 ... DONE
[17:59:41.385] Chunk #8 of 10 ...
[17:59:41.386]  - Finding globals in 'X' for chunk #8 ...
[17:59:41.386]    + additional globals found: [n=0] 
[17:59:41.387]    + additional namespaces needed: [n=0] 
[17:59:41.387]  - Finding globals in 'X' for chunk #8 ... DONE
[17:59:41.387]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:59:41.387]  - seeds: <none>
[17:59:41.388]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.429] Created future:
[17:59:41.430] MultisessionFuture:
[17:59:41.430] Label: ‘future_lapply-8’
[17:59:41.430] Expression:
[17:59:41.430] {
[17:59:41.430]     do.call(function(...) {
[17:59:41.430]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.430]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.430]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.430]             on.exit(options(oopts), add = TRUE)
[17:59:41.430]         }
[17:59:41.430]         {
[17:59:41.430]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.430]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.430]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.430]             })
[17:59:41.430]         }
[17:59:41.430]     }, args = future.call.arguments)
[17:59:41.430] }
[17:59:41.430] Lazy evaluation: FALSE
[17:59:41.430] Asynchronous evaluation: TRUE
[17:59:41.430] Local evaluation: TRUE
[17:59:41.430] Environment: R_GlobalEnv
[17:59:41.430] Capture standard output: TRUE
[17:59:41.430] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.430] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.430] Packages: <none>
[17:59:41.430] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.430] Resolved: FALSE
[17:59:41.430] Value: <not collected>
[17:59:41.430] Conditions captured: <none>
[17:59:41.430] Early signaling: FALSE
[17:59:41.430] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.430] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.443] Chunk #8 of 10 ... DONE
[17:59:41.443] Chunk #9 of 10 ...
[17:59:41.443]  - Finding globals in 'X' for chunk #9 ...
[17:59:41.444]    + additional globals found: [n=0] 
[17:59:41.444]    + additional namespaces needed: [n=0] 
[17:59:41.445]  - Finding globals in 'X' for chunk #9 ... DONE
[17:59:41.445]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:59:41.445]  - seeds: <none>
[17:59:41.445]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.492] Created future:
[17:59:41.492] MultisessionFuture:
[17:59:41.492] Label: ‘future_lapply-9’
[17:59:41.492] Expression:
[17:59:41.492] {
[17:59:41.492]     do.call(function(...) {
[17:59:41.492]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.492]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.492]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.492]             on.exit(options(oopts), add = TRUE)
[17:59:41.492]         }
[17:59:41.492]         {
[17:59:41.492]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.492]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.492]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.492]             })
[17:59:41.492]         }
[17:59:41.492]     }, args = future.call.arguments)
[17:59:41.492] }
[17:59:41.492] Lazy evaluation: FALSE
[17:59:41.492] Asynchronous evaluation: TRUE
[17:59:41.492] Local evaluation: TRUE
[17:59:41.492] Environment: R_GlobalEnv
[17:59:41.492] Capture standard output: TRUE
[17:59:41.492] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.492] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.492] Packages: <none>
[17:59:41.492] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.492] Resolved: FALSE
[17:59:41.492] Value: <not collected>
[17:59:41.492] Conditions captured: <none>
[17:59:41.492] Early signaling: FALSE
[17:59:41.492] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.492] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.506] Chunk #9 of 10 ... DONE
[17:59:41.506] Chunk #10 of 10 ...
[17:59:41.507]  - Finding globals in 'X' for chunk #10 ...
[17:59:41.508]    + additional globals found: [n=0] 
[17:59:41.508]    + additional namespaces needed: [n=0] 
[17:59:41.508]  - Finding globals in 'X' for chunk #10 ... DONE
[17:59:41.509]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:59:41.509]  - seeds: <none>
[17:59:41.509]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.552] Created future:
[17:59:41.552] MultisessionFuture:
[17:59:41.552] Label: ‘future_lapply-10’
[17:59:41.552] Expression:
[17:59:41.552] {
[17:59:41.552]     do.call(function(...) {
[17:59:41.552]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.552]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.552]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.552]             on.exit(options(oopts), add = TRUE)
[17:59:41.552]         }
[17:59:41.552]         {
[17:59:41.552]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.552]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.552]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.552]             })
[17:59:41.552]         }
[17:59:41.552]     }, args = future.call.arguments)
[17:59:41.552] }
[17:59:41.552] Lazy evaluation: FALSE
[17:59:41.552] Asynchronous evaluation: TRUE
[17:59:41.552] Local evaluation: TRUE
[17:59:41.552] Environment: R_GlobalEnv
[17:59:41.552] Capture standard output: TRUE
[17:59:41.552] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.552] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.552] Packages: <none>
[17:59:41.552] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.552] Resolved: FALSE
[17:59:41.552] Value: <not collected>
[17:59:41.552] Conditions captured: <none>
[17:59:41.552] Early signaling: FALSE
[17:59:41.552] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.552] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.565] Chunk #10 of 10 ... DONE
[17:59:41.565] Launching 10 futures (chunks) ... DONE
[17:59:41.565] Resolving 10 futures (chunks) ...
[17:59:41.598]  - Number of value chunks collected: 10
[17:59:41.599] Resolving 10 futures (chunks) ... DONE
[17:59:41.599] Reducing values from 10 chunks ...
[17:59:41.599]  - Number of values collected after concatenation: 10
[17:59:41.599]  - Number of values expected: 10
[17:59:41.600] Reducing values from 10 chunks ... DONE
[17:59:41.600] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:59:41.611] future_lapply() ...
[17:59:41.619] Number of chunks: 5
[17:59:41.620] getGlobalsAndPackagesXApply() ...
[17:59:41.620]  - future.globals: TRUE
[17:59:41.624]  - globals found/used: [n=1] ‘FUN’
[17:59:41.624]  - needed namespaces: [n=0] 
[17:59:41.624] Finding globals ... DONE
[17:59:41.624]  - use_args: TRUE
[17:59:41.625]  - Getting '...' globals ...
[17:59:41.625]    - '...' content: [n=0] 
[17:59:41.625] List of 1
[17:59:41.625]  $ ...: list()
[17:59:41.625]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:41.625]  - attr(*, "where")=List of 1
[17:59:41.625]   ..$ ...:<environment: 0x615ed1321388> 
[17:59:41.625]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:41.625]  - attr(*, "resolved")= logi TRUE
[17:59:41.625]  - attr(*, "total_size")= num NA
[17:59:41.631]  - Getting '...' globals ... DONE
[17:59:41.631] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:41.631] List of 2
[17:59:41.631]  $ ...future.FUN:function (x)  
[17:59:41.631]  $ ...          : list()
[17:59:41.631]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:41.631]  - attr(*, "where")=List of 2
[17:59:41.631]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:41.631]   ..$ ...          :<environment: 0x615ed1321388> 
[17:59:41.631]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:41.631]  - attr(*, "resolved")= logi FALSE
[17:59:41.631]  - attr(*, "total_size")= num 1840
[17:59:41.637] Packages to be attached in all futures: [n=0] 
[17:59:41.637] getGlobalsAndPackagesXApply() ... DONE
[17:59:41.638] Number of futures (= number of chunks): 5
[17:59:41.638] Launching 5 futures (chunks) ...
[17:59:41.638] Chunk #1 of 5 ...
[17:59:41.638]  - Finding globals in 'X' for chunk #1 ...
[17:59:41.639]    + additional globals found: [n=0] 
[17:59:41.639]    + additional namespaces needed: [n=0] 
[17:59:41.639]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:41.640]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:59:41.640]  - seeds: <none>
[17:59:41.640]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.674] Created future:
[17:59:41.674] MultisessionFuture:
[17:59:41.674] Label: ‘future_lapply-1’
[17:59:41.674] Expression:
[17:59:41.674] {
[17:59:41.674]     do.call(function(...) {
[17:59:41.674]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.674]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.674]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.674]             on.exit(options(oopts), add = TRUE)
[17:59:41.674]         }
[17:59:41.674]         {
[17:59:41.674]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.674]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.674]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.674]             })
[17:59:41.674]         }
[17:59:41.674]     }, args = future.call.arguments)
[17:59:41.674] }
[17:59:41.674] Lazy evaluation: FALSE
[17:59:41.674] Asynchronous evaluation: TRUE
[17:59:41.674] Local evaluation: TRUE
[17:59:41.674] Environment: R_GlobalEnv
[17:59:41.674] Capture standard output: TRUE
[17:59:41.674] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.674] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.674] Packages: <none>
[17:59:41.674] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.674] Resolved: FALSE
[17:59:41.674] Value: <not collected>
[17:59:41.674] Conditions captured: <none>
[17:59:41.674] Early signaling: FALSE
[17:59:41.674] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.674] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.687] Chunk #1 of 5 ... DONE
[17:59:41.687] Chunk #2 of 5 ...
[17:59:41.687]  - Finding globals in 'X' for chunk #2 ...
[17:59:41.688]    + additional globals found: [n=0] 
[17:59:41.688]    + additional namespaces needed: [n=0] 
[17:59:41.689]  - Finding globals in 'X' for chunk #2 ... DONE
[17:59:41.689]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:59:41.689]  - seeds: <none>
[17:59:41.689]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.719] Created future:
[17:59:41.719] MultisessionFuture:
[17:59:41.719] Label: ‘future_lapply-2’
[17:59:41.719] Expression:
[17:59:41.719] {
[17:59:41.719]     do.call(function(...) {
[17:59:41.719]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.719]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.719]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.719]             on.exit(options(oopts), add = TRUE)
[17:59:41.719]         }
[17:59:41.719]         {
[17:59:41.719]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.719]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.719]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.719]             })
[17:59:41.719]         }
[17:59:41.719]     }, args = future.call.arguments)
[17:59:41.719] }
[17:59:41.719] Lazy evaluation: FALSE
[17:59:41.719] Asynchronous evaluation: TRUE
[17:59:41.719] Local evaluation: TRUE
[17:59:41.719] Environment: R_GlobalEnv
[17:59:41.719] Capture standard output: TRUE
[17:59:41.719] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.719] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.719] Packages: <none>
[17:59:41.719] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.719] Resolved: FALSE
[17:59:41.719] Value: <not collected>
[17:59:41.719] Conditions captured: <none>
[17:59:41.719] Early signaling: FALSE
[17:59:41.719] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.719] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.732] Chunk #2 of 5 ... DONE
[17:59:41.732] Chunk #3 of 5 ...
[17:59:41.733]  - Finding globals in 'X' for chunk #3 ...
[17:59:41.733]    + additional globals found: [n=0] 
[17:59:41.734]    + additional namespaces needed: [n=0] 
[17:59:41.734]  - Finding globals in 'X' for chunk #3 ... DONE
[17:59:41.734]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:59:41.735]  - seeds: <none>
[17:59:41.735]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.777] Created future:
[17:59:41.777] MultisessionFuture:
[17:59:41.777] Label: ‘future_lapply-3’
[17:59:41.777] Expression:
[17:59:41.777] {
[17:59:41.777]     do.call(function(...) {
[17:59:41.777]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.777]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.777]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.777]             on.exit(options(oopts), add = TRUE)
[17:59:41.777]         }
[17:59:41.777]         {
[17:59:41.777]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.777]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.777]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.777]             })
[17:59:41.777]         }
[17:59:41.777]     }, args = future.call.arguments)
[17:59:41.777] }
[17:59:41.777] Lazy evaluation: FALSE
[17:59:41.777] Asynchronous evaluation: TRUE
[17:59:41.777] Local evaluation: TRUE
[17:59:41.777] Environment: R_GlobalEnv
[17:59:41.777] Capture standard output: TRUE
[17:59:41.777] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.777] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.777] Packages: <none>
[17:59:41.777] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.777] Resolved: FALSE
[17:59:41.777] Value: <not collected>
[17:59:41.777] Conditions captured: <none>
[17:59:41.777] Early signaling: FALSE
[17:59:41.777] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.777] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.790] Chunk #3 of 5 ... DONE
[17:59:41.791] Chunk #4 of 5 ...
[17:59:41.791]  - Finding globals in 'X' for chunk #4 ...
[17:59:41.792]    + additional globals found: [n=0] 
[17:59:41.792]    + additional namespaces needed: [n=0] 
[17:59:41.792]  - Finding globals in 'X' for chunk #4 ... DONE
[17:59:41.792]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:59:41.793]  - seeds: <none>
[17:59:41.793]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.836] Created future:
[17:59:41.837] MultisessionFuture:
[17:59:41.837] Label: ‘future_lapply-4’
[17:59:41.837] Expression:
[17:59:41.837] {
[17:59:41.837]     do.call(function(...) {
[17:59:41.837]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.837]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.837]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.837]             on.exit(options(oopts), add = TRUE)
[17:59:41.837]         }
[17:59:41.837]         {
[17:59:41.837]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.837]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.837]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.837]             })
[17:59:41.837]         }
[17:59:41.837]     }, args = future.call.arguments)
[17:59:41.837] }
[17:59:41.837] Lazy evaluation: FALSE
[17:59:41.837] Asynchronous evaluation: TRUE
[17:59:41.837] Local evaluation: TRUE
[17:59:41.837] Environment: R_GlobalEnv
[17:59:41.837] Capture standard output: TRUE
[17:59:41.837] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.837] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.837] Packages: <none>
[17:59:41.837] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.837] Resolved: FALSE
[17:59:41.837] Value: <not collected>
[17:59:41.837] Conditions captured: <none>
[17:59:41.837] Early signaling: FALSE
[17:59:41.837] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.837] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.850] Chunk #4 of 5 ... DONE
[17:59:41.850] Chunk #5 of 5 ...
[17:59:41.851]  - Finding globals in 'X' for chunk #5 ...
[17:59:41.851]    + additional globals found: [n=0] 
[17:59:41.852]    + additional namespaces needed: [n=0] 
[17:59:41.852]  - Finding globals in 'X' for chunk #5 ... DONE
[17:59:41.852]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:59:41.852]  - seeds: <none>
[17:59:41.853]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:41.896] Created future:
[17:59:41.896] MultisessionFuture:
[17:59:41.896] Label: ‘future_lapply-5’
[17:59:41.896] Expression:
[17:59:41.896] {
[17:59:41.896]     do.call(function(...) {
[17:59:41.896]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:41.896]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:41.896]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:41.896]             on.exit(options(oopts), add = TRUE)
[17:59:41.896]         }
[17:59:41.896]         {
[17:59:41.896]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:41.896]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:41.896]                 ...future.FUN(...future.X_jj, ...)
[17:59:41.896]             })
[17:59:41.896]         }
[17:59:41.896]     }, args = future.call.arguments)
[17:59:41.896] }
[17:59:41.896] Lazy evaluation: FALSE
[17:59:41.896] Asynchronous evaluation: TRUE
[17:59:41.896] Local evaluation: TRUE
[17:59:41.896] Environment: R_GlobalEnv
[17:59:41.896] Capture standard output: TRUE
[17:59:41.896] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:41.896] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:41.896] Packages: <none>
[17:59:41.896] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:41.896] Resolved: FALSE
[17:59:41.896] Value: <not collected>
[17:59:41.896] Conditions captured: <none>
[17:59:41.896] Early signaling: FALSE
[17:59:41.896] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:41.896] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:41.910] Chunk #5 of 5 ... DONE
[17:59:41.910] Launching 5 futures (chunks) ... DONE
[17:59:41.910] Resolving 5 futures (chunks) ...
[17:59:41.943]  - Number of value chunks collected: 5
[17:59:41.943] Resolving 5 futures (chunks) ... DONE
[17:59:41.943] Reducing values from 5 chunks ...
[17:59:41.944]  - Number of values collected after concatenation: 10
[17:59:41.944]  - Number of values expected: 10
[17:59:41.944] Reducing values from 5 chunks ... DONE
[17:59:41.944] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:59:41.955] future_lapply() ...
[17:59:41.964] Number of chunks: 2
[17:59:41.964] getGlobalsAndPackagesXApply() ...
[17:59:41.964]  - future.globals: TRUE
[17:59:41.968]  - globals found/used: [n=1] ‘FUN’
[17:59:41.968]  - needed namespaces: [n=0] 
[17:59:41.971] Finding globals ... DONE
[17:59:41.972]  - use_args: TRUE
[17:59:41.972]  - Getting '...' globals ...
[17:59:41.973]    - '...' content: [n=0] 
[17:59:41.973] List of 1
[17:59:41.973]  $ ...: list()
[17:59:41.973]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:41.973]  - attr(*, "where")=List of 1
[17:59:41.973]   ..$ ...:<environment: 0x615ed2db0138> 
[17:59:41.973]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:41.973]  - attr(*, "resolved")= logi TRUE
[17:59:41.973]  - attr(*, "total_size")= num NA
[17:59:41.978]  - Getting '...' globals ... DONE
[17:59:41.979] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:41.979] List of 2
[17:59:41.979]  $ ...future.FUN:function (x)  
[17:59:41.979]  $ ...          : list()
[17:59:41.979]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:41.979]  - attr(*, "where")=List of 2
[17:59:41.979]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:41.979]   ..$ ...          :<environment: 0x615ed2db0138> 
[17:59:41.979]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:41.979]  - attr(*, "resolved")= logi FALSE
[17:59:41.979]  - attr(*, "total_size")= num 1840
[17:59:41.985] Packages to be attached in all futures: [n=0] 
[17:59:41.985] getGlobalsAndPackagesXApply() ... DONE
[17:59:41.985] Number of futures (= number of chunks): 2
[17:59:41.986] Launching 2 futures (chunks) ...
[17:59:41.986] Chunk #1 of 2 ...
[17:59:41.986]  - Finding globals in 'X' for chunk #1 ...
[17:59:41.987]    + additional globals found: [n=0] 
[17:59:41.987]    + additional namespaces needed: [n=0] 
[17:59:41.987]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:41.988]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:59:41.988]  - seeds: <none>
[17:59:41.988]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:42.018] Created future:
[17:59:42.019] MultisessionFuture:
[17:59:42.019] Label: ‘future_lapply-1’
[17:59:42.019] Expression:
[17:59:42.019] {
[17:59:42.019]     do.call(function(...) {
[17:59:42.019]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:42.019]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:42.019]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:42.019]             on.exit(options(oopts), add = TRUE)
[17:59:42.019]         }
[17:59:42.019]         {
[17:59:42.019]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:42.019]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:42.019]                 ...future.FUN(...future.X_jj, ...)
[17:59:42.019]             })
[17:59:42.019]         }
[17:59:42.019]     }, args = future.call.arguments)
[17:59:42.019] }
[17:59:42.019] Lazy evaluation: FALSE
[17:59:42.019] Asynchronous evaluation: TRUE
[17:59:42.019] Local evaluation: TRUE
[17:59:42.019] Environment: R_GlobalEnv
[17:59:42.019] Capture standard output: TRUE
[17:59:42.019] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:42.019] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:42.019] Packages: <none>
[17:59:42.019] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:42.019] Resolved: FALSE
[17:59:42.019] Value: <not collected>
[17:59:42.019] Conditions captured: <none>
[17:59:42.019] Early signaling: FALSE
[17:59:42.019] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:42.019] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:42.032] Chunk #1 of 2 ... DONE
[17:59:42.032] Chunk #2 of 2 ...
[17:59:42.033]  - Finding globals in 'X' for chunk #2 ...
[17:59:42.033]    + additional globals found: [n=0] 
[17:59:42.034]    + additional namespaces needed: [n=0] 
[17:59:42.034]  - Finding globals in 'X' for chunk #2 ... DONE
[17:59:42.034]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:59:42.034]  - seeds: <none>
[17:59:42.035]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:42.064] Created future:
[17:59:42.065] MultisessionFuture:
[17:59:42.065] Label: ‘future_lapply-2’
[17:59:42.065] Expression:
[17:59:42.065] {
[17:59:42.065]     do.call(function(...) {
[17:59:42.065]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:42.065]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:42.065]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:42.065]             on.exit(options(oopts), add = TRUE)
[17:59:42.065]         }
[17:59:42.065]         {
[17:59:42.065]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:42.065]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:42.065]                 ...future.FUN(...future.X_jj, ...)
[17:59:42.065]             })
[17:59:42.065]         }
[17:59:42.065]     }, args = future.call.arguments)
[17:59:42.065] }
[17:59:42.065] Lazy evaluation: FALSE
[17:59:42.065] Asynchronous evaluation: TRUE
[17:59:42.065] Local evaluation: TRUE
[17:59:42.065] Environment: R_GlobalEnv
[17:59:42.065] Capture standard output: TRUE
[17:59:42.065] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:42.065] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:42.065] Packages: <none>
[17:59:42.065] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:42.065] Resolved: FALSE
[17:59:42.065] Value: <not collected>
[17:59:42.065] Conditions captured: <none>
[17:59:42.065] Early signaling: FALSE
[17:59:42.065] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:42.065] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:42.078] Chunk #2 of 2 ... DONE
[17:59:42.078] Launching 2 futures (chunks) ... DONE
[17:59:42.078] Resolving 2 futures (chunks) ...
[17:59:42.110]  - Number of value chunks collected: 2
[17:59:42.110] Resolving 2 futures (chunks) ... DONE
[17:59:42.110] Reducing values from 2 chunks ...
[17:59:42.110]  - Number of values collected after concatenation: 10
[17:59:42.111]  - Number of values expected: 10
[17:59:42.111] Reducing values from 2 chunks ... DONE
[17:59:42.111] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:59:42.119] future_lapply() ...
[17:59:42.126] Number of chunks: 1
[17:59:42.127] getGlobalsAndPackagesXApply() ...
[17:59:42.127]  - future.globals: TRUE
[17:59:42.130]  - globals found/used: [n=1] ‘FUN’
[17:59:42.131]  - needed namespaces: [n=0] 
[17:59:42.131] Finding globals ... DONE
[17:59:42.131]  - use_args: TRUE
[17:59:42.131]  - Getting '...' globals ...
[17:59:42.132]    - '...' content: [n=0] 
[17:59:42.132] List of 1
[17:59:42.132]  $ ...: list()
[17:59:42.132]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:42.132]  - attr(*, "where")=List of 1
[17:59:42.132]   ..$ ...:<environment: 0x615ed2df4d90> 
[17:59:42.132]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:42.132]  - attr(*, "resolved")= logi TRUE
[17:59:42.132]  - attr(*, "total_size")= num NA
[17:59:42.137]  - Getting '...' globals ... DONE
[17:59:42.138] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:42.138] List of 2
[17:59:42.138]  $ ...future.FUN:function (x)  
[17:59:42.138]  $ ...          : list()
[17:59:42.138]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:42.138]  - attr(*, "where")=List of 2
[17:59:42.138]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:42.138]   ..$ ...          :<environment: 0x615ed2df4d90> 
[17:59:42.138]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:42.138]  - attr(*, "resolved")= logi FALSE
[17:59:42.138]  - attr(*, "total_size")= num 1840
[17:59:42.143] Packages to be attached in all futures: [n=0] 
[17:59:42.144] getGlobalsAndPackagesXApply() ... DONE
[17:59:42.144] Number of futures (= number of chunks): 1
[17:59:42.144] Launching 1 futures (chunks) ...
[17:59:42.144] Chunk #1 of 1 ...
[17:59:42.145]  - Finding globals in 'X' for chunk #1 ...
[17:59:42.145]    + additional globals found: [n=0] 
[17:59:42.146]    + additional namespaces needed: [n=0] 
[17:59:42.146]  - Finding globals in 'X' for chunk #1 ... DONE
[17:59:42.146]  - seeds: <none>
[17:59:42.146]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:59:42.178] Created future:
[17:59:42.178] MultisessionFuture:
[17:59:42.178] Label: ‘future_lapply-1’
[17:59:42.178] Expression:
[17:59:42.178] {
[17:59:42.178]     do.call(function(...) {
[17:59:42.178]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:59:42.178]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:59:42.178]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:59:42.178]             on.exit(options(oopts), add = TRUE)
[17:59:42.178]         }
[17:59:42.178]         {
[17:59:42.178]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:59:42.178]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:59:42.178]                 ...future.FUN(...future.X_jj, ...)
[17:59:42.178]             })
[17:59:42.178]         }
[17:59:42.178]     }, args = future.call.arguments)
[17:59:42.178] }
[17:59:42.178] Lazy evaluation: FALSE
[17:59:42.178] Asynchronous evaluation: TRUE
[17:59:42.178] Local evaluation: TRUE
[17:59:42.178] Environment: R_GlobalEnv
[17:59:42.178] Capture standard output: TRUE
[17:59:42.178] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:59:42.178] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:59:42.178] Packages: <none>
[17:59:42.178] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:59:42.178] Resolved: FALSE
[17:59:42.178] Value: <not collected>
[17:59:42.178] Conditions captured: <none>
[17:59:42.178] Early signaling: FALSE
[17:59:42.178] Owner process: f9256a9f-06b8-5e07-f89a-a41c488eac74
[17:59:42.178] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:59:42.191] Chunk #1 of 1 ... DONE
[17:59:42.191] Launching 1 futures (chunks) ... DONE
[17:59:42.192] Resolving 1 futures (chunks) ...
[17:59:42.223]  - Number of value chunks collected: 1
[17:59:42.223] Resolving 1 futures (chunks) ... DONE
[17:59:42.223] Reducing values from 1 chunks ...
[17:59:42.224]  - Number of values collected after concatenation: 10
[17:59:42.224]  - Number of values expected: 10
[17:59:42.224] Reducing values from 1 chunks ... DONE
[17:59:42.224] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[17:59:42.234] future_lapply() ...
[17:59:42.241] Number of chunks: 1
[17:59:42.241] getGlobalsAndPackagesXApply() ...
[17:59:42.242] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[17:59:42.242] future_lapply() ...
[17:59:42.249] Number of chunks: 1
[17:59:42.249] getGlobalsAndPackagesXApply() ...
[17:59:42.249]  - future.globals: <name-value list> with names ‘1’
[17:59:42.250] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[17:59:42.250] future_lapply() ...
[17:59:42.256] Number of chunks: 1
[17:59:42.257] getGlobalsAndPackagesXApply() ...
[17:59:42.257]  - future.globals: ‘...future.FUN’
[17:59:42.258]  - use_args: TRUE
[17:59:42.258] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[17:59:42.258] future_lapply() ...
[17:59:42.265] Number of chunks: 1
[17:59:42.265] getGlobalsAndPackagesXApply() ...
[17:59:42.265]  - future.globals: ‘...future.FUN’
[17:59:42.266]  - use_args: TRUE
[17:59:42.266] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[17:59:42.267] future_lapply() ...
[17:59:42.273] Number of chunks: 1
[17:59:42.273] getGlobalsAndPackagesXApply() ...
[17:59:42.273]  - future.globals: TRUE
[17:59:42.276]  - globals found/used: [n=1] ‘FUN’
[17:59:42.277]  - needed namespaces: [n=0] 
[17:59:42.277] Finding globals ... DONE
[17:59:42.277]  - use_args: TRUE
[17:59:42.277]  - Getting '...' globals ...
[17:59:42.278]    - '...' content: [n=0] 
[17:59:42.278] List of 1
[17:59:42.278]  $ ...: list()
[17:59:42.278]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:42.278]  - attr(*, "where")=List of 1
[17:59:42.278]   ..$ ...:<environment: 0x615ed0f82f18> 
[17:59:42.278]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:42.278]  - attr(*, "resolved")= logi TRUE
[17:59:42.278]  - attr(*, "total_size")= num NA
[17:59:42.284]  - Getting '...' globals ... DONE
[17:59:42.284] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:59:42.285] List of 2
[17:59:42.285]  $ ...future.FUN:function (f)  
[17:59:42.285]  $ ...          : list()
[17:59:42.285]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:59:42.285]  - attr(*, "where")=List of 2
[17:59:42.285]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:59:42.285]   ..$ ...          :<environment: 0x615ed0f82f18> 
[17:59:42.285]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:59:42.285]  - attr(*, "resolved")= logi FALSE
[17:59:42.285]  - attr(*, "total_size")= num 336
[17:59:42.291] Packages to be attached in all futures: [n=0] 
[17:59:42.291] getGlobalsAndPackagesXApply() ... DONE
[17:59:42.291] Number of futures (= number of chunks): 1
[17:59:42.292] Launching 1 futures (chunks) ...
[17:59:42.292] Chunk #1 of 1 ...
[17:59:42.292]  - Finding globals in 'X' for chunk #1 ...
[17:59:42.295]    + additional globals found: [n=1] ‘...future.elements_ii’
[17:59:42.295]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
