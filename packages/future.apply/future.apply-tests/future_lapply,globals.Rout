
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[17:43:57.861] plan(): Setting new future strategy stack:
[17:43:57.861] List of future strategies:
[17:43:57.861] 1. sequential:
[17:43:57.861]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[17:43:57.861]    - tweaked: FALSE
[17:43:57.861]    - call: future::plan("sequential")
[17:43:57.875] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[17:43:58.417] future_lapply() ...
[17:43:58.422] Number of chunks: 1
[17:43:58.423] getGlobalsAndPackagesXApply() ...
[17:43:58.423]  - future.globals: FALSE
[17:43:58.426]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:43:58.426]  - needed namespaces: [n=0] 
[17:43:58.426] Finding globals ... DONE
[17:43:58.427]  - use_args: TRUE
[17:43:58.427]  - Getting '...' globals ...
[17:43:58.428]    - '...' content: [n=0] 
[17:43:58.428] List of 1
[17:43:58.428]  $ ...: list()
[17:43:58.428]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.428]  - attr(*, "where")=List of 1
[17:43:58.428]   ..$ ...:<environment: 0x5632ac3952e8> 
[17:43:58.428]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.428]  - attr(*, "resolved")= logi TRUE
[17:43:58.428]  - attr(*, "total_size")= num NA
[17:43:58.432]  - Getting '...' globals ... DONE
[17:43:58.432] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:43:58.433] List of 3
[17:43:58.433]  $ ...future.FUN        :function (x)  
[17:43:58.433]  $ future.call.arguments: list()
[17:43:58.433]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.433]  $ ...                  : list()
[17:43:58.433]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.433]  - attr(*, "where")=List of 3
[17:43:58.433]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:43:58.433]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:43:58.433]   ..$ ...                  :<environment: 0x5632ac3952e8> 
[17:43:58.433]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.433]  - attr(*, "resolved")= logi FALSE
[17:43:58.433]  - attr(*, "total_size")= num 3824
[17:43:58.438] Packages to be attached in all futures: [n=1] ‘utils’
[17:43:58.438] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.439] Number of futures (= number of chunks): 1
[17:43:58.439] Launching 1 futures (chunks) ...
[17:43:58.439] Chunk #1 of 1 ...
[17:43:58.439]  - seeds: <none>
[17:43:58.440]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.450] Created future:
[17:43:58.450] ClusterFuture:
[17:43:58.450] Label: ‘future_lapply-1’
[17:43:58.450] Expression:
[17:43:58.450] {
[17:43:58.450]     do.call(function(...) {
[17:43:58.450]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.450]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.450]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.450]             on.exit(options(oopts), add = TRUE)
[17:43:58.450]         }
[17:43:58.450]         {
[17:43:58.450]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.450]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.450]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.450]             })
[17:43:58.450]         }
[17:43:58.450]     }, args = future.call.arguments)
[17:43:58.450] }
[17:43:58.450] Lazy evaluation: FALSE
[17:43:58.450] Asynchronous evaluation: TRUE
[17:43:58.450] Local evaluation: TRUE
[17:43:58.450] Environment: R_GlobalEnv
[17:43:58.450] Capture standard output: TRUE
[17:43:58.450] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.450] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:58.450] Packages: 1 packages (‘utils’)
[17:43:58.450] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.450] Resolved: TRUE
[17:43:58.450] Value: <not collected>
[17:43:58.450] Conditions captured: <none>
[17:43:58.450] Early signaling: FALSE
[17:43:58.450] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.450] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:58.454] Chunk #1 of 1 ... DONE
[17:43:58.454] Launching 1 futures (chunks) ... DONE
[17:43:58.454] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[17:43:58.456] future_lapply() ...
[17:43:58.457] Number of chunks: 1
[17:43:58.457] getGlobalsAndPackagesXApply() ...
[17:43:58.457]  - future.globals: TRUE
[17:43:58.462]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[17:43:58.462]  - needed namespaces: [n=1] ‘stats’
[17:43:58.462] Finding globals ... DONE
[17:43:58.462]  - use_args: TRUE
[17:43:58.462]  - Getting '...' globals ...
[17:43:58.462]    - '...' content: [n=0] 
[17:43:58.463] List of 1
[17:43:58.463]  $ ...: list()
[17:43:58.463]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.463]  - attr(*, "where")=List of 1
[17:43:58.463]   ..$ ...:<environment: 0x5632ae1c41c0> 
[17:43:58.463]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.463]  - attr(*, "resolved")= logi TRUE
[17:43:58.463]  - attr(*, "total_size")= num NA
[17:43:58.466]  - Getting '...' globals ... DONE
[17:43:58.466] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[17:43:58.466] List of 4
[17:43:58.466]  $ ...future.FUN:function (x)  
[17:43:58.466]  $ a            : num 1
[17:43:58.466]  $ b            : num 2
[17:43:58.466]  $ ...          : list()
[17:43:58.466]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.466]  - attr(*, "where")=List of 4
[17:43:58.466]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:58.466]   ..$ a            :<environment: R_EmptyEnv> 
[17:43:58.466]   ..$ b            :<environment: R_EmptyEnv> 
[17:43:58.466]   ..$ ...          :<environment: 0x5632ae1c41c0> 
[17:43:58.466]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.466]  - attr(*, "resolved")= logi FALSE
[17:43:58.466]  - attr(*, "total_size")= num 3936
[17:43:58.471] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[17:43:58.471] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.471] Number of futures (= number of chunks): 1
[17:43:58.471] Launching 1 futures (chunks) ...
[17:43:58.471] Chunk #1 of 1 ...
[17:43:58.471]  - Finding globals in 'X' for chunk #1 ...
[17:43:58.472]    + additional globals found: [n=0] 
[17:43:58.472]    + additional namespaces needed: [n=0] 
[17:43:58.472]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:58.472]  - seeds: <none>
[17:43:58.472]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.487] Created future:
[17:43:58.487] ClusterFuture:
[17:43:58.487] Label: ‘future_lapply-1’
[17:43:58.487] Expression:
[17:43:58.487] {
[17:43:58.487]     do.call(function(...) {
[17:43:58.487]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.487]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.487]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.487]             on.exit(options(oopts), add = TRUE)
[17:43:58.487]         }
[17:43:58.487]         {
[17:43:58.487]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.487]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.487]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.487]             })
[17:43:58.487]         }
[17:43:58.487]     }, args = future.call.arguments)
[17:43:58.487] }
[17:43:58.487] Lazy evaluation: FALSE
[17:43:58.487] Asynchronous evaluation: TRUE
[17:43:58.487] Local evaluation: TRUE
[17:43:58.487] Environment: R_GlobalEnv
[17:43:58.487] Capture standard output: TRUE
[17:43:58.487] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.487] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:43:58.487] Packages: 2 packages (‘stats’, ‘utils’)
[17:43:58.487] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.487] Resolved: FALSE
[17:43:58.487] Value: <not collected>
[17:43:58.487] Conditions captured: <none>
[17:43:58.487] Early signaling: FALSE
[17:43:58.487] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.487] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:58.499] Chunk #1 of 1 ... DONE
[17:43:58.499] Launching 1 futures (chunks) ... DONE
[17:43:58.499] Resolving 1 futures (chunks) ...
[17:43:58.530]  - Number of value chunks collected: 1
[17:43:58.530] Resolving 1 futures (chunks) ... DONE
[17:43:58.530] Reducing values from 1 chunks ...
[17:43:58.530]  - Number of values collected after concatenation: 1
[17:43:58.530]  - Number of values expected: 1
[17:43:58.531] Reducing values from 1 chunks ... DONE
[17:43:58.531] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[17:43:58.531] future_lapply() ...
[17:43:58.532] Number of chunks: 1
[17:43:58.532] getGlobalsAndPackagesXApply() ...
[17:43:58.532]  - future.globals: ‘a’, ‘b’
[17:43:58.532]  - use_args: TRUE
[17:43:58.532] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[17:43:58.532] List of 4
[17:43:58.532]  $ a            : num 1
[17:43:58.532]  $ b            : num 2
[17:43:58.532]  $ ...future.FUN:function (x)  
[17:43:58.532]  $ ...          : list()
[17:43:58.532]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.532]  - attr(*, "where")=List of 4
[17:43:58.532]   ..$ a            :<environment: R_GlobalEnv> 
[17:43:58.532]   ..$ b            :<environment: R_GlobalEnv> 
[17:43:58.532]   ..$ ...future.FUN:<environment: 0x5632ad12b668> 
[17:43:58.532]   ..$ ...          :<environment: 0x5632ad12b668> 
[17:43:58.532]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.532]  - attr(*, "resolved")= logi FALSE
[17:43:58.532]  - attr(*, "total_size")= num NA
[17:43:58.536] Packages to be attached in all futures: [n=1] ‘utils’
[17:43:58.536] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.536] Number of futures (= number of chunks): 1
[17:43:58.536] Launching 1 futures (chunks) ...
[17:43:58.537] Chunk #1 of 1 ...
[17:43:58.537]  - seeds: <none>
[17:43:58.537]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.546] Created future:
[17:43:58.546] ClusterFuture:
[17:43:58.546] Label: ‘future_lapply-1’
[17:43:58.546] Expression:
[17:43:58.546] {
[17:43:58.546]     do.call(function(...) {
[17:43:58.546]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.546]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.546]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.546]             on.exit(options(oopts), add = TRUE)
[17:43:58.546]         }
[17:43:58.546]         {
[17:43:58.546]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.546]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.546]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.546]             })
[17:43:58.546]         }
[17:43:58.546]     }, args = future.call.arguments)
[17:43:58.546] }
[17:43:58.546] Lazy evaluation: FALSE
[17:43:58.546] Asynchronous evaluation: TRUE
[17:43:58.546] Local evaluation: TRUE
[17:43:58.546] Environment: R_GlobalEnv
[17:43:58.546] Capture standard output: TRUE
[17:43:58.546] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.546] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:43:58.546] Packages: 1 packages (‘utils’)
[17:43:58.546] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.546] Resolved: FALSE
[17:43:58.546] Value: <not collected>
[17:43:58.546] Conditions captured: <none>
[17:43:58.546] Early signaling: FALSE
[17:43:58.546] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.546] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:58.558] Chunk #1 of 1 ... DONE
[17:43:58.558] Launching 1 futures (chunks) ... DONE
[17:43:58.558] Resolving 1 futures (chunks) ...
[17:43:58.589]  - Number of value chunks collected: 1
[17:43:58.589] Resolving 1 futures (chunks) ... DONE
[17:43:58.589] Reducing values from 1 chunks ...
[17:43:58.590]  - Number of values collected after concatenation: 1
[17:43:58.590]  - Number of values expected: 1
[17:43:58.590] Reducing values from 1 chunks ... DONE
[17:43:58.590] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[17:43:58.590] future_lapply() ...
[17:43:58.591] Number of chunks: 1
[17:43:58.591] getGlobalsAndPackagesXApply() ...
[17:43:58.591]  - future.globals: <name-value list> with names ‘2’, ‘3’
[17:43:58.591]  - use_args: TRUE
[17:43:58.591]  - Getting '...' globals ...
[17:43:58.592]    - '...' content: [n=0] 
[17:43:58.592] List of 1
[17:43:58.592]  $ ...: list()
[17:43:58.592]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.592]  - attr(*, "where")=List of 1
[17:43:58.592]   ..$ ...:<environment: 0x5632ac4bf7a8> 
[17:43:58.592]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.592]  - attr(*, "resolved")= logi TRUE
[17:43:58.592]  - attr(*, "total_size")= num NA
[17:43:58.594]  - Getting '...' globals ... DONE
[17:43:58.594] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[17:43:58.594] List of 4
[17:43:58.594]  $ a            : num 2
[17:43:58.594]  $ b            : num 3
[17:43:58.594]  $ ...future.FUN:function (x)  
[17:43:58.594]  $ ...          : list()
[17:43:58.594]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.594]  - attr(*, "where")=List of 4
[17:43:58.594]   ..$ a            :<environment: R_EmptyEnv> 
[17:43:58.594]   ..$ b            :<environment: R_EmptyEnv> 
[17:43:58.594]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:43:58.594]   ..$ ...          :<environment: 0x5632ac4bf7a8> 
[17:43:58.594]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.594]  - attr(*, "resolved")= logi FALSE
[17:43:58.594]  - attr(*, "total_size")= num NA
[17:43:58.598] Packages to be attached in all futures: [n=1] ‘utils’
[17:43:58.598] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.598] Number of futures (= number of chunks): 1
[17:43:58.598] Launching 1 futures (chunks) ...
[17:43:58.598] Chunk #1 of 1 ...
[17:43:58.599]  - seeds: <none>
[17:43:58.599]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.609] Created future:
[17:43:58.609] ClusterFuture:
[17:43:58.609] Label: ‘future_lapply-1’
[17:43:58.609] Expression:
[17:43:58.609] {
[17:43:58.609]     do.call(function(...) {
[17:43:58.609]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.609]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.609]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.609]             on.exit(options(oopts), add = TRUE)
[17:43:58.609]         }
[17:43:58.609]         {
[17:43:58.609]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.609]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.609]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.609]             })
[17:43:58.609]         }
[17:43:58.609]     }, args = future.call.arguments)
[17:43:58.609] }
[17:43:58.609] Lazy evaluation: FALSE
[17:43:58.609] Asynchronous evaluation: TRUE
[17:43:58.609] Local evaluation: TRUE
[17:43:58.609] Environment: R_GlobalEnv
[17:43:58.609] Capture standard output: TRUE
[17:43:58.609] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.609] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[17:43:58.609] Packages: 1 packages (‘utils’)
[17:43:58.609] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.609] Resolved: FALSE
[17:43:58.609] Value: <not collected>
[17:43:58.609] Conditions captured: <none>
[17:43:58.609] Early signaling: FALSE
[17:43:58.609] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.609] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:58.620] Chunk #1 of 1 ... DONE
[17:43:58.620] Launching 1 futures (chunks) ... DONE
[17:43:58.620] Resolving 1 futures (chunks) ...
[17:43:58.663]  - Number of value chunks collected: 1
[17:43:58.663] Resolving 1 futures (chunks) ... DONE
[17:43:58.663] Reducing values from 1 chunks ...
[17:43:58.663]  - Number of values collected after concatenation: 1
[17:43:58.663]  - Number of values expected: 1
[17:43:58.663] Reducing values from 1 chunks ... DONE
[17:43:58.663] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[17:43:58.664] future_lapply() ...
[17:43:58.664] Number of chunks: 1
[17:43:58.664] getGlobalsAndPackagesXApply() ...
[17:43:58.664]  - future.globals: FALSE
[17:43:58.665]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[17:43:58.665]  - needed namespaces: [n=0] 
[17:43:58.666] Finding globals ... DONE
[17:43:58.666]  - use_args: TRUE
[17:43:58.666]  - Getting '...' globals ...
[17:43:58.666]    - '...' content: [n=0] 
[17:43:58.666] List of 1
[17:43:58.666]  $ ...: list()
[17:43:58.666]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.666]  - attr(*, "where")=List of 1
[17:43:58.666]   ..$ ...:<environment: 0x5632ae129a48> 
[17:43:58.666]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.666]  - attr(*, "resolved")= logi TRUE
[17:43:58.666]  - attr(*, "total_size")= num NA
[17:43:58.669]  - Getting '...' globals ... DONE
[17:43:58.669] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:43:58.669] List of 4
[17:43:58.669]  $ d                    : num 42
[17:43:58.669]  $ ...future.FUN        :function (x)  
[17:43:58.669]  $ future.call.arguments: list()
[17:43:58.669]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.669]  $ ...                  : list()
[17:43:58.669]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.669]  - attr(*, "where")=List of 4
[17:43:58.669]   ..$ d                    :<environment: R_EmptyEnv> 
[17:43:58.669]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:43:58.669]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:43:58.669]   ..$ ...                  :<environment: 0x5632ae129a48> 
[17:43:58.669]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.669]  - attr(*, "resolved")= logi FALSE
[17:43:58.669]  - attr(*, "total_size")= num 784
[17:43:58.673] Packages to be attached in all futures: [n=0] 
[17:43:58.673] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.673] Number of futures (= number of chunks): 1
[17:43:58.673] Launching 1 futures (chunks) ...
[17:43:58.673] Chunk #1 of 1 ...
[17:43:58.673]  - seeds: <none>
[17:43:58.673]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.684] Created future:
[17:43:58.684] ClusterFuture:
[17:43:58.684] Label: ‘future_lapply-1’
[17:43:58.684] Expression:
[17:43:58.684] {
[17:43:58.684]     do.call(function(...) {
[17:43:58.684]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.684]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.684]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.684]             on.exit(options(oopts), add = TRUE)
[17:43:58.684]         }
[17:43:58.684]         {
[17:43:58.684]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.684]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.684]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.684]             })
[17:43:58.684]         }
[17:43:58.684]     }, args = future.call.arguments)
[17:43:58.684] }
[17:43:58.684] Lazy evaluation: FALSE
[17:43:58.684] Asynchronous evaluation: TRUE
[17:43:58.684] Local evaluation: TRUE
[17:43:58.684] Environment: R_GlobalEnv
[17:43:58.684] Capture standard output: TRUE
[17:43:58.684] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.684] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:43:58.684] Packages: <none>
[17:43:58.684] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.684] Resolved: FALSE
[17:43:58.684] Value: <not collected>
[17:43:58.684] Conditions captured: <none>
[17:43:58.684] Early signaling: FALSE
[17:43:58.684] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.684] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:58.696] Chunk #1 of 1 ... DONE
[17:43:58.696] Launching 1 futures (chunks) ... DONE
[17:43:58.696] Resolving 1 futures (chunks) ...
[17:43:58.738]  - Number of value chunks collected: 1
[17:43:58.738] Resolving 1 futures (chunks) ... DONE
[17:43:58.738] Reducing values from 1 chunks ...
[17:43:58.738]  - Number of values collected after concatenation: 2
[17:43:58.738]  - Number of values expected: 2
[17:43:58.738] Reducing values from 1 chunks ... DONE
[17:43:58.738] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[17:43:58.739] future_lapply() ...
[17:43:58.739] Number of chunks: 1
[17:43:58.739] getGlobalsAndPackagesXApply() ...
[17:43:58.739]  - future.globals: TRUE
[17:43:58.741]  - globals found/used: [n=1] ‘FUN’
[17:43:58.741]  - needed namespaces: [n=0] 
[17:43:58.741] Finding globals ... DONE
[17:43:58.741]  - use_args: TRUE
[17:43:58.742]  - Getting '...' globals ...
[17:43:58.742]    - '...' content: [n=0] 
[17:43:58.742] List of 1
[17:43:58.742]  $ ...: list()
[17:43:58.742]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.742]  - attr(*, "where")=List of 1
[17:43:58.742]   ..$ ...:<environment: 0x5632ad5cfde8> 
[17:43:58.742]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.742]  - attr(*, "resolved")= logi TRUE
[17:43:58.742]  - attr(*, "total_size")= num NA
[17:43:58.744]  - Getting '...' globals ... DONE
[17:43:58.745] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:58.745] List of 2
[17:43:58.745]  $ ...future.FUN:function (x)  
[17:43:58.745]  $ ...          : list()
[17:43:58.745]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.745]  - attr(*, "where")=List of 2
[17:43:58.745]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:58.745]   ..$ ...          :<environment: 0x5632ad5cfde8> 
[17:43:58.745]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.745]  - attr(*, "resolved")= logi FALSE
[17:43:58.745]  - attr(*, "total_size")= num 728
[17:43:58.747] Packages to be attached in all futures: [n=0] 
[17:43:58.747] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.747] Number of futures (= number of chunks): 1
[17:43:58.748] Launching 1 futures (chunks) ...
[17:43:58.748] Chunk #1 of 1 ...
[17:43:58.748]  - Finding globals in 'X' for chunk #1 ...
[17:43:58.748]    + additional globals found: [n=0] 
[17:43:58.748]    + additional namespaces needed: [n=0] 
[17:43:58.748]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:58.748]  - seeds: <none>
[17:43:58.748]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.757] Created future:
[17:43:58.757] ClusterFuture:
[17:43:58.757] Label: ‘future_lapply-1’
[17:43:58.757] Expression:
[17:43:58.757] {
[17:43:58.757]     do.call(function(...) {
[17:43:58.757]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.757]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.757]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.757]             on.exit(options(oopts), add = TRUE)
[17:43:58.757]         }
[17:43:58.757]         {
[17:43:58.757]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.757]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.757]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.757]             })
[17:43:58.757]         }
[17:43:58.757]     }, args = future.call.arguments)
[17:43:58.757] }
[17:43:58.757] Lazy evaluation: FALSE
[17:43:58.757] Asynchronous evaluation: TRUE
[17:43:58.757] Local evaluation: TRUE
[17:43:58.757] Environment: R_GlobalEnv
[17:43:58.757] Capture standard output: TRUE
[17:43:58.757] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.757] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:58.757] Packages: <none>
[17:43:58.757] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.757] Resolved: FALSE
[17:43:58.757] Value: <not collected>
[17:43:58.757] Conditions captured: <none>
[17:43:58.757] Early signaling: FALSE
[17:43:58.757] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.757] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:58.769] Chunk #1 of 1 ... DONE
[17:43:58.769] Launching 1 futures (chunks) ... DONE
[17:43:58.769] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[17:43:58.862] future_lapply() ...
[17:43:58.863] Number of chunks: 1
[17:43:58.863] getGlobalsAndPackagesXApply() ...
[17:43:58.864]  - future.globals: TRUE
[17:43:58.870]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:43:58.870]  - needed namespaces: [n=0] 
[17:43:58.870] Finding globals ... DONE
[17:43:58.870]  - use_args: TRUE
[17:43:58.871]  - Getting '...' globals ...
[17:43:58.871]    - '...' content: [n=0] 
[17:43:58.871] List of 1
[17:43:58.871]  $ ...: list()
[17:43:58.871]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.871]  - attr(*, "where")=List of 1
[17:43:58.871]   ..$ ...:<environment: 0x5632ae0a0780> 
[17:43:58.871]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.871]  - attr(*, "resolved")= logi TRUE
[17:43:58.871]  - attr(*, "total_size")= num NA
[17:43:58.874]  - Getting '...' globals ... DONE
[17:43:58.874] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:43:58.874] List of 6
[17:43:58.874]  $ ...future.FUN:function (i)  
[17:43:58.874]  $ caller       :function (a, b, FUN = call_my_add)  
[17:43:58.874]  $ args         :List of 1
[17:43:58.874]   ..$ FUN:function (a, b)  
[17:43:58.874]  $ call_my_add  :function (a, b)  
[17:43:58.874]  $ my_add       :function (a, b)  
[17:43:58.874]  $ ...          : list()
[17:43:58.874]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.874]  - attr(*, "where")=List of 6
[17:43:58.874]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:58.874]   ..$ caller       :<environment: R_EmptyEnv> 
[17:43:58.874]   ..$ args         :<environment: R_EmptyEnv> 
[17:43:58.874]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:43:58.874]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:43:58.874]   ..$ ...          :<environment: 0x5632ae0a0780> 
[17:43:58.874]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.874]  - attr(*, "resolved")= logi FALSE
[17:43:58.874]  - attr(*, "total_size")= num 6664
[17:43:58.881] Packages to be attached in all futures: [n=0] 
[17:43:58.881] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.881] Number of futures (= number of chunks): 1
[17:43:58.881] Launching 1 futures (chunks) ...
[17:43:58.881] Chunk #1 of 1 ...
[17:43:58.881]  - Finding globals in 'X' for chunk #1 ...
[17:43:58.881]    + additional globals found: [n=0] 
[17:43:58.882]    + additional namespaces needed: [n=0] 
[17:43:58.882]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:58.882]  - seeds: <none>
[17:43:58.882]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.887] Created future:
[17:43:58.887] SequentialFuture:
[17:43:58.887] Label: ‘future_lapply-1’
[17:43:58.887] Expression:
[17:43:58.887] {
[17:43:58.887]     do.call(function(...) {
[17:43:58.887]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.887]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.887]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.887]             on.exit(options(oopts), add = TRUE)
[17:43:58.887]         }
[17:43:58.887]         {
[17:43:58.887]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.887]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.887]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.887]             })
[17:43:58.887]         }
[17:43:58.887]     }, args = future.call.arguments)
[17:43:58.887] }
[17:43:58.887] Lazy evaluation: FALSE
[17:43:58.887] Asynchronous evaluation: FALSE
[17:43:58.887] Local evaluation: TRUE
[17:43:58.887] Environment: 0x5632ae0a0be0
[17:43:58.887] Capture standard output: TRUE
[17:43:58.887] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.887] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:43:58.887] Packages: <none>
[17:43:58.887] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.887] Resolved: TRUE
[17:43:58.887] Value: 168 bytes of class ‘list’
[17:43:58.887] Early signaling: FALSE
[17:43:58.887] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.887] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:58.888] Chunk #1 of 1 ... DONE
[17:43:58.889] Launching 1 futures (chunks) ... DONE
[17:43:58.889] Resolving 1 futures (chunks) ...
[17:43:58.889]  - Number of value chunks collected: 1
[17:43:58.889] Resolving 1 futures (chunks) ... DONE
[17:43:58.889] Reducing values from 1 chunks ...
[17:43:58.889]  - Number of values collected after concatenation: 3
[17:43:58.890]  - Number of values expected: 3
[17:43:58.890] Reducing values from 1 chunks ... DONE
[17:43:58.890] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:43:58.890] future_lapply() ...
[17:43:58.893] Number of chunks: 1
[17:43:58.893] getGlobalsAndPackagesXApply() ...
[17:43:58.893]  - future.globals: TRUE
[17:43:58.896]  - globals found/used: [n=1] ‘FUN’
[17:43:58.896]  - needed namespaces: [n=0] 
[17:43:58.896] Finding globals ... DONE
[17:43:58.896]  - use_args: TRUE
[17:43:58.896]  - Getting '...' globals ...
[17:43:58.897]    - '...' content: [n=1] ‘what’
[17:43:58.897] List of 1
[17:43:58.897]  $ ...:List of 1
[17:43:58.897]   ..$ what:function (x)  
[17:43:58.897]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.897]  - attr(*, "where")=List of 1
[17:43:58.897]   ..$ ...:<environment: 0x5632ace3bc98> 
[17:43:58.897]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.897]  - attr(*, "resolved")= logi TRUE
[17:43:58.897]  - attr(*, "total_size")= num NA
[17:43:58.899]  - Getting '...' globals ... DONE
[17:43:58.900] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:58.900] List of 2
[17:43:58.900]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:43:58.900]  $ ...          :List of 1
[17:43:58.900]   ..$ what:function (x)  
[17:43:58.900]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.900]  - attr(*, "where")=List of 2
[17:43:58.900]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:58.900]   ..$ ...          :<environment: 0x5632ace3bc98> 
[17:43:58.900]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.900]  - attr(*, "resolved")= logi FALSE
[17:43:58.900]  - attr(*, "total_size")= num 12192
[17:43:58.902] Packages to be attached in all futures: [n=0] 
[17:43:58.903] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.903] Number of futures (= number of chunks): 1
[17:43:58.903] Launching 1 futures (chunks) ...
[17:43:58.903] Chunk #1 of 1 ...
[17:43:58.903]  - Finding globals in 'X' for chunk #1 ...
[17:43:58.903]    + additional globals found: [n=0] 
[17:43:58.904]    + additional namespaces needed: [n=0] 
[17:43:58.904]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:58.904]  - seeds: <none>
[17:43:58.904]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.906] Created future:
[17:43:58.906] SequentialFuture:
[17:43:58.906] Label: ‘future_lapply-1’
[17:43:58.906] Expression:
[17:43:58.906] {
[17:43:58.906]     do.call(function(...) {
[17:43:58.906]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.906]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.906]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.906]             on.exit(options(oopts), add = TRUE)
[17:43:58.906]         }
[17:43:58.906]         {
[17:43:58.906]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.906]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.906]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.906]             })
[17:43:58.906]         }
[17:43:58.906]     }, args = future.call.arguments)
[17:43:58.906] }
[17:43:58.906] Lazy evaluation: FALSE
[17:43:58.906] Asynchronous evaluation: FALSE
[17:43:58.906] Local evaluation: TRUE
[17:43:58.906] Environment: R_GlobalEnv
[17:43:58.906] Capture standard output: TRUE
[17:43:58.906] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.906] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:58.906] Packages: <none>
[17:43:58.906] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.906] Resolved: TRUE
[17:43:58.906] Value: 56 bytes of class ‘list’
[17:43:58.906] Early signaling: FALSE
[17:43:58.906] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.906] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:58.907] Chunk #1 of 1 ... DONE
[17:43:58.907] Launching 1 futures (chunks) ... DONE
[17:43:58.907] Resolving 1 futures (chunks) ...
[17:43:58.908]  - Number of value chunks collected: 1
[17:43:58.908] Resolving 1 futures (chunks) ... DONE
[17:43:58.908] Reducing values from 1 chunks ...
[17:43:58.908]  - Number of values collected after concatenation: 1
[17:43:58.908]  - Number of values expected: 1
[17:43:58.908] Reducing values from 1 chunks ... DONE
[17:43:58.908] future_lapply() ... DONE
[17:43:58.908] future_lapply() ...
[17:43:58.910] Number of chunks: 1
[17:43:58.910] getGlobalsAndPackagesXApply() ...
[17:43:58.910]  - future.globals: TRUE
[17:43:58.912]  - globals found/used: [n=1] ‘FUN’
[17:43:58.912]  - needed namespaces: [n=0] 
[17:43:58.912] Finding globals ... DONE
[17:43:58.913]  - use_args: TRUE
[17:43:58.913]  - Getting '...' globals ...
[17:43:58.913]    - '...' content: [n=1] ‘what’
[17:43:58.913] List of 1
[17:43:58.913]  $ ...:List of 1
[17:43:58.913]   ..$ what:function (...)  
[17:43:58.913]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.913]  - attr(*, "where")=List of 1
[17:43:58.913]   ..$ ...:<environment: 0x5632add9e020> 
[17:43:58.913]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.913]  - attr(*, "resolved")= logi TRUE
[17:43:58.913]  - attr(*, "total_size")= num NA
[17:43:58.916]  - Getting '...' globals ... DONE
[17:43:58.916] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:58.916] List of 2
[17:43:58.916]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:43:58.916]  $ ...          :List of 1
[17:43:58.916]   ..$ what:function (...)  
[17:43:58.916]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.916]  - attr(*, "where")=List of 2
[17:43:58.916]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:58.916]   ..$ ...          :<environment: 0x5632add9e020> 
[17:43:58.916]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.916]  - attr(*, "resolved")= logi FALSE
[17:43:58.916]  - attr(*, "total_size")= num 12584
[17:43:58.919] Packages to be attached in all futures: [n=0] 
[17:43:58.919] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.919] Number of futures (= number of chunks): 1
[17:43:58.919] Launching 1 futures (chunks) ...
[17:43:58.919] Chunk #1 of 1 ...
[17:43:58.919]  - Finding globals in 'X' for chunk #1 ...
[17:43:58.920]    + additional globals found: [n=0] 
[17:43:58.920]    + additional namespaces needed: [n=0] 
[17:43:58.920]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:58.920]  - seeds: <none>
[17:43:58.920]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.923] Created future:
[17:43:58.923] SequentialFuture:
[17:43:58.923] Label: ‘future_lapply-1’
[17:43:58.923] Expression:
[17:43:58.923] {
[17:43:58.923]     do.call(function(...) {
[17:43:58.923]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.923]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.923]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.923]             on.exit(options(oopts), add = TRUE)
[17:43:58.923]         }
[17:43:58.923]         {
[17:43:58.923]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.923]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.923]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.923]             })
[17:43:58.923]         }
[17:43:58.923]     }, args = future.call.arguments)
[17:43:58.923] }
[17:43:58.923] Lazy evaluation: FALSE
[17:43:58.923] Asynchronous evaluation: FALSE
[17:43:58.923] Local evaluation: TRUE
[17:43:58.923] Environment: R_GlobalEnv
[17:43:58.923] Capture standard output: TRUE
[17:43:58.923] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.923] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:58.923] Packages: <none>
[17:43:58.923] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.923] Resolved: TRUE
[17:43:58.923] Value: 56 bytes of class ‘list’
[17:43:58.923] Early signaling: FALSE
[17:43:58.923] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.923] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:58.924] Chunk #1 of 1 ... DONE
[17:43:58.924] Launching 1 futures (chunks) ... DONE
[17:43:58.924] Resolving 1 futures (chunks) ...
[17:43:58.925]  - Number of value chunks collected: 1
[17:43:58.925] Resolving 1 futures (chunks) ... DONE
[17:43:58.925] Reducing values from 1 chunks ...
[17:43:58.925]  - Number of values collected after concatenation: 1
[17:43:58.925]  - Number of values expected: 1
[17:43:58.925] Reducing values from 1 chunks ... DONE
[17:43:58.927] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:43:58.927] future_lapply() ...
[17:43:58.928] Number of chunks: 1
[17:43:58.928] getGlobalsAndPackagesXApply() ...
[17:43:58.928]  - future.globals: TRUE
[17:43:58.929]  - globals found/used: [n=1] ‘FUN’
[17:43:58.930]  - needed namespaces: [n=0] 
[17:43:58.930] Finding globals ... DONE
[17:43:58.930]  - use_args: TRUE
[17:43:58.930]  - Getting '...' globals ...
[17:43:58.930]    - '...' content: [n=1] ‘b’
[17:43:58.930] List of 1
[17:43:58.930]  $ ...:List of 1
[17:43:58.930]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:43:58.930]   .. ..$ a: int [1:2] 1 2
[17:43:58.930]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.930]  - attr(*, "where")=List of 1
[17:43:58.930]   ..$ ...:<environment: 0x5632ad812110> 
[17:43:58.930]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.930]  - attr(*, "resolved")= logi TRUE
[17:43:58.930]  - attr(*, "total_size")= num NA
[17:43:58.933]  - Getting '...' globals ... DONE
[17:43:58.934] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:58.934] List of 2
[17:43:58.934]  $ ...future.FUN:function (a, b)  
[17:43:58.934]  $ ...          :List of 1
[17:43:58.934]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:43:58.934]   .. ..$ a: int [1:2] 1 2
[17:43:58.934]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.934]  - attr(*, "where")=List of 2
[17:43:58.934]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:58.934]   ..$ ...          :<environment: 0x5632ad812110> 
[17:43:58.934]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.934]  - attr(*, "resolved")= logi FALSE
[17:43:58.934]  - attr(*, "total_size")= num 1440
[17:43:58.937] Packages to be attached in all futures: [n=0] 
[17:43:58.937] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.937] Number of futures (= number of chunks): 1
[17:43:58.937] Launching 1 futures (chunks) ...
[17:43:58.938] Chunk #1 of 1 ...
[17:43:58.938]  - Finding globals in 'X' for chunk #1 ...
[17:43:58.938]    + additional globals found: [n=0] 
[17:43:58.938]    + additional namespaces needed: [n=0] 
[17:43:58.938]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:58.938]  - seeds: <none>
[17:43:58.938]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.940] Created future:
[17:43:58.940] SequentialFuture:
[17:43:58.940] Label: ‘future_lapply-1’
[17:43:58.940] Expression:
[17:43:58.940] {
[17:43:58.940]     do.call(function(...) {
[17:43:58.940]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.940]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.940]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.940]             on.exit(options(oopts), add = TRUE)
[17:43:58.940]         }
[17:43:58.940]         {
[17:43:58.940]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.940]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.940]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.940]             })
[17:43:58.940]         }
[17:43:58.940]     }, args = future.call.arguments)
[17:43:58.940] }
[17:43:58.940] Lazy evaluation: FALSE
[17:43:58.940] Asynchronous evaluation: FALSE
[17:43:58.940] Local evaluation: TRUE
[17:43:58.940] Environment: R_GlobalEnv
[17:43:58.940] Capture standard output: TRUE
[17:43:58.940] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.940] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:58.940] Packages: <none>
[17:43:58.940] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.940] Resolved: TRUE
[17:43:58.940] Value: 112 bytes of class ‘list’
[17:43:58.940] Early signaling: FALSE
[17:43:58.940] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.940] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:58.941] Chunk #1 of 1 ... DONE
[17:43:58.942] Launching 1 futures (chunks) ... DONE
[17:43:58.942] Resolving 1 futures (chunks) ...
[17:43:58.942]  - Number of value chunks collected: 1
[17:43:58.942] Resolving 1 futures (chunks) ... DONE
[17:43:58.942] Reducing values from 1 chunks ...
[17:43:58.942]  - Number of values collected after concatenation: 1
[17:43:58.942]  - Number of values expected: 1
[17:43:58.942] Reducing values from 1 chunks ... DONE
[17:43:58.943] future_lapply() ... DONE
[17:43:58.943] future_lapply() ...
[17:43:58.943] Number of chunks: 1
[17:43:58.943] getGlobalsAndPackagesXApply() ...
[17:43:58.943]  - future.globals: TRUE
[17:43:58.945]  - globals found/used: [n=1] ‘FUN’
[17:43:58.945]  - needed namespaces: [n=0] 
[17:43:58.945] Finding globals ... DONE
[17:43:58.945]  - use_args: TRUE
[17:43:58.945]  - Getting '...' globals ...
[17:43:58.945]    - '...' content: [n=1] ‘b’
[17:43:58.946] List of 1
[17:43:58.946]  $ ...:List of 1
[17:43:58.946]   ..$ b:<environment: 0x5632ac985028> 
[17:43:58.946]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.946]  - attr(*, "where")=List of 1
[17:43:58.946]   ..$ ...:<environment: 0x5632ac985ae0> 
[17:43:58.946]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.946]  - attr(*, "resolved")= logi TRUE
[17:43:58.946]  - attr(*, "total_size")= num NA
[17:43:58.948]  - Getting '...' globals ... DONE
[17:43:58.948] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:58.949] List of 2
[17:43:58.949]  $ ...future.FUN:function (a, b)  
[17:43:58.949]  $ ...          :List of 1
[17:43:58.949]   ..$ b:<environment: 0x5632ac985028> 
[17:43:58.949]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.949]  - attr(*, "where")=List of 2
[17:43:58.949]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:58.949]   ..$ ...          :<environment: 0x5632ac985ae0> 
[17:43:58.949]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.949]  - attr(*, "resolved")= logi FALSE
[17:43:58.949]  - attr(*, "total_size")= num 1440
[17:43:58.951] Packages to be attached in all futures: [n=0] 
[17:43:58.952] getGlobalsAndPackagesXApply() ... DONE
[17:43:58.952] Number of futures (= number of chunks): 1
[17:43:58.952] Launching 1 futures (chunks) ...
[17:43:58.952] Chunk #1 of 1 ...
[17:43:58.952]  - Finding globals in 'X' for chunk #1 ...
[17:43:58.952]    + additional globals found: [n=0] 
[17:43:58.952]    + additional namespaces needed: [n=0] 
[17:43:58.952]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:58.953]  - seeds: <none>
[17:43:58.953]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:58.955] Created future:
[17:43:58.955] SequentialFuture:
[17:43:58.955] Label: ‘future_lapply-1’
[17:43:58.955] Expression:
[17:43:58.955] {
[17:43:58.955]     do.call(function(...) {
[17:43:58.955]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:58.955]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:58.955]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:58.955]             on.exit(options(oopts), add = TRUE)
[17:43:58.955]         }
[17:43:58.955]         {
[17:43:58.955]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:58.955]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:58.955]                 ...future.FUN(...future.X_jj, ...)
[17:43:58.955]             })
[17:43:58.955]         }
[17:43:58.955]     }, args = future.call.arguments)
[17:43:58.955] }
[17:43:58.955] Lazy evaluation: FALSE
[17:43:58.955] Asynchronous evaluation: FALSE
[17:43:58.955] Local evaluation: TRUE
[17:43:58.955] Environment: R_GlobalEnv
[17:43:58.955] Capture standard output: TRUE
[17:43:58.955] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:58.955] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:58.955] Packages: <none>
[17:43:58.955] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:58.955] Resolved: TRUE
[17:43:58.955] Value: 120 bytes of class ‘list’
[17:43:58.955] Early signaling: FALSE
[17:43:58.955] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:58.955] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:58.956] Chunk #1 of 1 ... DONE
[17:43:58.956] Launching 1 futures (chunks) ... DONE
[17:43:58.956] Resolving 1 futures (chunks) ...
[17:43:58.956]  - Number of value chunks collected: 1
[17:43:58.957] Resolving 1 futures (chunks) ... DONE
[17:43:58.957] Reducing values from 1 chunks ...
[17:43:58.957]  - Number of values collected after concatenation: 1
[17:43:58.957]  - Number of values expected: 1
[17:43:58.957] Reducing values from 1 chunks ... DONE
[17:43:58.957] future_lapply() ... DONE
[17:43:58.957] future_lapply() ...
[17:43:58.958] Number of chunks: 1
[17:43:58.958] getGlobalsAndPackagesXApply() ...
[17:43:58.958]  - future.globals: TRUE
[17:43:58.960]  - globals found/used: [n=1] ‘FUN’
[17:43:58.960]  - needed namespaces: [n=0] 
[17:43:58.960] Finding globals ... DONE
[17:43:58.960]  - use_args: TRUE
[17:43:58.960]  - Getting '...' globals ...
[17:43:58.960]    - '...' content: [n=1] ‘b’
[17:43:58.961] List of 1
[17:43:58.961]  $ ...:List of 1
[17:43:58.961]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:43:58.961]   .. .. ..@ slots     :List of 4
[17:43:58.961]   .. .. .. ..$ .Data  : chr "function"
[17:43:58.961]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. ..$ target : chr "signature"
[17:43:58.961]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. ..$ defined: chr "signature"
[17:43:58.961]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. ..$ generic: chr "character"
[17:43:58.961]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. ..@ contains  :List of 3
[17:43:58.961]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:58.961]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ superClass: chr "function"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:58.961]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:58.961]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:58.961]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:58.961]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ distance  : num 1
[17:43:58.961]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:58.961]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:58.961]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:58.961]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:58.961]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:58.961]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:58.961]   .. .. .. .. .. ..@ distance  : num 1
[17:43:58.961]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:58.961]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:58.961]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:58.961]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:58.961]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ by        : chr "function"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:58.961]   .. .. .. .. .. ..@ distance  : num 2
[17:43:58.961]   .. .. ..@ virtual   : logi FALSE
[17:43:58.961]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:43:58.961]  list()
[17:43:58.961]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:43:58.961]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:43:58.961]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:43:58.961]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:43:58.961]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:43:58.961]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:43:58.961]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:43:58.961]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:43:58.961]   .. .. .. .. ..$ generic: chr(0) 
[17:43:58.961]   .. .. ..@ validity  : NULL
[17:43:58.961]   .. .. ..@ access    : list()
[17:43:58.961]   .. .. ..@ className : chr "MethodDefinition"
[17:43:58.961]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. ..@ subclasses:List of 7
[17:43:58.961]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:58.961]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:58.961]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:58.961]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:58.961]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:58.961]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:58.961]   .. .. .. .. .. ..@ distance  : num 1
[17:43:58.961]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:58.961]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:58.961]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:58.961]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:58.961]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:58.961]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:58.961]   .. .. .. .. .. ..@ distance  : num 1
[17:43:58.961]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:58.961]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:58.961]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:58.961]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:58.961]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:58.961]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:58.961]   .. .. .. .. .. ..@ distance  : num 1
[17:43:58.961]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:58.961]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:58.961]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:58.961]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:58.961]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:58.961]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:58.961]   .. .. .. .. .. ..@ distance  : num 1
[17:43:58.961]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:58.961]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:58.961]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:58.961]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:58.961]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:58.961]   .. .. .. .. .. ..@ distance  : num 2
[17:43:58.961]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:58.961]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:58.961]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:58.961]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:58.961]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:58.961]   .. .. .. .. .. ..@ distance  : num 2
[17:43:58.961]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:58.961]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:58.961]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:58.961]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:58.961]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:58.961]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:43:58.961]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:58.961]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:58.961]   .. .. .. .. .. ..@ distance  : num 2
[17:43:58.961]   .. .. ..@ versionKey:<externalptr> 
[17:43:58.961]   .. .. ..@ sealed    : logi TRUE
[17:43:58.961]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:58.961]  - attr(*, "where")=List of 1
[17:43:58.961]   ..$ ...:<environment: 0x5632adefe218> 
[17:43:58.961]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:58.961]  - attr(*, "resolved")= logi TRUE
[17:43:58.961]  - attr(*, "total_size")= num NA
[17:43:59.007]  - Getting '...' globals ... DONE
[17:43:59.007] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:59.007] List of 2
[17:43:59.007]  $ ...future.FUN:function (a, b)  
[17:43:59.007]  $ ...          :List of 1
[17:43:59.007]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:43:59.007]   .. .. ..@ slots     :List of 4
[17:43:59.007]   .. .. .. ..$ .Data  : chr "function"
[17:43:59.007]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. ..$ target : chr "signature"
[17:43:59.007]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. ..$ defined: chr "signature"
[17:43:59.007]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. ..$ generic: chr "character"
[17:43:59.007]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. ..@ contains  :List of 3
[17:43:59.007]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.007]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ superClass: chr "function"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.007]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.007]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.007]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.007]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.007]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.007]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ by        : chr "function"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.007]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.007]   .. .. ..@ virtual   : logi FALSE
[17:43:59.007]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:43:59.007]  list()
[17:43:59.007]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:43:59.007]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:43:59.007]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:43:59.007]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:43:59.007]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:43:59.007]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:43:59.007]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:43:59.007]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:43:59.007]   .. .. .. .. ..$ generic: chr(0) 
[17:43:59.007]   .. .. ..@ validity  : NULL
[17:43:59.007]   .. .. ..@ access    : list()
[17:43:59.007]   .. .. ..@ className : chr "MethodDefinition"
[17:43:59.007]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. ..@ subclasses:List of 7
[17:43:59.007]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.007]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.007]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.007]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.007]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.007]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.007]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.007]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.007]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.007]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.007]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.007]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.007]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.007]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.007]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.007]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.007]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.007]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.007]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.007]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.007]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.007]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.007]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.007]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:43:59.007]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.007]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.007]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.007]   .. .. ..@ versionKey:<externalptr> 
[17:43:59.007]   .. .. ..@ sealed    : logi TRUE
[17:43:59.007]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.007]  - attr(*, "where")=List of 2
[17:43:59.007]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.007]   ..$ ...          :<environment: 0x5632adefe218> 
[17:43:59.007]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.007]  - attr(*, "resolved")= logi FALSE
[17:43:59.007]  - attr(*, "total_size")= num 405168
[17:43:59.054] Packages to be attached in all futures: [n=0] 
[17:43:59.054] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.054] Number of futures (= number of chunks): 1
[17:43:59.054] Launching 1 futures (chunks) ...
[17:43:59.054] Chunk #1 of 1 ...
[17:43:59.055]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.055]    + additional globals found: [n=0] 
[17:43:59.055]    + additional namespaces needed: [n=0] 
[17:43:59.055]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.055]  - seeds: <none>
[17:43:59.055]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.058] Created future:
[17:43:59.058] SequentialFuture:
[17:43:59.058] Label: ‘future_lapply-1’
[17:43:59.058] Expression:
[17:43:59.058] {
[17:43:59.058]     do.call(function(...) {
[17:43:59.058]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.058]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.058]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.058]             on.exit(options(oopts), add = TRUE)
[17:43:59.058]         }
[17:43:59.058]         {
[17:43:59.058]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.058]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.058]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.058]             })
[17:43:59.058]         }
[17:43:59.058]     }, args = future.call.arguments)
[17:43:59.058] }
[17:43:59.058] Lazy evaluation: FALSE
[17:43:59.058] Asynchronous evaluation: FALSE
[17:43:59.058] Local evaluation: TRUE
[17:43:59.058] Environment: R_GlobalEnv
[17:43:59.058] Capture standard output: TRUE
[17:43:59.058] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.058] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:59.058] Packages: <none>
[17:43:59.058] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.058] Resolved: TRUE
[17:43:59.058] Value: 112 bytes of class ‘list’
[17:43:59.058] Early signaling: FALSE
[17:43:59.058] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.058] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:59.059] Chunk #1 of 1 ... DONE
[17:43:59.059] Launching 1 futures (chunks) ... DONE
[17:43:59.059] Resolving 1 futures (chunks) ...
[17:43:59.059]  - Number of value chunks collected: 1
[17:43:59.059] Resolving 1 futures (chunks) ... DONE
[17:43:59.060] Reducing values from 1 chunks ...
[17:43:59.060]  - Number of values collected after concatenation: 1
[17:43:59.060]  - Number of values expected: 1
[17:43:59.060] Reducing values from 1 chunks ... DONE
[17:43:59.060] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:43:59.062] future_lapply() ...
[17:43:59.062] Number of chunks: 1
[17:43:59.062] getGlobalsAndPackagesXApply() ...
[17:43:59.062]  - future.globals: TRUE
[17:43:59.064]  - globals found/used: [n=1] ‘FUN’
[17:43:59.064]  - needed namespaces: [n=0] 
[17:43:59.064] Finding globals ... DONE
[17:43:59.064]  - use_args: TRUE
[17:43:59.064]  - Getting '...' globals ...
[17:43:59.064]    - '...' content: [n=0] 
[17:43:59.065] List of 1
[17:43:59.065]  $ ...: list()
[17:43:59.065]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.065]  - attr(*, "where")=List of 1
[17:43:59.065]   ..$ ...:<environment: 0x5632acdea1f8> 
[17:43:59.065]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.065]  - attr(*, "resolved")= logi TRUE
[17:43:59.065]  - attr(*, "total_size")= num NA
[17:43:59.067]  - Getting '...' globals ... DONE
[17:43:59.067] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:59.067] List of 2
[17:43:59.067]  $ ...future.FUN:function (f)  
[17:43:59.067]  $ ...          : list()
[17:43:59.067]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.067]  - attr(*, "where")=List of 2
[17:43:59.067]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.067]   ..$ ...          :<environment: 0x5632acdea1f8> 
[17:43:59.067]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.067]  - attr(*, "resolved")= logi FALSE
[17:43:59.067]  - attr(*, "total_size")= num 1008
[17:43:59.070] Packages to be attached in all futures: [n=0] 
[17:43:59.070] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.070] Number of futures (= number of chunks): 1
[17:43:59.070] Launching 1 futures (chunks) ...
[17:43:59.070] Chunk #1 of 1 ...
[17:43:59.070]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.072]    + additional globals found: [n=2] ‘a’, ‘b’
[17:43:59.073]    + additional namespaces needed: [n=1] ‘tools’
[17:43:59.073]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.073]  - seeds: <none>
[17:43:59.073]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:43:59.076] Created future:
[17:43:59.076] SequentialFuture:
[17:43:59.076] Label: ‘future_lapply-1’
[17:43:59.076] Expression:
[17:43:59.076] {
[17:43:59.076]     do.call(function(...) {
[17:43:59.076]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.076]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.076]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.076]             on.exit(options(oopts), add = TRUE)
[17:43:59.076]         }
[17:43:59.076]         {
[17:43:59.076]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.076]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.076]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.076]             })
[17:43:59.076]         }
[17:43:59.076]     }, args = future.call.arguments)
[17:43:59.076] }
[17:43:59.076] Lazy evaluation: FALSE
[17:43:59.076] Asynchronous evaluation: FALSE
[17:43:59.076] Local evaluation: TRUE
[17:43:59.076] Environment: R_GlobalEnv
[17:43:59.076] Capture standard output: TRUE
[17:43:59.076] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.076] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:43:59.076] Packages: 1 packages (‘tools’)
[17:43:59.076] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.076] Resolved: TRUE
[17:43:59.076] Value: 224 bytes of class ‘list’
[17:43:59.076] Early signaling: FALSE
[17:43:59.076] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.076] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:59.077] Chunk #1 of 1 ... DONE
[17:43:59.077] Launching 1 futures (chunks) ... DONE
[17:43:59.077] Resolving 1 futures (chunks) ...
[17:43:59.077]  - Number of value chunks collected: 1
[17:43:59.077] Resolving 1 futures (chunks) ... DONE
[17:43:59.077] Reducing values from 1 chunks ...
[17:43:59.077]  - Number of values collected after concatenation: 4
[17:43:59.078]  - Number of values expected: 4
[17:43:59.078] Reducing values from 1 chunks ... DONE
[17:43:59.078] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:43:59.080] future_lapply() ...
[17:43:59.081] Number of chunks: 1
[17:43:59.081] getGlobalsAndPackagesXApply() ...
[17:43:59.081]  - future.globals: TRUE
[17:43:59.083]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:43:59.083]  - needed namespaces: [n=0] 
[17:43:59.083] Finding globals ... DONE
[17:43:59.084]  - use_args: TRUE
[17:43:59.084]  - Getting '...' globals ...
[17:43:59.084]    - '...' content: [n=0] 
[17:43:59.084] List of 1
[17:43:59.084]  $ ...: list()
[17:43:59.084]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.084]  - attr(*, "where")=List of 1
[17:43:59.084]   ..$ ...:<environment: 0x5632addf1458> 
[17:43:59.084]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.084]  - attr(*, "resolved")= logi TRUE
[17:43:59.084]  - attr(*, "total_size")= num NA
[17:43:59.086]  - Getting '...' globals ... DONE
[17:43:59.087] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:43:59.087] List of 3
[17:43:59.087]  $ ...future.FUN        :function (x)  
[17:43:59.087]  $ future.call.arguments:List of 1
[17:43:59.087]   ..$ a: num 1
[17:43:59.087]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.087]  $ ...                  : list()
[17:43:59.087]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.087]  - attr(*, "where")=List of 3
[17:43:59.087]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:43:59.087]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:43:59.087]   ..$ ...                  :<environment: 0x5632addf1458> 
[17:43:59.087]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.087]  - attr(*, "resolved")= logi FALSE
[17:43:59.087]  - attr(*, "total_size")= num 1272
[17:43:59.090] Packages to be attached in all futures: [n=0] 
[17:43:59.090] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.090] Number of futures (= number of chunks): 1
[17:43:59.091] Launching 1 futures (chunks) ...
[17:43:59.091] Chunk #1 of 1 ...
[17:43:59.091]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.091]    + additional globals found: [n=0] 
[17:43:59.091]    + additional namespaces needed: [n=0] 
[17:43:59.091]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.091]  - seeds: <none>
[17:43:59.091]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.094] Created future:
[17:43:59.094] SequentialFuture:
[17:43:59.094] Label: ‘future_lapply-1’
[17:43:59.094] Expression:
[17:43:59.094] {
[17:43:59.094]     do.call(function(...) {
[17:43:59.094]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.094]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.094]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.094]             on.exit(options(oopts), add = TRUE)
[17:43:59.094]         }
[17:43:59.094]         {
[17:43:59.094]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.094]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.094]                 ...future.FUN(...future.X_jj)
[17:43:59.094]             })
[17:43:59.094]         }
[17:43:59.094]     }, args = future.call.arguments)
[17:43:59.094] }
[17:43:59.094] Lazy evaluation: FALSE
[17:43:59.094] Asynchronous evaluation: FALSE
[17:43:59.094] Local evaluation: TRUE
[17:43:59.094] Environment: 0x5632addf17d8
[17:43:59.094] Capture standard output: TRUE
[17:43:59.094] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.094] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:59.094] Packages: <none>
[17:43:59.094] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.094] Resolved: TRUE
[17:43:59.094] Value: 56 bytes of class ‘list’
[17:43:59.094] Early signaling: FALSE
[17:43:59.094] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.094] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:59.095] Chunk #1 of 1 ... DONE
[17:43:59.095] Launching 1 futures (chunks) ... DONE
[17:43:59.095] Resolving 1 futures (chunks) ...
[17:43:59.095]  - Number of value chunks collected: 1
[17:43:59.096] Resolving 1 futures (chunks) ... DONE
[17:43:59.096] Reducing values from 1 chunks ...
[17:43:59.096]  - Number of values collected after concatenation: 1
[17:43:59.096]  - Number of values expected: 1
[17:43:59.096] Reducing values from 1 chunks ... DONE
[17:43:59.096] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:43:59.099] future_lapply() ...
[17:43:59.099] Number of chunks: 1
[17:43:59.100] getGlobalsAndPackagesXApply() ...
[17:43:59.100]  - future.globals: TRUE
[17:43:59.102]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:43:59.102]  - needed namespaces: [n=0] 
[17:43:59.102] Finding globals ... DONE
[17:43:59.102]  - use_args: TRUE
[17:43:59.102]  - Getting '...' globals ...
[17:43:59.102]    - '...' content: [n=0] 
[17:43:59.102] List of 1
[17:43:59.102]  $ ...: list()
[17:43:59.102]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.102]  - attr(*, "where")=List of 1
[17:43:59.102]   ..$ ...:<environment: 0x5632ad771bc8> 
[17:43:59.102]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.102]  - attr(*, "resolved")= logi TRUE
[17:43:59.102]  - attr(*, "total_size")= num NA
[17:43:59.105]  - Getting '...' globals ... DONE
[17:43:59.105] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:43:59.105] List of 3
[17:43:59.105]  $ ...future.FUN:function (ii)  
[17:43:59.105]  $ a            : num 1
[17:43:59.105]  $ ...          : list()
[17:43:59.105]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.105]  - attr(*, "where")=List of 3
[17:43:59.105]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.105]   ..$ a            :<environment: R_EmptyEnv> 
[17:43:59.105]   ..$ ...          :<environment: 0x5632ad771bc8> 
[17:43:59.105]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.105]  - attr(*, "resolved")= logi FALSE
[17:43:59.105]  - attr(*, "total_size")= num 2984
[17:43:59.108] Packages to be attached in all futures: [n=0] 
[17:43:59.108] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.108] Number of futures (= number of chunks): 1
[17:43:59.108] Launching 1 futures (chunks) ...
[17:43:59.108] Chunk #1 of 1 ...
[17:43:59.109]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.109]    + additional globals found: [n=0] 
[17:43:59.109]    + additional namespaces needed: [n=0] 
[17:43:59.109]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.109]  - seeds: <none>
[17:43:59.109]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.111] Created future:
[17:43:59.112] SequentialFuture:
[17:43:59.112] Label: ‘future_lapply-1’
[17:43:59.112] Expression:
[17:43:59.112] {
[17:43:59.112]     do.call(function(...) {
[17:43:59.112]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.112]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.112]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.112]             on.exit(options(oopts), add = TRUE)
[17:43:59.112]         }
[17:43:59.112]         {
[17:43:59.112]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.112]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.112]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.112]             })
[17:43:59.112]         }
[17:43:59.112]     }, args = future.call.arguments)
[17:43:59.112] }
[17:43:59.112] Lazy evaluation: FALSE
[17:43:59.112] Asynchronous evaluation: FALSE
[17:43:59.112] Local evaluation: TRUE
[17:43:59.112] Environment: R_GlobalEnv
[17:43:59.112] Capture standard output: TRUE
[17:43:59.112] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.112] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:43:59.112] Packages: <none>
[17:43:59.112] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.112] Resolved: TRUE
[17:43:59.112] Value: 56 bytes of class ‘list’
[17:43:59.112] Early signaling: FALSE
[17:43:59.112] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.112] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:59.112] Chunk #1 of 1 ... DONE
[17:43:59.113] Launching 1 futures (chunks) ... DONE
[17:43:59.113] Resolving 1 futures (chunks) ...
[17:43:59.113]  - Number of value chunks collected: 1
[17:43:59.113] Resolving 1 futures (chunks) ... DONE
[17:43:59.113] Reducing values from 1 chunks ...
[17:43:59.113]  - Number of values collected after concatenation: 1
[17:43:59.113]  - Number of values expected: 1
[17:43:59.113] Reducing values from 1 chunks ... DONE
[17:43:59.114] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:43:59.114] future_lapply() ...
[17:43:59.114] Number of chunks: 1
[17:43:59.115] getGlobalsAndPackagesXApply() ...
[17:43:59.115]  - future.globals: TRUE
[17:43:59.117]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:43:59.117]  - needed namespaces: [n=0] 
[17:43:59.117] Finding globals ... DONE
[17:43:59.117]  - use_args: TRUE
[17:43:59.117]  - Getting '...' globals ...
[17:43:59.117]    - '...' content: [n=0] 
[17:43:59.117] List of 1
[17:43:59.117]  $ ...: list()
[17:43:59.117]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.117]  - attr(*, "where")=List of 1
[17:43:59.117]   ..$ ...:<environment: 0x5632ac529640> 
[17:43:59.117]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.117]  - attr(*, "resolved")= logi TRUE
[17:43:59.117]  - attr(*, "total_size")= num NA
[17:43:59.120]  - Getting '...' globals ... DONE
[17:43:59.120] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:43:59.120] List of 3
[17:43:59.120]  $ ...future.FUN:function (ii)  
[17:43:59.120]  $ a            : num 1
[17:43:59.120]  $ ...          : list()
[17:43:59.120]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.120]  - attr(*, "where")=List of 3
[17:43:59.120]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.120]   ..$ a            :<environment: R_EmptyEnv> 
[17:43:59.120]   ..$ ...          :<environment: 0x5632ac529640> 
[17:43:59.120]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.120]  - attr(*, "resolved")= logi FALSE
[17:43:59.120]  - attr(*, "total_size")= num 2984
[17:43:59.123] Packages to be attached in all futures: [n=0] 
[17:43:59.123] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.123] Number of futures (= number of chunks): 1
[17:43:59.124] Launching 1 futures (chunks) ...
[17:43:59.124] Chunk #1 of 1 ...
[17:43:59.124]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.124]    + additional globals found: [n=0] 
[17:43:59.124]    + additional namespaces needed: [n=0] 
[17:43:59.124]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.124]  - seeds: <none>
[17:43:59.124]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.127] Created future:
[17:43:59.127] SequentialFuture:
[17:43:59.127] Label: ‘future_lapply-1’
[17:43:59.127] Expression:
[17:43:59.127] {
[17:43:59.127]     do.call(function(...) {
[17:43:59.127]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.127]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.127]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.127]             on.exit(options(oopts), add = TRUE)
[17:43:59.127]         }
[17:43:59.127]         {
[17:43:59.127]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.127]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.127]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.127]             })
[17:43:59.127]         }
[17:43:59.127]     }, args = future.call.arguments)
[17:43:59.127] }
[17:43:59.127] Lazy evaluation: FALSE
[17:43:59.127] Asynchronous evaluation: FALSE
[17:43:59.127] Local evaluation: TRUE
[17:43:59.127] Environment: R_GlobalEnv
[17:43:59.127] Capture standard output: TRUE
[17:43:59.127] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.127] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:43:59.127] Packages: <none>
[17:43:59.127] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.127] Resolved: TRUE
[17:43:59.127] Value: 56 bytes of class ‘list’
[17:43:59.127] Early signaling: FALSE
[17:43:59.127] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.127] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:59.128] Chunk #1 of 1 ... DONE
[17:43:59.128] Launching 1 futures (chunks) ... DONE
[17:43:59.128] Resolving 1 futures (chunks) ...
[17:43:59.128]  - Number of value chunks collected: 1
[17:43:59.128] Resolving 1 futures (chunks) ... DONE
[17:43:59.128] Reducing values from 1 chunks ...
[17:43:59.128]  - Number of values collected after concatenation: 1
[17:43:59.128]  - Number of values expected: 1
[17:43:59.129] Reducing values from 1 chunks ... DONE
[17:43:59.129] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:43:59.129] future_lapply() ...
[17:43:59.129] Number of chunks: 1
[17:43:59.129] getGlobalsAndPackagesXApply() ...
[17:43:59.129]  - future.globals: <name-value list> with names ‘42’
[17:43:59.130]  - use_args: TRUE
[17:43:59.130]  - Getting '...' globals ...
[17:43:59.130]    - '...' content: [n=0] 
[17:43:59.130] List of 1
[17:43:59.130]  $ ...: list()
[17:43:59.130]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.130]  - attr(*, "where")=List of 1
[17:43:59.130]   ..$ ...:<environment: 0x5632ae0b3ff0> 
[17:43:59.130]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.130]  - attr(*, "resolved")= logi TRUE
[17:43:59.130]  - attr(*, "total_size")= num NA
[17:43:59.133]  - Getting '...' globals ... DONE
[17:43:59.133] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:43:59.133] List of 3
[17:43:59.133]  $ a            : num 42
[17:43:59.133]  $ ...future.FUN:function (x)  
[17:43:59.133]  $ ...          : list()
[17:43:59.133]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.133]  - attr(*, "where")=List of 3
[17:43:59.133]   ..$ a            :<environment: R_EmptyEnv> 
[17:43:59.133]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:43:59.133]   ..$ ...          :<environment: 0x5632ae0b3ff0> 
[17:43:59.133]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.133]  - attr(*, "resolved")= logi FALSE
[17:43:59.133]  - attr(*, "total_size")= num NA
[17:43:59.136] Packages to be attached in all futures: [n=0] 
[17:43:59.136] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.136] Number of futures (= number of chunks): 1
[17:43:59.136] Launching 1 futures (chunks) ...
[17:43:59.136] Chunk #1 of 1 ...
[17:43:59.136]  - seeds: <none>
[17:43:59.136]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.139] Created future:
[17:43:59.139] SequentialFuture:
[17:43:59.139] Label: ‘future_lapply-1’
[17:43:59.139] Expression:
[17:43:59.139] {
[17:43:59.139]     do.call(function(...) {
[17:43:59.139]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.139]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.139]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.139]             on.exit(options(oopts), add = TRUE)
[17:43:59.139]         }
[17:43:59.139]         {
[17:43:59.139]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.139]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.139]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.139]             })
[17:43:59.139]         }
[17:43:59.139]     }, args = future.call.arguments)
[17:43:59.139] }
[17:43:59.139] Lazy evaluation: FALSE
[17:43:59.139] Asynchronous evaluation: FALSE
[17:43:59.139] Local evaluation: TRUE
[17:43:59.139] Environment: R_GlobalEnv
[17:43:59.139] Capture standard output: TRUE
[17:43:59.139] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.139] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:43:59.139] Packages: <none>
[17:43:59.139] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.139] Resolved: TRUE
[17:43:59.139] Value: 56 bytes of class ‘list’
[17:43:59.139] Early signaling: FALSE
[17:43:59.139] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.139] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[17:43:59.140] Chunk #1 of 1 ... DONE
[17:43:59.140] Launching 1 futures (chunks) ... DONE
[17:43:59.140] Resolving 1 futures (chunks) ...
[17:43:59.141]  - Number of value chunks collected: 1
[17:43:59.142] Resolving 1 futures (chunks) ... DONE
[17:43:59.142] Reducing values from 1 chunks ...
[17:43:59.142]  - Number of values collected after concatenation: 1
[17:43:59.143]  - Number of values expected: 1
[17:43:59.143] Reducing values from 1 chunks ... DONE
[17:43:59.143] future_lapply() ... DONE
List of 1
 $ : num 42
[17:43:59.150] future_lapply() ...
[17:43:59.155] Number of chunks: 2
[17:43:59.155] getGlobalsAndPackagesXApply() ...
[17:43:59.155]  - future.globals: TRUE
[17:43:59.160]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:43:59.160]  - needed namespaces: [n=0] 
[17:43:59.160] Finding globals ... DONE
[17:43:59.160]  - use_args: TRUE
[17:43:59.160]  - Getting '...' globals ...
[17:43:59.160]    - '...' content: [n=0] 
[17:43:59.161] List of 1
[17:43:59.161]  $ ...: list()
[17:43:59.161]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.161]  - attr(*, "where")=List of 1
[17:43:59.161]   ..$ ...:<environment: 0x5632ad0d9d48> 
[17:43:59.161]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.161]  - attr(*, "resolved")= logi TRUE
[17:43:59.161]  - attr(*, "total_size")= num NA
[17:43:59.163]  - Getting '...' globals ... DONE
[17:43:59.163] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:43:59.163] List of 6
[17:43:59.163]  $ ...future.FUN:function (i)  
[17:43:59.163]  $ caller       :function (a, b, FUN = call_my_add)  
[17:43:59.163]  $ args         :List of 1
[17:43:59.163]   ..$ FUN:function (a, b)  
[17:43:59.163]  $ call_my_add  :function (a, b)  
[17:43:59.163]  $ my_add       :function (a, b)  
[17:43:59.163]  $ ...          : list()
[17:43:59.163]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.163]  - attr(*, "where")=List of 6
[17:43:59.163]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.163]   ..$ caller       :<environment: R_EmptyEnv> 
[17:43:59.163]   ..$ args         :<environment: R_EmptyEnv> 
[17:43:59.163]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:43:59.163]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:43:59.163]   ..$ ...          :<environment: 0x5632ad0d9d48> 
[17:43:59.163]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.163]  - attr(*, "resolved")= logi FALSE
[17:43:59.163]  - attr(*, "total_size")= num 24120
[17:43:59.168] Packages to be attached in all futures: [n=0] 
[17:43:59.168] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.168] Number of futures (= number of chunks): 2
[17:43:59.168] Launching 2 futures (chunks) ...
[17:43:59.168] Chunk #1 of 2 ...
[17:43:59.168]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.168]    + additional globals found: [n=0] 
[17:43:59.168]    + additional namespaces needed: [n=0] 
[17:43:59.169]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.169]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:43:59.169]  - seeds: <none>
[17:43:59.169]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.177] Created future:
[17:43:59.178] MulticoreFuture:
[17:43:59.178] Label: ‘future_lapply-1’
[17:43:59.178] Expression:
[17:43:59.178] {
[17:43:59.178]     do.call(function(...) {
[17:43:59.178]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.178]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.178]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.178]             on.exit(options(oopts), add = TRUE)
[17:43:59.178]         }
[17:43:59.178]         {
[17:43:59.178]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.178]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.178]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.178]             })
[17:43:59.178]         }
[17:43:59.178]     }, args = future.call.arguments)
[17:43:59.178] }
[17:43:59.178] Lazy evaluation: FALSE
[17:43:59.178] Asynchronous evaluation: TRUE
[17:43:59.178] Local evaluation: TRUE
[17:43:59.178] Environment: 0x5632ad6837e0
[17:43:59.178] Capture standard output: TRUE
[17:43:59.178] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.178] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:43:59.178] Packages: <none>
[17:43:59.178] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.178] Resolved: TRUE
[17:43:59.178] Value: <not collected>
[17:43:59.178] Conditions captured: <none>
[17:43:59.178] Early signaling: FALSE
[17:43:59.178] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.178] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.185] Chunk #1 of 2 ... DONE
[17:43:59.185] Chunk #2 of 2 ...
[17:43:59.185]  - Finding globals in 'X' for chunk #2 ...
[17:43:59.186]    + additional globals found: [n=0] 
[17:43:59.186]    + additional namespaces needed: [n=0] 
[17:43:59.186]  - Finding globals in 'X' for chunk #2 ... DONE
[17:43:59.186]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:43:59.187]  - seeds: <none>
[17:43:59.187]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.196] Created future:
[17:43:59.196] MulticoreFuture:
[17:43:59.196] Label: ‘future_lapply-2’
[17:43:59.196] Expression:
[17:43:59.196] {
[17:43:59.196]     do.call(function(...) {
[17:43:59.196]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.196]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.196]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.196]             on.exit(options(oopts), add = TRUE)
[17:43:59.196]         }
[17:43:59.196]         {
[17:43:59.196]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.196]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.196]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.196]             })
[17:43:59.196]         }
[17:43:59.196]     }, args = future.call.arguments)
[17:43:59.196] }
[17:43:59.196] Lazy evaluation: FALSE
[17:43:59.196] Asynchronous evaluation: TRUE
[17:43:59.196] Local evaluation: TRUE
[17:43:59.196] Environment: 0x5632ad6837e0
[17:43:59.196] Capture standard output: TRUE
[17:43:59.196] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.196] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:43:59.196] Packages: <none>
[17:43:59.196] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.196] Resolved: TRUE
[17:43:59.196] Value: <not collected>
[17:43:59.196] Conditions captured: <none>
[17:43:59.196] Early signaling: FALSE
[17:43:59.196] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.196] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.205] Chunk #2 of 2 ... DONE
[17:43:59.205] Launching 2 futures (chunks) ... DONE
[17:43:59.205] Resolving 2 futures (chunks) ...
[17:43:59.209]  - Number of value chunks collected: 2
[17:43:59.210] Resolving 2 futures (chunks) ... DONE
[17:43:59.210] Reducing values from 2 chunks ...
[17:43:59.210]  - Number of values collected after concatenation: 3
[17:43:59.210]  - Number of values expected: 3
[17:43:59.210] Reducing values from 2 chunks ... DONE
[17:43:59.210] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:43:59.211] future_lapply() ...
[17:43:59.216] Number of chunks: 1
[17:43:59.216] getGlobalsAndPackagesXApply() ...
[17:43:59.216]  - future.globals: TRUE
[17:43:59.219]  - globals found/used: [n=1] ‘FUN’
[17:43:59.219]  - needed namespaces: [n=0] 
[17:43:59.219] Finding globals ... DONE
[17:43:59.220]  - use_args: TRUE
[17:43:59.220]  - Getting '...' globals ...
[17:43:59.220]    - '...' content: [n=1] ‘what’
[17:43:59.220] List of 1
[17:43:59.220]  $ ...:List of 1
[17:43:59.220]   ..$ what:function (x)  
[17:43:59.220]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.220]  - attr(*, "where")=List of 1
[17:43:59.220]   ..$ ...:<environment: 0x5632ae3197f8> 
[17:43:59.220]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.220]  - attr(*, "resolved")= logi TRUE
[17:43:59.220]  - attr(*, "total_size")= num NA
[17:43:59.227]  - Getting '...' globals ... DONE
[17:43:59.227] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:59.227] List of 2
[17:43:59.227]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:43:59.227]  $ ...          :List of 1
[17:43:59.227]   ..$ what:function (x)  
[17:43:59.227]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.227]  - attr(*, "where")=List of 2
[17:43:59.227]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.227]   ..$ ...          :<environment: 0x5632ae3197f8> 
[17:43:59.227]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.227]  - attr(*, "resolved")= logi FALSE
[17:43:59.227]  - attr(*, "total_size")= num 12192
[17:43:59.230] Packages to be attached in all futures: [n=0] 
[17:43:59.230] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.231] Number of futures (= number of chunks): 1
[17:43:59.231] Launching 1 futures (chunks) ...
[17:43:59.231] Chunk #1 of 1 ...
[17:43:59.231]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.231]    + additional globals found: [n=0] 
[17:43:59.232]    + additional namespaces needed: [n=0] 
[17:43:59.232]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.232]  - seeds: <none>
[17:43:59.232]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.239] Created future:
[17:43:59.239] MulticoreFuture:
[17:43:59.239] Label: ‘future_lapply-1’
[17:43:59.239] Expression:
[17:43:59.239] {
[17:43:59.239]     do.call(function(...) {
[17:43:59.239]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.239]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.239]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.239]             on.exit(options(oopts), add = TRUE)
[17:43:59.239]         }
[17:43:59.239]         {
[17:43:59.239]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.239]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.239]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.239]             })
[17:43:59.239]         }
[17:43:59.239]     }, args = future.call.arguments)
[17:43:59.239] }
[17:43:59.239] Lazy evaluation: FALSE
[17:43:59.239] Asynchronous evaluation: TRUE
[17:43:59.239] Local evaluation: TRUE
[17:43:59.239] Environment: R_GlobalEnv
[17:43:59.239] Capture standard output: TRUE
[17:43:59.239] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.239] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:59.239] Packages: <none>
[17:43:59.239] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.239] Resolved: TRUE
[17:43:59.239] Value: <not collected>
[17:43:59.239] Conditions captured: <none>
[17:43:59.239] Early signaling: FALSE
[17:43:59.239] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.239] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.248] Chunk #1 of 1 ... DONE
[17:43:59.248] Launching 1 futures (chunks) ... DONE
[17:43:59.248] Resolving 1 futures (chunks) ...
[17:43:59.249]  - Number of value chunks collected: 1
[17:43:59.250] Resolving 1 futures (chunks) ... DONE
[17:43:59.250] Reducing values from 1 chunks ...
[17:43:59.250]  - Number of values collected after concatenation: 1
[17:43:59.250]  - Number of values expected: 1
[17:43:59.250] Reducing values from 1 chunks ... DONE
[17:43:59.250] future_lapply() ... DONE
[17:43:59.250] future_lapply() ...
[17:43:59.256] Number of chunks: 1
[17:43:59.256] getGlobalsAndPackagesXApply() ...
[17:43:59.256]  - future.globals: TRUE
[17:43:59.259]  - globals found/used: [n=1] ‘FUN’
[17:43:59.259]  - needed namespaces: [n=0] 
[17:43:59.260] Finding globals ... DONE
[17:43:59.260]  - use_args: TRUE
[17:43:59.260]  - Getting '...' globals ...
[17:43:59.260]    - '...' content: [n=1] ‘what’
[17:43:59.260] List of 1
[17:43:59.260]  $ ...:List of 1
[17:43:59.260]   ..$ what:function (...)  
[17:43:59.260]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.260]  - attr(*, "where")=List of 1
[17:43:59.260]   ..$ ...:<environment: 0x5632acd77eb0> 
[17:43:59.260]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.260]  - attr(*, "resolved")= logi TRUE
[17:43:59.260]  - attr(*, "total_size")= num NA
[17:43:59.264]  - Getting '...' globals ... DONE
[17:43:59.264] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:59.264] List of 2
[17:43:59.264]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:43:59.264]  $ ...          :List of 1
[17:43:59.264]   ..$ what:function (...)  
[17:43:59.264]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.264]  - attr(*, "where")=List of 2
[17:43:59.264]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.264]   ..$ ...          :<environment: 0x5632acd77eb0> 
[17:43:59.264]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.264]  - attr(*, "resolved")= logi FALSE
[17:43:59.264]  - attr(*, "total_size")= num 13352
[17:43:59.268] Packages to be attached in all futures: [n=0] 
[17:43:59.268] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.268] Number of futures (= number of chunks): 1
[17:43:59.268] Launching 1 futures (chunks) ...
[17:43:59.268] Chunk #1 of 1 ...
[17:43:59.269]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.269]    + additional globals found: [n=0] 
[17:43:59.269]    + additional namespaces needed: [n=0] 
[17:43:59.269]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.269]  - seeds: <none>
[17:43:59.269]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.277] Created future:
[17:43:59.277] MulticoreFuture:
[17:43:59.277] Label: ‘future_lapply-1’
[17:43:59.277] Expression:
[17:43:59.277] {
[17:43:59.277]     do.call(function(...) {
[17:43:59.277]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.277]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.277]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.277]             on.exit(options(oopts), add = TRUE)
[17:43:59.277]         }
[17:43:59.277]         {
[17:43:59.277]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.277]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.277]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.277]             })
[17:43:59.277]         }
[17:43:59.277]     }, args = future.call.arguments)
[17:43:59.277] }
[17:43:59.277] Lazy evaluation: FALSE
[17:43:59.277] Asynchronous evaluation: TRUE
[17:43:59.277] Local evaluation: TRUE
[17:43:59.277] Environment: R_GlobalEnv
[17:43:59.277] Capture standard output: TRUE
[17:43:59.277] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.277] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:59.277] Packages: <none>
[17:43:59.277] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.277] Resolved: TRUE
[17:43:59.277] Value: <not collected>
[17:43:59.277] Conditions captured: <none>
[17:43:59.277] Early signaling: FALSE
[17:43:59.277] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.277] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.285] Chunk #1 of 1 ... DONE
[17:43:59.285] Launching 1 futures (chunks) ... DONE
[17:43:59.285] Resolving 1 futures (chunks) ...
[17:43:59.287]  - Number of value chunks collected: 1
[17:43:59.287] Resolving 1 futures (chunks) ... DONE
[17:43:59.287] Reducing values from 1 chunks ...
[17:43:59.287]  - Number of values collected after concatenation: 1
[17:43:59.287]  - Number of values expected: 1
[17:43:59.287] Reducing values from 1 chunks ... DONE
[17:43:59.287] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:43:59.288] future_lapply() ...
[17:43:59.292] Number of chunks: 1
[17:43:59.292] getGlobalsAndPackagesXApply() ...
[17:43:59.292]  - future.globals: TRUE
[17:43:59.294]  - globals found/used: [n=1] ‘FUN’
[17:43:59.295]  - needed namespaces: [n=0] 
[17:43:59.295] Finding globals ... DONE
[17:43:59.295]  - use_args: TRUE
[17:43:59.295]  - Getting '...' globals ...
[17:43:59.295]    - '...' content: [n=1] ‘b’
[17:43:59.296] List of 1
[17:43:59.296]  $ ...:List of 1
[17:43:59.296]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:43:59.296]   .. ..$ a: int [1:2] 1 2
[17:43:59.296]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.296]  - attr(*, "where")=List of 1
[17:43:59.296]   ..$ ...:<environment: 0x5632ade839c0> 
[17:43:59.296]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.296]  - attr(*, "resolved")= logi TRUE
[17:43:59.296]  - attr(*, "total_size")= num NA
[17:43:59.299]  - Getting '...' globals ... DONE
[17:43:59.300] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:59.300] List of 2
[17:43:59.300]  $ ...future.FUN:function (a, b)  
[17:43:59.300]  $ ...          :List of 1
[17:43:59.300]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:43:59.300]   .. ..$ a: int [1:2] 1 2
[17:43:59.300]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.300]  - attr(*, "where")=List of 2
[17:43:59.300]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.300]   ..$ ...          :<environment: 0x5632ade839c0> 
[17:43:59.300]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.300]  - attr(*, "resolved")= logi FALSE
[17:43:59.300]  - attr(*, "total_size")= num 1440
[17:43:59.304] Packages to be attached in all futures: [n=0] 
[17:43:59.304] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.304] Number of futures (= number of chunks): 1
[17:43:59.304] Launching 1 futures (chunks) ...
[17:43:59.304] Chunk #1 of 1 ...
[17:43:59.304]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.305]    + additional globals found: [n=0] 
[17:43:59.305]    + additional namespaces needed: [n=0] 
[17:43:59.305]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.305]  - seeds: <none>
[17:43:59.305]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.314] Created future:
[17:43:59.314] MulticoreFuture:
[17:43:59.314] Label: ‘future_lapply-1’
[17:43:59.314] Expression:
[17:43:59.314] {
[17:43:59.314]     do.call(function(...) {
[17:43:59.314]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.314]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.314]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.314]             on.exit(options(oopts), add = TRUE)
[17:43:59.314]         }
[17:43:59.314]         {
[17:43:59.314]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.314]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.314]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.314]             })
[17:43:59.314]         }
[17:43:59.314]     }, args = future.call.arguments)
[17:43:59.314] }
[17:43:59.314] Lazy evaluation: FALSE
[17:43:59.314] Asynchronous evaluation: TRUE
[17:43:59.314] Local evaluation: TRUE
[17:43:59.314] Environment: R_GlobalEnv
[17:43:59.314] Capture standard output: TRUE
[17:43:59.314] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.314] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:59.314] Packages: <none>
[17:43:59.314] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.314] Resolved: TRUE
[17:43:59.314] Value: <not collected>
[17:43:59.314] Conditions captured: <none>
[17:43:59.314] Early signaling: FALSE
[17:43:59.314] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.314] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.322] Chunk #1 of 1 ... DONE
[17:43:59.323] Launching 1 futures (chunks) ... DONE
[17:43:59.323] Resolving 1 futures (chunks) ...
[17:43:59.324]  - Number of value chunks collected: 1
[17:43:59.325] Resolving 1 futures (chunks) ... DONE
[17:43:59.325] Reducing values from 1 chunks ...
[17:43:59.325]  - Number of values collected after concatenation: 1
[17:43:59.325]  - Number of values expected: 1
[17:43:59.325] Reducing values from 1 chunks ... DONE
[17:43:59.325] future_lapply() ... DONE
[17:43:59.325] future_lapply() ...
[17:43:59.330] Number of chunks: 1
[17:43:59.330] getGlobalsAndPackagesXApply() ...
[17:43:59.330]  - future.globals: TRUE
[17:43:59.332]  - globals found/used: [n=1] ‘FUN’
[17:43:59.332]  - needed namespaces: [n=0] 
[17:43:59.332] Finding globals ... DONE
[17:43:59.332]  - use_args: TRUE
[17:43:59.332]  - Getting '...' globals ...
[17:43:59.333]    - '...' content: [n=1] ‘b’
[17:43:59.333] List of 1
[17:43:59.333]  $ ...:List of 1
[17:43:59.333]   ..$ b:<environment: 0x5632ad5d09c8> 
[17:43:59.333]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.333]  - attr(*, "where")=List of 1
[17:43:59.333]   ..$ ...:<environment: 0x5632ad5d16e8> 
[17:43:59.333]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.333]  - attr(*, "resolved")= logi TRUE
[17:43:59.333]  - attr(*, "total_size")= num NA
[17:43:59.337]  - Getting '...' globals ... DONE
[17:43:59.337] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:59.337] List of 2
[17:43:59.337]  $ ...future.FUN:function (a, b)  
[17:43:59.337]  $ ...          :List of 1
[17:43:59.337]   ..$ b:<environment: 0x5632ad5d09c8> 
[17:43:59.337]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.337]  - attr(*, "where")=List of 2
[17:43:59.337]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.337]   ..$ ...          :<environment: 0x5632ad5d16e8> 
[17:43:59.337]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.337]  - attr(*, "resolved")= logi FALSE
[17:43:59.337]  - attr(*, "total_size")= num 1440
[17:43:59.340] Packages to be attached in all futures: [n=0] 
[17:43:59.340] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.341] Number of futures (= number of chunks): 1
[17:43:59.341] Launching 1 futures (chunks) ...
[17:43:59.341] Chunk #1 of 1 ...
[17:43:59.341]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.341]    + additional globals found: [n=0] 
[17:43:59.341]    + additional namespaces needed: [n=0] 
[17:43:59.342]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.342]  - seeds: <none>
[17:43:59.342]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.349] Created future:
[17:43:59.349] MulticoreFuture:
[17:43:59.349] Label: ‘future_lapply-1’
[17:43:59.349] Expression:
[17:43:59.349] {
[17:43:59.349]     do.call(function(...) {
[17:43:59.349]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.349]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.349]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.349]             on.exit(options(oopts), add = TRUE)
[17:43:59.349]         }
[17:43:59.349]         {
[17:43:59.349]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.349]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.349]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.349]             })
[17:43:59.349]         }
[17:43:59.349]     }, args = future.call.arguments)
[17:43:59.349] }
[17:43:59.349] Lazy evaluation: FALSE
[17:43:59.349] Asynchronous evaluation: TRUE
[17:43:59.349] Local evaluation: TRUE
[17:43:59.349] Environment: R_GlobalEnv
[17:43:59.349] Capture standard output: TRUE
[17:43:59.349] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.349] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:59.349] Packages: <none>
[17:43:59.349] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.349] Resolved: TRUE
[17:43:59.349] Value: <not collected>
[17:43:59.349] Conditions captured: <none>
[17:43:59.349] Early signaling: FALSE
[17:43:59.349] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.349] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.357] Chunk #1 of 1 ... DONE
[17:43:59.358] Launching 1 futures (chunks) ... DONE
[17:43:59.358] Resolving 1 futures (chunks) ...
[17:43:59.359]  - Number of value chunks collected: 1
[17:43:59.360] Resolving 1 futures (chunks) ... DONE
[17:43:59.360] Reducing values from 1 chunks ...
[17:43:59.360]  - Number of values collected after concatenation: 1
[17:43:59.360]  - Number of values expected: 1
[17:43:59.360] Reducing values from 1 chunks ... DONE
[17:43:59.360] future_lapply() ... DONE
[17:43:59.360] future_lapply() ...
[17:43:59.365] Number of chunks: 1
[17:43:59.365] getGlobalsAndPackagesXApply() ...
[17:43:59.365]  - future.globals: TRUE
[17:43:59.368]  - globals found/used: [n=1] ‘FUN’
[17:43:59.368]  - needed namespaces: [n=0] 
[17:43:59.368] Finding globals ... DONE
[17:43:59.368]  - use_args: TRUE
[17:43:59.368]  - Getting '...' globals ...
[17:43:59.369]    - '...' content: [n=1] ‘b’
[17:43:59.369] List of 1
[17:43:59.369]  $ ...:List of 1
[17:43:59.369]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:43:59.369]   .. .. ..@ slots     :List of 4
[17:43:59.369]   .. .. .. ..$ .Data  : chr "function"
[17:43:59.369]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. ..$ target : chr "signature"
[17:43:59.369]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. ..$ defined: chr "signature"
[17:43:59.369]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. ..$ generic: chr "character"
[17:43:59.369]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. ..@ contains  :List of 3
[17:43:59.369]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.369]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ superClass: chr "function"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.369]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.369]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.369]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.369]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.369]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.369]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.369]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.369]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.369]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.369]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.369]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.369]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.369]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.369]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.369]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.369]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ by        : chr "function"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.369]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.369]   .. .. ..@ virtual   : logi FALSE
[17:43:59.369]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:43:59.369]  list()
[17:43:59.369]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:43:59.369]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:43:59.369]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:43:59.369]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:43:59.369]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:43:59.369]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:43:59.369]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:43:59.369]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:43:59.369]   .. .. .. .. ..$ generic: chr(0) 
[17:43:59.369]   .. .. ..@ validity  : NULL
[17:43:59.369]   .. .. ..@ access    : list()
[17:43:59.369]   .. .. ..@ className : chr "MethodDefinition"
[17:43:59.369]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. ..@ subclasses:List of 7
[17:43:59.369]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.369]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.369]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.369]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.369]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.369]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.369]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.369]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.369]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.369]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.369]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.369]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.369]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.369]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.369]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.369]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.369]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.369]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.369]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.369]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.369]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.369]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.369]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.369]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.369]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.369]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.369]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.369]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.369]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.369]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.369]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.369]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.369]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.369]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.369]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.369]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.369]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.369]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.369]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.369]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.369]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.369]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.369]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.369]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.369]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.369]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:43:59.369]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.369]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.369]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.369]   .. .. ..@ versionKey:<externalptr> 
[17:43:59.369]   .. .. ..@ sealed    : logi TRUE
[17:43:59.369]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.369]  - attr(*, "where")=List of 1
[17:43:59.369]   ..$ ...:<environment: 0x5632ab4afd60> 
[17:43:59.369]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.369]  - attr(*, "resolved")= logi TRUE
[17:43:59.369]  - attr(*, "total_size")= num NA
[17:43:59.422]  - Getting '...' globals ... DONE
[17:43:59.422] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:59.423] List of 2
[17:43:59.423]  $ ...future.FUN:function (a, b)  
[17:43:59.423]  $ ...          :List of 1
[17:43:59.423]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:43:59.423]   .. .. ..@ slots     :List of 4
[17:43:59.423]   .. .. .. ..$ .Data  : chr "function"
[17:43:59.423]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. ..$ target : chr "signature"
[17:43:59.423]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. ..$ defined: chr "signature"
[17:43:59.423]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. ..$ generic: chr "character"
[17:43:59.423]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. ..@ contains  :List of 3
[17:43:59.423]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.423]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ superClass: chr "function"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.423]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.423]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.423]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.423]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.423]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.423]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.423]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.423]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.423]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.423]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.423]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.423]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.423]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.423]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.423]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.423]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ by        : chr "function"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.423]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.423]   .. .. ..@ virtual   : logi FALSE
[17:43:59.423]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:43:59.423]  list()
[17:43:59.423]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:43:59.423]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:43:59.423]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:43:59.423]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:43:59.423]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:43:59.423]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:43:59.423]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:43:59.423]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:43:59.423]   .. .. .. .. ..$ generic: chr(0) 
[17:43:59.423]   .. .. ..@ validity  : NULL
[17:43:59.423]   .. .. ..@ access    : list()
[17:43:59.423]   .. .. ..@ className : chr "MethodDefinition"
[17:43:59.423]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. ..@ subclasses:List of 7
[17:43:59.423]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.423]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.423]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.423]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.423]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.423]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.423]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.423]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.423]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.423]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.423]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.423]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.423]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.423]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.423]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.423]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.423]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.423]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.423]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.423]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.423]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.423]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.423]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.423]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.423]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.423]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ by        : chr(0) 
[17:43:59.423]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.423]   .. .. .. .. .. ..@ distance  : num 1
[17:43:59.423]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.423]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.423]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.423]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.423]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.423]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.423]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.423]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.423]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.423]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.423]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.423]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.423]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:43:59.423]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ package   : chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:43:59.423]   .. .. .. .. .. ..@ test      :function (object)  
[17:43:59.423]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:43:59.423]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:43:59.423]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:43:59.423]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:43:59.423]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:43:59.423]   .. .. .. .. .. ..@ distance  : num 2
[17:43:59.423]   .. .. ..@ versionKey:<externalptr> 
[17:43:59.423]   .. .. ..@ sealed    : logi TRUE
[17:43:59.423]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.423]  - attr(*, "where")=List of 2
[17:43:59.423]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.423]   ..$ ...          :<environment: 0x5632ab4afd60> 
[17:43:59.423]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.423]  - attr(*, "resolved")= logi FALSE
[17:43:59.423]  - attr(*, "total_size")= num 405168
[17:43:59.470] Packages to be attached in all futures: [n=0] 
[17:43:59.470] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.470] Number of futures (= number of chunks): 1
[17:43:59.470] Launching 1 futures (chunks) ...
[17:43:59.471] Chunk #1 of 1 ...
[17:43:59.471]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.471]    + additional globals found: [n=0] 
[17:43:59.471]    + additional namespaces needed: [n=0] 
[17:43:59.471]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.471]  - seeds: <none>
[17:43:59.471]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.479] Created future:
[17:43:59.479] MulticoreFuture:
[17:43:59.479] Label: ‘future_lapply-1’
[17:43:59.479] Expression:
[17:43:59.479] {
[17:43:59.479]     do.call(function(...) {
[17:43:59.479]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.479]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.479]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.479]             on.exit(options(oopts), add = TRUE)
[17:43:59.479]         }
[17:43:59.479]         {
[17:43:59.479]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.479]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.479]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.479]             })
[17:43:59.479]         }
[17:43:59.479]     }, args = future.call.arguments)
[17:43:59.479] }
[17:43:59.479] Lazy evaluation: FALSE
[17:43:59.479] Asynchronous evaluation: TRUE
[17:43:59.479] Local evaluation: TRUE
[17:43:59.479] Environment: R_GlobalEnv
[17:43:59.479] Capture standard output: TRUE
[17:43:59.479] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.479] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:59.479] Packages: <none>
[17:43:59.479] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.479] Resolved: TRUE
[17:43:59.479] Value: <not collected>
[17:43:59.479] Conditions captured: <none>
[17:43:59.479] Early signaling: FALSE
[17:43:59.479] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.479] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.487] Chunk #1 of 1 ... DONE
[17:43:59.487] Launching 1 futures (chunks) ... DONE
[17:43:59.488] Resolving 1 futures (chunks) ...
[17:43:59.489]  - Number of value chunks collected: 1
[17:43:59.489] Resolving 1 futures (chunks) ... DONE
[17:43:59.489] Reducing values from 1 chunks ...
[17:43:59.490]  - Number of values collected after concatenation: 1
[17:43:59.490]  - Number of values expected: 1
[17:43:59.490] Reducing values from 1 chunks ... DONE
[17:43:59.490] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:43:59.493] future_lapply() ...
[17:43:59.497] Number of chunks: 2
[17:43:59.497] getGlobalsAndPackagesXApply() ...
[17:43:59.498]  - future.globals: TRUE
[17:43:59.499]  - globals found/used: [n=1] ‘FUN’
[17:43:59.500]  - needed namespaces: [n=0] 
[17:43:59.500] Finding globals ... DONE
[17:43:59.500]  - use_args: TRUE
[17:43:59.500]  - Getting '...' globals ...
[17:43:59.500]    - '...' content: [n=0] 
[17:43:59.500] List of 1
[17:43:59.500]  $ ...: list()
[17:43:59.500]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.500]  - attr(*, "where")=List of 1
[17:43:59.500]   ..$ ...:<environment: 0x5632ace366c8> 
[17:43:59.500]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.500]  - attr(*, "resolved")= logi TRUE
[17:43:59.500]  - attr(*, "total_size")= num NA
[17:43:59.503]  - Getting '...' globals ... DONE
[17:43:59.504] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:43:59.504] List of 2
[17:43:59.504]  $ ...future.FUN:function (f)  
[17:43:59.504]  $ ...          : list()
[17:43:59.504]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.504]  - attr(*, "where")=List of 2
[17:43:59.504]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.504]   ..$ ...          :<environment: 0x5632ace366c8> 
[17:43:59.504]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.504]  - attr(*, "resolved")= logi FALSE
[17:43:59.504]  - attr(*, "total_size")= num 1008
[17:43:59.507] Packages to be attached in all futures: [n=0] 
[17:43:59.507] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.507] Number of futures (= number of chunks): 2
[17:43:59.507] Launching 2 futures (chunks) ...
[17:43:59.507] Chunk #1 of 2 ...
[17:43:59.508]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.509]    + additional globals found: [n=2] ‘a’, ‘b’
[17:43:59.509]    + additional namespaces needed: [n=0] 
[17:43:59.510]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.510]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:43:59.510]  - seeds: <none>
[17:43:59.510]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:43:59.518] Created future:
[17:43:59.518] MulticoreFuture:
[17:43:59.518] Label: ‘future_lapply-1’
[17:43:59.518] Expression:
[17:43:59.518] {
[17:43:59.518]     do.call(function(...) {
[17:43:59.518]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.518]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.518]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.518]             on.exit(options(oopts), add = TRUE)
[17:43:59.518]         }
[17:43:59.518]         {
[17:43:59.518]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.518]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.518]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.518]             })
[17:43:59.518]         }
[17:43:59.518]     }, args = future.call.arguments)
[17:43:59.518] }
[17:43:59.518] Lazy evaluation: FALSE
[17:43:59.518] Asynchronous evaluation: TRUE
[17:43:59.518] Local evaluation: TRUE
[17:43:59.518] Environment: R_GlobalEnv
[17:43:59.518] Capture standard output: TRUE
[17:43:59.518] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.518] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:43:59.518] Packages: <none>
[17:43:59.518] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.518] Resolved: TRUE
[17:43:59.518] Value: <not collected>
[17:43:59.518] Conditions captured: <none>
[17:43:59.518] Early signaling: FALSE
[17:43:59.518] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.518] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.526] Chunk #1 of 2 ... DONE
[17:43:59.527] Chunk #2 of 2 ...
[17:43:59.527]  - Finding globals in 'X' for chunk #2 ...
[17:43:59.530]    + additional globals found: [n=2] ‘a’, ‘b’
[17:43:59.530]    + additional namespaces needed: [n=1] ‘tools’
[17:43:59.530]  - Finding globals in 'X' for chunk #2 ... DONE
[17:43:59.531]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:43:59.531]  - seeds: <none>
[17:43:59.531]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:43:59.540] Created future:
[17:43:59.540] MulticoreFuture:
[17:43:59.540] Label: ‘future_lapply-2’
[17:43:59.540] Expression:
[17:43:59.540] {
[17:43:59.540]     do.call(function(...) {
[17:43:59.540]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.540]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.540]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.540]             on.exit(options(oopts), add = TRUE)
[17:43:59.540]         }
[17:43:59.540]         {
[17:43:59.540]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.540]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.540]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.540]             })
[17:43:59.540]         }
[17:43:59.540]     }, args = future.call.arguments)
[17:43:59.540] }
[17:43:59.540] Lazy evaluation: FALSE
[17:43:59.540] Asynchronous evaluation: TRUE
[17:43:59.540] Local evaluation: TRUE
[17:43:59.540] Environment: R_GlobalEnv
[17:43:59.540] Capture standard output: TRUE
[17:43:59.540] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.540] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:43:59.540] Packages: 1 packages (‘tools’)
[17:43:59.540] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.540] Resolved: TRUE
[17:43:59.540] Value: <not collected>
[17:43:59.540] Conditions captured: <none>
[17:43:59.540] Early signaling: FALSE
[17:43:59.540] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.540] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.549] Chunk #2 of 2 ... DONE
[17:43:59.549] Launching 2 futures (chunks) ... DONE
[17:43:59.549] Resolving 2 futures (chunks) ...
[17:43:59.552]  - Number of value chunks collected: 2
[17:43:59.552] Resolving 2 futures (chunks) ... DONE
[17:43:59.552] Reducing values from 2 chunks ...
[17:43:59.553]  - Number of values collected after concatenation: 4
[17:43:59.553]  - Number of values expected: 4
[17:43:59.553] Reducing values from 2 chunks ... DONE
[17:43:59.553] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:43:59.557] future_lapply() ...
[17:43:59.561] Number of chunks: 1
[17:43:59.562] getGlobalsAndPackagesXApply() ...
[17:43:59.562]  - future.globals: TRUE
[17:43:59.564]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:43:59.564]  - needed namespaces: [n=0] 
[17:43:59.565] Finding globals ... DONE
[17:43:59.565]  - use_args: TRUE
[17:43:59.565]  - Getting '...' globals ...
[17:43:59.565]    - '...' content: [n=0] 
[17:43:59.565] List of 1
[17:43:59.565]  $ ...: list()
[17:43:59.565]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.565]  - attr(*, "where")=List of 1
[17:43:59.565]   ..$ ...:<environment: 0x5632ae32c7c8> 
[17:43:59.565]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.565]  - attr(*, "resolved")= logi TRUE
[17:43:59.565]  - attr(*, "total_size")= num NA
[17:43:59.568]  - Getting '...' globals ... DONE
[17:43:59.568] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:43:59.568] List of 3
[17:43:59.568]  $ ...future.FUN        :function (x)  
[17:43:59.568]  $ future.call.arguments:List of 1
[17:43:59.568]   ..$ a: num 1
[17:43:59.568]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.568]  $ ...                  : list()
[17:43:59.568]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.568]  - attr(*, "where")=List of 3
[17:43:59.568]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:43:59.568]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:43:59.568]   ..$ ...                  :<environment: 0x5632ae32c7c8> 
[17:43:59.568]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.568]  - attr(*, "resolved")= logi FALSE
[17:43:59.568]  - attr(*, "total_size")= num 1272
[17:43:59.575] Packages to be attached in all futures: [n=0] 
[17:43:59.575] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.575] Number of futures (= number of chunks): 1
[17:43:59.576] Launching 1 futures (chunks) ...
[17:43:59.576] Chunk #1 of 1 ...
[17:43:59.576]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.576]    + additional globals found: [n=0] 
[17:43:59.576]    + additional namespaces needed: [n=0] 
[17:43:59.576]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.576]  - seeds: <none>
[17:43:59.577]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.584] Created future:
[17:43:59.584] MulticoreFuture:
[17:43:59.584] Label: ‘future_lapply-1’
[17:43:59.584] Expression:
[17:43:59.584] {
[17:43:59.584]     do.call(function(...) {
[17:43:59.584]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.584]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.584]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.584]             on.exit(options(oopts), add = TRUE)
[17:43:59.584]         }
[17:43:59.584]         {
[17:43:59.584]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.584]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.584]                 ...future.FUN(...future.X_jj)
[17:43:59.584]             })
[17:43:59.584]         }
[17:43:59.584]     }, args = future.call.arguments)
[17:43:59.584] }
[17:43:59.584] Lazy evaluation: FALSE
[17:43:59.584] Asynchronous evaluation: TRUE
[17:43:59.584] Local evaluation: TRUE
[17:43:59.584] Environment: 0x5632ae32cb48
[17:43:59.584] Capture standard output: TRUE
[17:43:59.584] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.584] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:43:59.584] Packages: <none>
[17:43:59.584] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.584] Resolved: TRUE
[17:43:59.584] Value: <not collected>
[17:43:59.584] Conditions captured: <none>
[17:43:59.584] Early signaling: FALSE
[17:43:59.584] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.584] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.592] Chunk #1 of 1 ... DONE
[17:43:59.592] Launching 1 futures (chunks) ... DONE
[17:43:59.592] Resolving 1 futures (chunks) ...
[17:43:59.594]  - Number of value chunks collected: 1
[17:43:59.594] Resolving 1 futures (chunks) ... DONE
[17:43:59.594] Reducing values from 1 chunks ...
[17:43:59.594]  - Number of values collected after concatenation: 1
[17:43:59.595]  - Number of values expected: 1
[17:43:59.595] Reducing values from 1 chunks ... DONE
[17:43:59.595] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:43:59.597] future_lapply() ...
[17:43:59.601] Number of chunks: 1
[17:43:59.602] getGlobalsAndPackagesXApply() ...
[17:43:59.602]  - future.globals: TRUE
[17:43:59.604]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:43:59.605]  - needed namespaces: [n=0] 
[17:43:59.605] Finding globals ... DONE
[17:43:59.605]  - use_args: TRUE
[17:43:59.605]  - Getting '...' globals ...
[17:43:59.605]    - '...' content: [n=0] 
[17:43:59.605] List of 1
[17:43:59.605]  $ ...: list()
[17:43:59.605]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.605]  - attr(*, "where")=List of 1
[17:43:59.605]   ..$ ...:<environment: 0x5632acc26ac8> 
[17:43:59.605]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.605]  - attr(*, "resolved")= logi TRUE
[17:43:59.605]  - attr(*, "total_size")= num NA
[17:43:59.609]  - Getting '...' globals ... DONE
[17:43:59.609] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:43:59.609] List of 3
[17:43:59.609]  $ ...future.FUN:function (ii)  
[17:43:59.609]  $ a            : num 1
[17:43:59.609]  $ ...          : list()
[17:43:59.609]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.609]  - attr(*, "where")=List of 3
[17:43:59.609]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.609]   ..$ a            :<environment: R_EmptyEnv> 
[17:43:59.609]   ..$ ...          :<environment: 0x5632acc26ac8> 
[17:43:59.609]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.609]  - attr(*, "resolved")= logi FALSE
[17:43:59.609]  - attr(*, "total_size")= num 2984
[17:43:59.613] Packages to be attached in all futures: [n=0] 
[17:43:59.613] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.613] Number of futures (= number of chunks): 1
[17:43:59.613] Launching 1 futures (chunks) ...
[17:43:59.613] Chunk #1 of 1 ...
[17:43:59.613]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.614]    + additional globals found: [n=0] 
[17:43:59.614]    + additional namespaces needed: [n=0] 
[17:43:59.614]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.614]  - seeds: <none>
[17:43:59.614]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.622] Created future:
[17:43:59.622] MulticoreFuture:
[17:43:59.622] Label: ‘future_lapply-1’
[17:43:59.622] Expression:
[17:43:59.622] {
[17:43:59.622]     do.call(function(...) {
[17:43:59.622]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.622]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.622]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.622]             on.exit(options(oopts), add = TRUE)
[17:43:59.622]         }
[17:43:59.622]         {
[17:43:59.622]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.622]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.622]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.622]             })
[17:43:59.622]         }
[17:43:59.622]     }, args = future.call.arguments)
[17:43:59.622] }
[17:43:59.622] Lazy evaluation: FALSE
[17:43:59.622] Asynchronous evaluation: TRUE
[17:43:59.622] Local evaluation: TRUE
[17:43:59.622] Environment: R_GlobalEnv
[17:43:59.622] Capture standard output: TRUE
[17:43:59.622] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.622] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:43:59.622] Packages: <none>
[17:43:59.622] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.622] Resolved: TRUE
[17:43:59.622] Value: <not collected>
[17:43:59.622] Conditions captured: <none>
[17:43:59.622] Early signaling: FALSE
[17:43:59.622] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.622] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.630] Chunk #1 of 1 ... DONE
[17:43:59.630] Launching 1 futures (chunks) ... DONE
[17:43:59.630] Resolving 1 futures (chunks) ...
[17:43:59.632]  - Number of value chunks collected: 1
[17:43:59.632] Resolving 1 futures (chunks) ... DONE
[17:43:59.632] Reducing values from 1 chunks ...
[17:43:59.632]  - Number of values collected after concatenation: 1
[17:43:59.632]  - Number of values expected: 1
[17:43:59.633] Reducing values from 1 chunks ... DONE
[17:43:59.633] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:43:59.633] future_lapply() ...
[17:43:59.638] Number of chunks: 1
[17:43:59.638] getGlobalsAndPackagesXApply() ...
[17:43:59.638]  - future.globals: TRUE
[17:43:59.640]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:43:59.641]  - needed namespaces: [n=0] 
[17:43:59.641] Finding globals ... DONE
[17:43:59.641]  - use_args: TRUE
[17:43:59.641]  - Getting '...' globals ...
[17:43:59.641]    - '...' content: [n=0] 
[17:43:59.641] List of 1
[17:43:59.641]  $ ...: list()
[17:43:59.641]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.641]  - attr(*, "where")=List of 1
[17:43:59.641]   ..$ ...:<environment: 0x5632ade9f938> 
[17:43:59.641]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.641]  - attr(*, "resolved")= logi TRUE
[17:43:59.641]  - attr(*, "total_size")= num NA
[17:43:59.644]  - Getting '...' globals ... DONE
[17:43:59.645] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:43:59.645] List of 3
[17:43:59.645]  $ ...future.FUN:function (ii)  
[17:43:59.645]  $ a            : num 1
[17:43:59.645]  $ ...          : list()
[17:43:59.645]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.645]  - attr(*, "where")=List of 3
[17:43:59.645]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:43:59.645]   ..$ a            :<environment: R_EmptyEnv> 
[17:43:59.645]   ..$ ...          :<environment: 0x5632ade9f938> 
[17:43:59.645]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.645]  - attr(*, "resolved")= logi FALSE
[17:43:59.645]  - attr(*, "total_size")= num 2984
[17:43:59.648] Packages to be attached in all futures: [n=0] 
[17:43:59.649] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.649] Number of futures (= number of chunks): 1
[17:43:59.649] Launching 1 futures (chunks) ...
[17:43:59.649] Chunk #1 of 1 ...
[17:43:59.649]  - Finding globals in 'X' for chunk #1 ...
[17:43:59.650]    + additional globals found: [n=0] 
[17:43:59.650]    + additional namespaces needed: [n=0] 
[17:43:59.650]  - Finding globals in 'X' for chunk #1 ... DONE
[17:43:59.650]  - seeds: <none>
[17:43:59.650]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.659] Created future:
[17:43:59.660] MulticoreFuture:
[17:43:59.660] Label: ‘future_lapply-1’
[17:43:59.660] Expression:
[17:43:59.660] {
[17:43:59.660]     do.call(function(...) {
[17:43:59.660]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.660]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.660]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.660]             on.exit(options(oopts), add = TRUE)
[17:43:59.660]         }
[17:43:59.660]         {
[17:43:59.660]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.660]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.660]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.660]             })
[17:43:59.660]         }
[17:43:59.660]     }, args = future.call.arguments)
[17:43:59.660] }
[17:43:59.660] Lazy evaluation: FALSE
[17:43:59.660] Asynchronous evaluation: TRUE
[17:43:59.660] Local evaluation: TRUE
[17:43:59.660] Environment: R_GlobalEnv
[17:43:59.660] Capture standard output: TRUE
[17:43:59.660] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.660] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:43:59.660] Packages: <none>
[17:43:59.660] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.660] Resolved: TRUE
[17:43:59.660] Value: <not collected>
[17:43:59.660] Conditions captured: <none>
[17:43:59.660] Early signaling: FALSE
[17:43:59.660] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.660] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.668] Chunk #1 of 1 ... DONE
[17:43:59.668] Launching 1 futures (chunks) ... DONE
[17:43:59.668] Resolving 1 futures (chunks) ...
[17:43:59.670]  - Number of value chunks collected: 1
[17:43:59.670] Resolving 1 futures (chunks) ... DONE
[17:43:59.670] Reducing values from 1 chunks ...
[17:43:59.670]  - Number of values collected after concatenation: 1
[17:43:59.670]  - Number of values expected: 1
[17:43:59.670] Reducing values from 1 chunks ... DONE
[17:43:59.671] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:43:59.671] future_lapply() ...
[17:43:59.675] Number of chunks: 1
[17:43:59.675] getGlobalsAndPackagesXApply() ...
[17:43:59.675]  - future.globals: <name-value list> with names ‘42’
[17:43:59.676]  - use_args: TRUE
[17:43:59.676]  - Getting '...' globals ...
[17:43:59.676]    - '...' content: [n=0] 
[17:43:59.676] List of 1
[17:43:59.676]  $ ...: list()
[17:43:59.676]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.676]  - attr(*, "where")=List of 1
[17:43:59.676]   ..$ ...:<environment: 0x5632ad513e90> 
[17:43:59.676]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.676]  - attr(*, "resolved")= logi TRUE
[17:43:59.676]  - attr(*, "total_size")= num NA
[17:43:59.679]  - Getting '...' globals ... DONE
[17:43:59.680] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:43:59.680] List of 3
[17:43:59.680]  $ a            : num 42
[17:43:59.680]  $ ...future.FUN:function (x)  
[17:43:59.680]  $ ...          : list()
[17:43:59.680]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:43:59.680]  - attr(*, "where")=List of 3
[17:43:59.680]   ..$ a            :<environment: R_EmptyEnv> 
[17:43:59.680]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:43:59.680]   ..$ ...          :<environment: 0x5632ad513e90> 
[17:43:59.680]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:43:59.680]  - attr(*, "resolved")= logi FALSE
[17:43:59.680]  - attr(*, "total_size")= num NA
[17:43:59.683] Packages to be attached in all futures: [n=0] 
[17:43:59.684] getGlobalsAndPackagesXApply() ... DONE
[17:43:59.684] Number of futures (= number of chunks): 1
[17:43:59.684] Launching 1 futures (chunks) ...
[17:43:59.684] Chunk #1 of 1 ...
[17:43:59.684]  - seeds: <none>
[17:43:59.684]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:43:59.693] Created future:
[17:43:59.693] MulticoreFuture:
[17:43:59.693] Label: ‘future_lapply-1’
[17:43:59.693] Expression:
[17:43:59.693] {
[17:43:59.693]     do.call(function(...) {
[17:43:59.693]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:43:59.693]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:43:59.693]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:43:59.693]             on.exit(options(oopts), add = TRUE)
[17:43:59.693]         }
[17:43:59.693]         {
[17:43:59.693]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:43:59.693]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:43:59.693]                 ...future.FUN(...future.X_jj, ...)
[17:43:59.693]             })
[17:43:59.693]         }
[17:43:59.693]     }, args = future.call.arguments)
[17:43:59.693] }
[17:43:59.693] Lazy evaluation: FALSE
[17:43:59.693] Asynchronous evaluation: TRUE
[17:43:59.693] Local evaluation: TRUE
[17:43:59.693] Environment: R_GlobalEnv
[17:43:59.693] Capture standard output: TRUE
[17:43:59.693] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:43:59.693] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:43:59.693] Packages: <none>
[17:43:59.693] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:43:59.693] Resolved: TRUE
[17:43:59.693] Value: <not collected>
[17:43:59.693] Conditions captured: <none>
[17:43:59.693] Early signaling: FALSE
[17:43:59.693] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:43:59.693] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:43:59.701] Chunk #1 of 1 ... DONE
[17:43:59.701] Launching 1 futures (chunks) ... DONE
[17:43:59.701] Resolving 1 futures (chunks) ...
[17:43:59.703]  - Number of value chunks collected: 1
[17:43:59.703] Resolving 1 futures (chunks) ... DONE
[17:43:59.703] Reducing values from 1 chunks ...
[17:43:59.704]  - Number of values collected after concatenation: 1
[17:43:59.704]  - Number of values expected: 1
[17:43:59.704] Reducing values from 1 chunks ... DONE
[17:43:59.704] future_lapply() ... DONE
List of 1
 $ : num 42
[17:44:00.067] future_lapply() ...
[17:44:00.071] Number of chunks: 2
[17:44:00.071] getGlobalsAndPackagesXApply() ...
[17:44:00.071]  - future.globals: TRUE
[17:44:00.077]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[17:44:00.077]  - needed namespaces: [n=0] 
[17:44:00.077] Finding globals ... DONE
[17:44:00.077]  - use_args: TRUE
[17:44:00.077]  - Getting '...' globals ...
[17:44:00.078]    - '...' content: [n=0] 
[17:44:00.078] List of 1
[17:44:00.078]  $ ...: list()
[17:44:00.078]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.078]  - attr(*, "where")=List of 1
[17:44:00.078]   ..$ ...:<environment: 0x5632add73ab8> 
[17:44:00.078]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.078]  - attr(*, "resolved")= logi TRUE
[17:44:00.078]  - attr(*, "total_size")= num NA
[17:44:00.081]  - Getting '...' globals ... DONE
[17:44:00.081] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[17:44:00.081] List of 6
[17:44:00.081]  $ ...future.FUN:function (i)  
[17:44:00.081]  $ caller       :function (a, b, FUN = call_my_add)  
[17:44:00.081]  $ args         :List of 1
[17:44:00.081]   ..$ FUN:function (a, b)  
[17:44:00.081]  $ call_my_add  :function (a, b)  
[17:44:00.081]  $ my_add       :function (a, b)  
[17:44:00.081]  $ ...          : list()
[17:44:00.081]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.081]  - attr(*, "where")=List of 6
[17:44:00.081]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:00.081]   ..$ caller       :<environment: R_EmptyEnv> 
[17:44:00.081]   ..$ args         :<environment: R_EmptyEnv> 
[17:44:00.081]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[17:44:00.081]   ..$ my_add       :<environment: R_EmptyEnv> 
[17:44:00.081]   ..$ ...          :<environment: 0x5632add73ab8> 
[17:44:00.081]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.081]  - attr(*, "resolved")= logi FALSE
[17:44:00.081]  - attr(*, "total_size")= num 24120
[17:44:00.089] Packages to be attached in all futures: [n=0] 
[17:44:00.089] getGlobalsAndPackagesXApply() ... DONE
[17:44:00.089] Number of futures (= number of chunks): 2
[17:44:00.089] Launching 2 futures (chunks) ...
[17:44:00.089] Chunk #1 of 2 ...
[17:44:00.089]  - Finding globals in 'X' for chunk #1 ...
[17:44:00.090]    + additional globals found: [n=0] 
[17:44:00.090]    + additional namespaces needed: [n=0] 
[17:44:00.090]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:00.090]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:44:00.090]  - seeds: <none>
[17:44:00.090]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:00.150] Created future:
[17:44:00.150] MultisessionFuture:
[17:44:00.150] Label: ‘future_lapply-1’
[17:44:00.150] Expression:
[17:44:00.150] {
[17:44:00.150]     do.call(function(...) {
[17:44:00.150]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:00.150]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:00.150]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:00.150]             on.exit(options(oopts), add = TRUE)
[17:44:00.150]         }
[17:44:00.150]         {
[17:44:00.150]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:00.150]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:00.150]                 ...future.FUN(...future.X_jj, ...)
[17:44:00.150]             })
[17:44:00.150]         }
[17:44:00.150]     }, args = future.call.arguments)
[17:44:00.150] }
[17:44:00.150] Lazy evaluation: FALSE
[17:44:00.150] Asynchronous evaluation: TRUE
[17:44:00.150] Local evaluation: TRUE
[17:44:00.150] Environment: 0x5632add73ee0
[17:44:00.150] Capture standard output: TRUE
[17:44:00.150] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:00.150] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:44:00.150] Packages: <none>
[17:44:00.150] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:00.150] Resolved: FALSE
[17:44:00.150] Value: <not collected>
[17:44:00.150] Conditions captured: <none>
[17:44:00.150] Early signaling: FALSE
[17:44:00.150] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:00.150] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:00.162] Chunk #1 of 2 ... DONE
[17:44:00.162] Chunk #2 of 2 ...
[17:44:00.162]  - Finding globals in 'X' for chunk #2 ...
[17:44:00.163]    + additional globals found: [n=0] 
[17:44:00.163]    + additional namespaces needed: [n=0] 
[17:44:00.163]  - Finding globals in 'X' for chunk #2 ... DONE
[17:44:00.163]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:44:00.163]  - seeds: <none>
[17:44:00.163]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:00.231] Created future:
[17:44:00.232] MultisessionFuture:
[17:44:00.232] Label: ‘future_lapply-2’
[17:44:00.232] Expression:
[17:44:00.232] {
[17:44:00.232]     do.call(function(...) {
[17:44:00.232]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:00.232]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:00.232]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:00.232]             on.exit(options(oopts), add = TRUE)
[17:44:00.232]         }
[17:44:00.232]         {
[17:44:00.232]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:00.232]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:00.232]                 ...future.FUN(...future.X_jj, ...)
[17:44:00.232]             })
[17:44:00.232]         }
[17:44:00.232]     }, args = future.call.arguments)
[17:44:00.232] }
[17:44:00.232] Lazy evaluation: FALSE
[17:44:00.232] Asynchronous evaluation: TRUE
[17:44:00.232] Local evaluation: TRUE
[17:44:00.232] Environment: 0x5632add73ee0
[17:44:00.232] Capture standard output: TRUE
[17:44:00.232] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:00.232] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[17:44:00.232] Packages: <none>
[17:44:00.232] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:00.232] Resolved: FALSE
[17:44:00.232] Value: <not collected>
[17:44:00.232] Conditions captured: <none>
[17:44:00.232] Early signaling: FALSE
[17:44:00.232] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:00.232] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:00.244] Chunk #2 of 2 ... DONE
[17:44:00.244] Launching 2 futures (chunks) ... DONE
[17:44:00.244] Resolving 2 futures (chunks) ...
[17:44:00.309]  - Number of value chunks collected: 2
[17:44:00.310] Resolving 2 futures (chunks) ... DONE
[17:44:00.310] Reducing values from 2 chunks ...
[17:44:00.310]  - Number of values collected after concatenation: 3
[17:44:00.310]  - Number of values expected: 3
[17:44:00.310] Reducing values from 2 chunks ... DONE
[17:44:00.310] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[17:44:00.310] future_lapply() ...
[17:44:00.315] Number of chunks: 1
[17:44:00.315] getGlobalsAndPackagesXApply() ...
[17:44:00.315]  - future.globals: TRUE
[17:44:00.318]  - globals found/used: [n=1] ‘FUN’
[17:44:00.318]  - needed namespaces: [n=0] 
[17:44:00.318] Finding globals ... DONE
[17:44:00.318]  - use_args: TRUE
[17:44:00.318]  - Getting '...' globals ...
[17:44:00.319]    - '...' content: [n=1] ‘what’
[17:44:00.319] List of 1
[17:44:00.319]  $ ...:List of 1
[17:44:00.319]   ..$ what:function (x)  
[17:44:00.319]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.319]  - attr(*, "where")=List of 1
[17:44:00.319]   ..$ ...:<environment: 0x5632ac447aa8> 
[17:44:00.319]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.319]  - attr(*, "resolved")= logi TRUE
[17:44:00.319]  - attr(*, "total_size")= num NA
[17:44:00.322]  - Getting '...' globals ... DONE
[17:44:00.322] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:00.322] List of 2
[17:44:00.322]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:44:00.322]  $ ...          :List of 1
[17:44:00.322]   ..$ what:function (x)  
[17:44:00.322]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.322]  - attr(*, "where")=List of 2
[17:44:00.322]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:00.322]   ..$ ...          :<environment: 0x5632ac447aa8> 
[17:44:00.322]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.322]  - attr(*, "resolved")= logi FALSE
[17:44:00.322]  - attr(*, "total_size")= num 12192
[17:44:00.325] Packages to be attached in all futures: [n=0] 
[17:44:00.325] getGlobalsAndPackagesXApply() ... DONE
[17:44:00.325] Number of futures (= number of chunks): 1
[17:44:00.325] Launching 1 futures (chunks) ...
[17:44:00.325] Chunk #1 of 1 ...
[17:44:00.326]  - Finding globals in 'X' for chunk #1 ...
[17:44:00.326]    + additional globals found: [n=0] 
[17:44:00.326]    + additional namespaces needed: [n=0] 
[17:44:00.326]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:00.326]  - seeds: <none>
[17:44:00.326]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:00.347] Created future:
[17:44:00.347] MultisessionFuture:
[17:44:00.347] Label: ‘future_lapply-1’
[17:44:00.347] Expression:
[17:44:00.347] {
[17:44:00.347]     do.call(function(...) {
[17:44:00.347]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:00.347]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:00.347]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:00.347]             on.exit(options(oopts), add = TRUE)
[17:44:00.347]         }
[17:44:00.347]         {
[17:44:00.347]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:00.347]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:00.347]                 ...future.FUN(...future.X_jj, ...)
[17:44:00.347]             })
[17:44:00.347]         }
[17:44:00.347]     }, args = future.call.arguments)
[17:44:00.347] }
[17:44:00.347] Lazy evaluation: FALSE
[17:44:00.347] Asynchronous evaluation: TRUE
[17:44:00.347] Local evaluation: TRUE
[17:44:00.347] Environment: R_GlobalEnv
[17:44:00.347] Capture standard output: TRUE
[17:44:00.347] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:00.347] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:00.347] Packages: <none>
[17:44:00.347] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:00.347] Resolved: FALSE
[17:44:00.347] Value: <not collected>
[17:44:00.347] Conditions captured: <none>
[17:44:00.347] Early signaling: FALSE
[17:44:00.347] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:00.347] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:00.359] Chunk #1 of 1 ... DONE
[17:44:00.359] Launching 1 futures (chunks) ... DONE
[17:44:00.359] Resolving 1 futures (chunks) ...
[17:44:00.389]  - Number of value chunks collected: 1
[17:44:00.389] Resolving 1 futures (chunks) ... DONE
[17:44:00.389] Reducing values from 1 chunks ...
[17:44:00.389]  - Number of values collected after concatenation: 1
[17:44:00.390]  - Number of values expected: 1
[17:44:00.390] Reducing values from 1 chunks ... DONE
[17:44:00.390] future_lapply() ... DONE
[17:44:00.390] future_lapply() ...
[17:44:00.394] Number of chunks: 1
[17:44:00.395] getGlobalsAndPackagesXApply() ...
[17:44:00.395]  - future.globals: TRUE
[17:44:00.408]  - globals found/used: [n=1] ‘FUN’
[17:44:00.408]  - needed namespaces: [n=0] 
[17:44:00.408] Finding globals ... DONE
[17:44:00.408]  - use_args: TRUE
[17:44:00.408]  - Getting '...' globals ...
[17:44:00.409]    - '...' content: [n=1] ‘what’
[17:44:00.409] List of 1
[17:44:00.409]  $ ...:List of 1
[17:44:00.409]   ..$ what:function (...)  
[17:44:00.409]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.409]  - attr(*, "where")=List of 1
[17:44:00.409]   ..$ ...:<environment: 0x5632ae52d998> 
[17:44:00.409]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.409]  - attr(*, "resolved")= logi TRUE
[17:44:00.409]  - attr(*, "total_size")= num NA
[17:44:00.412]  - Getting '...' globals ... DONE
[17:44:00.412] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:00.412] List of 2
[17:44:00.412]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[17:44:00.412]  $ ...          :List of 1
[17:44:00.412]   ..$ what:function (...)  
[17:44:00.412]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.412]  - attr(*, "where")=List of 2
[17:44:00.412]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:00.412]   ..$ ...          :<environment: 0x5632ae52d998> 
[17:44:00.412]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.412]  - attr(*, "resolved")= logi FALSE
[17:44:00.412]  - attr(*, "total_size")= num 13352
[17:44:00.415] Packages to be attached in all futures: [n=0] 
[17:44:00.415] getGlobalsAndPackagesXApply() ... DONE
[17:44:00.415] Number of futures (= number of chunks): 1
[17:44:00.415] Launching 1 futures (chunks) ...
[17:44:00.415] Chunk #1 of 1 ...
[17:44:00.415]  - Finding globals in 'X' for chunk #1 ...
[17:44:00.416]    + additional globals found: [n=0] 
[17:44:00.416]    + additional namespaces needed: [n=0] 
[17:44:00.416]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:00.416]  - seeds: <none>
[17:44:00.416]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:00.433] Created future:
[17:44:00.433] MultisessionFuture:
[17:44:00.433] Label: ‘future_lapply-1’
[17:44:00.433] Expression:
[17:44:00.433] {
[17:44:00.433]     do.call(function(...) {
[17:44:00.433]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:00.433]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:00.433]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:00.433]             on.exit(options(oopts), add = TRUE)
[17:44:00.433]         }
[17:44:00.433]         {
[17:44:00.433]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:00.433]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:00.433]                 ...future.FUN(...future.X_jj, ...)
[17:44:00.433]             })
[17:44:00.433]         }
[17:44:00.433]     }, args = future.call.arguments)
[17:44:00.433] }
[17:44:00.433] Lazy evaluation: FALSE
[17:44:00.433] Asynchronous evaluation: TRUE
[17:44:00.433] Local evaluation: TRUE
[17:44:00.433] Environment: R_GlobalEnv
[17:44:00.433] Capture standard output: TRUE
[17:44:00.433] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:00.433] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:00.433] Packages: <none>
[17:44:00.433] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:00.433] Resolved: FALSE
[17:44:00.433] Value: <not collected>
[17:44:00.433] Conditions captured: <none>
[17:44:00.433] Early signaling: FALSE
[17:44:00.433] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:00.433] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:00.445] Chunk #1 of 1 ... DONE
[17:44:00.445] Launching 1 futures (chunks) ... DONE
[17:44:00.445] Resolving 1 futures (chunks) ...
[17:44:00.487]  - Number of value chunks collected: 1
[17:44:00.487] Resolving 1 futures (chunks) ... DONE
[17:44:00.487] Reducing values from 1 chunks ...
[17:44:00.488]  - Number of values collected after concatenation: 1
[17:44:00.488]  - Number of values expected: 1
[17:44:00.488] Reducing values from 1 chunks ... DONE
[17:44:00.488] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[17:44:00.488] future_lapply() ...
[17:44:00.492] Number of chunks: 1
[17:44:00.492] getGlobalsAndPackagesXApply() ...
[17:44:00.492]  - future.globals: TRUE
[17:44:00.494]  - globals found/used: [n=1] ‘FUN’
[17:44:00.494]  - needed namespaces: [n=0] 
[17:44:00.494] Finding globals ... DONE
[17:44:00.494]  - use_args: TRUE
[17:44:00.494]  - Getting '...' globals ...
[17:44:00.495]    - '...' content: [n=1] ‘b’
[17:44:00.495] List of 1
[17:44:00.495]  $ ...:List of 1
[17:44:00.495]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:44:00.495]   .. ..$ a: int [1:2] 1 2
[17:44:00.495]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.495]  - attr(*, "where")=List of 1
[17:44:00.495]   ..$ ...:<environment: 0x5632ac050a68> 
[17:44:00.495]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.495]  - attr(*, "resolved")= logi TRUE
[17:44:00.495]  - attr(*, "total_size")= num NA
[17:44:00.498]  - Getting '...' globals ... DONE
[17:44:00.498] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:00.498] List of 2
[17:44:00.498]  $ ...future.FUN:function (a, b)  
[17:44:00.498]  $ ...          :List of 1
[17:44:00.498]   ..$ b:'data.frame':	2 obs. of  1 variable:
[17:44:00.498]   .. ..$ a: int [1:2] 1 2
[17:44:00.498]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.498]  - attr(*, "where")=List of 2
[17:44:00.498]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:00.498]   ..$ ...          :<environment: 0x5632ac050a68> 
[17:44:00.498]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.498]  - attr(*, "resolved")= logi FALSE
[17:44:00.498]  - attr(*, "total_size")= num 1440
[17:44:00.502] Packages to be attached in all futures: [n=0] 
[17:44:00.502] getGlobalsAndPackagesXApply() ... DONE
[17:44:00.502] Number of futures (= number of chunks): 1
[17:44:00.502] Launching 1 futures (chunks) ...
[17:44:00.502] Chunk #1 of 1 ...
[17:44:00.503]  - Finding globals in 'X' for chunk #1 ...
[17:44:00.503]    + additional globals found: [n=0] 
[17:44:00.503]    + additional namespaces needed: [n=0] 
[17:44:00.503]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:00.503]  - seeds: <none>
[17:44:00.503]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:00.520] Created future:
[17:44:00.520] MultisessionFuture:
[17:44:00.520] Label: ‘future_lapply-1’
[17:44:00.520] Expression:
[17:44:00.520] {
[17:44:00.520]     do.call(function(...) {
[17:44:00.520]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:00.520]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:00.520]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:00.520]             on.exit(options(oopts), add = TRUE)
[17:44:00.520]         }
[17:44:00.520]         {
[17:44:00.520]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:00.520]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:00.520]                 ...future.FUN(...future.X_jj, ...)
[17:44:00.520]             })
[17:44:00.520]         }
[17:44:00.520]     }, args = future.call.arguments)
[17:44:00.520] }
[17:44:00.520] Lazy evaluation: FALSE
[17:44:00.520] Asynchronous evaluation: TRUE
[17:44:00.520] Local evaluation: TRUE
[17:44:00.520] Environment: R_GlobalEnv
[17:44:00.520] Capture standard output: TRUE
[17:44:00.520] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:00.520] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:00.520] Packages: <none>
[17:44:00.520] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:00.520] Resolved: FALSE
[17:44:00.520] Value: <not collected>
[17:44:00.520] Conditions captured: <none>
[17:44:00.520] Early signaling: FALSE
[17:44:00.520] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:00.520] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:00.531] Chunk #1 of 1 ... DONE
[17:44:00.532] Launching 1 futures (chunks) ... DONE
[17:44:00.532] Resolving 1 futures (chunks) ...
[17:44:00.574]  - Number of value chunks collected: 1
[17:44:00.574] Resolving 1 futures (chunks) ... DONE
[17:44:00.574] Reducing values from 1 chunks ...
[17:44:00.574]  - Number of values collected after concatenation: 1
[17:44:00.574]  - Number of values expected: 1
[17:44:00.574] Reducing values from 1 chunks ... DONE
[17:44:00.575] future_lapply() ... DONE
[17:44:00.575] future_lapply() ...
[17:44:00.578] Number of chunks: 1
[17:44:00.579] getGlobalsAndPackagesXApply() ...
[17:44:00.579]  - future.globals: TRUE
[17:44:00.580]  - globals found/used: [n=1] ‘FUN’
[17:44:00.580]  - needed namespaces: [n=0] 
[17:44:00.580] Finding globals ... DONE
[17:44:00.581]  - use_args: TRUE
[17:44:00.581]  - Getting '...' globals ...
[17:44:00.581]    - '...' content: [n=1] ‘b’
[17:44:00.581] List of 1
[17:44:00.581]  $ ...:List of 1
[17:44:00.581]   ..$ b:<environment: 0x5632adffdaa8> 
[17:44:00.581]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.581]  - attr(*, "where")=List of 1
[17:44:00.581]   ..$ ...:<environment: 0x5632adffcff0> 
[17:44:00.581]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.581]  - attr(*, "resolved")= logi TRUE
[17:44:00.581]  - attr(*, "total_size")= num NA
[17:44:00.586]  - Getting '...' globals ... DONE
[17:44:00.586] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:00.586] List of 2
[17:44:00.586]  $ ...future.FUN:function (a, b)  
[17:44:00.586]  $ ...          :List of 1
[17:44:00.586]   ..$ b:<environment: 0x5632adffdaa8> 
[17:44:00.586]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.586]  - attr(*, "where")=List of 2
[17:44:00.586]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:00.586]   ..$ ...          :<environment: 0x5632adffcff0> 
[17:44:00.586]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.586]  - attr(*, "resolved")= logi FALSE
[17:44:00.586]  - attr(*, "total_size")= num 1440
[17:44:00.590] Packages to be attached in all futures: [n=0] 
[17:44:00.590] getGlobalsAndPackagesXApply() ... DONE
[17:44:00.590] Number of futures (= number of chunks): 1
[17:44:00.590] Launching 1 futures (chunks) ...
[17:44:00.590] Chunk #1 of 1 ...
[17:44:00.590]  - Finding globals in 'X' for chunk #1 ...
[17:44:00.590]    + additional globals found: [n=0] 
[17:44:00.591]    + additional namespaces needed: [n=0] 
[17:44:00.591]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:00.591]  - seeds: <none>
[17:44:00.591]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:00.608] Created future:
[17:44:00.608] MultisessionFuture:
[17:44:00.608] Label: ‘future_lapply-1’
[17:44:00.608] Expression:
[17:44:00.608] {
[17:44:00.608]     do.call(function(...) {
[17:44:00.608]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:00.608]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:00.608]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:00.608]             on.exit(options(oopts), add = TRUE)
[17:44:00.608]         }
[17:44:00.608]         {
[17:44:00.608]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:00.608]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:00.608]                 ...future.FUN(...future.X_jj, ...)
[17:44:00.608]             })
[17:44:00.608]         }
[17:44:00.608]     }, args = future.call.arguments)
[17:44:00.608] }
[17:44:00.608] Lazy evaluation: FALSE
[17:44:00.608] Asynchronous evaluation: TRUE
[17:44:00.608] Local evaluation: TRUE
[17:44:00.608] Environment: R_GlobalEnv
[17:44:00.608] Capture standard output: TRUE
[17:44:00.608] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:00.608] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:00.608] Packages: <none>
[17:44:00.608] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:00.608] Resolved: FALSE
[17:44:00.608] Value: <not collected>
[17:44:00.608] Conditions captured: <none>
[17:44:00.608] Early signaling: FALSE
[17:44:00.608] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:00.608] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:00.619] Chunk #1 of 1 ... DONE
[17:44:00.619] Launching 1 futures (chunks) ... DONE
[17:44:00.620] Resolving 1 futures (chunks) ...
[17:44:00.662]  - Number of value chunks collected: 1
[17:44:00.662] Resolving 1 futures (chunks) ... DONE
[17:44:00.662] Reducing values from 1 chunks ...
[17:44:00.662]  - Number of values collected after concatenation: 1
[17:44:00.662]  - Number of values expected: 1
[17:44:00.662] Reducing values from 1 chunks ... DONE
[17:44:00.662] future_lapply() ... DONE
[17:44:00.662] future_lapply() ...
[17:44:00.666] Number of chunks: 1
[17:44:00.666] getGlobalsAndPackagesXApply() ...
[17:44:00.666]  - future.globals: TRUE
[17:44:00.668]  - globals found/used: [n=1] ‘FUN’
[17:44:00.669]  - needed namespaces: [n=0] 
[17:44:00.669] Finding globals ... DONE
[17:44:00.669]  - use_args: TRUE
[17:44:00.669]  - Getting '...' globals ...
[17:44:00.669]    - '...' content: [n=1] ‘b’
[17:44:00.669] List of 1
[17:44:00.669]  $ ...:List of 1
[17:44:00.669]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:44:00.669]   .. .. ..@ slots     :List of 4
[17:44:00.669]   .. .. .. ..$ .Data  : chr "function"
[17:44:00.669]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. ..$ target : chr "signature"
[17:44:00.669]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. ..$ defined: chr "signature"
[17:44:00.669]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. ..$ generic: chr "character"
[17:44:00.669]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. ..@ contains  :List of 3
[17:44:00.669]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.669]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ superClass: chr "function"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.669]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.669]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.669]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.669]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.669]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.669]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.669]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.669]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.669]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.669]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.669]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.669]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.669]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.669]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.669]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.669]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ by        : chr "function"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.669]   .. .. .. .. .. ..@ distance  : num 2
[17:44:00.669]   .. .. ..@ virtual   : logi FALSE
[17:44:00.669]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:44:00.669]  list()
[17:44:00.669]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:44:00.669]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:44:00.669]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:44:00.669]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:44:00.669]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:44:00.669]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:44:00.669]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:44:00.669]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:44:00.669]   .. .. .. .. ..$ generic: chr(0) 
[17:44:00.669]   .. .. ..@ validity  : NULL
[17:44:00.669]   .. .. ..@ access    : list()
[17:44:00.669]   .. .. ..@ className : chr "MethodDefinition"
[17:44:00.669]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. ..@ subclasses:List of 7
[17:44:00.669]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.669]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.669]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.669]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.669]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.669]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.669]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.669]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.669]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.669]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.669]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.669]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.669]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.669]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.669]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.669]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.669]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.669]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.669]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.669]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.669]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.669]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.669]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.669]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.669]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.669]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.669]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.669]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.669]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.669]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.669]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.669]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.669]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.669]   .. .. .. .. .. ..@ distance  : num 2
[17:44:00.669]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.669]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.669]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.669]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.669]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.669]   .. .. .. .. .. ..@ distance  : num 2
[17:44:00.669]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.669]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.669]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.669]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.669]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.669]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:44:00.669]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.669]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.669]   .. .. .. .. .. ..@ distance  : num 2
[17:44:00.669]   .. .. ..@ versionKey:<externalptr> 
[17:44:00.669]   .. .. ..@ sealed    : logi TRUE
[17:44:00.669]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.669]  - attr(*, "where")=List of 1
[17:44:00.669]   ..$ ...:<environment: 0x5632ac80d8f0> 
[17:44:00.669]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.669]  - attr(*, "resolved")= logi TRUE
[17:44:00.669]  - attr(*, "total_size")= num NA
[17:44:00.717]  - Getting '...' globals ... DONE
[17:44:00.717] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:00.717] List of 2
[17:44:00.717]  $ ...future.FUN:function (a, b)  
[17:44:00.717]  $ ...          :List of 1
[17:44:00.717]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[17:44:00.717]   .. .. ..@ slots     :List of 4
[17:44:00.717]   .. .. .. ..$ .Data  : chr "function"
[17:44:00.717]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. ..$ target : chr "signature"
[17:44:00.717]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. ..$ defined: chr "signature"
[17:44:00.717]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. ..$ generic: chr "character"
[17:44:00.717]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. ..@ contains  :List of 3
[17:44:00.717]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.717]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ superClass: chr "function"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.717]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.717]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.717]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.717]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.717]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.717]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.717]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.717]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.717]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.717]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.717]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.717]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.717]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.717]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.717]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.717]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ by        : chr "function"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.717]   .. .. .. .. .. ..@ distance  : num 2
[17:44:00.717]   .. .. ..@ virtual   : logi FALSE
[17:44:00.717]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[17:44:00.717]  list()
[17:44:00.717]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[17:44:00.717]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:44:00.717]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:44:00.717]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:44:00.717]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[17:44:00.717]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[17:44:00.717]   .. .. .. .. .. .. ..@ names  : chr(0) 
[17:44:00.717]   .. .. .. .. .. .. ..@ package: chr(0) 
[17:44:00.717]   .. .. .. .. ..$ generic: chr(0) 
[17:44:00.717]   .. .. ..@ validity  : NULL
[17:44:00.717]   .. .. ..@ access    : list()
[17:44:00.717]   .. .. ..@ className : chr "MethodDefinition"
[17:44:00.717]   .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. ..@ subclasses:List of 7
[17:44:00.717]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.717]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.717]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.717]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.717]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.717]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.717]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.717]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.717]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.717]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.717]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.717]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.717]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.717]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.717]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.717]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.717]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.717]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.717]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.717]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.717]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.717]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.717]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.717]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.717]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.717]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ by        : chr(0) 
[17:44:00.717]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.717]   .. .. .. .. .. ..@ distance  : num 1
[17:44:00.717]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.717]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.717]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.717]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.717]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.717]   .. .. .. .. .. ..@ distance  : num 2
[17:44:00.717]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.717]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.717]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.717]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.717]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.717]   .. .. .. .. .. ..@ distance  : num 2
[17:44:00.717]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[17:44:00.717]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ package   : chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[17:44:00.717]   .. .. .. .. .. ..@ test      :function (object)  
[17:44:00.717]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[17:44:00.717]   .. .. .. .. .. ..@ simple    : logi TRUE
[17:44:00.717]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[17:44:00.717]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[17:44:00.717]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[17:44:00.717]   .. .. .. .. .. ..@ distance  : num 2
[17:44:00.717]   .. .. ..@ versionKey:<externalptr> 
[17:44:00.717]   .. .. ..@ sealed    : logi TRUE
[17:44:00.717]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.717]  - attr(*, "where")=List of 2
[17:44:00.717]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:00.717]   ..$ ...          :<environment: 0x5632ac80d8f0> 
[17:44:00.717]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.717]  - attr(*, "resolved")= logi FALSE
[17:44:00.717]  - attr(*, "total_size")= num 405168
[17:44:00.763] Packages to be attached in all futures: [n=0] 
[17:44:00.763] getGlobalsAndPackagesXApply() ... DONE
[17:44:00.764] Number of futures (= number of chunks): 1
[17:44:00.764] Launching 1 futures (chunks) ...
[17:44:00.764] Chunk #1 of 1 ...
[17:44:00.764]  - Finding globals in 'X' for chunk #1 ...
[17:44:00.764]    + additional globals found: [n=0] 
[17:44:00.764]    + additional namespaces needed: [n=0] 
[17:44:00.764]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:00.764]  - seeds: <none>
[17:44:00.765]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:00.825] Created future:
[17:44:00.825] MultisessionFuture:
[17:44:00.825] Label: ‘future_lapply-1’
[17:44:00.825] Expression:
[17:44:00.825] {
[17:44:00.825]     do.call(function(...) {
[17:44:00.825]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:00.825]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:00.825]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:00.825]             on.exit(options(oopts), add = TRUE)
[17:44:00.825]         }
[17:44:00.825]         {
[17:44:00.825]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:00.825]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:00.825]                 ...future.FUN(...future.X_jj, ...)
[17:44:00.825]             })
[17:44:00.825]         }
[17:44:00.825]     }, args = future.call.arguments)
[17:44:00.825] }
[17:44:00.825] Lazy evaluation: FALSE
[17:44:00.825] Asynchronous evaluation: TRUE
[17:44:00.825] Local evaluation: TRUE
[17:44:00.825] Environment: R_GlobalEnv
[17:44:00.825] Capture standard output: TRUE
[17:44:00.825] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:00.825] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:00.825] Packages: <none>
[17:44:00.825] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:00.825] Resolved: TRUE
[17:44:00.825] Value: <not collected>
[17:44:00.825] Conditions captured: <none>
[17:44:00.825] Early signaling: FALSE
[17:44:00.825] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:00.825] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:00.827] Chunk #1 of 1 ... DONE
[17:44:00.827] Launching 1 futures (chunks) ... DONE
[17:44:00.827] Resolving 1 futures (chunks) ...
[17:44:00.827]  - Number of value chunks collected: 1
[17:44:00.828] Resolving 1 futures (chunks) ... DONE
[17:44:00.828] Reducing values from 1 chunks ...
[17:44:00.828]  - Number of values collected after concatenation: 1
[17:44:00.828]  - Number of values expected: 1
[17:44:00.828] Reducing values from 1 chunks ... DONE
[17:44:00.828] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[17:44:00.830] future_lapply() ...
[17:44:00.836] Number of chunks: 2
[17:44:00.836] getGlobalsAndPackagesXApply() ...
[17:44:00.836]  - future.globals: TRUE
[17:44:00.838]  - globals found/used: [n=1] ‘FUN’
[17:44:00.838]  - needed namespaces: [n=0] 
[17:44:00.838] Finding globals ... DONE
[17:44:00.838]  - use_args: TRUE
[17:44:00.838]  - Getting '...' globals ...
[17:44:00.838]    - '...' content: [n=0] 
[17:44:00.839] List of 1
[17:44:00.839]  $ ...: list()
[17:44:00.839]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.839]  - attr(*, "where")=List of 1
[17:44:00.839]   ..$ ...:<environment: 0x5632ada50eb8> 
[17:44:00.839]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.839]  - attr(*, "resolved")= logi TRUE
[17:44:00.839]  - attr(*, "total_size")= num NA
[17:44:00.841]  - Getting '...' globals ... DONE
[17:44:00.841] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:00.841] List of 2
[17:44:00.841]  $ ...future.FUN:function (f)  
[17:44:00.841]  $ ...          : list()
[17:44:00.841]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.841]  - attr(*, "where")=List of 2
[17:44:00.841]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:00.841]   ..$ ...          :<environment: 0x5632ada50eb8> 
[17:44:00.841]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.841]  - attr(*, "resolved")= logi FALSE
[17:44:00.841]  - attr(*, "total_size")= num 1008
[17:44:00.844] Packages to be attached in all futures: [n=0] 
[17:44:00.844] getGlobalsAndPackagesXApply() ... DONE
[17:44:00.844] Number of futures (= number of chunks): 2
[17:44:00.844] Launching 2 futures (chunks) ...
[17:44:00.844] Chunk #1 of 2 ...
[17:44:00.844]  - Finding globals in 'X' for chunk #1 ...
[17:44:00.846]    + additional globals found: [n=2] ‘a’, ‘b’
[17:44:00.846]    + additional namespaces needed: [n=0] 
[17:44:00.846]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:00.846]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:44:00.846]  - seeds: <none>
[17:44:00.846]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:44:00.863] Created future:
[17:44:00.863] MultisessionFuture:
[17:44:00.863] Label: ‘future_lapply-1’
[17:44:00.863] Expression:
[17:44:00.863] {
[17:44:00.863]     do.call(function(...) {
[17:44:00.863]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:00.863]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:00.863]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:00.863]             on.exit(options(oopts), add = TRUE)
[17:44:00.863]         }
[17:44:00.863]         {
[17:44:00.863]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:00.863]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:00.863]                 ...future.FUN(...future.X_jj, ...)
[17:44:00.863]             })
[17:44:00.863]         }
[17:44:00.863]     }, args = future.call.arguments)
[17:44:00.863] }
[17:44:00.863] Lazy evaluation: FALSE
[17:44:00.863] Asynchronous evaluation: TRUE
[17:44:00.863] Local evaluation: TRUE
[17:44:00.863] Environment: R_GlobalEnv
[17:44:00.863] Capture standard output: TRUE
[17:44:00.863] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:00.863] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:44:00.863] Packages: <none>
[17:44:00.863] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:00.863] Resolved: FALSE
[17:44:00.863] Value: <not collected>
[17:44:00.863] Conditions captured: <none>
[17:44:00.863] Early signaling: FALSE
[17:44:00.863] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:00.863] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:00.875] Chunk #1 of 2 ... DONE
[17:44:00.875] Chunk #2 of 2 ...
[17:44:00.875]  - Finding globals in 'X' for chunk #2 ...
[17:44:00.877]    + additional globals found: [n=2] ‘a’, ‘b’
[17:44:00.877]    + additional namespaces needed: [n=1] ‘tools’
[17:44:00.877]  - Finding globals in 'X' for chunk #2 ... DONE
[17:44:00.878]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:44:00.878]  - seeds: <none>
[17:44:00.878]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[17:44:00.896] Created future:
[17:44:00.897] MultisessionFuture:
[17:44:00.897] Label: ‘future_lapply-2’
[17:44:00.897] Expression:
[17:44:00.897] {
[17:44:00.897]     do.call(function(...) {
[17:44:00.897]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:00.897]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:00.897]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:00.897]             on.exit(options(oopts), add = TRUE)
[17:44:00.897]         }
[17:44:00.897]         {
[17:44:00.897]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:00.897]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:00.897]                 ...future.FUN(...future.X_jj, ...)
[17:44:00.897]             })
[17:44:00.897]         }
[17:44:00.897]     }, args = future.call.arguments)
[17:44:00.897] }
[17:44:00.897] Lazy evaluation: FALSE
[17:44:00.897] Asynchronous evaluation: TRUE
[17:44:00.897] Local evaluation: TRUE
[17:44:00.897] Environment: R_GlobalEnv
[17:44:00.897] Capture standard output: TRUE
[17:44:00.897] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:00.897] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[17:44:00.897] Packages: 1 packages (‘tools’)
[17:44:00.897] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:00.897] Resolved: FALSE
[17:44:00.897] Value: <not collected>
[17:44:00.897] Conditions captured: <none>
[17:44:00.897] Early signaling: FALSE
[17:44:00.897] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:00.897] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:00.908] Chunk #2 of 2 ... DONE
[17:44:00.908] Launching 2 futures (chunks) ... DONE
[17:44:00.908] Resolving 2 futures (chunks) ...
[17:44:00.951]  - Number of value chunks collected: 2
[17:44:00.951] Resolving 2 futures (chunks) ... DONE
[17:44:00.952] Reducing values from 2 chunks ...
[17:44:00.952]  - Number of values collected after concatenation: 4
[17:44:00.952]  - Number of values expected: 4
[17:44:00.952] Reducing values from 2 chunks ... DONE
[17:44:00.952] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[17:44:00.955] future_lapply() ...
[17:44:00.958] Number of chunks: 1
[17:44:00.959] getGlobalsAndPackagesXApply() ...
[17:44:00.959]  - future.globals: TRUE
[17:44:00.961]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[17:44:00.961]  - needed namespaces: [n=0] 
[17:44:00.961] Finding globals ... DONE
[17:44:00.961]  - use_args: TRUE
[17:44:00.961]  - Getting '...' globals ...
[17:44:00.962]    - '...' content: [n=0] 
[17:44:00.962] List of 1
[17:44:00.962]  $ ...: list()
[17:44:00.962]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.962]  - attr(*, "where")=List of 1
[17:44:00.962]   ..$ ...:<environment: 0x5632ad0e04c8> 
[17:44:00.962]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.962]  - attr(*, "resolved")= logi TRUE
[17:44:00.962]  - attr(*, "total_size")= num NA
[17:44:00.964]  - Getting '...' globals ... DONE
[17:44:00.964] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[17:44:00.964] List of 3
[17:44:00.964]  $ ...future.FUN        :function (x)  
[17:44:00.964]  $ future.call.arguments:List of 1
[17:44:00.964]   ..$ a: num 1
[17:44:00.964]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.964]  $ ...                  : list()
[17:44:00.964]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:00.964]  - attr(*, "where")=List of 3
[17:44:00.964]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[17:44:00.964]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[17:44:00.964]   ..$ ...                  :<environment: 0x5632ad0e04c8> 
[17:44:00.964]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:00.964]  - attr(*, "resolved")= logi FALSE
[17:44:00.964]  - attr(*, "total_size")= num 1272
[17:44:00.968] Packages to be attached in all futures: [n=0] 
[17:44:00.968] getGlobalsAndPackagesXApply() ... DONE
[17:44:00.968] Number of futures (= number of chunks): 1
[17:44:00.968] Launching 1 futures (chunks) ...
[17:44:00.968] Chunk #1 of 1 ...
[17:44:00.969]  - Finding globals in 'X' for chunk #1 ...
[17:44:00.969]    + additional globals found: [n=0] 
[17:44:00.969]    + additional namespaces needed: [n=0] 
[17:44:00.969]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:00.969]  - seeds: <none>
[17:44:00.969]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:00.989] Created future:
[17:44:00.989] MultisessionFuture:
[17:44:00.989] Label: ‘future_lapply-1’
[17:44:00.989] Expression:
[17:44:00.989] {
[17:44:00.989]     do.call(function(...) {
[17:44:00.989]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:00.989]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:00.989]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:00.989]             on.exit(options(oopts), add = TRUE)
[17:44:00.989]         }
[17:44:00.989]         {
[17:44:00.989]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:00.989]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:00.989]                 ...future.FUN(...future.X_jj)
[17:44:00.989]             })
[17:44:00.989]         }
[17:44:00.989]     }, args = future.call.arguments)
[17:44:00.989] }
[17:44:00.989] Lazy evaluation: FALSE
[17:44:00.989] Asynchronous evaluation: TRUE
[17:44:00.989] Local evaluation: TRUE
[17:44:00.989] Environment: 0x5632ad0e0848
[17:44:00.989] Capture standard output: TRUE
[17:44:00.989] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:00.989] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:00.989] Packages: <none>
[17:44:00.989] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:00.989] Resolved: FALSE
[17:44:00.989] Value: <not collected>
[17:44:00.989] Conditions captured: <none>
[17:44:00.989] Early signaling: FALSE
[17:44:00.989] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:00.989] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.000] Chunk #1 of 1 ... DONE
[17:44:01.000] Launching 1 futures (chunks) ... DONE
[17:44:01.001] Resolving 1 futures (chunks) ...
[17:44:01.043]  - Number of value chunks collected: 1
[17:44:01.043] Resolving 1 futures (chunks) ... DONE
[17:44:01.043] Reducing values from 1 chunks ...
[17:44:01.043]  - Number of values collected after concatenation: 1
[17:44:01.043]  - Number of values expected: 1
[17:44:01.044] Reducing values from 1 chunks ... DONE
[17:44:01.044] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[17:44:01.045] future_lapply() ...
[17:44:01.049] Number of chunks: 1
[17:44:01.049] getGlobalsAndPackagesXApply() ...
[17:44:01.049]  - future.globals: TRUE
[17:44:01.052]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:44:01.052]  - needed namespaces: [n=0] 
[17:44:01.052] Finding globals ... DONE
[17:44:01.052]  - use_args: TRUE
[17:44:01.052]  - Getting '...' globals ...
[17:44:01.052]    - '...' content: [n=0] 
[17:44:01.053] List of 1
[17:44:01.053]  $ ...: list()
[17:44:01.053]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.053]  - attr(*, "where")=List of 1
[17:44:01.053]   ..$ ...:<environment: 0x5632acd76fc0> 
[17:44:01.053]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.053]  - attr(*, "resolved")= logi TRUE
[17:44:01.053]  - attr(*, "total_size")= num NA
[17:44:01.055]  - Getting '...' globals ... DONE
[17:44:01.055] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:44:01.055] List of 3
[17:44:01.055]  $ ...future.FUN:function (ii)  
[17:44:01.055]  $ a            : num 1
[17:44:01.055]  $ ...          : list()
[17:44:01.055]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.055]  - attr(*, "where")=List of 3
[17:44:01.055]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:01.055]   ..$ a            :<environment: R_EmptyEnv> 
[17:44:01.055]   ..$ ...          :<environment: 0x5632acd76fc0> 
[17:44:01.055]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.055]  - attr(*, "resolved")= logi FALSE
[17:44:01.055]  - attr(*, "total_size")= num 2984
[17:44:01.059] Packages to be attached in all futures: [n=0] 
[17:44:01.059] getGlobalsAndPackagesXApply() ... DONE
[17:44:01.059] Number of futures (= number of chunks): 1
[17:44:01.059] Launching 1 futures (chunks) ...
[17:44:01.059] Chunk #1 of 1 ...
[17:44:01.059]  - Finding globals in 'X' for chunk #1 ...
[17:44:01.059]    + additional globals found: [n=0] 
[17:44:01.060]    + additional namespaces needed: [n=0] 
[17:44:01.060]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:01.060]  - seeds: <none>
[17:44:01.060]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.078] Created future:
[17:44:01.078] MultisessionFuture:
[17:44:01.078] Label: ‘future_lapply-1’
[17:44:01.078] Expression:
[17:44:01.078] {
[17:44:01.078]     do.call(function(...) {
[17:44:01.078]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.078]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.078]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.078]             on.exit(options(oopts), add = TRUE)
[17:44:01.078]         }
[17:44:01.078]         {
[17:44:01.078]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.078]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.078]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.078]             })
[17:44:01.078]         }
[17:44:01.078]     }, args = future.call.arguments)
[17:44:01.078] }
[17:44:01.078] Lazy evaluation: FALSE
[17:44:01.078] Asynchronous evaluation: TRUE
[17:44:01.078] Local evaluation: TRUE
[17:44:01.078] Environment: R_GlobalEnv
[17:44:01.078] Capture standard output: TRUE
[17:44:01.078] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.078] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:44:01.078] Packages: <none>
[17:44:01.078] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.078] Resolved: FALSE
[17:44:01.078] Value: <not collected>
[17:44:01.078] Conditions captured: <none>
[17:44:01.078] Early signaling: FALSE
[17:44:01.078] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.078] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.090] Chunk #1 of 1 ... DONE
[17:44:01.090] Launching 1 futures (chunks) ... DONE
[17:44:01.090] Resolving 1 futures (chunks) ...
[17:44:01.122]  - Number of value chunks collected: 1
[17:44:01.122] Resolving 1 futures (chunks) ... DONE
[17:44:01.122] Reducing values from 1 chunks ...
[17:44:01.122]  - Number of values collected after concatenation: 1
[17:44:01.122]  - Number of values expected: 1
[17:44:01.122] Reducing values from 1 chunks ... DONE
[17:44:01.122] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[17:44:01.122] future_lapply() ...
[17:44:01.127] Number of chunks: 1
[17:44:01.127] getGlobalsAndPackagesXApply() ...
[17:44:01.127]  - future.globals: TRUE
[17:44:01.129]  - globals found/used: [n=2] ‘FUN’, ‘a’
[17:44:01.130]  - needed namespaces: [n=0] 
[17:44:01.130] Finding globals ... DONE
[17:44:01.130]  - use_args: TRUE
[17:44:01.130]  - Getting '...' globals ...
[17:44:01.130]    - '...' content: [n=0] 
[17:44:01.130] List of 1
[17:44:01.130]  $ ...: list()
[17:44:01.130]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.130]  - attr(*, "where")=List of 1
[17:44:01.130]   ..$ ...:<environment: 0x5632ae18d170> 
[17:44:01.130]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.130]  - attr(*, "resolved")= logi TRUE
[17:44:01.130]  - attr(*, "total_size")= num NA
[17:44:01.133]  - Getting '...' globals ... DONE
[17:44:01.133] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[17:44:01.133] List of 3
[17:44:01.133]  $ ...future.FUN:function (ii)  
[17:44:01.133]  $ a            : num 1
[17:44:01.133]  $ ...          : list()
[17:44:01.133]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.133]  - attr(*, "where")=List of 3
[17:44:01.133]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:01.133]   ..$ a            :<environment: R_EmptyEnv> 
[17:44:01.133]   ..$ ...          :<environment: 0x5632ae18d170> 
[17:44:01.133]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.133]  - attr(*, "resolved")= logi FALSE
[17:44:01.133]  - attr(*, "total_size")= num 2984
[17:44:01.136] Packages to be attached in all futures: [n=0] 
[17:44:01.136] getGlobalsAndPackagesXApply() ... DONE
[17:44:01.137] Number of futures (= number of chunks): 1
[17:44:01.137] Launching 1 futures (chunks) ...
[17:44:01.137] Chunk #1 of 1 ...
[17:44:01.137]  - Finding globals in 'X' for chunk #1 ...
[17:44:01.137]    + additional globals found: [n=0] 
[17:44:01.137]    + additional namespaces needed: [n=0] 
[17:44:01.137]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:01.137]  - seeds: <none>
[17:44:01.138]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.158] Created future:
[17:44:01.158] MultisessionFuture:
[17:44:01.158] Label: ‘future_lapply-1’
[17:44:01.158] Expression:
[17:44:01.158] {
[17:44:01.158]     do.call(function(...) {
[17:44:01.158]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.158]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.158]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.158]             on.exit(options(oopts), add = TRUE)
[17:44:01.158]         }
[17:44:01.158]         {
[17:44:01.158]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.158]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.158]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.158]             })
[17:44:01.158]         }
[17:44:01.158]     }, args = future.call.arguments)
[17:44:01.158] }
[17:44:01.158] Lazy evaluation: FALSE
[17:44:01.158] Asynchronous evaluation: TRUE
[17:44:01.158] Local evaluation: TRUE
[17:44:01.158] Environment: R_GlobalEnv
[17:44:01.158] Capture standard output: TRUE
[17:44:01.158] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.158] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:44:01.158] Packages: <none>
[17:44:01.158] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.158] Resolved: FALSE
[17:44:01.158] Value: <not collected>
[17:44:01.158] Conditions captured: <none>
[17:44:01.158] Early signaling: FALSE
[17:44:01.158] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.158] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.169] Chunk #1 of 1 ... DONE
[17:44:01.169] Launching 1 futures (chunks) ... DONE
[17:44:01.169] Resolving 1 futures (chunks) ...
[17:44:01.212]  - Number of value chunks collected: 1
[17:44:01.212] Resolving 1 futures (chunks) ... DONE
[17:44:01.212] Reducing values from 1 chunks ...
[17:44:01.212]  - Number of values collected after concatenation: 1
[17:44:01.212]  - Number of values expected: 1
[17:44:01.212] Reducing values from 1 chunks ... DONE
[17:44:01.212] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[17:44:01.213] future_lapply() ...
[17:44:01.217] Number of chunks: 1
[17:44:01.217] getGlobalsAndPackagesXApply() ...
[17:44:01.217]  - future.globals: <name-value list> with names ‘42’
[17:44:01.217]  - use_args: TRUE
[17:44:01.217]  - Getting '...' globals ...
[17:44:01.218]    - '...' content: [n=0] 
[17:44:01.218] List of 1
[17:44:01.218]  $ ...: list()
[17:44:01.218]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.218]  - attr(*, "where")=List of 1
[17:44:01.218]   ..$ ...:<environment: 0x5632ad13eb28> 
[17:44:01.218]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.218]  - attr(*, "resolved")= logi TRUE
[17:44:01.218]  - attr(*, "total_size")= num NA
[17:44:01.220]  - Getting '...' globals ... DONE
[17:44:01.220] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[17:44:01.221] List of 3
[17:44:01.221]  $ a            : num 42
[17:44:01.221]  $ ...future.FUN:function (x)  
[17:44:01.221]  $ ...          : list()
[17:44:01.221]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.221]  - attr(*, "where")=List of 3
[17:44:01.221]   ..$ a            :<environment: R_EmptyEnv> 
[17:44:01.221]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[17:44:01.221]   ..$ ...          :<environment: 0x5632ad13eb28> 
[17:44:01.221]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.221]  - attr(*, "resolved")= logi FALSE
[17:44:01.221]  - attr(*, "total_size")= num NA
[17:44:01.224] Packages to be attached in all futures: [n=0] 
[17:44:01.224] getGlobalsAndPackagesXApply() ... DONE
[17:44:01.224] Number of futures (= number of chunks): 1
[17:44:01.224] Launching 1 futures (chunks) ...
[17:44:01.224] Chunk #1 of 1 ...
[17:44:01.224]  - seeds: <none>
[17:44:01.224]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.244] Created future:
[17:44:01.244] MultisessionFuture:
[17:44:01.244] Label: ‘future_lapply-1’
[17:44:01.244] Expression:
[17:44:01.244] {
[17:44:01.244]     do.call(function(...) {
[17:44:01.244]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.244]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.244]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.244]             on.exit(options(oopts), add = TRUE)
[17:44:01.244]         }
[17:44:01.244]         {
[17:44:01.244]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.244]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.244]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.244]             })
[17:44:01.244]         }
[17:44:01.244]     }, args = future.call.arguments)
[17:44:01.244] }
[17:44:01.244] Lazy evaluation: FALSE
[17:44:01.244] Asynchronous evaluation: TRUE
[17:44:01.244] Local evaluation: TRUE
[17:44:01.244] Environment: R_GlobalEnv
[17:44:01.244] Capture standard output: TRUE
[17:44:01.244] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.244] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[17:44:01.244] Packages: <none>
[17:44:01.244] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.244] Resolved: FALSE
[17:44:01.244] Value: <not collected>
[17:44:01.244] Conditions captured: <none>
[17:44:01.244] Early signaling: FALSE
[17:44:01.244] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.244] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.256] Chunk #1 of 1 ... DONE
[17:44:01.256] Launching 1 futures (chunks) ... DONE
[17:44:01.256] Resolving 1 futures (chunks) ...
[17:44:01.299]  - Number of value chunks collected: 1
[17:44:01.299] Resolving 1 futures (chunks) ... DONE
[17:44:01.299] Reducing values from 1 chunks ...
[17:44:01.299]  - Number of values collected after concatenation: 1
[17:44:01.299]  - Number of values expected: 1
[17:44:01.299] Reducing values from 1 chunks ... DONE
[17:44:01.299] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[17:44:01.300] future_lapply() ...
[17:44:01.305] Number of chunks: 2
[17:44:01.305] getGlobalsAndPackagesXApply() ...
[17:44:01.305]  - future.globals: TRUE
[17:44:01.307]  - globals found/used: [n=1] ‘FUN’
[17:44:01.307]  - needed namespaces: [n=0] 
[17:44:01.307] Finding globals ... DONE
[17:44:01.307]  - use_args: TRUE
[17:44:01.307]  - Getting '...' globals ...
[17:44:01.307]    - '...' content: [n=0] 
[17:44:01.308] List of 1
[17:44:01.308]  $ ...: list()
[17:44:01.308]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.308]  - attr(*, "where")=List of 1
[17:44:01.308]   ..$ ...:<environment: 0x5632aac32c38> 
[17:44:01.308]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.308]  - attr(*, "resolved")= logi TRUE
[17:44:01.308]  - attr(*, "total_size")= num NA
[17:44:01.310]  - Getting '...' globals ... DONE
[17:44:01.310] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:01.310] List of 2
[17:44:01.310]  $ ...future.FUN:function (y)  
[17:44:01.310]  $ ...          : list()
[17:44:01.310]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.310]  - attr(*, "where")=List of 2
[17:44:01.310]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:01.310]   ..$ ...          :<environment: 0x5632aac32c38> 
[17:44:01.310]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.310]  - attr(*, "resolved")= logi FALSE
[17:44:01.310]  - attr(*, "total_size")= num 280
[17:44:01.313] Packages to be attached in all futures: [n=0] 
[17:44:01.313] getGlobalsAndPackagesXApply() ... DONE
[17:44:01.314] Number of futures (= number of chunks): 2
[17:44:01.314] Launching 2 futures (chunks) ...
[17:44:01.314] Chunk #1 of 2 ...
[17:44:01.314]  - Finding globals in 'X' for chunk #1 ...
[17:44:01.314]    + additional globals found: [n=0] 
[17:44:01.314]    + additional namespaces needed: [n=0] 
[17:44:01.314]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:01.314]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:44:01.315]  - seeds: <none>
[17:44:01.315]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.332] Created future:
[17:44:01.332] MultisessionFuture:
[17:44:01.332] Label: ‘future_lapply-1’
[17:44:01.332] Expression:
[17:44:01.332] {
[17:44:01.332]     do.call(function(...) {
[17:44:01.332]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.332]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.332]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.332]             on.exit(options(oopts), add = TRUE)
[17:44:01.332]         }
[17:44:01.332]         {
[17:44:01.332]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.332]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.332]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.332]             })
[17:44:01.332]         }
[17:44:01.332]     }, args = future.call.arguments)
[17:44:01.332] }
[17:44:01.332] Lazy evaluation: FALSE
[17:44:01.332] Asynchronous evaluation: TRUE
[17:44:01.332] Local evaluation: TRUE
[17:44:01.332] Environment: 0x5632aac32810
[17:44:01.332] Capture standard output: TRUE
[17:44:01.332] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.332] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:01.332] Packages: <none>
[17:44:01.332] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.332] Resolved: FALSE
[17:44:01.332] Value: <not collected>
[17:44:01.332] Conditions captured: <none>
[17:44:01.332] Early signaling: FALSE
[17:44:01.332] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.332] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.344] Chunk #1 of 2 ... DONE
[17:44:01.344] Chunk #2 of 2 ...
[17:44:01.344]  - Finding globals in 'X' for chunk #2 ...
[17:44:01.345]    + additional globals found: [n=0] 
[17:44:01.345]    + additional namespaces needed: [n=0] 
[17:44:01.345]  - Finding globals in 'X' for chunk #2 ... DONE
[17:44:01.345]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:44:01.345]  - seeds: <none>
[17:44:01.345]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.366] Created future:
[17:44:01.366] MultisessionFuture:
[17:44:01.366] Label: ‘future_lapply-2’
[17:44:01.366] Expression:
[17:44:01.366] {
[17:44:01.366]     do.call(function(...) {
[17:44:01.366]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.366]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.366]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.366]             on.exit(options(oopts), add = TRUE)
[17:44:01.366]         }
[17:44:01.366]         {
[17:44:01.366]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.366]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.366]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.366]             })
[17:44:01.366]         }
[17:44:01.366]     }, args = future.call.arguments)
[17:44:01.366] }
[17:44:01.366] Lazy evaluation: FALSE
[17:44:01.366] Asynchronous evaluation: TRUE
[17:44:01.366] Local evaluation: TRUE
[17:44:01.366] Environment: 0x5632aac32810
[17:44:01.366] Capture standard output: TRUE
[17:44:01.366] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.366] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:01.366] Packages: <none>
[17:44:01.366] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.366] Resolved: FALSE
[17:44:01.366] Value: <not collected>
[17:44:01.366] Conditions captured: <none>
[17:44:01.366] Early signaling: FALSE
[17:44:01.366] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.366] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.378] Chunk #2 of 2 ... DONE
[17:44:01.378] Launching 2 futures (chunks) ... DONE
[17:44:01.379] Resolving 2 futures (chunks) ...
[17:44:01.410]  - Number of value chunks collected: 2
[17:44:01.410] Resolving 2 futures (chunks) ... DONE
[17:44:01.410] Reducing values from 2 chunks ...
[17:44:01.410]  - Number of values collected after concatenation: 2
[17:44:01.410]  - Number of values expected: 2
[17:44:01.410] Reducing values from 2 chunks ... DONE
[17:44:01.410] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[17:44:01.411] future_lapply() ...
[17:44:01.415] Number of chunks: 2
[17:44:01.415] getGlobalsAndPackagesXApply() ...
[17:44:01.415]  - future.globals: TRUE
[17:44:01.417]  - globals found/used: [n=1] ‘FUN’
[17:44:01.417]  - needed namespaces: [n=0] 
[17:44:01.417] Finding globals ... DONE
[17:44:01.417]  - use_args: TRUE
[17:44:01.417]  - Getting '...' globals ...
[17:44:01.418]    - '...' content: [n=0] 
[17:44:01.418] List of 1
[17:44:01.418]  $ ...: list()
[17:44:01.418]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.418]  - attr(*, "where")=List of 1
[17:44:01.418]   ..$ ...:<environment: 0x5632ad4978f8> 
[17:44:01.418]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.418]  - attr(*, "resolved")= logi TRUE
[17:44:01.418]  - attr(*, "total_size")= num NA
[17:44:01.421]  - Getting '...' globals ... DONE
[17:44:01.421] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:01.421] List of 2
[17:44:01.421]  $ ...future.FUN:function (y)  
[17:44:01.421]  $ ...          : list()
[17:44:01.421]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.421]  - attr(*, "where")=List of 2
[17:44:01.421]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:01.421]   ..$ ...          :<environment: 0x5632ad4978f8> 
[17:44:01.421]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.421]  - attr(*, "resolved")= logi FALSE
[17:44:01.421]  - attr(*, "total_size")= num 280
[17:44:01.423] Packages to be attached in all futures: [n=0] 
[17:44:01.424] getGlobalsAndPackagesXApply() ... DONE
[17:44:01.424] Number of futures (= number of chunks): 2
[17:44:01.424] Launching 2 futures (chunks) ...
[17:44:01.424] Chunk #1 of 2 ...
[17:44:01.424]  - Finding globals in 'X' for chunk #1 ...
[17:44:01.424]    + additional globals found: [n=0] 
[17:44:01.424]    + additional namespaces needed: [n=0] 
[17:44:01.425]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:01.425]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:44:01.425]  - seeds: <none>
[17:44:01.425]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.442] Created future:
[17:44:01.443] MultisessionFuture:
[17:44:01.443] Label: ‘future_lapply-1’
[17:44:01.443] Expression:
[17:44:01.443] {
[17:44:01.443]     do.call(function(...) {
[17:44:01.443]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.443]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.443]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.443]             on.exit(options(oopts), add = TRUE)
[17:44:01.443]         }
[17:44:01.443]         {
[17:44:01.443]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.443]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.443]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.443]             })
[17:44:01.443]         }
[17:44:01.443]     }, args = future.call.arguments)
[17:44:01.443] }
[17:44:01.443] Lazy evaluation: FALSE
[17:44:01.443] Asynchronous evaluation: TRUE
[17:44:01.443] Local evaluation: TRUE
[17:44:01.443] Environment: 0x5632ad497508
[17:44:01.443] Capture standard output: TRUE
[17:44:01.443] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.443] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:01.443] Packages: <none>
[17:44:01.443] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.443] Resolved: FALSE
[17:44:01.443] Value: <not collected>
[17:44:01.443] Conditions captured: <none>
[17:44:01.443] Early signaling: FALSE
[17:44:01.443] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.443] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.454] Chunk #1 of 2 ... DONE
[17:44:01.454] Chunk #2 of 2 ...
[17:44:01.455]  - Finding globals in 'X' for chunk #2 ...
[17:44:01.455]    + additional globals found: [n=0] 
[17:44:01.455]    + additional namespaces needed: [n=0] 
[17:44:01.455]  - Finding globals in 'X' for chunk #2 ... DONE
[17:44:01.455]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:44:01.455]  - seeds: <none>
[17:44:01.456]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.474] Created future:
[17:44:01.474] MultisessionFuture:
[17:44:01.474] Label: ‘future_lapply-2’
[17:44:01.474] Expression:
[17:44:01.474] {
[17:44:01.474]     do.call(function(...) {
[17:44:01.474]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.474]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.474]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.474]             on.exit(options(oopts), add = TRUE)
[17:44:01.474]         }
[17:44:01.474]         {
[17:44:01.474]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.474]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.474]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.474]             })
[17:44:01.474]         }
[17:44:01.474]     }, args = future.call.arguments)
[17:44:01.474] }
[17:44:01.474] Lazy evaluation: FALSE
[17:44:01.474] Asynchronous evaluation: TRUE
[17:44:01.474] Local evaluation: TRUE
[17:44:01.474] Environment: 0x5632ad497508
[17:44:01.474] Capture standard output: TRUE
[17:44:01.474] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.474] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:01.474] Packages: <none>
[17:44:01.474] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.474] Resolved: FALSE
[17:44:01.474] Value: <not collected>
[17:44:01.474] Conditions captured: <none>
[17:44:01.474] Early signaling: FALSE
[17:44:01.474] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.474] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.486] Chunk #2 of 2 ... DONE
[17:44:01.486] Launching 2 futures (chunks) ... DONE
[17:44:01.486] Resolving 2 futures (chunks) ...
[17:44:01.518]  - Number of value chunks collected: 2
[17:44:01.518] Resolving 2 futures (chunks) ... DONE
[17:44:01.518] Reducing values from 2 chunks ...
[17:44:01.518]  - Number of values collected after concatenation: 2
[17:44:01.518]  - Number of values expected: 2
[17:44:01.518] Reducing values from 2 chunks ... DONE
[17:44:01.518] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[17:44:01.521] future_lapply() ...
[17:44:01.525] Number of chunks: 2
[17:44:01.526] getGlobalsAndPackagesXApply() ...
[17:44:01.526]  - future.globals: TRUE
[17:44:01.528] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[17:44:01.528] future_lapply() ...
[17:44:01.532] Number of chunks: 2
[17:44:01.532] getGlobalsAndPackagesXApply() ...
[17:44:01.532]  - future.globals: TRUE
[17:44:01.534]  - globals found/used: [n=1] ‘FUN’
[17:44:01.534]  - needed namespaces: [n=0] 
[17:44:01.534] Finding globals ... DONE
[17:44:01.534]  - use_args: TRUE
[17:44:01.534]  - Getting '...' globals ...
[17:44:01.534]    - '...' content: [n=0] 
[17:44:01.534] List of 1
[17:44:01.534]  $ ...: list()
[17:44:01.534]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.534]  - attr(*, "where")=List of 1
[17:44:01.534]   ..$ ...:<environment: 0x5632ae49f018> 
[17:44:01.534]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.534]  - attr(*, "resolved")= logi TRUE
[17:44:01.534]  - attr(*, "total_size")= num NA
[17:44:01.537]  - Getting '...' globals ... DONE
[17:44:01.537] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:01.537] List of 2
[17:44:01.537]  $ ...future.FUN:function (x)  
[17:44:01.537]  $ ...          : list()
[17:44:01.537]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.537]  - attr(*, "where")=List of 2
[17:44:01.537]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:01.537]   ..$ ...          :<environment: 0x5632ae49f018> 
[17:44:01.537]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.537]  - attr(*, "resolved")= logi FALSE
[17:44:01.537]  - attr(*, "total_size")= num 1840
[17:44:01.543] Packages to be attached in all futures: [n=0] 
[17:44:01.543] getGlobalsAndPackagesXApply() ... DONE
[17:44:01.543] Number of futures (= number of chunks): 2
[17:44:01.543] Launching 2 futures (chunks) ...
[17:44:01.543] Chunk #1 of 2 ...
[17:44:01.543]  - Finding globals in 'X' for chunk #1 ...
[17:44:01.544]    + additional globals found: [n=0] 
[17:44:01.544]    + additional namespaces needed: [n=0] 
[17:44:01.544]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:01.544]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:44:01.544]  - seeds: <none>
[17:44:01.544]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.562] Created future:
[17:44:01.562] MultisessionFuture:
[17:44:01.562] Label: ‘future_lapply-1’
[17:44:01.562] Expression:
[17:44:01.562] {
[17:44:01.562]     do.call(function(...) {
[17:44:01.562]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.562]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.562]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.562]             on.exit(options(oopts), add = TRUE)
[17:44:01.562]         }
[17:44:01.562]         {
[17:44:01.562]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.562]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.562]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.562]             })
[17:44:01.562]         }
[17:44:01.562]     }, args = future.call.arguments)
[17:44:01.562] }
[17:44:01.562] Lazy evaluation: FALSE
[17:44:01.562] Asynchronous evaluation: TRUE
[17:44:01.562] Local evaluation: TRUE
[17:44:01.562] Environment: R_GlobalEnv
[17:44:01.562] Capture standard output: TRUE
[17:44:01.562] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.562] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:01.562] Packages: <none>
[17:44:01.562] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.562] Resolved: FALSE
[17:44:01.562] Value: <not collected>
[17:44:01.562] Conditions captured: <none>
[17:44:01.562] Early signaling: FALSE
[17:44:01.562] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.562] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.573] Chunk #1 of 2 ... DONE
[17:44:01.574] Chunk #2 of 2 ...
[17:44:01.574]  - Finding globals in 'X' for chunk #2 ...
[17:44:01.574]    + additional globals found: [n=0] 
[17:44:01.574]    + additional namespaces needed: [n=0] 
[17:44:01.574]  - Finding globals in 'X' for chunk #2 ... DONE
[17:44:01.574]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[17:44:01.575]  - seeds: <none>
[17:44:01.575]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.592] Created future:
[17:44:01.592] MultisessionFuture:
[17:44:01.592] Label: ‘future_lapply-2’
[17:44:01.592] Expression:
[17:44:01.592] {
[17:44:01.592]     do.call(function(...) {
[17:44:01.592]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.592]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.592]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.592]             on.exit(options(oopts), add = TRUE)
[17:44:01.592]         }
[17:44:01.592]         {
[17:44:01.592]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.592]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.592]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.592]             })
[17:44:01.592]         }
[17:44:01.592]     }, args = future.call.arguments)
[17:44:01.592] }
[17:44:01.592] Lazy evaluation: FALSE
[17:44:01.592] Asynchronous evaluation: TRUE
[17:44:01.592] Local evaluation: TRUE
[17:44:01.592] Environment: R_GlobalEnv
[17:44:01.592] Capture standard output: TRUE
[17:44:01.592] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.592] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[17:44:01.592] Packages: <none>
[17:44:01.592] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.592] Resolved: FALSE
[17:44:01.592] Value: <not collected>
[17:44:01.592] Conditions captured: <none>
[17:44:01.592] Early signaling: FALSE
[17:44:01.592] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.592] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.604] Chunk #2 of 2 ... DONE
[17:44:01.604] Launching 2 futures (chunks) ... DONE
[17:44:01.604] Resolving 2 futures (chunks) ...
[17:44:01.637]  - Number of value chunks collected: 2
[17:44:01.638] Resolving 2 futures (chunks) ... DONE
[17:44:01.638] Reducing values from 2 chunks ...
[17:44:01.638]  - Number of values collected after concatenation: 10
[17:44:01.638]  - Number of values expected: 10
[17:44:01.638] Reducing values from 2 chunks ... DONE
[17:44:01.638] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[17:44:01.645] future_lapply() ...
[17:44:01.650] Number of chunks: 10
[17:44:01.650] getGlobalsAndPackagesXApply() ...
[17:44:01.650]  - future.globals: TRUE
[17:44:01.652]  - globals found/used: [n=1] ‘FUN’
[17:44:01.652]  - needed namespaces: [n=0] 
[17:44:01.652] Finding globals ... DONE
[17:44:01.652]  - use_args: TRUE
[17:44:01.652]  - Getting '...' globals ...
[17:44:01.653]    - '...' content: [n=0] 
[17:44:01.653] List of 1
[17:44:01.653]  $ ...: list()
[17:44:01.653]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.653]  - attr(*, "where")=List of 1
[17:44:01.653]   ..$ ...:<environment: 0x5632ae436dd0> 
[17:44:01.653]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.653]  - attr(*, "resolved")= logi TRUE
[17:44:01.653]  - attr(*, "total_size")= num NA
[17:44:01.655]  - Getting '...' globals ... DONE
[17:44:01.655] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:01.656] List of 2
[17:44:01.656]  $ ...future.FUN:function (x)  
[17:44:01.656]  $ ...          : list()
[17:44:01.656]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:01.656]  - attr(*, "where")=List of 2
[17:44:01.656]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:01.656]   ..$ ...          :<environment: 0x5632ae436dd0> 
[17:44:01.656]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:01.656]  - attr(*, "resolved")= logi FALSE
[17:44:01.656]  - attr(*, "total_size")= num 1840
[17:44:01.658] Packages to be attached in all futures: [n=0] 
[17:44:01.658] getGlobalsAndPackagesXApply() ... DONE
[17:44:01.659] Number of futures (= number of chunks): 10
[17:44:01.659] Launching 10 futures (chunks) ...
[17:44:01.659] Chunk #1 of 10 ...
[17:44:01.659]  - Finding globals in 'X' for chunk #1 ...
[17:44:01.659]    + additional globals found: [n=0] 
[17:44:01.659]    + additional namespaces needed: [n=0] 
[17:44:01.659]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:01.660]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:44:01.660]  - seeds: <none>
[17:44:01.660]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.677] Created future:
[17:44:01.678] MultisessionFuture:
[17:44:01.678] Label: ‘future_lapply-1’
[17:44:01.678] Expression:
[17:44:01.678] {
[17:44:01.678]     do.call(function(...) {
[17:44:01.678]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.678]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.678]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.678]             on.exit(options(oopts), add = TRUE)
[17:44:01.678]         }
[17:44:01.678]         {
[17:44:01.678]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.678]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.678]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.678]             })
[17:44:01.678]         }
[17:44:01.678]     }, args = future.call.arguments)
[17:44:01.678] }
[17:44:01.678] Lazy evaluation: FALSE
[17:44:01.678] Asynchronous evaluation: TRUE
[17:44:01.678] Local evaluation: TRUE
[17:44:01.678] Environment: R_GlobalEnv
[17:44:01.678] Capture standard output: TRUE
[17:44:01.678] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.678] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:01.678] Packages: <none>
[17:44:01.678] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.678] Resolved: FALSE
[17:44:01.678] Value: <not collected>
[17:44:01.678] Conditions captured: <none>
[17:44:01.678] Early signaling: FALSE
[17:44:01.678] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.678] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.689] Chunk #1 of 10 ... DONE
[17:44:01.689] Chunk #2 of 10 ...
[17:44:01.689]  - Finding globals in 'X' for chunk #2 ...
[17:44:01.690]    + additional globals found: [n=0] 
[17:44:01.690]    + additional namespaces needed: [n=0] 
[17:44:01.690]  - Finding globals in 'X' for chunk #2 ... DONE
[17:44:01.690]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:44:01.690]  - seeds: <none>
[17:44:01.690]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.710] Created future:
[17:44:01.710] MultisessionFuture:
[17:44:01.710] Label: ‘future_lapply-2’
[17:44:01.710] Expression:
[17:44:01.710] {
[17:44:01.710]     do.call(function(...) {
[17:44:01.710]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.710]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.710]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.710]             on.exit(options(oopts), add = TRUE)
[17:44:01.710]         }
[17:44:01.710]         {
[17:44:01.710]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.710]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.710]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.710]             })
[17:44:01.710]         }
[17:44:01.710]     }, args = future.call.arguments)
[17:44:01.710] }
[17:44:01.710] Lazy evaluation: FALSE
[17:44:01.710] Asynchronous evaluation: TRUE
[17:44:01.710] Local evaluation: TRUE
[17:44:01.710] Environment: R_GlobalEnv
[17:44:01.710] Capture standard output: TRUE
[17:44:01.710] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.710] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:01.710] Packages: <none>
[17:44:01.710] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.710] Resolved: FALSE
[17:44:01.710] Value: <not collected>
[17:44:01.710] Conditions captured: <none>
[17:44:01.710] Early signaling: FALSE
[17:44:01.710] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.710] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.722] Chunk #2 of 10 ... DONE
[17:44:01.722] Chunk #3 of 10 ...
[17:44:01.722]  - Finding globals in 'X' for chunk #3 ...
[17:44:01.723]    + additional globals found: [n=0] 
[17:44:01.723]    + additional namespaces needed: [n=0] 
[17:44:01.723]  - Finding globals in 'X' for chunk #3 ... DONE
[17:44:01.723]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:44:01.723]  - seeds: <none>
[17:44:01.723]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.753] Created future:
[17:44:01.753] MultisessionFuture:
[17:44:01.753] Label: ‘future_lapply-3’
[17:44:01.753] Expression:
[17:44:01.753] {
[17:44:01.753]     do.call(function(...) {
[17:44:01.753]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.753]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.753]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.753]             on.exit(options(oopts), add = TRUE)
[17:44:01.753]         }
[17:44:01.753]         {
[17:44:01.753]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.753]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.753]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.753]             })
[17:44:01.753]         }
[17:44:01.753]     }, args = future.call.arguments)
[17:44:01.753] }
[17:44:01.753] Lazy evaluation: FALSE
[17:44:01.753] Asynchronous evaluation: TRUE
[17:44:01.753] Local evaluation: TRUE
[17:44:01.753] Environment: R_GlobalEnv
[17:44:01.753] Capture standard output: TRUE
[17:44:01.753] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.753] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:01.753] Packages: <none>
[17:44:01.753] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.753] Resolved: FALSE
[17:44:01.753] Value: <not collected>
[17:44:01.753] Conditions captured: <none>
[17:44:01.753] Early signaling: FALSE
[17:44:01.753] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.753] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.765] Chunk #3 of 10 ... DONE
[17:44:01.765] Chunk #4 of 10 ...
[17:44:01.765]  - Finding globals in 'X' for chunk #4 ...
[17:44:01.765]    + additional globals found: [n=0] 
[17:44:01.766]    + additional namespaces needed: [n=0] 
[17:44:01.766]  - Finding globals in 'X' for chunk #4 ... DONE
[17:44:01.766]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:44:01.766]  - seeds: <none>
[17:44:01.766]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.803] Created future:
[17:44:01.804] MultisessionFuture:
[17:44:01.804] Label: ‘future_lapply-4’
[17:44:01.804] Expression:
[17:44:01.804] {
[17:44:01.804]     do.call(function(...) {
[17:44:01.804]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.804]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.804]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.804]             on.exit(options(oopts), add = TRUE)
[17:44:01.804]         }
[17:44:01.804]         {
[17:44:01.804]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.804]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.804]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.804]             })
[17:44:01.804]         }
[17:44:01.804]     }, args = future.call.arguments)
[17:44:01.804] }
[17:44:01.804] Lazy evaluation: FALSE
[17:44:01.804] Asynchronous evaluation: TRUE
[17:44:01.804] Local evaluation: TRUE
[17:44:01.804] Environment: R_GlobalEnv
[17:44:01.804] Capture standard output: TRUE
[17:44:01.804] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.804] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:01.804] Packages: <none>
[17:44:01.804] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.804] Resolved: FALSE
[17:44:01.804] Value: <not collected>
[17:44:01.804] Conditions captured: <none>
[17:44:01.804] Early signaling: FALSE
[17:44:01.804] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.804] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.815] Chunk #4 of 10 ... DONE
[17:44:01.815] Chunk #5 of 10 ...
[17:44:01.816]  - Finding globals in 'X' for chunk #5 ...
[17:44:01.816]    + additional globals found: [n=0] 
[17:44:01.816]    + additional namespaces needed: [n=0] 
[17:44:01.816]  - Finding globals in 'X' for chunk #5 ... DONE
[17:44:01.816]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:44:01.816]  - seeds: <none>
[17:44:01.816]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.845] Created future:
[17:44:01.845] MultisessionFuture:
[17:44:01.845] Label: ‘future_lapply-5’
[17:44:01.845] Expression:
[17:44:01.845] {
[17:44:01.845]     do.call(function(...) {
[17:44:01.845]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.845]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.845]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.845]             on.exit(options(oopts), add = TRUE)
[17:44:01.845]         }
[17:44:01.845]         {
[17:44:01.845]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.845]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.845]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.845]             })
[17:44:01.845]         }
[17:44:01.845]     }, args = future.call.arguments)
[17:44:01.845] }
[17:44:01.845] Lazy evaluation: FALSE
[17:44:01.845] Asynchronous evaluation: TRUE
[17:44:01.845] Local evaluation: TRUE
[17:44:01.845] Environment: R_GlobalEnv
[17:44:01.845] Capture standard output: TRUE
[17:44:01.845] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.845] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:01.845] Packages: <none>
[17:44:01.845] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.845] Resolved: FALSE
[17:44:01.845] Value: <not collected>
[17:44:01.845] Conditions captured: <none>
[17:44:01.845] Early signaling: FALSE
[17:44:01.845] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.845] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.857] Chunk #5 of 10 ... DONE
[17:44:01.857] Chunk #6 of 10 ...
[17:44:01.857]  - Finding globals in 'X' for chunk #6 ...
[17:44:01.857]    + additional globals found: [n=0] 
[17:44:01.857]    + additional namespaces needed: [n=0] 
[17:44:01.857]  - Finding globals in 'X' for chunk #6 ... DONE
[17:44:01.858]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:44:01.858]  - seeds: <none>
[17:44:01.858]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.887] Created future:
[17:44:01.887] MultisessionFuture:
[17:44:01.887] Label: ‘future_lapply-6’
[17:44:01.887] Expression:
[17:44:01.887] {
[17:44:01.887]     do.call(function(...) {
[17:44:01.887]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.887]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.887]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.887]             on.exit(options(oopts), add = TRUE)
[17:44:01.887]         }
[17:44:01.887]         {
[17:44:01.887]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.887]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.887]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.887]             })
[17:44:01.887]         }
[17:44:01.887]     }, args = future.call.arguments)
[17:44:01.887] }
[17:44:01.887] Lazy evaluation: FALSE
[17:44:01.887] Asynchronous evaluation: TRUE
[17:44:01.887] Local evaluation: TRUE
[17:44:01.887] Environment: R_GlobalEnv
[17:44:01.887] Capture standard output: TRUE
[17:44:01.887] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.887] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:01.887] Packages: <none>
[17:44:01.887] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.887] Resolved: FALSE
[17:44:01.887] Value: <not collected>
[17:44:01.887] Conditions captured: <none>
[17:44:01.887] Early signaling: FALSE
[17:44:01.887] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.887] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.898] Chunk #6 of 10 ... DONE
[17:44:01.899] Chunk #7 of 10 ...
[17:44:01.899]  - Finding globals in 'X' for chunk #7 ...
[17:44:01.899]    + additional globals found: [n=0] 
[17:44:01.899]    + additional namespaces needed: [n=0] 
[17:44:01.899]  - Finding globals in 'X' for chunk #7 ... DONE
[17:44:01.899]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:44:01.900]  - seeds: <none>
[17:44:01.902]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.931] Created future:
[17:44:01.932] MultisessionFuture:
[17:44:01.932] Label: ‘future_lapply-7’
[17:44:01.932] Expression:
[17:44:01.932] {
[17:44:01.932]     do.call(function(...) {
[17:44:01.932]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.932]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.932]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.932]             on.exit(options(oopts), add = TRUE)
[17:44:01.932]         }
[17:44:01.932]         {
[17:44:01.932]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.932]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.932]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.932]             })
[17:44:01.932]         }
[17:44:01.932]     }, args = future.call.arguments)
[17:44:01.932] }
[17:44:01.932] Lazy evaluation: FALSE
[17:44:01.932] Asynchronous evaluation: TRUE
[17:44:01.932] Local evaluation: TRUE
[17:44:01.932] Environment: R_GlobalEnv
[17:44:01.932] Capture standard output: TRUE
[17:44:01.932] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.932] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:01.932] Packages: <none>
[17:44:01.932] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.932] Resolved: FALSE
[17:44:01.932] Value: <not collected>
[17:44:01.932] Conditions captured: <none>
[17:44:01.932] Early signaling: FALSE
[17:44:01.932] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.932] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.943] Chunk #7 of 10 ... DONE
[17:44:01.943] Chunk #8 of 10 ...
[17:44:01.943]  - Finding globals in 'X' for chunk #8 ...
[17:44:01.944]    + additional globals found: [n=0] 
[17:44:01.944]    + additional namespaces needed: [n=0] 
[17:44:01.944]  - Finding globals in 'X' for chunk #8 ... DONE
[17:44:01.944]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:44:01.944]  - seeds: <none>
[17:44:01.944]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:01.973] Created future:
[17:44:01.973] MultisessionFuture:
[17:44:01.973] Label: ‘future_lapply-8’
[17:44:01.973] Expression:
[17:44:01.973] {
[17:44:01.973]     do.call(function(...) {
[17:44:01.973]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:01.973]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:01.973]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:01.973]             on.exit(options(oopts), add = TRUE)
[17:44:01.973]         }
[17:44:01.973]         {
[17:44:01.973]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:01.973]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:01.973]                 ...future.FUN(...future.X_jj, ...)
[17:44:01.973]             })
[17:44:01.973]         }
[17:44:01.973]     }, args = future.call.arguments)
[17:44:01.973] }
[17:44:01.973] Lazy evaluation: FALSE
[17:44:01.973] Asynchronous evaluation: TRUE
[17:44:01.973] Local evaluation: TRUE
[17:44:01.973] Environment: R_GlobalEnv
[17:44:01.973] Capture standard output: TRUE
[17:44:01.973] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:01.973] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:01.973] Packages: <none>
[17:44:01.973] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:01.973] Resolved: FALSE
[17:44:01.973] Value: <not collected>
[17:44:01.973] Conditions captured: <none>
[17:44:01.973] Early signaling: FALSE
[17:44:01.973] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:01.973] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:01.984] Chunk #8 of 10 ... DONE
[17:44:01.985] Chunk #9 of 10 ...
[17:44:01.985]  - Finding globals in 'X' for chunk #9 ...
[17:44:01.985]    + additional globals found: [n=0] 
[17:44:01.985]    + additional namespaces needed: [n=0] 
[17:44:01.985]  - Finding globals in 'X' for chunk #9 ... DONE
[17:44:01.985]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:44:01.985]  - seeds: <none>
[17:44:01.986]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:02.015] Created future:
[17:44:02.015] MultisessionFuture:
[17:44:02.015] Label: ‘future_lapply-9’
[17:44:02.015] Expression:
[17:44:02.015] {
[17:44:02.015]     do.call(function(...) {
[17:44:02.015]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:02.015]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:02.015]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:02.015]             on.exit(options(oopts), add = TRUE)
[17:44:02.015]         }
[17:44:02.015]         {
[17:44:02.015]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:02.015]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:02.015]                 ...future.FUN(...future.X_jj, ...)
[17:44:02.015]             })
[17:44:02.015]         }
[17:44:02.015]     }, args = future.call.arguments)
[17:44:02.015] }
[17:44:02.015] Lazy evaluation: FALSE
[17:44:02.015] Asynchronous evaluation: TRUE
[17:44:02.015] Local evaluation: TRUE
[17:44:02.015] Environment: R_GlobalEnv
[17:44:02.015] Capture standard output: TRUE
[17:44:02.015] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:02.015] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:02.015] Packages: <none>
[17:44:02.015] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:02.015] Resolved: FALSE
[17:44:02.015] Value: <not collected>
[17:44:02.015] Conditions captured: <none>
[17:44:02.015] Early signaling: FALSE
[17:44:02.015] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:02.015] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:02.027] Chunk #9 of 10 ... DONE
[17:44:02.027] Chunk #10 of 10 ...
[17:44:02.027]  - Finding globals in 'X' for chunk #10 ...
[17:44:02.027]    + additional globals found: [n=0] 
[17:44:02.028]    + additional namespaces needed: [n=0] 
[17:44:02.028]  - Finding globals in 'X' for chunk #10 ... DONE
[17:44:02.028]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[17:44:02.028]  - seeds: <none>
[17:44:02.028]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:02.059] Created future:
[17:44:02.059] MultisessionFuture:
[17:44:02.059] Label: ‘future_lapply-10’
[17:44:02.059] Expression:
[17:44:02.059] {
[17:44:02.059]     do.call(function(...) {
[17:44:02.059]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:02.059]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:02.059]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:02.059]             on.exit(options(oopts), add = TRUE)
[17:44:02.059]         }
[17:44:02.059]         {
[17:44:02.059]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:02.059]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:02.059]                 ...future.FUN(...future.X_jj, ...)
[17:44:02.059]             })
[17:44:02.059]         }
[17:44:02.059]     }, args = future.call.arguments)
[17:44:02.059] }
[17:44:02.059] Lazy evaluation: FALSE
[17:44:02.059] Asynchronous evaluation: TRUE
[17:44:02.059] Local evaluation: TRUE
[17:44:02.059] Environment: R_GlobalEnv
[17:44:02.059] Capture standard output: TRUE
[17:44:02.059] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:02.059] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:02.059] Packages: <none>
[17:44:02.059] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:02.059] Resolved: FALSE
[17:44:02.059] Value: <not collected>
[17:44:02.059] Conditions captured: <none>
[17:44:02.059] Early signaling: FALSE
[17:44:02.059] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:02.059] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:02.071] Chunk #10 of 10 ... DONE
[17:44:02.071] Launching 10 futures (chunks) ... DONE
[17:44:02.071] Resolving 10 futures (chunks) ...
[17:44:02.102]  - Number of value chunks collected: 10
[17:44:02.102] Resolving 10 futures (chunks) ... DONE
[17:44:02.102] Reducing values from 10 chunks ...
[17:44:02.103]  - Number of values collected after concatenation: 10
[17:44:02.103]  - Number of values expected: 10
[17:44:02.103] Reducing values from 10 chunks ... DONE
[17:44:02.103] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:44:02.106] future_lapply() ...
[17:44:02.111] Number of chunks: 5
[17:44:02.111] getGlobalsAndPackagesXApply() ...
[17:44:02.111]  - future.globals: TRUE
[17:44:02.113]  - globals found/used: [n=1] ‘FUN’
[17:44:02.113]  - needed namespaces: [n=0] 
[17:44:02.113] Finding globals ... DONE
[17:44:02.113]  - use_args: TRUE
[17:44:02.113]  - Getting '...' globals ...
[17:44:02.114]    - '...' content: [n=0] 
[17:44:02.114] List of 1
[17:44:02.114]  $ ...: list()
[17:44:02.114]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:02.114]  - attr(*, "where")=List of 1
[17:44:02.114]   ..$ ...:<environment: 0x5632ad114548> 
[17:44:02.114]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:02.114]  - attr(*, "resolved")= logi TRUE
[17:44:02.114]  - attr(*, "total_size")= num NA
[17:44:02.116]  - Getting '...' globals ... DONE
[17:44:02.116] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:02.116] List of 2
[17:44:02.116]  $ ...future.FUN:function (x)  
[17:44:02.116]  $ ...          : list()
[17:44:02.116]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:02.116]  - attr(*, "where")=List of 2
[17:44:02.116]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:02.116]   ..$ ...          :<environment: 0x5632ad114548> 
[17:44:02.116]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:02.116]  - attr(*, "resolved")= logi FALSE
[17:44:02.116]  - attr(*, "total_size")= num 1840
[17:44:02.122] Packages to be attached in all futures: [n=0] 
[17:44:02.122] getGlobalsAndPackagesXApply() ... DONE
[17:44:02.122] Number of futures (= number of chunks): 5
[17:44:02.122] Launching 5 futures (chunks) ...
[17:44:02.122] Chunk #1 of 5 ...
[17:44:02.122]  - Finding globals in 'X' for chunk #1 ...
[17:44:02.123]    + additional globals found: [n=0] 
[17:44:02.123]    + additional namespaces needed: [n=0] 
[17:44:02.123]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:02.123]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:44:02.123]  - seeds: <none>
[17:44:02.123]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:02.140] Created future:
[17:44:02.140] MultisessionFuture:
[17:44:02.140] Label: ‘future_lapply-1’
[17:44:02.140] Expression:
[17:44:02.140] {
[17:44:02.140]     do.call(function(...) {
[17:44:02.140]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:02.140]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:02.140]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:02.140]             on.exit(options(oopts), add = TRUE)
[17:44:02.140]         }
[17:44:02.140]         {
[17:44:02.140]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:02.140]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:02.140]                 ...future.FUN(...future.X_jj, ...)
[17:44:02.140]             })
[17:44:02.140]         }
[17:44:02.140]     }, args = future.call.arguments)
[17:44:02.140] }
[17:44:02.140] Lazy evaluation: FALSE
[17:44:02.140] Asynchronous evaluation: TRUE
[17:44:02.140] Local evaluation: TRUE
[17:44:02.140] Environment: R_GlobalEnv
[17:44:02.140] Capture standard output: TRUE
[17:44:02.140] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:02.140] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:02.140] Packages: <none>
[17:44:02.140] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:02.140] Resolved: FALSE
[17:44:02.140] Value: <not collected>
[17:44:02.140] Conditions captured: <none>
[17:44:02.140] Early signaling: FALSE
[17:44:02.140] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:02.140] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:02.152] Chunk #1 of 5 ... DONE
[17:44:02.152] Chunk #2 of 5 ...
[17:44:02.152]  - Finding globals in 'X' for chunk #2 ...
[17:44:02.152]    + additional globals found: [n=0] 
[17:44:02.153]    + additional namespaces needed: [n=0] 
[17:44:02.153]  - Finding globals in 'X' for chunk #2 ... DONE
[17:44:02.153]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:44:02.153]  - seeds: <none>
[17:44:02.153]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:02.170] Created future:
[17:44:02.171] MultisessionFuture:
[17:44:02.171] Label: ‘future_lapply-2’
[17:44:02.171] Expression:
[17:44:02.171] {
[17:44:02.171]     do.call(function(...) {
[17:44:02.171]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:02.171]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:02.171]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:02.171]             on.exit(options(oopts), add = TRUE)
[17:44:02.171]         }
[17:44:02.171]         {
[17:44:02.171]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:02.171]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:02.171]                 ...future.FUN(...future.X_jj, ...)
[17:44:02.171]             })
[17:44:02.171]         }
[17:44:02.171]     }, args = future.call.arguments)
[17:44:02.171] }
[17:44:02.171] Lazy evaluation: FALSE
[17:44:02.171] Asynchronous evaluation: TRUE
[17:44:02.171] Local evaluation: TRUE
[17:44:02.171] Environment: R_GlobalEnv
[17:44:02.171] Capture standard output: TRUE
[17:44:02.171] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:02.171] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:02.171] Packages: <none>
[17:44:02.171] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:02.171] Resolved: FALSE
[17:44:02.171] Value: <not collected>
[17:44:02.171] Conditions captured: <none>
[17:44:02.171] Early signaling: FALSE
[17:44:02.171] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:02.171] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:02.182] Chunk #2 of 5 ... DONE
[17:44:02.182] Chunk #3 of 5 ...
[17:44:02.183]  - Finding globals in 'X' for chunk #3 ...
[17:44:02.183]    + additional globals found: [n=0] 
[17:44:02.183]    + additional namespaces needed: [n=0] 
[17:44:02.183]  - Finding globals in 'X' for chunk #3 ... DONE
[17:44:02.183]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:44:02.184]  - seeds: <none>
[17:44:02.184]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:02.213] Created future:
[17:44:02.213] MultisessionFuture:
[17:44:02.213] Label: ‘future_lapply-3’
[17:44:02.213] Expression:
[17:44:02.213] {
[17:44:02.213]     do.call(function(...) {
[17:44:02.213]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:02.213]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:02.213]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:02.213]             on.exit(options(oopts), add = TRUE)
[17:44:02.213]         }
[17:44:02.213]         {
[17:44:02.213]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:02.213]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:02.213]                 ...future.FUN(...future.X_jj, ...)
[17:44:02.213]             })
[17:44:02.213]         }
[17:44:02.213]     }, args = future.call.arguments)
[17:44:02.213] }
[17:44:02.213] Lazy evaluation: FALSE
[17:44:02.213] Asynchronous evaluation: TRUE
[17:44:02.213] Local evaluation: TRUE
[17:44:02.213] Environment: R_GlobalEnv
[17:44:02.213] Capture standard output: TRUE
[17:44:02.213] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:02.213] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:02.213] Packages: <none>
[17:44:02.213] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:02.213] Resolved: FALSE
[17:44:02.213] Value: <not collected>
[17:44:02.213] Conditions captured: <none>
[17:44:02.213] Early signaling: FALSE
[17:44:02.213] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:02.213] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:02.225] Chunk #3 of 5 ... DONE
[17:44:02.225] Chunk #4 of 5 ...
[17:44:02.225]  - Finding globals in 'X' for chunk #4 ...
[17:44:02.225]    + additional globals found: [n=0] 
[17:44:02.225]    + additional namespaces needed: [n=0] 
[17:44:02.225]  - Finding globals in 'X' for chunk #4 ... DONE
[17:44:02.226]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:44:02.226]  - seeds: <none>
[17:44:02.226]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:02.255] Created future:
[17:44:02.255] MultisessionFuture:
[17:44:02.255] Label: ‘future_lapply-4’
[17:44:02.255] Expression:
[17:44:02.255] {
[17:44:02.255]     do.call(function(...) {
[17:44:02.255]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:02.255]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:02.255]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:02.255]             on.exit(options(oopts), add = TRUE)
[17:44:02.255]         }
[17:44:02.255]         {
[17:44:02.255]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:02.255]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:02.255]                 ...future.FUN(...future.X_jj, ...)
[17:44:02.255]             })
[17:44:02.255]         }
[17:44:02.255]     }, args = future.call.arguments)
[17:44:02.255] }
[17:44:02.255] Lazy evaluation: FALSE
[17:44:02.255] Asynchronous evaluation: TRUE
[17:44:02.255] Local evaluation: TRUE
[17:44:02.255] Environment: R_GlobalEnv
[17:44:02.255] Capture standard output: TRUE
[17:44:02.255] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:02.255] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:02.255] Packages: <none>
[17:44:02.255] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:02.255] Resolved: FALSE
[17:44:02.255] Value: <not collected>
[17:44:02.255] Conditions captured: <none>
[17:44:02.255] Early signaling: FALSE
[17:44:02.255] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:02.255] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:02.267] Chunk #4 of 5 ... DONE
[17:44:02.267] Chunk #5 of 5 ...
[17:44:02.267]  - Finding globals in 'X' for chunk #5 ...
[17:44:02.267]    + additional globals found: [n=0] 
[17:44:02.267]    + additional namespaces needed: [n=0] 
[17:44:02.267]  - Finding globals in 'X' for chunk #5 ... DONE
[17:44:02.268]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[17:44:02.268]  - seeds: <none>
[17:44:02.268]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:02.296] Created future:
[17:44:02.296] MultisessionFuture:
[17:44:02.296] Label: ‘future_lapply-5’
[17:44:02.296] Expression:
[17:44:02.296] {
[17:44:02.296]     do.call(function(...) {
[17:44:02.296]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:02.296]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:02.296]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:02.296]             on.exit(options(oopts), add = TRUE)
[17:44:02.296]         }
[17:44:02.296]         {
[17:44:02.296]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:02.296]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:02.296]                 ...future.FUN(...future.X_jj, ...)
[17:44:02.296]             })
[17:44:02.296]         }
[17:44:02.296]     }, args = future.call.arguments)
[17:44:02.296] }
[17:44:02.296] Lazy evaluation: FALSE
[17:44:02.296] Asynchronous evaluation: TRUE
[17:44:02.296] Local evaluation: TRUE
[17:44:02.296] Environment: R_GlobalEnv
[17:44:02.296] Capture standard output: TRUE
[17:44:02.296] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:02.296] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:02.296] Packages: <none>
[17:44:02.296] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:02.296] Resolved: TRUE
[17:44:02.296] Value: <not collected>
[17:44:02.296] Conditions captured: <none>
[17:44:02.296] Early signaling: FALSE
[17:44:02.296] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:02.296] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:02.299] Chunk #5 of 5 ... DONE
[17:44:02.299] Launching 5 futures (chunks) ... DONE
[17:44:02.299] Resolving 5 futures (chunks) ...
[17:44:02.301]  - Number of value chunks collected: 5
[17:44:02.301] Resolving 5 futures (chunks) ... DONE
[17:44:02.301] Reducing values from 5 chunks ...
[17:44:02.301]  - Number of values collected after concatenation: 10
[17:44:02.301]  - Number of values expected: 10
[17:44:02.301] Reducing values from 5 chunks ... DONE
[17:44:02.301] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:44:02.305] future_lapply() ...
[17:44:02.311] Number of chunks: 2
[17:44:02.311] getGlobalsAndPackagesXApply() ...
[17:44:02.312]  - future.globals: TRUE
[17:44:02.313]  - globals found/used: [n=1] ‘FUN’
[17:44:02.314]  - needed namespaces: [n=0] 
[17:44:02.314] Finding globals ... DONE
[17:44:02.314]  - use_args: TRUE
[17:44:02.314]  - Getting '...' globals ...
[17:44:02.314]    - '...' content: [n=0] 
[17:44:02.314] List of 1
[17:44:02.314]  $ ...: list()
[17:44:02.314]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:02.314]  - attr(*, "where")=List of 1
[17:44:02.314]   ..$ ...:<environment: 0x5632addf4348> 
[17:44:02.314]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:02.314]  - attr(*, "resolved")= logi TRUE
[17:44:02.314]  - attr(*, "total_size")= num NA
[17:44:02.317]  - Getting '...' globals ... DONE
[17:44:02.317] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:02.317] List of 2
[17:44:02.317]  $ ...future.FUN:function (x)  
[17:44:02.317]  $ ...          : list()
[17:44:02.317]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:02.317]  - attr(*, "where")=List of 2
[17:44:02.317]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:02.317]   ..$ ...          :<environment: 0x5632addf4348> 
[17:44:02.317]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:02.317]  - attr(*, "resolved")= logi FALSE
[17:44:02.317]  - attr(*, "total_size")= num 1840
[17:44:02.320] Packages to be attached in all futures: [n=0] 
[17:44:02.320] getGlobalsAndPackagesXApply() ... DONE
[17:44:02.320] Number of futures (= number of chunks): 2
[17:44:02.320] Launching 2 futures (chunks) ...
[17:44:02.320] Chunk #1 of 2 ...
[17:44:02.320]  - Finding globals in 'X' for chunk #1 ...
[17:44:02.321]    + additional globals found: [n=0] 
[17:44:02.321]    + additional namespaces needed: [n=0] 
[17:44:02.321]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:02.321]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:44:02.321]  - seeds: <none>
[17:44:02.321]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:02.338] Created future:
[17:44:02.339] MultisessionFuture:
[17:44:02.339] Label: ‘future_lapply-1’
[17:44:02.339] Expression:
[17:44:02.339] {
[17:44:02.339]     do.call(function(...) {
[17:44:02.339]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:02.339]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:02.339]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:02.339]             on.exit(options(oopts), add = TRUE)
[17:44:02.339]         }
[17:44:02.339]         {
[17:44:02.339]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:02.339]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:02.339]                 ...future.FUN(...future.X_jj, ...)
[17:44:02.339]             })
[17:44:02.339]         }
[17:44:02.339]     }, args = future.call.arguments)
[17:44:02.339] }
[17:44:02.339] Lazy evaluation: FALSE
[17:44:02.339] Asynchronous evaluation: TRUE
[17:44:02.339] Local evaluation: TRUE
[17:44:02.339] Environment: R_GlobalEnv
[17:44:02.339] Capture standard output: TRUE
[17:44:02.339] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:02.339] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:02.339] Packages: <none>
[17:44:02.339] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:02.339] Resolved: FALSE
[17:44:02.339] Value: <not collected>
[17:44:02.339] Conditions captured: <none>
[17:44:02.339] Early signaling: FALSE
[17:44:02.339] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:02.339] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:02.350] Chunk #1 of 2 ... DONE
[17:44:02.350] Chunk #2 of 2 ...
[17:44:02.350]  - Finding globals in 'X' for chunk #2 ...
[17:44:02.351]    + additional globals found: [n=0] 
[17:44:02.351]    + additional namespaces needed: [n=0] 
[17:44:02.351]  - Finding globals in 'X' for chunk #2 ... DONE
[17:44:02.351]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[17:44:02.351]  - seeds: <none>
[17:44:02.351]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:02.369] Created future:
[17:44:02.369] MultisessionFuture:
[17:44:02.369] Label: ‘future_lapply-2’
[17:44:02.369] Expression:
[17:44:02.369] {
[17:44:02.369]     do.call(function(...) {
[17:44:02.369]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:02.369]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:02.369]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:02.369]             on.exit(options(oopts), add = TRUE)
[17:44:02.369]         }
[17:44:02.369]         {
[17:44:02.369]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:02.369]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:02.369]                 ...future.FUN(...future.X_jj, ...)
[17:44:02.369]             })
[17:44:02.369]         }
[17:44:02.369]     }, args = future.call.arguments)
[17:44:02.369] }
[17:44:02.369] Lazy evaluation: FALSE
[17:44:02.369] Asynchronous evaluation: TRUE
[17:44:02.369] Local evaluation: TRUE
[17:44:02.369] Environment: R_GlobalEnv
[17:44:02.369] Capture standard output: TRUE
[17:44:02.369] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:02.369] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:02.369] Packages: <none>
[17:44:02.369] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:02.369] Resolved: FALSE
[17:44:02.369] Value: <not collected>
[17:44:02.369] Conditions captured: <none>
[17:44:02.369] Early signaling: FALSE
[17:44:02.369] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:02.369] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:02.380] Chunk #2 of 2 ... DONE
[17:44:02.381] Launching 2 futures (chunks) ... DONE
[17:44:02.381] Resolving 2 futures (chunks) ...
[17:44:02.413]  - Number of value chunks collected: 2
[17:44:02.414] Resolving 2 futures (chunks) ... DONE
[17:44:02.414] Reducing values from 2 chunks ...
[17:44:02.414]  - Number of values collected after concatenation: 10
[17:44:02.414]  - Number of values expected: 10
[17:44:02.414] Reducing values from 2 chunks ... DONE
[17:44:02.414] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[17:44:02.418] future_lapply() ...
[17:44:02.422] Number of chunks: 1
[17:44:02.422] getGlobalsAndPackagesXApply() ...
[17:44:02.422]  - future.globals: TRUE
[17:44:02.424]  - globals found/used: [n=1] ‘FUN’
[17:44:02.424]  - needed namespaces: [n=0] 
[17:44:02.424] Finding globals ... DONE
[17:44:02.424]  - use_args: TRUE
[17:44:02.424]  - Getting '...' globals ...
[17:44:02.425]    - '...' content: [n=0] 
[17:44:02.425] List of 1
[17:44:02.425]  $ ...: list()
[17:44:02.425]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:02.425]  - attr(*, "where")=List of 1
[17:44:02.425]   ..$ ...:<environment: 0x5632addd2648> 
[17:44:02.425]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:02.425]  - attr(*, "resolved")= logi TRUE
[17:44:02.425]  - attr(*, "total_size")= num NA
[17:44:02.427]  - Getting '...' globals ... DONE
[17:44:02.427] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:02.428] List of 2
[17:44:02.428]  $ ...future.FUN:function (x)  
[17:44:02.428]  $ ...          : list()
[17:44:02.428]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:02.428]  - attr(*, "where")=List of 2
[17:44:02.428]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:02.428]   ..$ ...          :<environment: 0x5632addd2648> 
[17:44:02.428]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:02.428]  - attr(*, "resolved")= logi FALSE
[17:44:02.428]  - attr(*, "total_size")= num 1840
[17:44:02.430] Packages to be attached in all futures: [n=0] 
[17:44:02.430] getGlobalsAndPackagesXApply() ... DONE
[17:44:02.430] Number of futures (= number of chunks): 1
[17:44:02.430] Launching 1 futures (chunks) ...
[17:44:02.431] Chunk #1 of 1 ...
[17:44:02.431]  - Finding globals in 'X' for chunk #1 ...
[17:44:02.431]    + additional globals found: [n=0] 
[17:44:02.431]    + additional namespaces needed: [n=0] 
[17:44:02.431]  - Finding globals in 'X' for chunk #1 ... DONE
[17:44:02.431]  - seeds: <none>
[17:44:02.431]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[17:44:02.449] Created future:
[17:44:02.451] MultisessionFuture:
[17:44:02.451] Label: ‘future_lapply-1’
[17:44:02.451] Expression:
[17:44:02.451] {
[17:44:02.451]     do.call(function(...) {
[17:44:02.451]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[17:44:02.451]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[17:44:02.451]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[17:44:02.451]             on.exit(options(oopts), add = TRUE)
[17:44:02.451]         }
[17:44:02.451]         {
[17:44:02.451]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[17:44:02.451]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[17:44:02.451]                 ...future.FUN(...future.X_jj, ...)
[17:44:02.451]             })
[17:44:02.451]         }
[17:44:02.451]     }, args = future.call.arguments)
[17:44:02.451] }
[17:44:02.451] Lazy evaluation: FALSE
[17:44:02.451] Asynchronous evaluation: TRUE
[17:44:02.451] Local evaluation: TRUE
[17:44:02.451] Environment: R_GlobalEnv
[17:44:02.451] Capture standard output: TRUE
[17:44:02.451] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[17:44:02.451] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[17:44:02.451] Packages: <none>
[17:44:02.451] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[17:44:02.451] Resolved: FALSE
[17:44:02.451] Value: <not collected>
[17:44:02.451] Conditions captured: <none>
[17:44:02.451] Early signaling: FALSE
[17:44:02.451] Owner process: fb28e6a8-40d9-0bf3-1e32-a19160c51478
[17:44:02.451] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[17:44:02.463] Chunk #1 of 1 ... DONE
[17:44:02.463] Launching 1 futures (chunks) ... DONE
[17:44:02.463] Resolving 1 futures (chunks) ...
[17:44:02.493]  - Number of value chunks collected: 1
[17:44:02.494] Resolving 1 futures (chunks) ... DONE
[17:44:02.494] Reducing values from 1 chunks ...
[17:44:02.494]  - Number of values collected after concatenation: 10
[17:44:02.494]  - Number of values expected: 10
[17:44:02.494] Reducing values from 1 chunks ... DONE
[17:44:02.494] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[17:44:02.498] future_lapply() ...
[17:44:02.502] Number of chunks: 1
[17:44:02.502] getGlobalsAndPackagesXApply() ...
[17:44:02.502] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[17:44:02.502] future_lapply() ...
[17:44:02.506] Number of chunks: 1
[17:44:02.506] getGlobalsAndPackagesXApply() ...
[17:44:02.506]  - future.globals: <name-value list> with names ‘1’
[17:44:02.506] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[17:44:02.506] future_lapply() ...
[17:44:02.510] Number of chunks: 1
[17:44:02.510] getGlobalsAndPackagesXApply() ...
[17:44:02.510]  - future.globals: ‘...future.FUN’
[17:44:02.510]  - use_args: TRUE
[17:44:02.510] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[17:44:02.510] future_lapply() ...
[17:44:02.514] Number of chunks: 1
[17:44:02.514] getGlobalsAndPackagesXApply() ...
[17:44:02.514]  - future.globals: ‘...future.FUN’
[17:44:02.514]  - use_args: TRUE
[17:44:02.514] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[17:44:02.515] future_lapply() ...
[17:44:02.518] Number of chunks: 1
[17:44:02.518] getGlobalsAndPackagesXApply() ...
[17:44:02.518]  - future.globals: TRUE
[17:44:02.520]  - globals found/used: [n=1] ‘FUN’
[17:44:02.520]  - needed namespaces: [n=0] 
[17:44:02.520] Finding globals ... DONE
[17:44:02.520]  - use_args: TRUE
[17:44:02.520]  - Getting '...' globals ...
[17:44:02.520]    - '...' content: [n=0] 
[17:44:02.520] List of 1
[17:44:02.520]  $ ...: list()
[17:44:02.520]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:02.520]  - attr(*, "where")=List of 1
[17:44:02.520]   ..$ ...:<environment: 0x5632ac4c64a0> 
[17:44:02.520]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:02.520]  - attr(*, "resolved")= logi TRUE
[17:44:02.520]  - attr(*, "total_size")= num NA
[17:44:02.523]  - Getting '...' globals ... DONE
[17:44:02.523] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[17:44:02.523] List of 2
[17:44:02.523]  $ ...future.FUN:function (f)  
[17:44:02.523]  $ ...          : list()
[17:44:02.523]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[17:44:02.523]  - attr(*, "where")=List of 2
[17:44:02.523]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[17:44:02.523]   ..$ ...          :<environment: 0x5632ac4c64a0> 
[17:44:02.523]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[17:44:02.523]  - attr(*, "resolved")= logi FALSE
[17:44:02.523]  - attr(*, "total_size")= num 336
[17:44:02.526] Packages to be attached in all futures: [n=0] 
[17:44:02.526] getGlobalsAndPackagesXApply() ... DONE
[17:44:02.526] Number of futures (= number of chunks): 1
[17:44:02.526] Launching 1 futures (chunks) ...
[17:44:02.526] Chunk #1 of 1 ...
[17:44:02.527]  - Finding globals in 'X' for chunk #1 ...
[17:44:02.528]    + additional globals found: [n=1] ‘...future.elements_ii’
[17:44:02.528]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
