
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> source("incl/start.R")
Loading required package: future
[16:59:39.962] plan(): Setting new future strategy stack:
[16:59:39.963] List of future strategies:
[16:59:39.963] 1. sequential:
[16:59:39.963]    - args: function (..., envir = parent.frame(), workers = "<NULL>")
[16:59:39.963]    - tweaked: FALSE
[16:59:39.963]    - call: future::plan("sequential")
[16:59:39.976] plan(): nbrOfWorkers() = 1
> library("tools") ## toTitleCase()
> 
> options(future.debug = FALSE)
> options(future.apply.debug = TRUE)
> 
> message("*** future_lapply() - globals ...")
*** future_lapply() - globals ...
> 
> plan(cluster, workers = "localhost")
> 
> a <- 1
> b <- 2
> 
> globals_set <- list(
+   A = FALSE,
+   B = TRUE,
+   C = c("a", "b"),
+   D = list(a = 2, b = 3)
+ )
> 
> x <- list(1)
> y_truth <- list(A = NULL, B = list(1), C = list(1), D = list(2))
> str(y_truth)
List of 4
 $ A: NULL
 $ B:List of 1
  ..$ : num 1
 $ C:List of 1
  ..$ : num 1
 $ D:List of 1
  ..$ : num 2
> 
> for (name in names(globals_set)) {
+   globals <- globals_set[[name]]
+   message("Globals set ", sQuote(name))
+   y <- tryCatch({
+     future_lapply(x, FUN = function(x) {
+       median(c(x, a, b))
+     }, future.globals = globals, future.packages = "utils")
+   }, error = identity)
+   print(y)
+   stopifnot((name == "A" && inherits(y, "error")) || 
+              identical(y, y_truth[[name]]))
+ }
Globals set ‘A’
[16:59:40.516] future_lapply() ...
[16:59:40.520] Number of chunks: 1
[16:59:40.521] getGlobalsAndPackagesXApply() ...
[16:59:40.521]  - future.globals: FALSE
[16:59:40.523]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:59:40.523]  - needed namespaces: [n=0] 
[16:59:40.524] Finding globals ... DONE
[16:59:40.524]  - use_args: TRUE
[16:59:40.524]  - Getting '...' globals ...
[16:59:40.525]    - '...' content: [n=0] 
[16:59:40.525] List of 1
[16:59:40.525]  $ ...: list()
[16:59:40.525]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.525]  - attr(*, "where")=List of 1
[16:59:40.525]   ..$ ...:<environment: 0x562fbb1fd2e8> 
[16:59:40.525]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.525]  - attr(*, "resolved")= logi TRUE
[16:59:40.525]  - attr(*, "total_size")= num NA
[16:59:40.527]  - Getting '...' globals ... DONE
[16:59:40.528] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:59:40.528] List of 3
[16:59:40.528]  $ ...future.FUN        :function (x)  
[16:59:40.528]  $ future.call.arguments: list()
[16:59:40.528]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.528]  $ ...                  : list()
[16:59:40.528]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.528]  - attr(*, "where")=List of 3
[16:59:40.528]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:59:40.528]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:59:40.528]   ..$ ...                  :<environment: 0x562fbb1fd2e8> 
[16:59:40.528]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.528]  - attr(*, "resolved")= logi FALSE
[16:59:40.528]  - attr(*, "total_size")= num 3824
[16:59:40.531] Packages to be attached in all futures: [n=1] ‘utils’
[16:59:40.532] getGlobalsAndPackagesXApply() ... DONE
[16:59:40.532] Number of futures (= number of chunks): 1
[16:59:40.532] Launching 1 futures (chunks) ...
[16:59:40.532] Chunk #1 of 1 ...
[16:59:40.532]  - seeds: <none>
[16:59:40.533]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:40.542] Created future:
[16:59:40.542] ClusterFuture:
[16:59:40.542] Label: ‘future_lapply-1’
[16:59:40.542] Expression:
[16:59:40.542] {
[16:59:40.542]     do.call(function(...) {
[16:59:40.542]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:40.542]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:40.542]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:40.542]             on.exit(options(oopts), add = TRUE)
[16:59:40.542]         }
[16:59:40.542]         {
[16:59:40.542]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:40.542]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:40.542]                 ...future.FUN(...future.X_jj, ...)
[16:59:40.542]             })
[16:59:40.542]         }
[16:59:40.542]     }, args = future.call.arguments)
[16:59:40.542] }
[16:59:40.542] Lazy evaluation: FALSE
[16:59:40.542] Asynchronous evaluation: TRUE
[16:59:40.542] Local evaluation: TRUE
[16:59:40.542] Environment: R_GlobalEnv
[16:59:40.542] Capture standard output: TRUE
[16:59:40.542] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:40.542] Globals: 5 objects totaling 3.79 KiB (function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:40.542] Packages: 1 packages (‘utils’)
[16:59:40.542] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:40.542] Resolved: FALSE
[16:59:40.542] Value: <not collected>
[16:59:40.542] Conditions captured: <none>
[16:59:40.542] Early signaling: FALSE
[16:59:40.542] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:40.542] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:40.555] Chunk #1 of 1 ... DONE
[16:59:40.555] Launching 1 futures (chunks) ... DONE
[16:59:40.555] Resolving 1 futures (chunks) ...
<simpleError in ...future.FUN(...future.X_jj, ...): object 'a' not found>
Globals set ‘B’
[16:59:40.587] future_lapply() ...
[16:59:40.588] Number of chunks: 1
[16:59:40.588] getGlobalsAndPackagesXApply() ...
[16:59:40.588]  - future.globals: TRUE
[16:59:40.591]  - globals found/used: [n=3] ‘FUN’, ‘a’, ‘b’
[16:59:40.592]  - needed namespaces: [n=1] ‘stats’
[16:59:40.592] Finding globals ... DONE
[16:59:40.592]  - use_args: TRUE
[16:59:40.592]  - Getting '...' globals ...
[16:59:40.592]    - '...' content: [n=0] 
[16:59:40.592] List of 1
[16:59:40.592]  $ ...: list()
[16:59:40.592]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.592]  - attr(*, "where")=List of 1
[16:59:40.592]   ..$ ...:<environment: 0x562fbd066f40> 
[16:59:40.592]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.592]  - attr(*, "resolved")= logi TRUE
[16:59:40.592]  - attr(*, "total_size")= num NA
[16:59:40.596]  - Getting '...' globals ... DONE
[16:59:40.596] Globals to be used in all futures (chunks): [n=4] ‘...future.FUN’, ‘a’, ‘b’, ‘...’
[16:59:40.596] List of 4
[16:59:40.596]  $ ...future.FUN:function (x)  
[16:59:40.596]  $ a            : num 1
[16:59:40.596]  $ b            : num 2
[16:59:40.596]  $ ...          : list()
[16:59:40.596]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.596]  - attr(*, "where")=List of 4
[16:59:40.596]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:40.596]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:40.596]   ..$ b            :<environment: R_EmptyEnv> 
[16:59:40.596]   ..$ ...          :<environment: 0x562fbd066f40> 
[16:59:40.596]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.596]  - attr(*, "resolved")= logi FALSE
[16:59:40.596]  - attr(*, "total_size")= num 3936
[16:59:40.601] Packages to be attached in all futures: [n=2] ‘stats’, ‘utils’
[16:59:40.601] getGlobalsAndPackagesXApply() ... DONE
[16:59:40.601] Number of futures (= number of chunks): 1
[16:59:40.601] Launching 1 futures (chunks) ...
[16:59:40.601] Chunk #1 of 1 ...
[16:59:40.601]  - Finding globals in 'X' for chunk #1 ...
[16:59:40.602]    + additional globals found: [n=0] 
[16:59:40.605]    + additional namespaces needed: [n=0] 
[16:59:40.605]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:40.605]  - seeds: <none>
[16:59:40.605]  - All globals exported: [n=7] ‘...future.FUN’, ‘a’, ‘b’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:40.618] Created future:
[16:59:40.618] ClusterFuture:
[16:59:40.618] Label: ‘future_lapply-1’
[16:59:40.618] Expression:
[16:59:40.618] {
[16:59:40.618]     do.call(function(...) {
[16:59:40.618]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:40.618]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:40.618]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:40.618]             on.exit(options(oopts), add = TRUE)
[16:59:40.618]         }
[16:59:40.618]         {
[16:59:40.618]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:40.618]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:40.618]                 ...future.FUN(...future.X_jj, ...)
[16:59:40.618]             })
[16:59:40.618]         }
[16:59:40.618]     }, args = future.call.arguments)
[16:59:40.618] }
[16:59:40.618] Lazy evaluation: FALSE
[16:59:40.618] Asynchronous evaluation: TRUE
[16:59:40.618] Local evaluation: TRUE
[16:59:40.618] Environment: R_GlobalEnv
[16:59:40.618] Capture standard output: TRUE
[16:59:40.618] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:40.618] Globals: 7 objects totaling 3.90 KiB (function ‘...future.FUN’ of 3.73 KiB, numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:59:40.618] Packages: 2 packages (‘stats’, ‘utils’)
[16:59:40.618] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:40.618] Resolved: FALSE
[16:59:40.618] Value: <not collected>
[16:59:40.618] Conditions captured: <none>
[16:59:40.618] Early signaling: FALSE
[16:59:40.618] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:40.618] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:40.629] Chunk #1 of 1 ... DONE
[16:59:40.629] Launching 1 futures (chunks) ... DONE
[16:59:40.629] Resolving 1 futures (chunks) ...
[16:59:40.672]  - Number of value chunks collected: 1
[16:59:40.672] Resolving 1 futures (chunks) ... DONE
[16:59:40.672] Reducing values from 1 chunks ...
[16:59:40.672]  - Number of values collected after concatenation: 1
[16:59:40.672]  - Number of values expected: 1
[16:59:40.672] Reducing values from 1 chunks ... DONE
[16:59:40.673] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘C’
[16:59:40.673] future_lapply() ...
[16:59:40.674] Number of chunks: 1
[16:59:40.674] getGlobalsAndPackagesXApply() ...
[16:59:40.674]  - future.globals: ‘a’, ‘b’
[16:59:40.674]  - use_args: TRUE
[16:59:40.674] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[16:59:40.674] List of 4
[16:59:40.674]  $ a            : num 1
[16:59:40.674]  $ b            : num 2
[16:59:40.674]  $ ...future.FUN:function (x)  
[16:59:40.674]  $ ...          : list()
[16:59:40.674]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.674]  - attr(*, "where")=List of 4
[16:59:40.674]   ..$ a            :<environment: R_GlobalEnv> 
[16:59:40.674]   ..$ b            :<environment: R_GlobalEnv> 
[16:59:40.674]   ..$ ...future.FUN:<environment: 0x562fbbf30888> 
[16:59:40.674]   ..$ ...          :<environment: 0x562fbbf30888> 
[16:59:40.674]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.674]  - attr(*, "resolved")= logi FALSE
[16:59:40.674]  - attr(*, "total_size")= num NA
[16:59:40.678] Packages to be attached in all futures: [n=1] ‘utils’
[16:59:40.678] getGlobalsAndPackagesXApply() ... DONE
[16:59:40.678] Number of futures (= number of chunks): 1
[16:59:40.678] Launching 1 futures (chunks) ...
[16:59:40.678] Chunk #1 of 1 ...
[16:59:40.679]  - seeds: <none>
[16:59:40.679]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:40.688] Created future:
[16:59:40.688] ClusterFuture:
[16:59:40.688] Label: ‘future_lapply-1’
[16:59:40.688] Expression:
[16:59:40.688] {
[16:59:40.688]     do.call(function(...) {
[16:59:40.688]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:40.688]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:40.688]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:40.688]             on.exit(options(oopts), add = TRUE)
[16:59:40.688]         }
[16:59:40.688]         {
[16:59:40.688]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:40.688]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:40.688]                 ...future.FUN(...future.X_jj, ...)
[16:59:40.688]             })
[16:59:40.688]         }
[16:59:40.688]     }, args = future.call.arguments)
[16:59:40.688] }
[16:59:40.688] Lazy evaluation: FALSE
[16:59:40.688] Asynchronous evaluation: TRUE
[16:59:40.688] Local evaluation: TRUE
[16:59:40.688] Environment: R_GlobalEnv
[16:59:40.688] Capture standard output: TRUE
[16:59:40.688] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:40.688] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:59:40.688] Packages: 1 packages (‘utils’)
[16:59:40.688] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:40.688] Resolved: FALSE
[16:59:40.688] Value: <not collected>
[16:59:40.688] Conditions captured: <none>
[16:59:40.688] Early signaling: FALSE
[16:59:40.688] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:40.688] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:40.700] Chunk #1 of 1 ... DONE
[16:59:40.700] Launching 1 futures (chunks) ... DONE
[16:59:40.700] Resolving 1 futures (chunks) ...
[16:59:40.742]  - Number of value chunks collected: 1
[16:59:40.742] Resolving 1 futures (chunks) ... DONE
[16:59:40.742] Reducing values from 1 chunks ...
[16:59:40.742]  - Number of values collected after concatenation: 1
[16:59:40.742]  - Number of values expected: 1
[16:59:40.742] Reducing values from 1 chunks ... DONE
[16:59:40.743] future_lapply() ... DONE
[[1]]
[1] 1

Globals set ‘D’
[16:59:40.743] future_lapply() ...
[16:59:40.743] Number of chunks: 1
[16:59:40.744] getGlobalsAndPackagesXApply() ...
[16:59:40.744]  - future.globals: <name-value list> with names ‘2’, ‘3’
[16:59:40.744]  - use_args: TRUE
[16:59:40.744]  - Getting '...' globals ...
[16:59:40.744]    - '...' content: [n=0] 
[16:59:40.744] List of 1
[16:59:40.744]  $ ...: list()
[16:59:40.744]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.744]  - attr(*, "where")=List of 1
[16:59:40.744]   ..$ ...:<environment: 0x562fbb2b2838> 
[16:59:40.744]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.744]  - attr(*, "resolved")= logi TRUE
[16:59:40.744]  - attr(*, "total_size")= num NA
[16:59:40.747]  - Getting '...' globals ... DONE
[16:59:40.747] Globals to be used in all futures (chunks): [n=4] ‘a’, ‘b’, ‘...future.FUN’, ‘...’
[16:59:40.747] List of 4
[16:59:40.747]  $ a            : num 2
[16:59:40.747]  $ b            : num 3
[16:59:40.747]  $ ...future.FUN:function (x)  
[16:59:40.747]  $ ...          : list()
[16:59:40.747]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.747]  - attr(*, "where")=List of 4
[16:59:40.747]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:40.747]   ..$ b            :<environment: R_EmptyEnv> 
[16:59:40.747]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:59:40.747]   ..$ ...          :<environment: 0x562fbb2b2838> 
[16:59:40.747]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.747]  - attr(*, "resolved")= logi FALSE
[16:59:40.747]  - attr(*, "total_size")= num NA
[16:59:40.751] Packages to be attached in all futures: [n=1] ‘utils’
[16:59:40.751] getGlobalsAndPackagesXApply() ... DONE
[16:59:40.751] Number of futures (= number of chunks): 1
[16:59:40.751] Launching 1 futures (chunks) ...
[16:59:40.751] Chunk #1 of 1 ...
[16:59:40.751]  - seeds: <none>
[16:59:40.751]  - All globals exported: [n=7] ‘a’, ‘b’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:40.761] Created future:
[16:59:40.761] ClusterFuture:
[16:59:40.761] Label: ‘future_lapply-1’
[16:59:40.761] Expression:
[16:59:40.761] {
[16:59:40.761]     do.call(function(...) {
[16:59:40.761]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:40.761]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:40.761]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:40.761]             on.exit(options(oopts), add = TRUE)
[16:59:40.761]         }
[16:59:40.761]         {
[16:59:40.761]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:40.761]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:40.761]                 ...future.FUN(...future.X_jj, ...)
[16:59:40.761]             })
[16:59:40.761]         }
[16:59:40.761]     }, args = future.call.arguments)
[16:59:40.761] }
[16:59:40.761] Lazy evaluation: FALSE
[16:59:40.761] Asynchronous evaluation: TRUE
[16:59:40.761] Local evaluation: TRUE
[16:59:40.761] Environment: R_GlobalEnv
[16:59:40.761] Capture standard output: TRUE
[16:59:40.761] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:40.761] Globals: 7 objects totaling 3.90 KiB (numeric ‘a’ of 56 bytes, numeric ‘b’ of 56 bytes, function ‘...future.FUN’ of 3.73 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, ...)
[16:59:40.761] Packages: 1 packages (‘utils’)
[16:59:40.761] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:40.761] Resolved: FALSE
[16:59:40.761] Value: <not collected>
[16:59:40.761] Conditions captured: <none>
[16:59:40.761] Early signaling: FALSE
[16:59:40.761] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:40.761] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:40.772] Chunk #1 of 1 ... DONE
[16:59:40.773] Launching 1 futures (chunks) ... DONE
[16:59:40.773] Resolving 1 futures (chunks) ...
[16:59:40.815]  - Number of value chunks collected: 1
[16:59:40.815] Resolving 1 futures (chunks) ... DONE
[16:59:40.815] Reducing values from 1 chunks ...
[16:59:40.815]  - Number of values collected after concatenation: 1
[16:59:40.815]  - Number of values expected: 1
[16:59:40.815] Reducing values from 1 chunks ... DONE
[16:59:40.815] future_lapply() ... DONE
[[1]]
[1] 2

> 
> message("*** future_lapply() - globals ... DONE")
*** future_lapply() - globals ... DONE
> 
> 
> message("*** future_lapply() - manual globals ...")
*** future_lapply() - manual globals ...
> 
> d <- 42
> y <- future_lapply(1:2, FUN = function(x) { x * d },
+                    future.globals = structure(FALSE, add = "d"))
[16:59:40.816] future_lapply() ...
[16:59:40.816] Number of chunks: 1
[16:59:40.817] getGlobalsAndPackagesXApply() ...
[16:59:40.817]  - future.globals: FALSE
[16:59:40.818]  - globals found/used: [n=3] ‘d’, ‘FUN’, ‘future.call.arguments’
[16:59:40.818]  - needed namespaces: [n=0] 
[16:59:40.818] Finding globals ... DONE
[16:59:40.818]  - use_args: TRUE
[16:59:40.818]  - Getting '...' globals ...
[16:59:40.818]    - '...' content: [n=0] 
[16:59:40.818] List of 1
[16:59:40.818]  $ ...: list()
[16:59:40.818]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.818]  - attr(*, "where")=List of 1
[16:59:40.818]   ..$ ...:<environment: 0x562fbd0128d8> 
[16:59:40.818]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.818]  - attr(*, "resolved")= logi TRUE
[16:59:40.818]  - attr(*, "total_size")= num NA
[16:59:40.821]  - Getting '...' globals ... DONE
[16:59:40.821] Globals to be used in all futures (chunks): [n=4] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:59:40.821] List of 4
[16:59:40.821]  $ d                    : num 42
[16:59:40.821]  $ ...future.FUN        :function (x)  
[16:59:40.821]  $ future.call.arguments: list()
[16:59:40.821]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.821]  $ ...                  : list()
[16:59:40.821]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.821]  - attr(*, "where")=List of 4
[16:59:40.821]   ..$ d                    :<environment: R_EmptyEnv> 
[16:59:40.821]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:59:40.821]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:59:40.821]   ..$ ...                  :<environment: 0x562fbd0128d8> 
[16:59:40.821]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.821]  - attr(*, "resolved")= logi FALSE
[16:59:40.821]  - attr(*, "total_size")= num 784
[16:59:40.825] Packages to be attached in all futures: [n=0] 
[16:59:40.825] getGlobalsAndPackagesXApply() ... DONE
[16:59:40.825] Number of futures (= number of chunks): 1
[16:59:40.825] Launching 1 futures (chunks) ...
[16:59:40.825] Chunk #1 of 1 ...
[16:59:40.825]  - seeds: <none>
[16:59:40.825]  - All globals exported: [n=7] ‘d’, ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:40.836] Created future:
[16:59:40.836] ClusterFuture:
[16:59:40.836] Label: ‘future_lapply-1’
[16:59:40.836] Expression:
[16:59:40.836] {
[16:59:40.836]     do.call(function(...) {
[16:59:40.836]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:40.836]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:40.836]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:40.836]             on.exit(options(oopts), add = TRUE)
[16:59:40.836]         }
[16:59:40.836]         {
[16:59:40.836]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:40.836]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:40.836]                 ...future.FUN(...future.X_jj, ...)
[16:59:40.836]             })
[16:59:40.836]         }
[16:59:40.836]     }, args = future.call.arguments)
[16:59:40.836] }
[16:59:40.836] Lazy evaluation: FALSE
[16:59:40.836] Asynchronous evaluation: TRUE
[16:59:40.836] Local evaluation: TRUE
[16:59:40.836] Environment: R_GlobalEnv
[16:59:40.836] Capture standard output: TRUE
[16:59:40.836] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:40.836] Globals: 6 objects totaling 896 bytes (numeric ‘d’ of 56 bytes, function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:59:40.836] Packages: <none>
[16:59:40.836] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:40.836] Resolved: TRUE
[16:59:40.836] Value: <not collected>
[16:59:40.836] Conditions captured: <none>
[16:59:40.836] Early signaling: FALSE
[16:59:40.836] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:40.836] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:40.839] Chunk #1 of 1 ... DONE
[16:59:40.839] Launching 1 futures (chunks) ... DONE
[16:59:40.839] Resolving 1 futures (chunks) ...
[16:59:40.839]  - Number of value chunks collected: 1
[16:59:40.839] Resolving 1 futures (chunks) ... DONE
[16:59:40.839] Reducing values from 1 chunks ...
[16:59:40.839]  - Number of values collected after concatenation: 2
[16:59:40.840]  - Number of values expected: 2
[16:59:40.840] Reducing values from 1 chunks ... DONE
[16:59:40.840] future_lapply() ... DONE
> stopifnot(identical(y, list(42, 84)))
> 
> e <- 42
> res <- tryCatch({
+   future_lapply(1:2, FUN = function(x) { 2 * e },
+                 future.globals = structure(TRUE, ignore = "e"))
+ }, error = identity)
[16:59:40.840] future_lapply() ...
[16:59:40.840] Number of chunks: 1
[16:59:40.841] getGlobalsAndPackagesXApply() ...
[16:59:40.841]  - future.globals: TRUE
[16:59:40.842]  - globals found/used: [n=1] ‘FUN’
[16:59:40.842]  - needed namespaces: [n=0] 
[16:59:40.843] Finding globals ... DONE
[16:59:40.843]  - use_args: TRUE
[16:59:40.843]  - Getting '...' globals ...
[16:59:40.843]    - '...' content: [n=0] 
[16:59:40.843] List of 1
[16:59:40.843]  $ ...: list()
[16:59:40.843]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.843]  - attr(*, "where")=List of 1
[16:59:40.843]   ..$ ...:<environment: 0x562fbc424750> 
[16:59:40.843]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.843]  - attr(*, "resolved")= logi TRUE
[16:59:40.843]  - attr(*, "total_size")= num NA
[16:59:40.845]  - Getting '...' globals ... DONE
[16:59:40.846] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:40.846] List of 2
[16:59:40.846]  $ ...future.FUN:function (x)  
[16:59:40.846]  $ ...          : list()
[16:59:40.846]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.846]  - attr(*, "where")=List of 2
[16:59:40.846]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:40.846]   ..$ ...          :<environment: 0x562fbc424750> 
[16:59:40.846]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.846]  - attr(*, "resolved")= logi FALSE
[16:59:40.846]  - attr(*, "total_size")= num 728
[16:59:40.848] Packages to be attached in all futures: [n=0] 
[16:59:40.848] getGlobalsAndPackagesXApply() ... DONE
[16:59:40.849] Number of futures (= number of chunks): 1
[16:59:40.849] Launching 1 futures (chunks) ...
[16:59:40.849] Chunk #1 of 1 ...
[16:59:40.849]  - Finding globals in 'X' for chunk #1 ...
[16:59:40.849]    + additional globals found: [n=0] 
[16:59:40.849]    + additional namespaces needed: [n=0] 
[16:59:40.849]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:40.849]  - seeds: <none>
[16:59:40.849]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:40.858] Created future:
[16:59:40.858] ClusterFuture:
[16:59:40.858] Label: ‘future_lapply-1’
[16:59:40.858] Expression:
[16:59:40.858] {
[16:59:40.858]     do.call(function(...) {
[16:59:40.858]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:40.858]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:40.858]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:40.858]             on.exit(options(oopts), add = TRUE)
[16:59:40.858]         }
[16:59:40.858]         {
[16:59:40.858]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:40.858]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:40.858]                 ...future.FUN(...future.X_jj, ...)
[16:59:40.858]             })
[16:59:40.858]         }
[16:59:40.858]     }, args = future.call.arguments)
[16:59:40.858] }
[16:59:40.858] Lazy evaluation: FALSE
[16:59:40.858] Asynchronous evaluation: TRUE
[16:59:40.858] Local evaluation: TRUE
[16:59:40.858] Environment: R_GlobalEnv
[16:59:40.858] Capture standard output: TRUE
[16:59:40.858] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:40.858] Globals: 5 objects totaling 840 bytes (function ‘...future.FUN’ of 728 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 112 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:40.858] Packages: <none>
[16:59:40.858] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:40.858] Resolved: FALSE
[16:59:40.858] Value: <not collected>
[16:59:40.858] Conditions captured: <none>
[16:59:40.858] Early signaling: FALSE
[16:59:40.858] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:40.858] Class: ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:40.869] Chunk #1 of 1 ... DONE
[16:59:40.869] Launching 1 futures (chunks) ... DONE
[16:59:40.869] Resolving 1 futures (chunks) ...
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - manual globals ... DONE")
*** future_lapply() - manual globals ... DONE
> 
> 
> 
> ## Test adopted from http://stackoverflow.com/questions/42561088/nested-do-call-within-a-foreach-dopar-environment-cant-find-function-passed-w
> 
> message("*** future_lapply() - tricky globals ...")
*** future_lapply() - tricky globals ...
> 
> my_add <- function(a, b) a + b
> 
> call_my_add <- function(a, b) {
+   do.call(my_add, args = list(a = a, b = b))
+ }
> 
> call_my_add_caller <- function(a, b, FUN = call_my_add) {
+   do.call(FUN, args = list(a = a, b = b))
+ }
> 
> main <- function(x = 1:2, caller = call_my_add_caller,
+                  args = list(FUN = call_my_add)) {
+   results <- future_lapply(x, FUN = function(i) {
+     do.call(caller, args = c(list(a = i, b = i + 1L), args))
+   })
+   results
+ }
> 
> x <- list(list(1:2))
> z_length <- lapply(x, FUN = do.call, what = length)
> fun <- function(...) sum(...)
> z_fun <- lapply(x, FUN = do.call, what = fun)
> 
> y0 <- NULL
> for (strategy in supportedStrategies()) {
+   plan(strategy)
+ 
+   y <- main(1:3)
+   if (is.null(y0)) y0 <- y
+   stopifnot(identical(y, y0))
+ 
+   message("- future_lapply(x, FUN = do.call, ...) ...")
+   z <- future_lapply(x, FUN = do.call, what = length)
+   stopifnot(identical(z, z_length))
+   z <- future_lapply(x, FUN = do.call, what = fun)
+   stopifnot(identical(z, z_fun))
+ 
+   message("- future_lapply(x, ...) - passing arguments via '...' ...")
+   ## typeof() == "list"
+   obj <- data.frame(a = 1:2)
+   stopifnot(typeof(obj) == "list")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "environment"
+   obj <- new.env()
+   stopifnot(typeof(obj) == "environment")
+   y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+   stopifnot(identical(y[[1]], typeof(obj)))
+ 
+   ## typeof() == "S4"
+   if (requireNamespace("methods")) {
+     obj <- methods::getClass("MethodDefinition")
+     stopifnot(typeof(obj) == "S4")
+     y <- future_lapply(1L, function(a, b) typeof(b), b = obj)
+     stopifnot(identical(y[[1]], typeof(obj)))
+   }
+ 
+   message("- future_lapply(X, ...) - 'X' containing globals ...")
+   ## From https://github.com/HenrikBengtsson/future.apply/issues/12
+   a <- 42
+   b <- 21
+   X <- list(
+     function(b) 2 * a,
+     function() b / 2,
+     function() a + b,
+     function() nchar(toTitleCase("hello world"))
+   )
+   z0 <- lapply(X, FUN = function(f) f())
+   str(z0)
+   z1 <- future_lapply(X, FUN = function(f) f())
+   str(z1)
+   stopifnot(identical(z1, z0))
+ 
+   message("- future_lapply(x, ...) - passing '...' as a global ...")
+   ## https://github.com/HenrikBengtsson/future/issues/417
+   fcn0 <- function(...) { lapply(1, FUN = function(x) list(...)) }
+   z0 <- fcn0(a = 1)
+   str(list(z0 = z0))
+   stopifnot(identical(z0, list(list(a = 1))))
+   fcn <- function(...) { future_lapply(1, FUN = function(x) list(...)) }
+   z1 <- fcn(a = 1)
+   str(list(z1 = z1))
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a <- a + 1; a }' ...")
+   a <- 1
+   z0 <- lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   z1 <- future_lapply(1, function(ii) {
+     a <- a + 1
+     a
+   })
+   stopifnot(identical(z1, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/47
+   message("- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...")
+   z2 <- tryCatch(future_lapply(1, function(ii) {
+     a
+     a <- a + 1
+   }), error = identity)
+   stopifnot(identical(z2, z0))
+ 
+   ## https://github.com/HenrikBengtsson/future.apply/issues/85
+   message("- future_lapply(..., future.globals = <list>) ...")
+   a <- 0
+   y <- future_lapply(1, FUN = function(x) a, future.globals = list(a = 42))
+   str(y)
+   stopifnot(y[[1]] == 42)
+ } ## for (strategy ...)
[16:59:40.962] future_lapply() ...
[16:59:40.963] Number of chunks: 1
[16:59:40.963] getGlobalsAndPackagesXApply() ...
[16:59:40.963]  - future.globals: TRUE
[16:59:40.968]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:59:40.968]  - needed namespaces: [n=0] 
[16:59:40.968] Finding globals ... DONE
[16:59:40.968]  - use_args: TRUE
[16:59:40.968]  - Getting '...' globals ...
[16:59:40.969]    - '...' content: [n=0] 
[16:59:40.969] List of 1
[16:59:40.969]  $ ...: list()
[16:59:40.969]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.969]  - attr(*, "where")=List of 1
[16:59:40.969]   ..$ ...:<environment: 0x562fbcf1d948> 
[16:59:40.969]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.969]  - attr(*, "resolved")= logi TRUE
[16:59:40.969]  - attr(*, "total_size")= num NA
[16:59:40.971]  - Getting '...' globals ... DONE
[16:59:40.971] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:59:40.972] List of 6
[16:59:40.972]  $ ...future.FUN:function (i)  
[16:59:40.972]  $ caller       :function (a, b, FUN = call_my_add)  
[16:59:40.972]  $ args         :List of 1
[16:59:40.972]   ..$ FUN:function (a, b)  
[16:59:40.972]  $ call_my_add  :function (a, b)  
[16:59:40.972]  $ my_add       :function (a, b)  
[16:59:40.972]  $ ...          : list()
[16:59:40.972]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.972]  - attr(*, "where")=List of 6
[16:59:40.972]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:40.972]   ..$ caller       :<environment: R_EmptyEnv> 
[16:59:40.972]   ..$ args         :<environment: R_EmptyEnv> 
[16:59:40.972]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:59:40.972]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:59:40.972]   ..$ ...          :<environment: 0x562fbcf1d948> 
[16:59:40.972]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.972]  - attr(*, "resolved")= logi FALSE
[16:59:40.972]  - attr(*, "total_size")= num 6664
[16:59:40.978] Packages to be attached in all futures: [n=0] 
[16:59:40.978] getGlobalsAndPackagesXApply() ... DONE
[16:59:40.978] Number of futures (= number of chunks): 1
[16:59:40.978] Launching 1 futures (chunks) ...
[16:59:40.978] Chunk #1 of 1 ...
[16:59:40.978]  - Finding globals in 'X' for chunk #1 ...
[16:59:40.978]    + additional globals found: [n=0] 
[16:59:40.978]    + additional namespaces needed: [n=0] 
[16:59:40.979]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:40.979]  - seeds: <none>
[16:59:40.979]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:40.984] Created future:
[16:59:40.984] SequentialFuture:
[16:59:40.984] Label: ‘future_lapply-1’
[16:59:40.984] Expression:
[16:59:40.984] {
[16:59:40.984]     do.call(function(...) {
[16:59:40.984]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:40.984]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:40.984]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:40.984]             on.exit(options(oopts), add = TRUE)
[16:59:40.984]         }
[16:59:40.984]         {
[16:59:40.984]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:40.984]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:40.984]                 ...future.FUN(...future.X_jj, ...)
[16:59:40.984]             })
[16:59:40.984]         }
[16:59:40.984]     }, args = future.call.arguments)
[16:59:40.984] }
[16:59:40.984] Lazy evaluation: FALSE
[16:59:40.984] Asynchronous evaluation: FALSE
[16:59:40.984] Local evaluation: TRUE
[16:59:40.984] Environment: 0x562fbcf1dda8
[16:59:40.984] Capture standard output: TRUE
[16:59:40.984] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:40.984] Globals: 9 objects totaling 16.21 KiB (function ‘...future.FUN’ of 1.70 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:59:40.984] Packages: <none>
[16:59:40.984] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:40.984] Resolved: TRUE
[16:59:40.984] Value: 168 bytes of class ‘list’
[16:59:40.984] Early signaling: FALSE
[16:59:40.984] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:40.984] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:40.985] Chunk #1 of 1 ... DONE
[16:59:40.986] Launching 1 futures (chunks) ... DONE
[16:59:40.986] Resolving 1 futures (chunks) ...
[16:59:40.986]  - Number of value chunks collected: 1
[16:59:40.986] Resolving 1 futures (chunks) ... DONE
[16:59:40.986] Reducing values from 1 chunks ...
[16:59:40.986]  - Number of values collected after concatenation: 3
[16:59:40.986]  - Number of values expected: 3
[16:59:40.987] Reducing values from 1 chunks ... DONE
[16:59:40.987] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:59:40.987] future_lapply() ...
[16:59:40.990] Number of chunks: 1
[16:59:40.990] getGlobalsAndPackagesXApply() ...
[16:59:40.990]  - future.globals: TRUE
[16:59:40.993]  - globals found/used: [n=1] ‘FUN’
[16:59:40.993]  - needed namespaces: [n=0] 
[16:59:40.993] Finding globals ... DONE
[16:59:40.993]  - use_args: TRUE
[16:59:40.993]  - Getting '...' globals ...
[16:59:40.993]    - '...' content: [n=1] ‘what’
[16:59:40.994] List of 1
[16:59:40.994]  $ ...:List of 1
[16:59:40.994]   ..$ what:function (x)  
[16:59:40.994]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.994]  - attr(*, "where")=List of 1
[16:59:40.994]   ..$ ...:<environment: 0x562fbbc9e230> 
[16:59:40.994]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.994]  - attr(*, "resolved")= logi TRUE
[16:59:40.994]  - attr(*, "total_size")= num NA
[16:59:40.996]  - Getting '...' globals ... DONE
[16:59:40.996] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:40.997] List of 2
[16:59:40.997]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:59:40.997]  $ ...          :List of 1
[16:59:40.997]   ..$ what:function (x)  
[16:59:40.997]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:40.997]  - attr(*, "where")=List of 2
[16:59:40.997]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:40.997]   ..$ ...          :<environment: 0x562fbbc9e230> 
[16:59:40.997]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:40.997]  - attr(*, "resolved")= logi FALSE
[16:59:40.997]  - attr(*, "total_size")= num 12192
[16:59:40.999] Packages to be attached in all futures: [n=0] 
[16:59:40.999] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.000] Number of futures (= number of chunks): 1
[16:59:41.000] Launching 1 futures (chunks) ...
[16:59:41.000] Chunk #1 of 1 ...
[16:59:41.000]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.000]    + additional globals found: [n=0] 
[16:59:41.000]    + additional namespaces needed: [n=0] 
[16:59:41.000]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.001]  - seeds: <none>
[16:59:41.001]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.003] Created future:
[16:59:41.003] SequentialFuture:
[16:59:41.003] Label: ‘future_lapply-1’
[16:59:41.003] Expression:
[16:59:41.003] {
[16:59:41.003]     do.call(function(...) {
[16:59:41.003]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.003]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.003]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.003]             on.exit(options(oopts), add = TRUE)
[16:59:41.003]         }
[16:59:41.003]         {
[16:59:41.003]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.003]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.003]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.003]             })
[16:59:41.003]         }
[16:59:41.003]     }, args = future.call.arguments)
[16:59:41.003] }
[16:59:41.003] Lazy evaluation: FALSE
[16:59:41.003] Asynchronous evaluation: FALSE
[16:59:41.003] Local evaluation: TRUE
[16:59:41.003] Environment: R_GlobalEnv
[16:59:41.003] Capture standard output: TRUE
[16:59:41.003] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.003] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.003] Packages: <none>
[16:59:41.003] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.003] Resolved: TRUE
[16:59:41.003] Value: 56 bytes of class ‘list’
[16:59:41.003] Early signaling: FALSE
[16:59:41.003] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.003] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:41.004] Chunk #1 of 1 ... DONE
[16:59:41.004] Launching 1 futures (chunks) ... DONE
[16:59:41.004] Resolving 1 futures (chunks) ...
[16:59:41.005]  - Number of value chunks collected: 1
[16:59:41.005] Resolving 1 futures (chunks) ... DONE
[16:59:41.005] Reducing values from 1 chunks ...
[16:59:41.005]  - Number of values collected after concatenation: 1
[16:59:41.005]  - Number of values expected: 1
[16:59:41.005] Reducing values from 1 chunks ... DONE
[16:59:41.005] future_lapply() ... DONE
[16:59:41.005] future_lapply() ...
[16:59:41.006] Number of chunks: 1
[16:59:41.006] getGlobalsAndPackagesXApply() ...
[16:59:41.007]  - future.globals: TRUE
[16:59:41.009]  - globals found/used: [n=1] ‘FUN’
[16:59:41.009]  - needed namespaces: [n=0] 
[16:59:41.009] Finding globals ... DONE
[16:59:41.009]  - use_args: TRUE
[16:59:41.009]  - Getting '...' globals ...
[16:59:41.010]    - '...' content: [n=1] ‘what’
[16:59:41.010] List of 1
[16:59:41.010]  $ ...:List of 1
[16:59:41.010]   ..$ what:function (...)  
[16:59:41.010]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.010]  - attr(*, "where")=List of 1
[16:59:41.010]   ..$ ...:<environment: 0x562fbcc0bba0> 
[16:59:41.010]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.010]  - attr(*, "resolved")= logi TRUE
[16:59:41.010]  - attr(*, "total_size")= num NA
[16:59:41.013]  - Getting '...' globals ... DONE
[16:59:41.013] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.013] List of 2
[16:59:41.013]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:59:41.013]  $ ...          :List of 1
[16:59:41.013]   ..$ what:function (...)  
[16:59:41.013]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.013]  - attr(*, "where")=List of 2
[16:59:41.013]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.013]   ..$ ...          :<environment: 0x562fbcc0bba0> 
[16:59:41.013]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.013]  - attr(*, "resolved")= logi FALSE
[16:59:41.013]  - attr(*, "total_size")= num 12584
[16:59:41.016] Packages to be attached in all futures: [n=0] 
[16:59:41.016] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.016] Number of futures (= number of chunks): 1
[16:59:41.016] Launching 1 futures (chunks) ...
[16:59:41.016] Chunk #1 of 1 ...
[16:59:41.016]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.017]    + additional globals found: [n=0] 
[16:59:41.017]    + additional namespaces needed: [n=0] 
[16:59:41.017]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.017]  - seeds: <none>
[16:59:41.017]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.020] Created future:
[16:59:41.020] SequentialFuture:
[16:59:41.020] Label: ‘future_lapply-1’
[16:59:41.020] Expression:
[16:59:41.020] {
[16:59:41.020]     do.call(function(...) {
[16:59:41.020]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.020]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.020]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.020]             on.exit(options(oopts), add = TRUE)
[16:59:41.020]         }
[16:59:41.020]         {
[16:59:41.020]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.020]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.020]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.020]             })
[16:59:41.020]         }
[16:59:41.020]     }, args = future.call.arguments)
[16:59:41.020] }
[16:59:41.020] Lazy evaluation: FALSE
[16:59:41.020] Asynchronous evaluation: FALSE
[16:59:41.020] Local evaluation: TRUE
[16:59:41.020] Environment: R_GlobalEnv
[16:59:41.020] Capture standard output: TRUE
[16:59:41.020] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.020] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.020] Packages: <none>
[16:59:41.020] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.020] Resolved: TRUE
[16:59:41.020] Value: 56 bytes of class ‘list’
[16:59:41.020] Early signaling: FALSE
[16:59:41.020] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.020] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:41.021] Chunk #1 of 1 ... DONE
[16:59:41.021] Launching 1 futures (chunks) ... DONE
[16:59:41.021] Resolving 1 futures (chunks) ...
[16:59:41.021]  - Number of value chunks collected: 1
[16:59:41.022] Resolving 1 futures (chunks) ... DONE
[16:59:41.022] Reducing values from 1 chunks ...
[16:59:41.022]  - Number of values collected after concatenation: 1
[16:59:41.022]  - Number of values expected: 1
[16:59:41.022] Reducing values from 1 chunks ... DONE
[16:59:41.024] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:59:41.024] future_lapply() ...
[16:59:41.025] Number of chunks: 1
[16:59:41.025] getGlobalsAndPackagesXApply() ...
[16:59:41.025]  - future.globals: TRUE
[16:59:41.026]  - globals found/used: [n=1] ‘FUN’
[16:59:41.026]  - needed namespaces: [n=0] 
[16:59:41.026] Finding globals ... DONE
[16:59:41.026]  - use_args: TRUE
[16:59:41.027]  - Getting '...' globals ...
[16:59:41.027]    - '...' content: [n=1] ‘b’
[16:59:41.027] List of 1
[16:59:41.027]  $ ...:List of 1
[16:59:41.027]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:59:41.027]   .. ..$ a: int [1:2] 1 2
[16:59:41.027]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.027]  - attr(*, "where")=List of 1
[16:59:41.027]   ..$ ...:<environment: 0x562fbc67fa80> 
[16:59:41.027]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.027]  - attr(*, "resolved")= logi TRUE
[16:59:41.027]  - attr(*, "total_size")= num NA
[16:59:41.030]  - Getting '...' globals ... DONE
[16:59:41.030] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.030] List of 2
[16:59:41.030]  $ ...future.FUN:function (a, b)  
[16:59:41.030]  $ ...          :List of 1
[16:59:41.030]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:59:41.030]   .. ..$ a: int [1:2] 1 2
[16:59:41.030]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.030]  - attr(*, "where")=List of 2
[16:59:41.030]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.030]   ..$ ...          :<environment: 0x562fbc67fa80> 
[16:59:41.030]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.030]  - attr(*, "resolved")= logi FALSE
[16:59:41.030]  - attr(*, "total_size")= num 1440
[16:59:41.034] Packages to be attached in all futures: [n=0] 
[16:59:41.034] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.034] Number of futures (= number of chunks): 1
[16:59:41.034] Launching 1 futures (chunks) ...
[16:59:41.034] Chunk #1 of 1 ...
[16:59:41.034]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.034]    + additional globals found: [n=0] 
[16:59:41.035]    + additional namespaces needed: [n=0] 
[16:59:41.035]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.035]  - seeds: <none>
[16:59:41.035]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.037] Created future:
[16:59:41.037] SequentialFuture:
[16:59:41.037] Label: ‘future_lapply-1’
[16:59:41.037] Expression:
[16:59:41.037] {
[16:59:41.037]     do.call(function(...) {
[16:59:41.037]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.037]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.037]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.037]             on.exit(options(oopts), add = TRUE)
[16:59:41.037]         }
[16:59:41.037]         {
[16:59:41.037]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.037]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.037]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.037]             })
[16:59:41.037]         }
[16:59:41.037]     }, args = future.call.arguments)
[16:59:41.037] }
[16:59:41.037] Lazy evaluation: FALSE
[16:59:41.037] Asynchronous evaluation: FALSE
[16:59:41.037] Local evaluation: TRUE
[16:59:41.037] Environment: R_GlobalEnv
[16:59:41.037] Capture standard output: TRUE
[16:59:41.037] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.037] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.037] Packages: <none>
[16:59:41.037] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.037] Resolved: TRUE
[16:59:41.037] Value: 112 bytes of class ‘list’
[16:59:41.037] Early signaling: FALSE
[16:59:41.037] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.037] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:41.038] Chunk #1 of 1 ... DONE
[16:59:41.038] Launching 1 futures (chunks) ... DONE
[16:59:41.038] Resolving 1 futures (chunks) ...
[16:59:41.039]  - Number of value chunks collected: 1
[16:59:41.039] Resolving 1 futures (chunks) ... DONE
[16:59:41.039] Reducing values from 1 chunks ...
[16:59:41.039]  - Number of values collected after concatenation: 1
[16:59:41.039]  - Number of values expected: 1
[16:59:41.039] Reducing values from 1 chunks ... DONE
[16:59:41.039] future_lapply() ... DONE
[16:59:41.039] future_lapply() ...
[16:59:41.040] Number of chunks: 1
[16:59:41.040] getGlobalsAndPackagesXApply() ...
[16:59:41.040]  - future.globals: TRUE
[16:59:41.041]  - globals found/used: [n=1] ‘FUN’
[16:59:41.042]  - needed namespaces: [n=0] 
[16:59:41.042] Finding globals ... DONE
[16:59:41.042]  - use_args: TRUE
[16:59:41.042]  - Getting '...' globals ...
[16:59:41.042]    - '...' content: [n=1] ‘b’
[16:59:41.042] List of 1
[16:59:41.042]  $ ...:List of 1
[16:59:41.042]   ..$ b:<environment: 0x562fbb7ee4c8> 
[16:59:41.042]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.042]  - attr(*, "where")=List of 1
[16:59:41.042]   ..$ ...:<environment: 0x562fbb7eef80> 
[16:59:41.042]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.042]  - attr(*, "resolved")= logi TRUE
[16:59:41.042]  - attr(*, "total_size")= num NA
[16:59:41.045]  - Getting '...' globals ... DONE
[16:59:41.045] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.045] List of 2
[16:59:41.045]  $ ...future.FUN:function (a, b)  
[16:59:41.045]  $ ...          :List of 1
[16:59:41.045]   ..$ b:<environment: 0x562fbb7ee4c8> 
[16:59:41.045]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.045]  - attr(*, "where")=List of 2
[16:59:41.045]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.045]   ..$ ...          :<environment: 0x562fbb7eef80> 
[16:59:41.045]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.045]  - attr(*, "resolved")= logi FALSE
[16:59:41.045]  - attr(*, "total_size")= num 1440
[16:59:41.048] Packages to be attached in all futures: [n=0] 
[16:59:41.048] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.048] Number of futures (= number of chunks): 1
[16:59:41.048] Launching 1 futures (chunks) ...
[16:59:41.049] Chunk #1 of 1 ...
[16:59:41.049]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.049]    + additional globals found: [n=0] 
[16:59:41.049]    + additional namespaces needed: [n=0] 
[16:59:41.049]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.049]  - seeds: <none>
[16:59:41.049]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.052] Created future:
[16:59:41.052] SequentialFuture:
[16:59:41.052] Label: ‘future_lapply-1’
[16:59:41.052] Expression:
[16:59:41.052] {
[16:59:41.052]     do.call(function(...) {
[16:59:41.052]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.052]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.052]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.052]             on.exit(options(oopts), add = TRUE)
[16:59:41.052]         }
[16:59:41.052]         {
[16:59:41.052]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.052]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.052]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.052]             })
[16:59:41.052]         }
[16:59:41.052]     }, args = future.call.arguments)
[16:59:41.052] }
[16:59:41.052] Lazy evaluation: FALSE
[16:59:41.052] Asynchronous evaluation: FALSE
[16:59:41.052] Local evaluation: TRUE
[16:59:41.052] Environment: R_GlobalEnv
[16:59:41.052] Capture standard output: TRUE
[16:59:41.052] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.052] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.052] Packages: <none>
[16:59:41.052] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.052] Resolved: TRUE
[16:59:41.052] Value: 120 bytes of class ‘list’
[16:59:41.052] Early signaling: FALSE
[16:59:41.052] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.052] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:41.053] Chunk #1 of 1 ... DONE
[16:59:41.053] Launching 1 futures (chunks) ... DONE
[16:59:41.053] Resolving 1 futures (chunks) ...
[16:59:41.053]  - Number of value chunks collected: 1
[16:59:41.053] Resolving 1 futures (chunks) ... DONE
[16:59:41.053] Reducing values from 1 chunks ...
[16:59:41.053]  - Number of values collected after concatenation: 1
[16:59:41.053]  - Number of values expected: 1
[16:59:41.054] Reducing values from 1 chunks ... DONE
[16:59:41.054] future_lapply() ... DONE
[16:59:41.054] future_lapply() ...
[16:59:41.054] Number of chunks: 1
[16:59:41.054] getGlobalsAndPackagesXApply() ...
[16:59:41.054]  - future.globals: TRUE
[16:59:41.057]  - globals found/used: [n=1] ‘FUN’
[16:59:41.057]  - needed namespaces: [n=0] 
[16:59:41.057] Finding globals ... DONE
[16:59:41.057]  - use_args: TRUE
[16:59:41.057]  - Getting '...' globals ...
[16:59:41.057]    - '...' content: [n=1] ‘b’
[16:59:41.057] List of 1
[16:59:41.057]  $ ...:List of 1
[16:59:41.057]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:59:41.057]   .. .. ..@ slots     :List of 4
[16:59:41.057]   .. .. .. ..$ .Data  : chr "function"
[16:59:41.057]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. ..$ target : chr "signature"
[16:59:41.057]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. ..$ defined: chr "signature"
[16:59:41.057]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. ..$ generic: chr "character"
[16:59:41.057]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. ..@ contains  :List of 3
[16:59:41.057]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.057]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ superClass: chr "function"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.057]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.057]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.057]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.057]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.057]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.057]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.057]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.057]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.057]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.057]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.057]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.057]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.057]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.057]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.057]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.057]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ by        : chr "function"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.057]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.057]   .. .. ..@ virtual   : logi FALSE
[16:59:41.057]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:59:41.057]  list()
[16:59:41.057]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:59:41.057]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:41.057]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:41.057]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:41.057]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:59:41.057]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:41.057]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:41.057]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:41.057]   .. .. .. .. ..$ generic: chr(0) 
[16:59:41.057]   .. .. ..@ validity  : NULL
[16:59:41.057]   .. .. ..@ access    : list()
[16:59:41.057]   .. .. ..@ className : chr "MethodDefinition"
[16:59:41.057]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. ..@ subclasses:List of 7
[16:59:41.057]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.057]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.057]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.057]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.057]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.057]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.057]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.057]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.057]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.057]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.057]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.057]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.057]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.057]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.057]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.057]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.057]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.057]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.057]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.057]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.057]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.057]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.057]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.057]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.057]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.057]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.057]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.057]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.057]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.057]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.057]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.057]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.057]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.057]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.057]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.057]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.057]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.057]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.057]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.057]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.057]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.057]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.057]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.057]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.057]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.057]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:41.057]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.057]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.057]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.057]   .. .. ..@ versionKey:<externalptr> 
[16:59:41.057]   .. .. ..@ sealed    : logi TRUE
[16:59:41.057]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.057]  - attr(*, "where")=List of 1
[16:59:41.057]   ..$ ...:<environment: 0x562fbcd62230> 
[16:59:41.057]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.057]  - attr(*, "resolved")= logi TRUE
[16:59:41.057]  - attr(*, "total_size")= num NA
[16:59:41.104]  - Getting '...' globals ... DONE
[16:59:41.104] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.104] List of 2
[16:59:41.104]  $ ...future.FUN:function (a, b)  
[16:59:41.104]  $ ...          :List of 1
[16:59:41.104]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:59:41.104]   .. .. ..@ slots     :List of 4
[16:59:41.104]   .. .. .. ..$ .Data  : chr "function"
[16:59:41.104]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. ..$ target : chr "signature"
[16:59:41.104]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. ..$ defined: chr "signature"
[16:59:41.104]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. ..$ generic: chr "character"
[16:59:41.104]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. ..@ contains  :List of 3
[16:59:41.104]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.104]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ superClass: chr "function"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.104]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.104]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.104]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.104]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.104]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.104]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.104]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.104]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.104]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ by        : chr "function"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.104]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.104]   .. .. ..@ virtual   : logi FALSE
[16:59:41.104]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:59:41.104]  list()
[16:59:41.104]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:59:41.104]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:41.104]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:41.104]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:41.104]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:59:41.104]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:41.104]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:41.104]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:41.104]   .. .. .. .. ..$ generic: chr(0) 
[16:59:41.104]   .. .. ..@ validity  : NULL
[16:59:41.104]   .. .. ..@ access    : list()
[16:59:41.104]   .. .. ..@ className : chr "MethodDefinition"
[16:59:41.104]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. ..@ subclasses:List of 7
[16:59:41.104]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.104]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.104]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.104]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.104]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.104]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.104]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.104]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.104]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.104]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.104]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.104]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.104]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.104]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.104]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.104]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.104]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.104]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.104]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.104]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.104]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.104]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.104]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.104]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.104]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.104]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.104]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.104]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.104]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.104]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:41.104]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.104]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.104]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.104]   .. .. ..@ versionKey:<externalptr> 
[16:59:41.104]   .. .. ..@ sealed    : logi TRUE
[16:59:41.104]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.104]  - attr(*, "where")=List of 2
[16:59:41.104]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.104]   ..$ ...          :<environment: 0x562fbcd62230> 
[16:59:41.104]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.104]  - attr(*, "resolved")= logi FALSE
[16:59:41.104]  - attr(*, "total_size")= num 405168
[16:59:41.151] Packages to be attached in all futures: [n=0] 
[16:59:41.151] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.151] Number of futures (= number of chunks): 1
[16:59:41.151] Launching 1 futures (chunks) ...
[16:59:41.152] Chunk #1 of 1 ...
[16:59:41.152]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.152]    + additional globals found: [n=0] 
[16:59:41.152]    + additional namespaces needed: [n=0] 
[16:59:41.152]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.152]  - seeds: <none>
[16:59:41.152]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.155] Created future:
[16:59:41.155] SequentialFuture:
[16:59:41.155] Label: ‘future_lapply-1’
[16:59:41.155] Expression:
[16:59:41.155] {
[16:59:41.155]     do.call(function(...) {
[16:59:41.155]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.155]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.155]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.155]             on.exit(options(oopts), add = TRUE)
[16:59:41.155]         }
[16:59:41.155]         {
[16:59:41.155]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.155]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.155]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.155]             })
[16:59:41.155]         }
[16:59:41.155]     }, args = future.call.arguments)
[16:59:41.155] }
[16:59:41.155] Lazy evaluation: FALSE
[16:59:41.155] Asynchronous evaluation: FALSE
[16:59:41.155] Local evaluation: TRUE
[16:59:41.155] Environment: R_GlobalEnv
[16:59:41.155] Capture standard output: TRUE
[16:59:41.155] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.155] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.155] Packages: <none>
[16:59:41.155] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.155] Resolved: TRUE
[16:59:41.155] Value: 112 bytes of class ‘list’
[16:59:41.155] Early signaling: FALSE
[16:59:41.155] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.155] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:41.156] Chunk #1 of 1 ... DONE
[16:59:41.156] Launching 1 futures (chunks) ... DONE
[16:59:41.156] Resolving 1 futures (chunks) ...
[16:59:41.156]  - Number of value chunks collected: 1
[16:59:41.157] Resolving 1 futures (chunks) ... DONE
[16:59:41.157] Reducing values from 1 chunks ...
[16:59:41.157]  - Number of values collected after concatenation: 1
[16:59:41.157]  - Number of values expected: 1
[16:59:41.157] Reducing values from 1 chunks ... DONE
[16:59:41.157] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:59:41.159] future_lapply() ...
[16:59:41.159] Number of chunks: 1
[16:59:41.159] getGlobalsAndPackagesXApply() ...
[16:59:41.160]  - future.globals: TRUE
[16:59:41.161]  - globals found/used: [n=1] ‘FUN’
[16:59:41.161]  - needed namespaces: [n=0] 
[16:59:41.161] Finding globals ... DONE
[16:59:41.161]  - use_args: TRUE
[16:59:41.161]  - Getting '...' globals ...
[16:59:41.162]    - '...' content: [n=0] 
[16:59:41.162] List of 1
[16:59:41.162]  $ ...: list()
[16:59:41.162]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.162]  - attr(*, "where")=List of 1
[16:59:41.162]   ..$ ...:<environment: 0x562fbbc766d8> 
[16:59:41.162]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.162]  - attr(*, "resolved")= logi TRUE
[16:59:41.162]  - attr(*, "total_size")= num NA
[16:59:41.164]  - Getting '...' globals ... DONE
[16:59:41.164] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.164] List of 2
[16:59:41.164]  $ ...future.FUN:function (f)  
[16:59:41.164]  $ ...          : list()
[16:59:41.164]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.164]  - attr(*, "where")=List of 2
[16:59:41.164]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.164]   ..$ ...          :<environment: 0x562fbbc766d8> 
[16:59:41.164]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.164]  - attr(*, "resolved")= logi FALSE
[16:59:41.164]  - attr(*, "total_size")= num 1008
[16:59:41.167] Packages to be attached in all futures: [n=0] 
[16:59:41.167] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.167] Number of futures (= number of chunks): 1
[16:59:41.167] Launching 1 futures (chunks) ...
[16:59:41.167] Chunk #1 of 1 ...
[16:59:41.167]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.170]    + additional globals found: [n=2] ‘a’, ‘b’
[16:59:41.170]    + additional namespaces needed: [n=1] ‘tools’
[16:59:41.170]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.170]  - seeds: <none>
[16:59:41.170]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:59:41.173] Created future:
[16:59:41.173] SequentialFuture:
[16:59:41.173] Label: ‘future_lapply-1’
[16:59:41.173] Expression:
[16:59:41.173] {
[16:59:41.173]     do.call(function(...) {
[16:59:41.173]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.173]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.173]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.173]             on.exit(options(oopts), add = TRUE)
[16:59:41.173]         }
[16:59:41.173]         {
[16:59:41.173]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.173]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.173]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.173]             })
[16:59:41.173]         }
[16:59:41.173]     }, args = future.call.arguments)
[16:59:41.173] }
[16:59:41.173] Lazy evaluation: FALSE
[16:59:41.173] Asynchronous evaluation: FALSE
[16:59:41.173] Local evaluation: TRUE
[16:59:41.173] Environment: R_GlobalEnv
[16:59:41.173] Capture standard output: TRUE
[16:59:41.173] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.173] Globals: 7 objects totaling 7.49 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 6.40 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:59:41.173] Packages: 1 packages (‘tools’)
[16:59:41.173] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.173] Resolved: TRUE
[16:59:41.173] Value: 224 bytes of class ‘list’
[16:59:41.173] Early signaling: FALSE
[16:59:41.173] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.173] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:41.174] Chunk #1 of 1 ... DONE
[16:59:41.174] Launching 1 futures (chunks) ... DONE
[16:59:41.174] Resolving 1 futures (chunks) ...
[16:59:41.174]  - Number of value chunks collected: 1
[16:59:41.175] Resolving 1 futures (chunks) ... DONE
[16:59:41.175] Reducing values from 1 chunks ...
[16:59:41.175]  - Number of values collected after concatenation: 4
[16:59:41.175]  - Number of values expected: 4
[16:59:41.175] Reducing values from 1 chunks ... DONE
[16:59:41.175] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:59:41.178] future_lapply() ...
[16:59:41.178] Number of chunks: 1
[16:59:41.178] getGlobalsAndPackagesXApply() ...
[16:59:41.179]  - future.globals: TRUE
[16:59:41.181]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:59:41.181]  - needed namespaces: [n=0] 
[16:59:41.181] Finding globals ... DONE
[16:59:41.181]  - use_args: TRUE
[16:59:41.181]  - Getting '...' globals ...
[16:59:41.181]    - '...' content: [n=0] 
[16:59:41.181] List of 1
[16:59:41.181]  $ ...: list()
[16:59:41.181]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.181]  - attr(*, "where")=List of 1
[16:59:41.181]   ..$ ...:<environment: 0x562fbcc2fd50> 
[16:59:41.181]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.181]  - attr(*, "resolved")= logi TRUE
[16:59:41.181]  - attr(*, "total_size")= num NA
[16:59:41.184]  - Getting '...' globals ... DONE
[16:59:41.184] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:59:41.184] List of 3
[16:59:41.184]  $ ...future.FUN        :function (x)  
[16:59:41.184]  $ future.call.arguments:List of 1
[16:59:41.184]   ..$ a: num 1
[16:59:41.184]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.184]  $ ...                  : list()
[16:59:41.184]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.184]  - attr(*, "where")=List of 3
[16:59:41.184]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:59:41.184]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:59:41.184]   ..$ ...                  :<environment: 0x562fbcc2fd50> 
[16:59:41.184]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.184]  - attr(*, "resolved")= logi FALSE
[16:59:41.184]  - attr(*, "total_size")= num 1272
[16:59:41.188] Packages to be attached in all futures: [n=0] 
[16:59:41.188] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.188] Number of futures (= number of chunks): 1
[16:59:41.188] Launching 1 futures (chunks) ...
[16:59:41.188] Chunk #1 of 1 ...
[16:59:41.188]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.188]    + additional globals found: [n=0] 
[16:59:41.189]    + additional namespaces needed: [n=0] 
[16:59:41.189]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.189]  - seeds: <none>
[16:59:41.189]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.191] Created future:
[16:59:41.191] SequentialFuture:
[16:59:41.191] Label: ‘future_lapply-1’
[16:59:41.191] Expression:
[16:59:41.191] {
[16:59:41.191]     do.call(function(...) {
[16:59:41.191]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.191]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.191]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.191]             on.exit(options(oopts), add = TRUE)
[16:59:41.191]         }
[16:59:41.191]         {
[16:59:41.191]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.191]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.191]                 ...future.FUN(...future.X_jj)
[16:59:41.191]             })
[16:59:41.191]         }
[16:59:41.191]     }, args = future.call.arguments)
[16:59:41.191] }
[16:59:41.191] Lazy evaluation: FALSE
[16:59:41.191] Asynchronous evaluation: FALSE
[16:59:41.191] Local evaluation: TRUE
[16:59:41.191] Environment: 0x562fbcc2a380
[16:59:41.191] Capture standard output: TRUE
[16:59:41.191] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.191] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.191] Packages: <none>
[16:59:41.191] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.191] Resolved: TRUE
[16:59:41.191] Value: 56 bytes of class ‘list’
[16:59:41.191] Early signaling: FALSE
[16:59:41.191] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.191] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:41.192] Chunk #1 of 1 ... DONE
[16:59:41.192] Launching 1 futures (chunks) ... DONE
[16:59:41.192] Resolving 1 futures (chunks) ...
[16:59:41.193]  - Number of value chunks collected: 1
[16:59:41.193] Resolving 1 futures (chunks) ... DONE
[16:59:41.193] Reducing values from 1 chunks ...
[16:59:41.193]  - Number of values collected after concatenation: 1
[16:59:41.193]  - Number of values expected: 1
[16:59:41.193] Reducing values from 1 chunks ... DONE
[16:59:41.193] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:59:41.196] future_lapply() ...
[16:59:41.197] Number of chunks: 1
[16:59:41.197] getGlobalsAndPackagesXApply() ...
[16:59:41.197]  - future.globals: TRUE
[16:59:41.199]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:59:41.199]  - needed namespaces: [n=0] 
[16:59:41.199] Finding globals ... DONE
[16:59:41.199]  - use_args: TRUE
[16:59:41.199]  - Getting '...' globals ...
[16:59:41.199]    - '...' content: [n=0] 
[16:59:41.200] List of 1
[16:59:41.200]  $ ...: list()
[16:59:41.200]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.200]  - attr(*, "where")=List of 1
[16:59:41.200]   ..$ ...:<environment: 0x562fbc669e38> 
[16:59:41.200]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.200]  - attr(*, "resolved")= logi TRUE
[16:59:41.200]  - attr(*, "total_size")= num NA
[16:59:41.202]  - Getting '...' globals ... DONE
[16:59:41.202] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:59:41.202] List of 3
[16:59:41.202]  $ ...future.FUN:function (ii)  
[16:59:41.202]  $ a            : num 1
[16:59:41.202]  $ ...          : list()
[16:59:41.202]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.202]  - attr(*, "where")=List of 3
[16:59:41.202]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.202]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:41.202]   ..$ ...          :<environment: 0x562fbc669e38> 
[16:59:41.202]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.202]  - attr(*, "resolved")= logi FALSE
[16:59:41.202]  - attr(*, "total_size")= num 2984
[16:59:41.205] Packages to be attached in all futures: [n=0] 
[16:59:41.205] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.205] Number of futures (= number of chunks): 1
[16:59:41.205] Launching 1 futures (chunks) ...
[16:59:41.206] Chunk #1 of 1 ...
[16:59:41.206]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.206]    + additional globals found: [n=0] 
[16:59:41.206]    + additional namespaces needed: [n=0] 
[16:59:41.206]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.206]  - seeds: <none>
[16:59:41.206]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.209] Created future:
[16:59:41.209] SequentialFuture:
[16:59:41.209] Label: ‘future_lapply-1’
[16:59:41.209] Expression:
[16:59:41.209] {
[16:59:41.209]     do.call(function(...) {
[16:59:41.209]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.209]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.209]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.209]             on.exit(options(oopts), add = TRUE)
[16:59:41.209]         }
[16:59:41.209]         {
[16:59:41.209]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.209]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.209]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.209]             })
[16:59:41.209]         }
[16:59:41.209]     }, args = future.call.arguments)
[16:59:41.209] }
[16:59:41.209] Lazy evaluation: FALSE
[16:59:41.209] Asynchronous evaluation: FALSE
[16:59:41.209] Local evaluation: TRUE
[16:59:41.209] Environment: R_GlobalEnv
[16:59:41.209] Capture standard output: TRUE
[16:59:41.209] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.209] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:59:41.209] Packages: <none>
[16:59:41.209] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.209] Resolved: TRUE
[16:59:41.209] Value: 56 bytes of class ‘list’
[16:59:41.209] Early signaling: FALSE
[16:59:41.209] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.209] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:41.210] Chunk #1 of 1 ... DONE
[16:59:41.210] Launching 1 futures (chunks) ... DONE
[16:59:41.210] Resolving 1 futures (chunks) ...
[16:59:41.210]  - Number of value chunks collected: 1
[16:59:41.210] Resolving 1 futures (chunks) ... DONE
[16:59:41.210] Reducing values from 1 chunks ...
[16:59:41.210]  - Number of values collected after concatenation: 1
[16:59:41.210]  - Number of values expected: 1
[16:59:41.211] Reducing values from 1 chunks ... DONE
[16:59:41.211] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:59:41.211] future_lapply() ...
[16:59:41.212] Number of chunks: 1
[16:59:41.212] getGlobalsAndPackagesXApply() ...
[16:59:41.212]  - future.globals: TRUE
[16:59:41.214]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:59:41.214]  - needed namespaces: [n=0] 
[16:59:41.214] Finding globals ... DONE
[16:59:41.214]  - use_args: TRUE
[16:59:41.214]  - Getting '...' globals ...
[16:59:41.214]    - '...' content: [n=0] 
[16:59:41.215] List of 1
[16:59:41.215]  $ ...: list()
[16:59:41.215]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.215]  - attr(*, "where")=List of 1
[16:59:41.215]   ..$ ...:<environment: 0x562fbb6fa2a0> 
[16:59:41.215]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.215]  - attr(*, "resolved")= logi TRUE
[16:59:41.215]  - attr(*, "total_size")= num NA
[16:59:41.217]  - Getting '...' globals ... DONE
[16:59:41.217] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:59:41.217] List of 3
[16:59:41.217]  $ ...future.FUN:function (ii)  
[16:59:41.217]  $ a            : num 1
[16:59:41.217]  $ ...          : list()
[16:59:41.217]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.217]  - attr(*, "where")=List of 3
[16:59:41.217]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.217]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:41.217]   ..$ ...          :<environment: 0x562fbb6fa2a0> 
[16:59:41.217]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.217]  - attr(*, "resolved")= logi FALSE
[16:59:41.217]  - attr(*, "total_size")= num 2984
[16:59:41.220] Packages to be attached in all futures: [n=0] 
[16:59:41.220] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.221] Number of futures (= number of chunks): 1
[16:59:41.221] Launching 1 futures (chunks) ...
[16:59:41.221] Chunk #1 of 1 ...
[16:59:41.221]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.221]    + additional globals found: [n=0] 
[16:59:41.221]    + additional namespaces needed: [n=0] 
[16:59:41.221]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.221]  - seeds: <none>
[16:59:41.222]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.224] Created future:
[16:59:41.224] SequentialFuture:
[16:59:41.224] Label: ‘future_lapply-1’
[16:59:41.224] Expression:
[16:59:41.224] {
[16:59:41.224]     do.call(function(...) {
[16:59:41.224]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.224]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.224]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.224]             on.exit(options(oopts), add = TRUE)
[16:59:41.224]         }
[16:59:41.224]         {
[16:59:41.224]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.224]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.224]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.224]             })
[16:59:41.224]         }
[16:59:41.224]     }, args = future.call.arguments)
[16:59:41.224] }
[16:59:41.224] Lazy evaluation: FALSE
[16:59:41.224] Asynchronous evaluation: FALSE
[16:59:41.224] Local evaluation: TRUE
[16:59:41.224] Environment: R_GlobalEnv
[16:59:41.224] Capture standard output: TRUE
[16:59:41.224] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.224] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:59:41.224] Packages: <none>
[16:59:41.224] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.224] Resolved: TRUE
[16:59:41.224] Value: 56 bytes of class ‘list’
[16:59:41.224] Early signaling: FALSE
[16:59:41.224] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.224] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:41.225] Chunk #1 of 1 ... DONE
[16:59:41.225] Launching 1 futures (chunks) ... DONE
[16:59:41.225] Resolving 1 futures (chunks) ...
[16:59:41.226]  - Number of value chunks collected: 1
[16:59:41.226] Resolving 1 futures (chunks) ... DONE
[16:59:41.226] Reducing values from 1 chunks ...
[16:59:41.226]  - Number of values collected after concatenation: 1
[16:59:41.226]  - Number of values expected: 1
[16:59:41.226] Reducing values from 1 chunks ... DONE
[16:59:41.226] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:59:41.226] future_lapply() ...
[16:59:41.227] Number of chunks: 1
[16:59:41.227] getGlobalsAndPackagesXApply() ...
[16:59:41.227]  - future.globals: <name-value list> with names ‘42’
[16:59:41.227]  - use_args: TRUE
[16:59:41.227]  - Getting '...' globals ...
[16:59:41.227]    - '...' content: [n=0] 
[16:59:41.228] List of 1
[16:59:41.228]  $ ...: list()
[16:59:41.228]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.228]  - attr(*, "where")=List of 1
[16:59:41.228]   ..$ ...:<environment: 0x562fbce873f0> 
[16:59:41.228]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.228]  - attr(*, "resolved")= logi TRUE
[16:59:41.228]  - attr(*, "total_size")= num NA
[16:59:41.230]  - Getting '...' globals ... DONE
[16:59:41.230] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:59:41.230] List of 3
[16:59:41.230]  $ a            : num 42
[16:59:41.230]  $ ...future.FUN:function (x)  
[16:59:41.230]  $ ...          : list()
[16:59:41.230]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.230]  - attr(*, "where")=List of 3
[16:59:41.230]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:41.230]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:59:41.230]   ..$ ...          :<environment: 0x562fbce873f0> 
[16:59:41.230]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.230]  - attr(*, "resolved")= logi FALSE
[16:59:41.230]  - attr(*, "total_size")= num NA
[16:59:41.233] Packages to be attached in all futures: [n=0] 
[16:59:41.233] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.233] Number of futures (= number of chunks): 1
[16:59:41.234] Launching 1 futures (chunks) ...
[16:59:41.234] Chunk #1 of 1 ...
[16:59:41.234]  - seeds: <none>
[16:59:41.234]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.237] Created future:
[16:59:41.237] SequentialFuture:
[16:59:41.237] Label: ‘future_lapply-1’
[16:59:41.237] Expression:
[16:59:41.237] {
[16:59:41.237]     do.call(function(...) {
[16:59:41.237]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.237]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.237]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.237]             on.exit(options(oopts), add = TRUE)
[16:59:41.237]         }
[16:59:41.237]         {
[16:59:41.237]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.237]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.237]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.237]             })
[16:59:41.237]         }
[16:59:41.237]     }, args = future.call.arguments)
[16:59:41.237] }
[16:59:41.237] Lazy evaluation: FALSE
[16:59:41.237] Asynchronous evaluation: FALSE
[16:59:41.237] Local evaluation: TRUE
[16:59:41.237] Environment: R_GlobalEnv
[16:59:41.237] Capture standard output: TRUE
[16:59:41.237] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.237] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:59:41.237] Packages: <none>
[16:59:41.237] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.237] Resolved: TRUE
[16:59:41.237] Value: 56 bytes of class ‘list’
[16:59:41.237] Early signaling: FALSE
[16:59:41.237] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.237] Class: ‘SequentialFuture’, ‘UniprocessFuture’, ‘Future’, ‘environment’
[16:59:41.238] Chunk #1 of 1 ... DONE
[16:59:41.238] Launching 1 futures (chunks) ... DONE
[16:59:41.238] Resolving 1 futures (chunks) ...
[16:59:41.238]  - Number of value chunks collected: 1
[16:59:41.238] Resolving 1 futures (chunks) ... DONE
[16:59:41.238] Reducing values from 1 chunks ...
[16:59:41.239]  - Number of values collected after concatenation: 1
[16:59:41.239]  - Number of values expected: 1
[16:59:41.239] Reducing values from 1 chunks ... DONE
[16:59:41.239] future_lapply() ... DONE
List of 1
 $ : num 42
[16:59:41.248] future_lapply() ...
[16:59:41.253] Number of chunks: 2
[16:59:41.253] getGlobalsAndPackagesXApply() ...
[16:59:41.253]  - future.globals: TRUE
[16:59:41.257]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:59:41.258]  - needed namespaces: [n=0] 
[16:59:41.258] Finding globals ... DONE
[16:59:41.258]  - use_args: TRUE
[16:59:41.258]  - Getting '...' globals ...
[16:59:41.258]    - '...' content: [n=0] 
[16:59:41.258] List of 1
[16:59:41.258]  $ ...: list()
[16:59:41.258]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.258]  - attr(*, "where")=List of 1
[16:59:41.258]   ..$ ...:<environment: 0x562fbbf932e8> 
[16:59:41.258]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.258]  - attr(*, "resolved")= logi TRUE
[16:59:41.258]  - attr(*, "total_size")= num NA
[16:59:41.261]  - Getting '...' globals ... DONE
[16:59:41.261] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:59:41.261] List of 6
[16:59:41.261]  $ ...future.FUN:function (i)  
[16:59:41.261]  $ caller       :function (a, b, FUN = call_my_add)  
[16:59:41.261]  $ args         :List of 1
[16:59:41.261]   ..$ FUN:function (a, b)  
[16:59:41.261]  $ call_my_add  :function (a, b)  
[16:59:41.261]  $ my_add       :function (a, b)  
[16:59:41.261]  $ ...          : list()
[16:59:41.261]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.261]  - attr(*, "where")=List of 6
[16:59:41.261]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.261]   ..$ caller       :<environment: R_EmptyEnv> 
[16:59:41.261]   ..$ args         :<environment: R_EmptyEnv> 
[16:59:41.261]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:59:41.261]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:59:41.261]   ..$ ...          :<environment: 0x562fbbf932e8> 
[16:59:41.261]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.261]  - attr(*, "resolved")= logi FALSE
[16:59:41.261]  - attr(*, "total_size")= num 24120
[16:59:41.265] Packages to be attached in all futures: [n=0] 
[16:59:41.266] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.266] Number of futures (= number of chunks): 2
[16:59:41.266] Launching 2 futures (chunks) ...
[16:59:41.266] Chunk #1 of 2 ...
[16:59:41.266]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.266]    + additional globals found: [n=0] 
[16:59:41.266]    + additional namespaces needed: [n=0] 
[16:59:41.267]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.267]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:41.267]  - seeds: <none>
[16:59:41.267]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.275] Created future:
[16:59:41.276] MulticoreFuture:
[16:59:41.276] Label: ‘future_lapply-1’
[16:59:41.276] Expression:
[16:59:41.276] {
[16:59:41.276]     do.call(function(...) {
[16:59:41.276]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.276]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.276]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.276]             on.exit(options(oopts), add = TRUE)
[16:59:41.276]         }
[16:59:41.276]         {
[16:59:41.276]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.276]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.276]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.276]             })
[16:59:41.276]         }
[16:59:41.276]     }, args = future.call.arguments)
[16:59:41.276] }
[16:59:41.276] Lazy evaluation: FALSE
[16:59:41.276] Asynchronous evaluation: TRUE
[16:59:41.276] Local evaluation: TRUE
[16:59:41.276] Environment: 0x562fbc587fe8
[16:59:41.276] Capture standard output: TRUE
[16:59:41.276] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.276] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:59:41.276] Packages: <none>
[16:59:41.276] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.276] Resolved: TRUE
[16:59:41.276] Value: <not collected>
[16:59:41.276] Conditions captured: <none>
[16:59:41.276] Early signaling: FALSE
[16:59:41.276] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.276] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.283] Chunk #1 of 2 ... DONE
[16:59:41.284] Chunk #2 of 2 ...
[16:59:41.284]  - Finding globals in 'X' for chunk #2 ...
[16:59:41.284]    + additional globals found: [n=0] 
[16:59:41.284]    + additional namespaces needed: [n=0] 
[16:59:41.285]  - Finding globals in 'X' for chunk #2 ... DONE
[16:59:41.285]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:41.285]  - seeds: <none>
[16:59:41.285]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.294] Created future:
[16:59:41.294] MulticoreFuture:
[16:59:41.294] Label: ‘future_lapply-2’
[16:59:41.294] Expression:
[16:59:41.294] {
[16:59:41.294]     do.call(function(...) {
[16:59:41.294]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.294]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.294]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.294]             on.exit(options(oopts), add = TRUE)
[16:59:41.294]         }
[16:59:41.294]         {
[16:59:41.294]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.294]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.294]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.294]             })
[16:59:41.294]         }
[16:59:41.294]     }, args = future.call.arguments)
[16:59:41.294] }
[16:59:41.294] Lazy evaluation: FALSE
[16:59:41.294] Asynchronous evaluation: TRUE
[16:59:41.294] Local evaluation: TRUE
[16:59:41.294] Environment: 0x562fbc587fe8
[16:59:41.294] Capture standard output: TRUE
[16:59:41.294] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.294] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:59:41.294] Packages: <none>
[16:59:41.294] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.294] Resolved: TRUE
[16:59:41.294] Value: <not collected>
[16:59:41.294] Conditions captured: <none>
[16:59:41.294] Early signaling: FALSE
[16:59:41.294] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.294] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.302] Chunk #2 of 2 ... DONE
[16:59:41.302] Launching 2 futures (chunks) ... DONE
[16:59:41.302] Resolving 2 futures (chunks) ...
[16:59:41.306]  - Number of value chunks collected: 2
[16:59:41.307] Resolving 2 futures (chunks) ... DONE
[16:59:41.307] Reducing values from 2 chunks ...
[16:59:41.307]  - Number of values collected after concatenation: 3
[16:59:41.307]  - Number of values expected: 3
[16:59:41.307] Reducing values from 2 chunks ... DONE
[16:59:41.307] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:59:41.308] future_lapply() ...
[16:59:41.313] Number of chunks: 1
[16:59:41.313] getGlobalsAndPackagesXApply() ...
[16:59:41.313]  - future.globals: TRUE
[16:59:41.316]  - globals found/used: [n=1] ‘FUN’
[16:59:41.316]  - needed namespaces: [n=0] 
[16:59:41.317] Finding globals ... DONE
[16:59:41.317]  - use_args: TRUE
[16:59:41.317]  - Getting '...' globals ...
[16:59:41.317]    - '...' content: [n=1] ‘what’
[16:59:41.317] List of 1
[16:59:41.317]  $ ...:List of 1
[16:59:41.317]   ..$ what:function (x)  
[16:59:41.317]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.317]  - attr(*, "where")=List of 1
[16:59:41.317]   ..$ ...:<environment: 0x562fbd0c6a90> 
[16:59:41.317]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.317]  - attr(*, "resolved")= logi TRUE
[16:59:41.317]  - attr(*, "total_size")= num NA
[16:59:41.321]  - Getting '...' globals ... DONE
[16:59:41.321] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.324] List of 2
[16:59:41.324]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:59:41.324]  $ ...          :List of 1
[16:59:41.324]   ..$ what:function (x)  
[16:59:41.324]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.324]  - attr(*, "where")=List of 2
[16:59:41.324]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.324]   ..$ ...          :<environment: 0x562fbd0c6a90> 
[16:59:41.324]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.324]  - attr(*, "resolved")= logi FALSE
[16:59:41.324]  - attr(*, "total_size")= num 12192
[16:59:41.327] Packages to be attached in all futures: [n=0] 
[16:59:41.327] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.327] Number of futures (= number of chunks): 1
[16:59:41.327] Launching 1 futures (chunks) ...
[16:59:41.328] Chunk #1 of 1 ...
[16:59:41.328]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.328]    + additional globals found: [n=0] 
[16:59:41.328]    + additional namespaces needed: [n=0] 
[16:59:41.328]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.328]  - seeds: <none>
[16:59:41.329]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.336] Created future:
[16:59:41.336] MulticoreFuture:
[16:59:41.336] Label: ‘future_lapply-1’
[16:59:41.336] Expression:
[16:59:41.336] {
[16:59:41.336]     do.call(function(...) {
[16:59:41.336]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.336]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.336]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.336]             on.exit(options(oopts), add = TRUE)
[16:59:41.336]         }
[16:59:41.336]         {
[16:59:41.336]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.336]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.336]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.336]             })
[16:59:41.336]         }
[16:59:41.336]     }, args = future.call.arguments)
[16:59:41.336] }
[16:59:41.336] Lazy evaluation: FALSE
[16:59:41.336] Asynchronous evaluation: TRUE
[16:59:41.336] Local evaluation: TRUE
[16:59:41.336] Environment: R_GlobalEnv
[16:59:41.336] Capture standard output: TRUE
[16:59:41.336] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.336] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.336] Packages: <none>
[16:59:41.336] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.336] Resolved: TRUE
[16:59:41.336] Value: <not collected>
[16:59:41.336] Conditions captured: <none>
[16:59:41.336] Early signaling: FALSE
[16:59:41.336] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.336] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.344] Chunk #1 of 1 ... DONE
[16:59:41.344] Launching 1 futures (chunks) ... DONE
[16:59:41.345] Resolving 1 futures (chunks) ...
[16:59:41.346]  - Number of value chunks collected: 1
[16:59:41.346] Resolving 1 futures (chunks) ... DONE
[16:59:41.346] Reducing values from 1 chunks ...
[16:59:41.346]  - Number of values collected after concatenation: 1
[16:59:41.347]  - Number of values expected: 1
[16:59:41.347] Reducing values from 1 chunks ... DONE
[16:59:41.347] future_lapply() ... DONE
[16:59:41.347] future_lapply() ...
[16:59:41.352] Number of chunks: 1
[16:59:41.352] getGlobalsAndPackagesXApply() ...
[16:59:41.352]  - future.globals: TRUE
[16:59:41.356]  - globals found/used: [n=1] ‘FUN’
[16:59:41.356]  - needed namespaces: [n=0] 
[16:59:41.356] Finding globals ... DONE
[16:59:41.356]  - use_args: TRUE
[16:59:41.356]  - Getting '...' globals ...
[16:59:41.357]    - '...' content: [n=1] ‘what’
[16:59:41.357] List of 1
[16:59:41.357]  $ ...:List of 1
[16:59:41.357]   ..$ what:function (...)  
[16:59:41.357]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.357]  - attr(*, "where")=List of 1
[16:59:41.357]   ..$ ...:<environment: 0x562fbbc3ef18> 
[16:59:41.357]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.357]  - attr(*, "resolved")= logi TRUE
[16:59:41.357]  - attr(*, "total_size")= num NA
[16:59:41.360]  - Getting '...' globals ... DONE
[16:59:41.360] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.361] List of 2
[16:59:41.361]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:59:41.361]  $ ...          :List of 1
[16:59:41.361]   ..$ what:function (...)  
[16:59:41.361]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.361]  - attr(*, "where")=List of 2
[16:59:41.361]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.361]   ..$ ...          :<environment: 0x562fbbc3ef18> 
[16:59:41.361]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.361]  - attr(*, "resolved")= logi FALSE
[16:59:41.361]  - attr(*, "total_size")= num 13352
[16:59:41.364] Packages to be attached in all futures: [n=0] 
[16:59:41.364] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.364] Number of futures (= number of chunks): 1
[16:59:41.364] Launching 1 futures (chunks) ...
[16:59:41.365] Chunk #1 of 1 ...
[16:59:41.365]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.365]    + additional globals found: [n=0] 
[16:59:41.365]    + additional namespaces needed: [n=0] 
[16:59:41.365]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.365]  - seeds: <none>
[16:59:41.366]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.373] Created future:
[16:59:41.373] MulticoreFuture:
[16:59:41.373] Label: ‘future_lapply-1’
[16:59:41.373] Expression:
[16:59:41.373] {
[16:59:41.373]     do.call(function(...) {
[16:59:41.373]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.373]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.373]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.373]             on.exit(options(oopts), add = TRUE)
[16:59:41.373]         }
[16:59:41.373]         {
[16:59:41.373]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.373]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.373]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.373]             })
[16:59:41.373]         }
[16:59:41.373]     }, args = future.call.arguments)
[16:59:41.373] }
[16:59:41.373] Lazy evaluation: FALSE
[16:59:41.373] Asynchronous evaluation: TRUE
[16:59:41.373] Local evaluation: TRUE
[16:59:41.373] Environment: R_GlobalEnv
[16:59:41.373] Capture standard output: TRUE
[16:59:41.373] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.373] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.373] Packages: <none>
[16:59:41.373] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.373] Resolved: TRUE
[16:59:41.373] Value: <not collected>
[16:59:41.373] Conditions captured: <none>
[16:59:41.373] Early signaling: FALSE
[16:59:41.373] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.373] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.381] Chunk #1 of 1 ... DONE
[16:59:41.381] Launching 1 futures (chunks) ... DONE
[16:59:41.382] Resolving 1 futures (chunks) ...
[16:59:41.383]  - Number of value chunks collected: 1
[16:59:41.383] Resolving 1 futures (chunks) ... DONE
[16:59:41.383] Reducing values from 1 chunks ...
[16:59:41.384]  - Number of values collected after concatenation: 1
[16:59:41.384]  - Number of values expected: 1
[16:59:41.384] Reducing values from 1 chunks ... DONE
[16:59:41.384] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:59:41.384] future_lapply() ...
[16:59:41.389] Number of chunks: 1
[16:59:41.389] getGlobalsAndPackagesXApply() ...
[16:59:41.389]  - future.globals: TRUE
[16:59:41.391]  - globals found/used: [n=1] ‘FUN’
[16:59:41.391]  - needed namespaces: [n=0] 
[16:59:41.392] Finding globals ... DONE
[16:59:41.392]  - use_args: TRUE
[16:59:41.392]  - Getting '...' globals ...
[16:59:41.392]    - '...' content: [n=1] ‘b’
[16:59:41.392] List of 1
[16:59:41.392]  $ ...:List of 1
[16:59:41.392]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:59:41.392]   .. ..$ a: int [1:2] 1 2
[16:59:41.392]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.392]  - attr(*, "where")=List of 1
[16:59:41.392]   ..$ ...:<environment: 0x562fbcc7cbe8> 
[16:59:41.392]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.392]  - attr(*, "resolved")= logi TRUE
[16:59:41.392]  - attr(*, "total_size")= num NA
[16:59:41.396]  - Getting '...' globals ... DONE
[16:59:41.396] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.397] List of 2
[16:59:41.397]  $ ...future.FUN:function (a, b)  
[16:59:41.397]  $ ...          :List of 1
[16:59:41.397]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:59:41.397]   .. ..$ a: int [1:2] 1 2
[16:59:41.397]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.397]  - attr(*, "where")=List of 2
[16:59:41.397]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.397]   ..$ ...          :<environment: 0x562fbcc7cbe8> 
[16:59:41.397]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.397]  - attr(*, "resolved")= logi FALSE
[16:59:41.397]  - attr(*, "total_size")= num 1440
[16:59:41.400] Packages to be attached in all futures: [n=0] 
[16:59:41.401] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.401] Number of futures (= number of chunks): 1
[16:59:41.401] Launching 1 futures (chunks) ...
[16:59:41.401] Chunk #1 of 1 ...
[16:59:41.401]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.401]    + additional globals found: [n=0] 
[16:59:41.402]    + additional namespaces needed: [n=0] 
[16:59:41.402]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.402]  - seeds: <none>
[16:59:41.402]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.409] Created future:
[16:59:41.410] MulticoreFuture:
[16:59:41.410] Label: ‘future_lapply-1’
[16:59:41.410] Expression:
[16:59:41.410] {
[16:59:41.410]     do.call(function(...) {
[16:59:41.410]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.410]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.410]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.410]             on.exit(options(oopts), add = TRUE)
[16:59:41.410]         }
[16:59:41.410]         {
[16:59:41.410]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.410]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.410]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.410]             })
[16:59:41.410]         }
[16:59:41.410]     }, args = future.call.arguments)
[16:59:41.410] }
[16:59:41.410] Lazy evaluation: FALSE
[16:59:41.410] Asynchronous evaluation: TRUE
[16:59:41.410] Local evaluation: TRUE
[16:59:41.410] Environment: R_GlobalEnv
[16:59:41.410] Capture standard output: TRUE
[16:59:41.410] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.410] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.410] Packages: <none>
[16:59:41.410] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.410] Resolved: TRUE
[16:59:41.410] Value: <not collected>
[16:59:41.410] Conditions captured: <none>
[16:59:41.410] Early signaling: FALSE
[16:59:41.410] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.410] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.420] Chunk #1 of 1 ... DONE
[16:59:41.420] Launching 1 futures (chunks) ... DONE
[16:59:41.420] Resolving 1 futures (chunks) ...
[16:59:41.422]  - Number of value chunks collected: 1
[16:59:41.422] Resolving 1 futures (chunks) ... DONE
[16:59:41.422] Reducing values from 1 chunks ...
[16:59:41.422]  - Number of values collected after concatenation: 1
[16:59:41.422]  - Number of values expected: 1
[16:59:41.422] Reducing values from 1 chunks ... DONE
[16:59:41.422] future_lapply() ... DONE
[16:59:41.423] future_lapply() ...
[16:59:41.427] Number of chunks: 1
[16:59:41.427] getGlobalsAndPackagesXApply() ...
[16:59:41.427]  - future.globals: TRUE
[16:59:41.429]  - globals found/used: [n=1] ‘FUN’
[16:59:41.429]  - needed namespaces: [n=0] 
[16:59:41.429] Finding globals ... DONE
[16:59:41.429]  - use_args: TRUE
[16:59:41.429]  - Getting '...' globals ...
[16:59:41.430]    - '...' content: [n=1] ‘b’
[16:59:41.430] List of 1
[16:59:41.430]  $ ...:List of 1
[16:59:41.430]   ..$ b:<environment: 0x562fbc4eb000> 
[16:59:41.430]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.430]  - attr(*, "where")=List of 1
[16:59:41.430]   ..$ ...:<environment: 0x562fbc4ebb98> 
[16:59:41.430]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.430]  - attr(*, "resolved")= logi TRUE
[16:59:41.430]  - attr(*, "total_size")= num NA
[16:59:41.433]  - Getting '...' globals ... DONE
[16:59:41.434] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.434] List of 2
[16:59:41.434]  $ ...future.FUN:function (a, b)  
[16:59:41.434]  $ ...          :List of 1
[16:59:41.434]   ..$ b:<environment: 0x562fbc4eb000> 
[16:59:41.434]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.434]  - attr(*, "where")=List of 2
[16:59:41.434]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.434]   ..$ ...          :<environment: 0x562fbc4ebb98> 
[16:59:41.434]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.434]  - attr(*, "resolved")= logi FALSE
[16:59:41.434]  - attr(*, "total_size")= num 1440
[16:59:41.437] Packages to be attached in all futures: [n=0] 
[16:59:41.437] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.438] Number of futures (= number of chunks): 1
[16:59:41.438] Launching 1 futures (chunks) ...
[16:59:41.438] Chunk #1 of 1 ...
[16:59:41.438]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.438]    + additional globals found: [n=0] 
[16:59:41.438]    + additional namespaces needed: [n=0] 
[16:59:41.439]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.439]  - seeds: <none>
[16:59:41.439]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.446] Created future:
[16:59:41.446] MulticoreFuture:
[16:59:41.446] Label: ‘future_lapply-1’
[16:59:41.446] Expression:
[16:59:41.446] {
[16:59:41.446]     do.call(function(...) {
[16:59:41.446]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.446]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.446]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.446]             on.exit(options(oopts), add = TRUE)
[16:59:41.446]         }
[16:59:41.446]         {
[16:59:41.446]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.446]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.446]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.446]             })
[16:59:41.446]         }
[16:59:41.446]     }, args = future.call.arguments)
[16:59:41.446] }
[16:59:41.446] Lazy evaluation: FALSE
[16:59:41.446] Asynchronous evaluation: TRUE
[16:59:41.446] Local evaluation: TRUE
[16:59:41.446] Environment: R_GlobalEnv
[16:59:41.446] Capture standard output: TRUE
[16:59:41.446] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.446] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.446] Packages: <none>
[16:59:41.446] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.446] Resolved: TRUE
[16:59:41.446] Value: <not collected>
[16:59:41.446] Conditions captured: <none>
[16:59:41.446] Early signaling: FALSE
[16:59:41.446] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.446] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.454] Chunk #1 of 1 ... DONE
[16:59:41.454] Launching 1 futures (chunks) ... DONE
[16:59:41.454] Resolving 1 futures (chunks) ...
[16:59:41.456]  - Number of value chunks collected: 1
[16:59:41.456] Resolving 1 futures (chunks) ... DONE
[16:59:41.456] Reducing values from 1 chunks ...
[16:59:41.456]  - Number of values collected after concatenation: 1
[16:59:41.457]  - Number of values expected: 1
[16:59:41.457] Reducing values from 1 chunks ... DONE
[16:59:41.457] future_lapply() ... DONE
[16:59:41.457] future_lapply() ...
[16:59:41.461] Number of chunks: 1
[16:59:41.461] getGlobalsAndPackagesXApply() ...
[16:59:41.461]  - future.globals: TRUE
[16:59:41.464]  - globals found/used: [n=1] ‘FUN’
[16:59:41.464]  - needed namespaces: [n=0] 
[16:59:41.464] Finding globals ... DONE
[16:59:41.464]  - use_args: TRUE
[16:59:41.464]  - Getting '...' globals ...
[16:59:41.465]    - '...' content: [n=1] ‘b’
[16:59:41.465] List of 1
[16:59:41.465]  $ ...:List of 1
[16:59:41.465]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:59:41.465]   .. .. ..@ slots     :List of 4
[16:59:41.465]   .. .. .. ..$ .Data  : chr "function"
[16:59:41.465]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. ..$ target : chr "signature"
[16:59:41.465]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. ..$ defined: chr "signature"
[16:59:41.465]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. ..$ generic: chr "character"
[16:59:41.465]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. ..@ contains  :List of 3
[16:59:41.465]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.465]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ superClass: chr "function"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.465]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.465]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.465]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.465]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.465]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.465]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.465]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.465]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.465]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.465]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.465]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.465]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.465]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.465]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.465]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.465]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ by        : chr "function"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.465]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.465]   .. .. ..@ virtual   : logi FALSE
[16:59:41.465]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:59:41.465]  list()
[16:59:41.465]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:59:41.465]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:41.465]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:41.465]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:41.465]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:59:41.465]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:41.465]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:41.465]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:41.465]   .. .. .. .. ..$ generic: chr(0) 
[16:59:41.465]   .. .. ..@ validity  : NULL
[16:59:41.465]   .. .. ..@ access    : list()
[16:59:41.465]   .. .. ..@ className : chr "MethodDefinition"
[16:59:41.465]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. ..@ subclasses:List of 7
[16:59:41.465]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.465]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.465]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.465]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.465]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.465]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.465]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.465]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.465]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.465]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.465]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.465]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.465]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.465]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.465]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.465]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.465]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.465]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.465]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.465]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.465]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.465]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.465]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.465]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.465]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.465]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.465]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.465]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.465]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.465]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.465]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.465]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.465]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.465]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.465]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.465]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.465]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.465]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.465]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.465]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.465]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.465]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.465]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.465]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.465]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.465]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:41.465]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.465]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.465]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.465]   .. .. ..@ versionKey:<externalptr> 
[16:59:41.465]   .. .. ..@ sealed    : logi TRUE
[16:59:41.465]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.465]  - attr(*, "where")=List of 1
[16:59:41.465]   ..$ ...:<environment: 0x562fbb25a440> 
[16:59:41.465]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.465]  - attr(*, "resolved")= logi TRUE
[16:59:41.465]  - attr(*, "total_size")= num NA
[16:59:41.518]  - Getting '...' globals ... DONE
[16:59:41.518] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.518] List of 2
[16:59:41.518]  $ ...future.FUN:function (a, b)  
[16:59:41.518]  $ ...          :List of 1
[16:59:41.518]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:59:41.518]   .. .. ..@ slots     :List of 4
[16:59:41.518]   .. .. .. ..$ .Data  : chr "function"
[16:59:41.518]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. ..$ target : chr "signature"
[16:59:41.518]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. ..$ defined: chr "signature"
[16:59:41.518]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. ..$ generic: chr "character"
[16:59:41.518]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. ..@ contains  :List of 3
[16:59:41.518]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.518]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ superClass: chr "function"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.518]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.518]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.518]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.518]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.518]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.518]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.518]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.518]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.518]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.518]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.518]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.518]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.518]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.518]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.518]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.518]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ by        : chr "function"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.518]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.518]   .. .. ..@ virtual   : logi FALSE
[16:59:41.518]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:59:41.518]  list()
[16:59:41.518]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:59:41.518]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:41.518]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:41.518]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:41.518]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:59:41.518]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:41.518]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:41.518]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:41.518]   .. .. .. .. ..$ generic: chr(0) 
[16:59:41.518]   .. .. ..@ validity  : NULL
[16:59:41.518]   .. .. ..@ access    : list()
[16:59:41.518]   .. .. ..@ className : chr "MethodDefinition"
[16:59:41.518]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. ..@ subclasses:List of 7
[16:59:41.518]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.518]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.518]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.518]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.518]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.518]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.518]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.518]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.518]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.518]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.518]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.518]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.518]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.518]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.518]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.518]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.518]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.518]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.518]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.518]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.518]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.518]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.518]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.518]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.518]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.518]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:41.518]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.518]   .. .. .. .. .. ..@ distance  : num 1
[16:59:41.518]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.518]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.518]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.518]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.518]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.518]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.518]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.518]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.518]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.518]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.518]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.518]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.518]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:41.518]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:41.518]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:41.518]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:41.518]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:41.518]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:41.518]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:41.518]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:41.518]   .. .. .. .. .. ..@ distance  : num 2
[16:59:41.518]   .. .. ..@ versionKey:<externalptr> 
[16:59:41.518]   .. .. ..@ sealed    : logi TRUE
[16:59:41.518]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.518]  - attr(*, "where")=List of 2
[16:59:41.518]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.518]   ..$ ...          :<environment: 0x562fbb25a440> 
[16:59:41.518]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.518]  - attr(*, "resolved")= logi FALSE
[16:59:41.518]  - attr(*, "total_size")= num 405168
[16:59:41.563] Packages to be attached in all futures: [n=0] 
[16:59:41.564] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.564] Number of futures (= number of chunks): 1
[16:59:41.564] Launching 1 futures (chunks) ...
[16:59:41.564] Chunk #1 of 1 ...
[16:59:41.564]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.564]    + additional globals found: [n=0] 
[16:59:41.565]    + additional namespaces needed: [n=0] 
[16:59:41.565]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.566]  - seeds: <none>
[16:59:41.566]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.574] Created future:
[16:59:41.574] MulticoreFuture:
[16:59:41.574] Label: ‘future_lapply-1’
[16:59:41.574] Expression:
[16:59:41.574] {
[16:59:41.574]     do.call(function(...) {
[16:59:41.574]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.574]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.574]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.574]             on.exit(options(oopts), add = TRUE)
[16:59:41.574]         }
[16:59:41.574]         {
[16:59:41.574]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.574]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.574]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.574]             })
[16:59:41.574]         }
[16:59:41.574]     }, args = future.call.arguments)
[16:59:41.574] }
[16:59:41.574] Lazy evaluation: FALSE
[16:59:41.574] Asynchronous evaluation: TRUE
[16:59:41.574] Local evaluation: TRUE
[16:59:41.574] Environment: R_GlobalEnv
[16:59:41.574] Capture standard output: TRUE
[16:59:41.574] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.574] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.574] Packages: <none>
[16:59:41.574] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.574] Resolved: TRUE
[16:59:41.574] Value: <not collected>
[16:59:41.574] Conditions captured: <none>
[16:59:41.574] Early signaling: FALSE
[16:59:41.574] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.574] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.582] Chunk #1 of 1 ... DONE
[16:59:41.582] Launching 1 futures (chunks) ... DONE
[16:59:41.582] Resolving 1 futures (chunks) ...
[16:59:41.584]  - Number of value chunks collected: 1
[16:59:41.584] Resolving 1 futures (chunks) ... DONE
[16:59:41.584] Reducing values from 1 chunks ...
[16:59:41.584]  - Number of values collected after concatenation: 1
[16:59:41.584]  - Number of values expected: 1
[16:59:41.584] Reducing values from 1 chunks ... DONE
[16:59:41.584] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:59:41.587] future_lapply() ...
[16:59:41.592] Number of chunks: 2
[16:59:41.592] getGlobalsAndPackagesXApply() ...
[16:59:41.592]  - future.globals: TRUE
[16:59:41.594]  - globals found/used: [n=1] ‘FUN’
[16:59:41.594]  - needed namespaces: [n=0] 
[16:59:41.594] Finding globals ... DONE
[16:59:41.594]  - use_args: TRUE
[16:59:41.594]  - Getting '...' globals ...
[16:59:41.595]    - '...' content: [n=0] 
[16:59:41.595] List of 1
[16:59:41.595]  $ ...: list()
[16:59:41.595]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.595]  - attr(*, "where")=List of 1
[16:59:41.595]   ..$ ...:<environment: 0x562fbbeedc18> 
[16:59:41.595]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.595]  - attr(*, "resolved")= logi TRUE
[16:59:41.595]  - attr(*, "total_size")= num NA
[16:59:41.598]  - Getting '...' globals ... DONE
[16:59:41.598] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:41.598] List of 2
[16:59:41.598]  $ ...future.FUN:function (f)  
[16:59:41.598]  $ ...          : list()
[16:59:41.598]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.598]  - attr(*, "where")=List of 2
[16:59:41.598]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.598]   ..$ ...          :<environment: 0x562fbbeedc18> 
[16:59:41.598]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.598]  - attr(*, "resolved")= logi FALSE
[16:59:41.598]  - attr(*, "total_size")= num 1008
[16:59:41.601] Packages to be attached in all futures: [n=0] 
[16:59:41.601] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.602] Number of futures (= number of chunks): 2
[16:59:41.602] Launching 2 futures (chunks) ...
[16:59:41.602] Chunk #1 of 2 ...
[16:59:41.602]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.604]    + additional globals found: [n=2] ‘a’, ‘b’
[16:59:41.604]    + additional namespaces needed: [n=0] 
[16:59:41.604]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.604]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:41.604]  - seeds: <none>
[16:59:41.604]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:59:41.612] Created future:
[16:59:41.612] MulticoreFuture:
[16:59:41.612] Label: ‘future_lapply-1’
[16:59:41.612] Expression:
[16:59:41.612] {
[16:59:41.612]     do.call(function(...) {
[16:59:41.612]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.612]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.612]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.612]             on.exit(options(oopts), add = TRUE)
[16:59:41.612]         }
[16:59:41.612]         {
[16:59:41.612]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.612]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.612]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.612]             })
[16:59:41.612]         }
[16:59:41.612]     }, args = future.call.arguments)
[16:59:41.612] }
[16:59:41.612] Lazy evaluation: FALSE
[16:59:41.612] Asynchronous evaluation: TRUE
[16:59:41.612] Local evaluation: TRUE
[16:59:41.612] Environment: R_GlobalEnv
[16:59:41.612] Capture standard output: TRUE
[16:59:41.612] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.612] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:59:41.612] Packages: <none>
[16:59:41.612] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.612] Resolved: TRUE
[16:59:41.612] Value: <not collected>
[16:59:41.612] Conditions captured: <none>
[16:59:41.612] Early signaling: FALSE
[16:59:41.612] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.612] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.621] Chunk #1 of 2 ... DONE
[16:59:41.621] Chunk #2 of 2 ...
[16:59:41.621]  - Finding globals in 'X' for chunk #2 ...
[16:59:41.624]    + additional globals found: [n=2] ‘a’, ‘b’
[16:59:41.625]    + additional namespaces needed: [n=1] ‘tools’
[16:59:41.625]  - Finding globals in 'X' for chunk #2 ... DONE
[16:59:41.625]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:41.625]  - seeds: <none>
[16:59:41.625]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:59:41.634] Created future:
[16:59:41.635] MulticoreFuture:
[16:59:41.635] Label: ‘future_lapply-2’
[16:59:41.635] Expression:
[16:59:41.635] {
[16:59:41.635]     do.call(function(...) {
[16:59:41.635]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.635]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.635]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.635]             on.exit(options(oopts), add = TRUE)
[16:59:41.635]         }
[16:59:41.635]         {
[16:59:41.635]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.635]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.635]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.635]             })
[16:59:41.635]         }
[16:59:41.635]     }, args = future.call.arguments)
[16:59:41.635] }
[16:59:41.635] Lazy evaluation: FALSE
[16:59:41.635] Asynchronous evaluation: TRUE
[16:59:41.635] Local evaluation: TRUE
[16:59:41.635] Environment: R_GlobalEnv
[16:59:41.635] Capture standard output: TRUE
[16:59:41.635] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.635] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:59:41.635] Packages: 1 packages (‘tools’)
[16:59:41.635] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.635] Resolved: TRUE
[16:59:41.635] Value: <not collected>
[16:59:41.635] Conditions captured: <none>
[16:59:41.635] Early signaling: FALSE
[16:59:41.635] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.635] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.644] Chunk #2 of 2 ... DONE
[16:59:41.644] Launching 2 futures (chunks) ... DONE
[16:59:41.644] Resolving 2 futures (chunks) ...
[16:59:41.647]  - Number of value chunks collected: 2
[16:59:41.647] Resolving 2 futures (chunks) ... DONE
[16:59:41.647] Reducing values from 2 chunks ...
[16:59:41.647]  - Number of values collected after concatenation: 4
[16:59:41.647]  - Number of values expected: 4
[16:59:41.647] Reducing values from 2 chunks ... DONE
[16:59:41.648] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:59:41.651] future_lapply() ...
[16:59:41.656] Number of chunks: 1
[16:59:41.656] getGlobalsAndPackagesXApply() ...
[16:59:41.656]  - future.globals: TRUE
[16:59:41.659]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:59:41.659]  - needed namespaces: [n=0] 
[16:59:41.660] Finding globals ... DONE
[16:59:41.660]  - use_args: TRUE
[16:59:41.660]  - Getting '...' globals ...
[16:59:41.660]    - '...' content: [n=0] 
[16:59:41.660] List of 1
[16:59:41.660]  $ ...: list()
[16:59:41.660]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.660]  - attr(*, "where")=List of 1
[16:59:41.660]   ..$ ...:<environment: 0x562fbd031c70> 
[16:59:41.660]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.660]  - attr(*, "resolved")= logi TRUE
[16:59:41.660]  - attr(*, "total_size")= num NA
[16:59:41.663]  - Getting '...' globals ... DONE
[16:59:41.663] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:59:41.664] List of 3
[16:59:41.664]  $ ...future.FUN        :function (x)  
[16:59:41.664]  $ future.call.arguments:List of 1
[16:59:41.664]   ..$ a: num 1
[16:59:41.664]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.664]  $ ...                  : list()
[16:59:41.664]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.664]  - attr(*, "where")=List of 3
[16:59:41.664]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:59:41.664]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:59:41.664]   ..$ ...                  :<environment: 0x562fbd031c70> 
[16:59:41.664]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.664]  - attr(*, "resolved")= logi FALSE
[16:59:41.664]  - attr(*, "total_size")= num 1272
[16:59:41.670] Packages to be attached in all futures: [n=0] 
[16:59:41.670] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.670] Number of futures (= number of chunks): 1
[16:59:41.670] Launching 1 futures (chunks) ...
[16:59:41.671] Chunk #1 of 1 ...
[16:59:41.671]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.671]    + additional globals found: [n=0] 
[16:59:41.671]    + additional namespaces needed: [n=0] 
[16:59:41.671]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.671]  - seeds: <none>
[16:59:41.672]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.679] Created future:
[16:59:41.679] MulticoreFuture:
[16:59:41.679] Label: ‘future_lapply-1’
[16:59:41.679] Expression:
[16:59:41.679] {
[16:59:41.679]     do.call(function(...) {
[16:59:41.679]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.679]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.679]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.679]             on.exit(options(oopts), add = TRUE)
[16:59:41.679]         }
[16:59:41.679]         {
[16:59:41.679]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.679]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.679]                 ...future.FUN(...future.X_jj)
[16:59:41.679]             })
[16:59:41.679]         }
[16:59:41.679]     }, args = future.call.arguments)
[16:59:41.679] }
[16:59:41.679] Lazy evaluation: FALSE
[16:59:41.679] Asynchronous evaluation: TRUE
[16:59:41.679] Local evaluation: TRUE
[16:59:41.679] Environment: 0x562fbd0320d0
[16:59:41.679] Capture standard output: TRUE
[16:59:41.679] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.679] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:41.679] Packages: <none>
[16:59:41.679] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.679] Resolved: TRUE
[16:59:41.679] Value: <not collected>
[16:59:41.679] Conditions captured: <none>
[16:59:41.679] Early signaling: FALSE
[16:59:41.679] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.679] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.687] Chunk #1 of 1 ... DONE
[16:59:41.687] Launching 1 futures (chunks) ... DONE
[16:59:41.687] Resolving 1 futures (chunks) ...
[16:59:41.689]  - Number of value chunks collected: 1
[16:59:41.689] Resolving 1 futures (chunks) ... DONE
[16:59:41.689] Reducing values from 1 chunks ...
[16:59:41.689]  - Number of values collected after concatenation: 1
[16:59:41.689]  - Number of values expected: 1
[16:59:41.689] Reducing values from 1 chunks ... DONE
[16:59:41.690] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:59:41.691] future_lapply() ...
[16:59:41.696] Number of chunks: 1
[16:59:41.696] getGlobalsAndPackagesXApply() ...
[16:59:41.696]  - future.globals: TRUE
[16:59:41.699]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:59:41.699]  - needed namespaces: [n=0] 
[16:59:41.699] Finding globals ... DONE
[16:59:41.699]  - use_args: TRUE
[16:59:41.700]  - Getting '...' globals ...
[16:59:41.700]    - '...' content: [n=0] 
[16:59:41.700] List of 1
[16:59:41.700]  $ ...: list()
[16:59:41.700]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.700]  - attr(*, "where")=List of 1
[16:59:41.700]   ..$ ...:<environment: 0x562fbbc54380> 
[16:59:41.700]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.700]  - attr(*, "resolved")= logi TRUE
[16:59:41.700]  - attr(*, "total_size")= num NA
[16:59:41.703]  - Getting '...' globals ... DONE
[16:59:41.703] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:59:41.703] List of 3
[16:59:41.703]  $ ...future.FUN:function (ii)  
[16:59:41.703]  $ a            : num 1
[16:59:41.703]  $ ...          : list()
[16:59:41.703]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.703]  - attr(*, "where")=List of 3
[16:59:41.703]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.703]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:41.703]   ..$ ...          :<environment: 0x562fbbc54380> 
[16:59:41.703]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.703]  - attr(*, "resolved")= logi FALSE
[16:59:41.703]  - attr(*, "total_size")= num 2984
[16:59:41.707] Packages to be attached in all futures: [n=0] 
[16:59:41.707] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.707] Number of futures (= number of chunks): 1
[16:59:41.708] Launching 1 futures (chunks) ...
[16:59:41.708] Chunk #1 of 1 ...
[16:59:41.708]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.708]    + additional globals found: [n=0] 
[16:59:41.708]    + additional namespaces needed: [n=0] 
[16:59:41.708]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.709]  - seeds: <none>
[16:59:41.709]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.716] Created future:
[16:59:41.717] MulticoreFuture:
[16:59:41.717] Label: ‘future_lapply-1’
[16:59:41.717] Expression:
[16:59:41.717] {
[16:59:41.717]     do.call(function(...) {
[16:59:41.717]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.717]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.717]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.717]             on.exit(options(oopts), add = TRUE)
[16:59:41.717]         }
[16:59:41.717]         {
[16:59:41.717]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.717]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.717]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.717]             })
[16:59:41.717]         }
[16:59:41.717]     }, args = future.call.arguments)
[16:59:41.717] }
[16:59:41.717] Lazy evaluation: FALSE
[16:59:41.717] Asynchronous evaluation: TRUE
[16:59:41.717] Local evaluation: TRUE
[16:59:41.717] Environment: R_GlobalEnv
[16:59:41.717] Capture standard output: TRUE
[16:59:41.717] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.717] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:59:41.717] Packages: <none>
[16:59:41.717] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.717] Resolved: TRUE
[16:59:41.717] Value: <not collected>
[16:59:41.717] Conditions captured: <none>
[16:59:41.717] Early signaling: FALSE
[16:59:41.717] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.717] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.724] Chunk #1 of 1 ... DONE
[16:59:41.725] Launching 1 futures (chunks) ... DONE
[16:59:41.725] Resolving 1 futures (chunks) ...
[16:59:41.726]  - Number of value chunks collected: 1
[16:59:41.726] Resolving 1 futures (chunks) ... DONE
[16:59:41.726] Reducing values from 1 chunks ...
[16:59:41.727]  - Number of values collected after concatenation: 1
[16:59:41.727]  - Number of values expected: 1
[16:59:41.727] Reducing values from 1 chunks ... DONE
[16:59:41.727] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:59:41.727] future_lapply() ...
[16:59:41.732] Number of chunks: 1
[16:59:41.732] getGlobalsAndPackagesXApply() ...
[16:59:41.732]  - future.globals: TRUE
[16:59:41.735]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:59:41.735]  - needed namespaces: [n=0] 
[16:59:41.735] Finding globals ... DONE
[16:59:41.735]  - use_args: TRUE
[16:59:41.735]  - Getting '...' globals ...
[16:59:41.736]    - '...' content: [n=0] 
[16:59:41.736] List of 1
[16:59:41.736]  $ ...: list()
[16:59:41.736]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.736]  - attr(*, "where")=List of 1
[16:59:41.736]   ..$ ...:<environment: 0x562fbcbd4330> 
[16:59:41.736]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.736]  - attr(*, "resolved")= logi TRUE
[16:59:41.736]  - attr(*, "total_size")= num NA
[16:59:41.739]  - Getting '...' globals ... DONE
[16:59:41.739] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:59:41.739] List of 3
[16:59:41.739]  $ ...future.FUN:function (ii)  
[16:59:41.739]  $ a            : num 1
[16:59:41.739]  $ ...          : list()
[16:59:41.739]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.739]  - attr(*, "where")=List of 3
[16:59:41.739]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:41.739]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:41.739]   ..$ ...          :<environment: 0x562fbcbd4330> 
[16:59:41.739]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.739]  - attr(*, "resolved")= logi FALSE
[16:59:41.739]  - attr(*, "total_size")= num 2984
[16:59:41.743] Packages to be attached in all futures: [n=0] 
[16:59:41.743] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.743] Number of futures (= number of chunks): 1
[16:59:41.743] Launching 1 futures (chunks) ...
[16:59:41.744] Chunk #1 of 1 ...
[16:59:41.744]  - Finding globals in 'X' for chunk #1 ...
[16:59:41.744]    + additional globals found: [n=0] 
[16:59:41.744]    + additional namespaces needed: [n=0] 
[16:59:41.744]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:41.744]  - seeds: <none>
[16:59:41.744]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.752] Created future:
[16:59:41.752] MulticoreFuture:
[16:59:41.752] Label: ‘future_lapply-1’
[16:59:41.752] Expression:
[16:59:41.752] {
[16:59:41.752]     do.call(function(...) {
[16:59:41.752]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.752]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.752]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.752]             on.exit(options(oopts), add = TRUE)
[16:59:41.752]         }
[16:59:41.752]         {
[16:59:41.752]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.752]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.752]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.752]             })
[16:59:41.752]         }
[16:59:41.752]     }, args = future.call.arguments)
[16:59:41.752] }
[16:59:41.752] Lazy evaluation: FALSE
[16:59:41.752] Asynchronous evaluation: TRUE
[16:59:41.752] Local evaluation: TRUE
[16:59:41.752] Environment: R_GlobalEnv
[16:59:41.752] Capture standard output: TRUE
[16:59:41.752] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.752] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:59:41.752] Packages: <none>
[16:59:41.752] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.752] Resolved: TRUE
[16:59:41.752] Value: <not collected>
[16:59:41.752] Conditions captured: <none>
[16:59:41.752] Early signaling: FALSE
[16:59:41.752] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.752] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.765] Chunk #1 of 1 ... DONE
[16:59:41.765] Launching 1 futures (chunks) ... DONE
[16:59:41.766] Resolving 1 futures (chunks) ...
[16:59:41.767]  - Number of value chunks collected: 1
[16:59:41.767] Resolving 1 futures (chunks) ... DONE
[16:59:41.767] Reducing values from 1 chunks ...
[16:59:41.767]  - Number of values collected after concatenation: 1
[16:59:41.768]  - Number of values expected: 1
[16:59:41.768] Reducing values from 1 chunks ... DONE
[16:59:41.768] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:59:41.768] future_lapply() ...
[16:59:41.772] Number of chunks: 1
[16:59:41.772] getGlobalsAndPackagesXApply() ...
[16:59:41.772]  - future.globals: <name-value list> with names ‘42’
[16:59:41.773]  - use_args: TRUE
[16:59:41.773]  - Getting '...' globals ...
[16:59:41.773]    - '...' content: [n=0] 
[16:59:41.773] List of 1
[16:59:41.773]  $ ...: list()
[16:59:41.773]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.773]  - attr(*, "where")=List of 1
[16:59:41.773]   ..$ ...:<environment: 0x562fbc578dc8> 
[16:59:41.773]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.773]  - attr(*, "resolved")= logi TRUE
[16:59:41.773]  - attr(*, "total_size")= num NA
[16:59:41.777]  - Getting '...' globals ... DONE
[16:59:41.777] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:59:41.777] List of 3
[16:59:41.777]  $ a            : num 42
[16:59:41.777]  $ ...future.FUN:function (x)  
[16:59:41.777]  $ ...          : list()
[16:59:41.777]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:41.777]  - attr(*, "where")=List of 3
[16:59:41.777]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:41.777]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:59:41.777]   ..$ ...          :<environment: 0x562fbc578dc8> 
[16:59:41.777]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:41.777]  - attr(*, "resolved")= logi FALSE
[16:59:41.777]  - attr(*, "total_size")= num NA
[16:59:41.781] Packages to be attached in all futures: [n=0] 
[16:59:41.781] getGlobalsAndPackagesXApply() ... DONE
[16:59:41.781] Number of futures (= number of chunks): 1
[16:59:41.781] Launching 1 futures (chunks) ...
[16:59:41.781] Chunk #1 of 1 ...
[16:59:41.781]  - seeds: <none>
[16:59:41.781]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:41.789] Created future:
[16:59:41.789] MulticoreFuture:
[16:59:41.789] Label: ‘future_lapply-1’
[16:59:41.789] Expression:
[16:59:41.789] {
[16:59:41.789]     do.call(function(...) {
[16:59:41.789]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:41.789]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:41.789]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:41.789]             on.exit(options(oopts), add = TRUE)
[16:59:41.789]         }
[16:59:41.789]         {
[16:59:41.789]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:41.789]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:41.789]                 ...future.FUN(...future.X_jj, ...)
[16:59:41.789]             })
[16:59:41.789]         }
[16:59:41.789]     }, args = future.call.arguments)
[16:59:41.789] }
[16:59:41.789] Lazy evaluation: FALSE
[16:59:41.789] Asynchronous evaluation: TRUE
[16:59:41.789] Local evaluation: TRUE
[16:59:41.789] Environment: R_GlobalEnv
[16:59:41.789] Capture standard output: TRUE
[16:59:41.789] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:41.789] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:59:41.789] Packages: <none>
[16:59:41.789] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:41.789] Resolved: TRUE
[16:59:41.789] Value: <not collected>
[16:59:41.789] Conditions captured: <none>
[16:59:41.789] Early signaling: FALSE
[16:59:41.789] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:41.789] Class: ‘MulticoreFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:41.798] Chunk #1 of 1 ... DONE
[16:59:41.798] Launching 1 futures (chunks) ... DONE
[16:59:41.798] Resolving 1 futures (chunks) ...
[16:59:41.800]  - Number of value chunks collected: 1
[16:59:41.800] Resolving 1 futures (chunks) ... DONE
[16:59:41.800] Reducing values from 1 chunks ...
[16:59:41.800]  - Number of values collected after concatenation: 1
[16:59:41.800]  - Number of values expected: 1
[16:59:41.800] Reducing values from 1 chunks ... DONE
[16:59:41.800] future_lapply() ... DONE
List of 1
 $ : num 42
[16:59:42.155] future_lapply() ...
[16:59:42.159] Number of chunks: 2
[16:59:42.159] getGlobalsAndPackagesXApply() ...
[16:59:42.160]  - future.globals: TRUE
[16:59:42.165]  - globals found/used: [n=5] ‘FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’
[16:59:42.165]  - needed namespaces: [n=0] 
[16:59:42.165] Finding globals ... DONE
[16:59:42.166]  - use_args: TRUE
[16:59:42.166]  - Getting '...' globals ...
[16:59:42.166]    - '...' content: [n=0] 
[16:59:42.166] List of 1
[16:59:42.166]  $ ...: list()
[16:59:42.166]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.166]  - attr(*, "where")=List of 1
[16:59:42.166]   ..$ ...:<environment: 0x562fba03f258> 
[16:59:42.166]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.166]  - attr(*, "resolved")= logi TRUE
[16:59:42.166]  - attr(*, "total_size")= num NA
[16:59:42.169]  - Getting '...' globals ... DONE
[16:59:42.169] Globals to be used in all futures (chunks): [n=6] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’
[16:59:42.169] List of 6
[16:59:42.169]  $ ...future.FUN:function (i)  
[16:59:42.169]  $ caller       :function (a, b, FUN = call_my_add)  
[16:59:42.169]  $ args         :List of 1
[16:59:42.169]   ..$ FUN:function (a, b)  
[16:59:42.169]  $ call_my_add  :function (a, b)  
[16:59:42.169]  $ my_add       :function (a, b)  
[16:59:42.169]  $ ...          : list()
[16:59:42.169]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.169]  - attr(*, "where")=List of 6
[16:59:42.169]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:42.169]   ..$ caller       :<environment: R_EmptyEnv> 
[16:59:42.169]   ..$ args         :<environment: R_EmptyEnv> 
[16:59:42.169]   ..$ call_my_add  :<environment: R_EmptyEnv> 
[16:59:42.169]   ..$ my_add       :<environment: R_EmptyEnv> 
[16:59:42.169]   ..$ ...          :<environment: 0x562fba03f258> 
[16:59:42.169]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.169]  - attr(*, "resolved")= logi FALSE
[16:59:42.169]  - attr(*, "total_size")= num 24120
[16:59:42.175] Packages to be attached in all futures: [n=0] 
[16:59:42.175] getGlobalsAndPackagesXApply() ... DONE
[16:59:42.175] Number of futures (= number of chunks): 2
[16:59:42.175] Launching 2 futures (chunks) ...
[16:59:42.175] Chunk #1 of 2 ...
[16:59:42.175]  - Finding globals in 'X' for chunk #1 ...
[16:59:42.176]    + additional globals found: [n=0] 
[16:59:42.176]    + additional namespaces needed: [n=0] 
[16:59:42.176]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:42.176]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:42.176]  - seeds: <none>
[16:59:42.176]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:42.238] Created future:
[16:59:42.238] MultisessionFuture:
[16:59:42.238] Label: ‘future_lapply-1’
[16:59:42.238] Expression:
[16:59:42.238] {
[16:59:42.238]     do.call(function(...) {
[16:59:42.238]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:42.238]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:42.238]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:42.238]             on.exit(options(oopts), add = TRUE)
[16:59:42.238]         }
[16:59:42.238]         {
[16:59:42.238]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:42.238]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:42.238]                 ...future.FUN(...future.X_jj, ...)
[16:59:42.238]             })
[16:59:42.238]         }
[16:59:42.238]     }, args = future.call.arguments)
[16:59:42.238] }
[16:59:42.238] Lazy evaluation: FALSE
[16:59:42.238] Asynchronous evaluation: TRUE
[16:59:42.238] Local evaluation: TRUE
[16:59:42.238] Environment: 0x562fba03ee30
[16:59:42.238] Capture standard output: TRUE
[16:59:42.238] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:42.238] Globals: 9 objects totaling 23.61 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:59:42.238] Packages: <none>
[16:59:42.238] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:42.238] Resolved: FALSE
[16:59:42.238] Value: <not collected>
[16:59:42.238] Conditions captured: <none>
[16:59:42.238] Early signaling: FALSE
[16:59:42.238] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:42.238] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:42.250] Chunk #1 of 2 ... DONE
[16:59:42.250] Chunk #2 of 2 ...
[16:59:42.251]  - Finding globals in 'X' for chunk #2 ...
[16:59:42.251]    + additional globals found: [n=0] 
[16:59:42.251]    + additional namespaces needed: [n=0] 
[16:59:42.251]  - Finding globals in 'X' for chunk #2 ... DONE
[16:59:42.251]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:42.251]  - seeds: <none>
[16:59:42.252]  - All globals exported: [n=9] ‘...future.FUN’, ‘caller’, ‘args’, ‘call_my_add’, ‘my_add’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:42.319] Created future:
[16:59:42.319] MultisessionFuture:
[16:59:42.319] Label: ‘future_lapply-2’
[16:59:42.319] Expression:
[16:59:42.319] {
[16:59:42.319]     do.call(function(...) {
[16:59:42.319]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:42.319]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:42.319]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:42.319]             on.exit(options(oopts), add = TRUE)
[16:59:42.319]         }
[16:59:42.319]         {
[16:59:42.319]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:42.319]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:42.319]                 ...future.FUN(...future.X_jj, ...)
[16:59:42.319]             })
[16:59:42.319]         }
[16:59:42.319]     }, args = future.call.arguments)
[16:59:42.319] }
[16:59:42.319] Lazy evaluation: FALSE
[16:59:42.319] Asynchronous evaluation: TRUE
[16:59:42.319] Local evaluation: TRUE
[16:59:42.319] Environment: 0x562fba03ee30
[16:59:42.319] Capture standard output: TRUE
[16:59:42.319] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:42.319] Globals: 9 objects totaling 23.66 KiB (function ‘...future.FUN’ of 9.20 KiB, function ‘caller’ of 1.48 KiB, list ‘args’ of 5.72 KiB, function ‘call_my_add’ of 5.72 KiB, function ‘my_add’ of 1.44 KiB, ...)
[16:59:42.319] Packages: <none>
[16:59:42.319] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:42.319] Resolved: FALSE
[16:59:42.319] Value: <not collected>
[16:59:42.319] Conditions captured: <none>
[16:59:42.319] Early signaling: FALSE
[16:59:42.319] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:42.319] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:42.331] Chunk #2 of 2 ... DONE
[16:59:42.331] Launching 2 futures (chunks) ... DONE
[16:59:42.331] Resolving 2 futures (chunks) ...
[16:59:42.397]  - Number of value chunks collected: 2
[16:59:42.397] Resolving 2 futures (chunks) ... DONE
[16:59:42.397] Reducing values from 2 chunks ...
[16:59:42.397]  - Number of values collected after concatenation: 3
[16:59:42.397]  - Number of values expected: 3
[16:59:42.397] Reducing values from 2 chunks ... DONE
[16:59:42.397] future_lapply() ... DONE
- future_lapply(x, FUN = do.call, ...) ...
[16:59:42.398] future_lapply() ...
[16:59:42.402] Number of chunks: 1
[16:59:42.402] getGlobalsAndPackagesXApply() ...
[16:59:42.402]  - future.globals: TRUE
[16:59:42.405]  - globals found/used: [n=1] ‘FUN’
[16:59:42.405]  - needed namespaces: [n=0] 
[16:59:42.405] Finding globals ... DONE
[16:59:42.405]  - use_args: TRUE
[16:59:42.405]  - Getting '...' globals ...
[16:59:42.406]    - '...' content: [n=1] ‘what’
[16:59:42.406] List of 1
[16:59:42.406]  $ ...:List of 1
[16:59:42.406]   ..$ what:function (x)  
[16:59:42.406]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.406]  - attr(*, "where")=List of 1
[16:59:42.406]   ..$ ...:<environment: 0x562fbb8063c0> 
[16:59:42.406]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.406]  - attr(*, "resolved")= logi TRUE
[16:59:42.406]  - attr(*, "total_size")= num NA
[16:59:42.409]  - Getting '...' globals ... DONE
[16:59:42.409] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:42.409] List of 2
[16:59:42.409]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:59:42.409]  $ ...          :List of 1
[16:59:42.409]   ..$ what:function (x)  
[16:59:42.409]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.409]  - attr(*, "where")=List of 2
[16:59:42.409]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:42.409]   ..$ ...          :<environment: 0x562fbb8063c0> 
[16:59:42.409]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.409]  - attr(*, "resolved")= logi FALSE
[16:59:42.409]  - attr(*, "total_size")= num 12192
[16:59:42.412] Packages to be attached in all futures: [n=0] 
[16:59:42.412] getGlobalsAndPackagesXApply() ... DONE
[16:59:42.412] Number of futures (= number of chunks): 1
[16:59:42.412] Launching 1 futures (chunks) ...
[16:59:42.412] Chunk #1 of 1 ...
[16:59:42.413]  - Finding globals in 'X' for chunk #1 ...
[16:59:42.413]    + additional globals found: [n=0] 
[16:59:42.413]    + additional namespaces needed: [n=0] 
[16:59:42.413]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:42.413]  - seeds: <none>
[16:59:42.413]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:42.433] Created future:
[16:59:42.434] MultisessionFuture:
[16:59:42.434] Label: ‘future_lapply-1’
[16:59:42.434] Expression:
[16:59:42.434] {
[16:59:42.434]     do.call(function(...) {
[16:59:42.434]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:42.434]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:42.434]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:42.434]             on.exit(options(oopts), add = TRUE)
[16:59:42.434]         }
[16:59:42.434]         {
[16:59:42.434]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:42.434]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:42.434]                 ...future.FUN(...future.X_jj, ...)
[16:59:42.434]             })
[16:59:42.434]         }
[16:59:42.434]     }, args = future.call.arguments)
[16:59:42.434] }
[16:59:42.434] Lazy evaluation: FALSE
[16:59:42.434] Asynchronous evaluation: TRUE
[16:59:42.434] Local evaluation: TRUE
[16:59:42.434] Environment: R_GlobalEnv
[16:59:42.434] Capture standard output: TRUE
[16:59:42.434] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:42.434] Globals: 5 objects totaling 11.96 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:42.434] Packages: <none>
[16:59:42.434] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:42.434] Resolved: FALSE
[16:59:42.434] Value: <not collected>
[16:59:42.434] Conditions captured: <none>
[16:59:42.434] Early signaling: FALSE
[16:59:42.434] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:42.434] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:42.445] Chunk #1 of 1 ... DONE
[16:59:42.445] Launching 1 futures (chunks) ... DONE
[16:59:42.445] Resolving 1 futures (chunks) ...
[16:59:42.488]  - Number of value chunks collected: 1
[16:59:42.488] Resolving 1 futures (chunks) ... DONE
[16:59:42.488] Reducing values from 1 chunks ...
[16:59:42.488]  - Number of values collected after concatenation: 1
[16:59:42.488]  - Number of values expected: 1
[16:59:42.488] Reducing values from 1 chunks ... DONE
[16:59:42.488] future_lapply() ... DONE
[16:59:42.488] future_lapply() ...
[16:59:42.493] Number of chunks: 1
[16:59:42.493] getGlobalsAndPackagesXApply() ...
[16:59:42.493]  - future.globals: TRUE
[16:59:42.495]  - globals found/used: [n=1] ‘FUN’
[16:59:42.496]  - needed namespaces: [n=0] 
[16:59:42.505] Finding globals ... DONE
[16:59:42.505]  - use_args: TRUE
[16:59:42.505]  - Getting '...' globals ...
[16:59:42.506]    - '...' content: [n=1] ‘what’
[16:59:42.506] List of 1
[16:59:42.506]  $ ...:List of 1
[16:59:42.506]   ..$ what:function (...)  
[16:59:42.506]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.506]  - attr(*, "where")=List of 1
[16:59:42.506]   ..$ ...:<environment: 0x562fbd254eb0> 
[16:59:42.506]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.506]  - attr(*, "resolved")= logi TRUE
[16:59:42.506]  - attr(*, "total_size")= num NA
[16:59:42.509]  - Getting '...' globals ... DONE
[16:59:42.509] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:42.509] List of 2
[16:59:42.509]  $ ...future.FUN:function (what, args, quote = FALSE, envir = parent.frame())  
[16:59:42.509]  $ ...          :List of 1
[16:59:42.509]   ..$ what:function (...)  
[16:59:42.509]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.509]  - attr(*, "where")=List of 2
[16:59:42.509]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:42.509]   ..$ ...          :<environment: 0x562fbd254eb0> 
[16:59:42.509]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.509]  - attr(*, "resolved")= logi FALSE
[16:59:42.509]  - attr(*, "total_size")= num 13352
[16:59:42.512] Packages to be attached in all futures: [n=0] 
[16:59:42.512] getGlobalsAndPackagesXApply() ... DONE
[16:59:42.512] Number of futures (= number of chunks): 1
[16:59:42.512] Launching 1 futures (chunks) ...
[16:59:42.512] Chunk #1 of 1 ...
[16:59:42.512]  - Finding globals in 'X' for chunk #1 ...
[16:59:42.513]    + additional globals found: [n=0] 
[16:59:42.513]    + additional namespaces needed: [n=0] 
[16:59:42.513]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:42.513]  - seeds: <none>
[16:59:42.513]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:42.530] Created future:
[16:59:42.530] MultisessionFuture:
[16:59:42.530] Label: ‘future_lapply-1’
[16:59:42.530] Expression:
[16:59:42.530] {
[16:59:42.530]     do.call(function(...) {
[16:59:42.530]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:42.530]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:42.530]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:42.530]             on.exit(options(oopts), add = TRUE)
[16:59:42.530]         }
[16:59:42.530]         {
[16:59:42.530]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:42.530]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:42.530]                 ...future.FUN(...future.X_jj, ...)
[16:59:42.530]             })
[16:59:42.530]         }
[16:59:42.530]     }, args = future.call.arguments)
[16:59:42.530] }
[16:59:42.530] Lazy evaluation: FALSE
[16:59:42.530] Asynchronous evaluation: TRUE
[16:59:42.530] Local evaluation: TRUE
[16:59:42.530] Environment: R_GlobalEnv
[16:59:42.530] Capture standard output: TRUE
[16:59:42.530] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:42.530] Globals: 5 objects totaling 13.09 KiB (function ‘...future.FUN’ of 11.85 KiB, DotDotDotList ‘future.call.arguments’ of 1.19 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:42.530] Packages: <none>
[16:59:42.530] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:42.530] Resolved: FALSE
[16:59:42.530] Value: <not collected>
[16:59:42.530] Conditions captured: <none>
[16:59:42.530] Early signaling: FALSE
[16:59:42.530] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:42.530] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:42.542] Chunk #1 of 1 ... DONE
[16:59:42.542] Launching 1 futures (chunks) ... DONE
[16:59:42.542] Resolving 1 futures (chunks) ...
[16:59:42.573]  - Number of value chunks collected: 1
[16:59:42.573] Resolving 1 futures (chunks) ... DONE
[16:59:42.574] Reducing values from 1 chunks ...
[16:59:42.574]  - Number of values collected after concatenation: 1
[16:59:42.574]  - Number of values expected: 1
[16:59:42.574] Reducing values from 1 chunks ... DONE
[16:59:42.574] future_lapply() ... DONE
- future_lapply(x, ...) - passing arguments via '...' ...
[16:59:42.574] future_lapply() ...
[16:59:42.578] Number of chunks: 1
[16:59:42.578] getGlobalsAndPackagesXApply() ...
[16:59:42.578]  - future.globals: TRUE
[16:59:42.580]  - globals found/used: [n=1] ‘FUN’
[16:59:42.580]  - needed namespaces: [n=0] 
[16:59:42.580] Finding globals ... DONE
[16:59:42.580]  - use_args: TRUE
[16:59:42.580]  - Getting '...' globals ...
[16:59:42.580]    - '...' content: [n=1] ‘b’
[16:59:42.580] List of 1
[16:59:42.580]  $ ...:List of 1
[16:59:42.580]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:59:42.580]   .. ..$ a: int [1:2] 1 2
[16:59:42.580]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.580]  - attr(*, "where")=List of 1
[16:59:42.580]   ..$ ...:<environment: 0x562fbb23a398> 
[16:59:42.580]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.580]  - attr(*, "resolved")= logi TRUE
[16:59:42.580]  - attr(*, "total_size")= num NA
[16:59:42.584]  - Getting '...' globals ... DONE
[16:59:42.584] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:42.584] List of 2
[16:59:42.584]  $ ...future.FUN:function (a, b)  
[16:59:42.584]  $ ...          :List of 1
[16:59:42.584]   ..$ b:'data.frame':	2 obs. of  1 variable:
[16:59:42.584]   .. ..$ a: int [1:2] 1 2
[16:59:42.584]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.584]  - attr(*, "where")=List of 2
[16:59:42.584]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:42.584]   ..$ ...          :<environment: 0x562fbb23a398> 
[16:59:42.584]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.584]  - attr(*, "resolved")= logi FALSE
[16:59:42.584]  - attr(*, "total_size")= num 1440
[16:59:42.587] Packages to be attached in all futures: [n=0] 
[16:59:42.587] getGlobalsAndPackagesXApply() ... DONE
[16:59:42.588] Number of futures (= number of chunks): 1
[16:59:42.588] Launching 1 futures (chunks) ...
[16:59:42.588] Chunk #1 of 1 ...
[16:59:42.588]  - Finding globals in 'X' for chunk #1 ...
[16:59:42.588]    + additional globals found: [n=0] 
[16:59:42.588]    + additional namespaces needed: [n=0] 
[16:59:42.588]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:42.588]  - seeds: <none>
[16:59:42.589]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:42.605] Created future:
[16:59:42.605] MultisessionFuture:
[16:59:42.605] Label: ‘future_lapply-1’
[16:59:42.605] Expression:
[16:59:42.605] {
[16:59:42.605]     do.call(function(...) {
[16:59:42.605]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:42.605]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:42.605]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:42.605]             on.exit(options(oopts), add = TRUE)
[16:59:42.605]         }
[16:59:42.605]         {
[16:59:42.605]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:42.605]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:42.605]                 ...future.FUN(...future.X_jj, ...)
[16:59:42.605]             })
[16:59:42.605]         }
[16:59:42.605]     }, args = future.call.arguments)
[16:59:42.605] }
[16:59:42.605] Lazy evaluation: FALSE
[16:59:42.605] Asynchronous evaluation: TRUE
[16:59:42.605] Local evaluation: TRUE
[16:59:42.605] Environment: R_GlobalEnv
[16:59:42.605] Capture standard output: TRUE
[16:59:42.605] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:42.605] Globals: 5 objects totaling 1.52 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:42.605] Packages: <none>
[16:59:42.605] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:42.605] Resolved: FALSE
[16:59:42.605] Value: <not collected>
[16:59:42.605] Conditions captured: <none>
[16:59:42.605] Early signaling: FALSE
[16:59:42.605] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:42.605] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:42.617] Chunk #1 of 1 ... DONE
[16:59:42.617] Launching 1 futures (chunks) ... DONE
[16:59:42.617] Resolving 1 futures (chunks) ...
[16:59:42.660]  - Number of value chunks collected: 1
[16:59:42.660] Resolving 1 futures (chunks) ... DONE
[16:59:42.660] Reducing values from 1 chunks ...
[16:59:42.660]  - Number of values collected after concatenation: 1
[16:59:42.660]  - Number of values expected: 1
[16:59:42.660] Reducing values from 1 chunks ... DONE
[16:59:42.660] future_lapply() ... DONE
[16:59:42.660] future_lapply() ...
[16:59:42.664] Number of chunks: 1
[16:59:42.664] getGlobalsAndPackagesXApply() ...
[16:59:42.665]  - future.globals: TRUE
[16:59:42.666]  - globals found/used: [n=1] ‘FUN’
[16:59:42.666]  - needed namespaces: [n=0] 
[16:59:42.666] Finding globals ... DONE
[16:59:42.667]  - use_args: TRUE
[16:59:42.667]  - Getting '...' globals ...
[16:59:42.667]    - '...' content: [n=1] ‘b’
[16:59:42.667] List of 1
[16:59:42.667]  $ ...:List of 1
[16:59:42.667]   ..$ b:<environment: 0x562fbc588650> 
[16:59:42.667]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.667]  - attr(*, "where")=List of 1
[16:59:42.667]   ..$ ...:<environment: 0x562fbc58b9c8> 
[16:59:42.667]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.667]  - attr(*, "resolved")= logi TRUE
[16:59:42.667]  - attr(*, "total_size")= num NA
[16:59:42.670]  - Getting '...' globals ... DONE
[16:59:42.670] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:42.670] List of 2
[16:59:42.670]  $ ...future.FUN:function (a, b)  
[16:59:42.670]  $ ...          :List of 1
[16:59:42.670]   ..$ b:<environment: 0x562fbc588650> 
[16:59:42.670]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.670]  - attr(*, "where")=List of 2
[16:59:42.670]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:42.670]   ..$ ...          :<environment: 0x562fbc58b9c8> 
[16:59:42.670]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.670]  - attr(*, "resolved")= logi FALSE
[16:59:42.670]  - attr(*, "total_size")= num 1440
[16:59:42.675] Packages to be attached in all futures: [n=0] 
[16:59:42.675] getGlobalsAndPackagesXApply() ... DONE
[16:59:42.675] Number of futures (= number of chunks): 1
[16:59:42.675] Launching 1 futures (chunks) ...
[16:59:42.676] Chunk #1 of 1 ...
[16:59:42.676]  - Finding globals in 'X' for chunk #1 ...
[16:59:42.676]    + additional globals found: [n=0] 
[16:59:42.676]    + additional namespaces needed: [n=0] 
[16:59:42.676]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:42.676]  - seeds: <none>
[16:59:42.676]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:42.693] Created future:
[16:59:42.694] MultisessionFuture:
[16:59:42.694] Label: ‘future_lapply-1’
[16:59:42.694] Expression:
[16:59:42.694] {
[16:59:42.694]     do.call(function(...) {
[16:59:42.694]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:42.694]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:42.694]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:42.694]             on.exit(options(oopts), add = TRUE)
[16:59:42.694]         }
[16:59:42.694]         {
[16:59:42.694]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:42.694]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:42.694]                 ...future.FUN(...future.X_jj, ...)
[16:59:42.694]             })
[16:59:42.694]         }
[16:59:42.694]     }, args = future.call.arguments)
[16:59:42.694] }
[16:59:42.694] Lazy evaluation: FALSE
[16:59:42.694] Asynchronous evaluation: TRUE
[16:59:42.694] Local evaluation: TRUE
[16:59:42.694] Environment: R_GlobalEnv
[16:59:42.694] Capture standard output: TRUE
[16:59:42.694] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:42.694] Globals: 5 objects totaling 1.46 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:42.694] Packages: <none>
[16:59:42.694] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:42.694] Resolved: FALSE
[16:59:42.694] Value: <not collected>
[16:59:42.694] Conditions captured: <none>
[16:59:42.694] Early signaling: FALSE
[16:59:42.694] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:42.694] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:42.705] Chunk #1 of 1 ... DONE
[16:59:42.705] Launching 1 futures (chunks) ... DONE
[16:59:42.705] Resolving 1 futures (chunks) ...
[16:59:42.747]  - Number of value chunks collected: 1
[16:59:42.747] Resolving 1 futures (chunks) ... DONE
[16:59:42.747] Reducing values from 1 chunks ...
[16:59:42.748]  - Number of values collected after concatenation: 1
[16:59:42.748]  - Number of values expected: 1
[16:59:42.748] Reducing values from 1 chunks ... DONE
[16:59:42.748] future_lapply() ... DONE
[16:59:42.748] future_lapply() ...
[16:59:42.751] Number of chunks: 1
[16:59:42.752] getGlobalsAndPackagesXApply() ...
[16:59:42.752]  - future.globals: TRUE
[16:59:42.754]  - globals found/used: [n=1] ‘FUN’
[16:59:42.754]  - needed namespaces: [n=0] 
[16:59:42.754] Finding globals ... DONE
[16:59:42.754]  - use_args: TRUE
[16:59:42.754]  - Getting '...' globals ...
[16:59:42.754]    - '...' content: [n=1] ‘b’
[16:59:42.754] List of 1
[16:59:42.754]  $ ...:List of 1
[16:59:42.754]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:59:42.754]   .. .. ..@ slots     :List of 4
[16:59:42.754]   .. .. .. ..$ .Data  : chr "function"
[16:59:42.754]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. ..$ target : chr "signature"
[16:59:42.754]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. ..$ defined: chr "signature"
[16:59:42.754]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. ..$ generic: chr "character"
[16:59:42.754]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. ..@ contains  :List of 3
[16:59:42.754]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.754]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ superClass: chr "function"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.754]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.754]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.754]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.754]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.754]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.754]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.754]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.754]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.754]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.754]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.754]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.754]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.754]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.754]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.754]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.754]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ by        : chr "function"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.754]   .. .. .. .. .. ..@ distance  : num 2
[16:59:42.754]   .. .. ..@ virtual   : logi FALSE
[16:59:42.754]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:59:42.754]  list()
[16:59:42.754]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:59:42.754]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:42.754]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:42.754]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:42.754]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:59:42.754]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:42.754]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:42.754]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:42.754]   .. .. .. .. ..$ generic: chr(0) 
[16:59:42.754]   .. .. ..@ validity  : NULL
[16:59:42.754]   .. .. ..@ access    : list()
[16:59:42.754]   .. .. ..@ className : chr "MethodDefinition"
[16:59:42.754]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. ..@ subclasses:List of 7
[16:59:42.754]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.754]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.754]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.754]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.754]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.754]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.754]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.754]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.754]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.754]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.754]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.754]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.754]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.754]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.754]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.754]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.754]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.754]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.754]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.754]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.754]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.754]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.754]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.754]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.754]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.754]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.754]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.754]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.754]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.754]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.754]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.754]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.754]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.754]   .. .. .. .. .. ..@ distance  : num 2
[16:59:42.754]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.754]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.754]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.754]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.754]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.754]   .. .. .. .. .. ..@ distance  : num 2
[16:59:42.754]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.754]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.754]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.754]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.754]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.754]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:42.754]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.754]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.754]   .. .. .. .. .. ..@ distance  : num 2
[16:59:42.754]   .. .. ..@ versionKey:<externalptr> 
[16:59:42.754]   .. .. ..@ sealed    : logi TRUE
[16:59:42.754]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.754]  - attr(*, "where")=List of 1
[16:59:42.754]   ..$ ...:<environment: 0x562fbba15f10> 
[16:59:42.754]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.754]  - attr(*, "resolved")= logi TRUE
[16:59:42.754]  - attr(*, "total_size")= num NA
[16:59:42.801]  - Getting '...' globals ... DONE
[16:59:42.801] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:42.801] List of 2
[16:59:42.801]  $ ...future.FUN:function (a, b)  
[16:59:42.801]  $ ...          :List of 1
[16:59:42.801]   ..$ b:Formal class 'classRepresentation' [package "methods"] with 11 slots
[16:59:42.801]   .. .. ..@ slots     :List of 4
[16:59:42.801]   .. .. .. ..$ .Data  : chr "function"
[16:59:42.801]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. ..$ target : chr "signature"
[16:59:42.801]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. ..$ defined: chr "signature"
[16:59:42.801]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. ..$ generic: chr "character"
[16:59:42.801]   .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. ..@ contains  :List of 3
[16:59:42.801]   .. .. .. ..$ function        :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.801]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ superClass: chr "function"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.801]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.801]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.801]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.801]   .. .. .. .. .. ..@ dataPart  : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.801]   .. .. .. ..$ PossibleMethod  :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.801]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ superClass: chr "PossibleMethod"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.801]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.801]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.801]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.801]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.801]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.801]   .. .. .. ..$ OptionalFunction:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.801]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ superClass: chr "OptionalFunction"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.801]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.801]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.801]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ by        : chr "function"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.801]   .. .. .. .. .. ..@ distance  : num 2
[16:59:42.801]   .. .. ..@ virtual   : logi FALSE
[16:59:42.801]   .. .. ..@ prototype :Formal class 'function' [package ""] with 0 slots
[16:59:42.801]  list()
[16:59:42.801]   .. .. .. .. ..$ target :Formal class 'signature' [package "methods"] with 3 slots
[16:59:42.801]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:42.801]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:42.801]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:42.801]   .. .. .. .. ..$ defined:Formal class 'signature' [package "methods"] with 3 slots
[16:59:42.801]   .. .. .. .. .. .. ..@ .Data  : chr(0) 
[16:59:42.801]   .. .. .. .. .. .. ..@ names  : chr(0) 
[16:59:42.801]   .. .. .. .. .. .. ..@ package: chr(0) 
[16:59:42.801]   .. .. .. .. ..$ generic: chr(0) 
[16:59:42.801]   .. .. ..@ validity  : NULL
[16:59:42.801]   .. .. ..@ access    : list()
[16:59:42.801]   .. .. ..@ className : chr "MethodDefinition"
[16:59:42.801]   .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. ..@ subclasses:List of 7
[16:59:42.801]   .. .. .. ..$ derivedDefaultMethod         :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.801]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethod"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.801]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.801]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.801]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.801]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.801]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.801]   .. .. .. ..$ MethodWithNext               :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.801]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNext"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.801]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.801]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.801]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.801]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.801]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.801]   .. .. .. ..$ SealedMethodDefinition       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.801]   .. .. .. .. .. ..@ subClass  : chr "SealedMethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.801]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.801]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.801]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.801]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.801]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.801]   .. .. .. ..$ MethodDefinitionWithTrace    :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.801]   .. .. .. .. .. ..@ subClass  : chr "MethodDefinitionWithTrace"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.801]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.801]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.801]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ by        : chr(0) 
[16:59:42.801]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.801]   .. .. .. .. .. ..@ distance  : num 1
[16:59:42.801]   .. .. .. ..$ internalDispatchMethod       :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.801]   .. .. .. .. .. ..@ subClass  : chr "internalDispatchMethod"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.801]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.801]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.801]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.801]   .. .. .. .. .. ..@ distance  : num 2
[16:59:42.801]   .. .. .. ..$ MethodWithNextWithTrace      :Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.801]   .. .. .. .. .. ..@ subClass  : chr "MethodWithNextWithTrace"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.801]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.801]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.801]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ by        : chr "MethodWithNext"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.801]   .. .. .. .. .. ..@ distance  : num 2
[16:59:42.801]   .. .. .. ..$ derivedDefaultMethodWithTrace:Formal class 'SClassExtension' [package "methods"] with 10 slots
[16:59:42.801]   .. .. .. .. .. ..@ subClass  : chr "derivedDefaultMethodWithTrace"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ superClass: chr "MethodDefinition"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ package   : chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ coerce    :function (from, strict = TRUE)  
[16:59:42.801]   .. .. .. .. .. ..@ test      :function (object)  
[16:59:42.801]   .. .. .. .. .. ..@ replace   :function (from, to, value)  
[16:59:42.801]   .. .. .. .. .. ..@ simple    : logi TRUE
[16:59:42.801]   .. .. .. .. .. ..@ by        : chr "derivedDefaultMethod"
[16:59:42.801]   .. .. .. .. .. .. ..- attr(*, "package")= chr "methods"
[16:59:42.801]   .. .. .. .. .. ..@ dataPart  : logi FALSE
[16:59:42.801]   .. .. .. .. .. ..@ distance  : num 2
[16:59:42.801]   .. .. ..@ versionKey:<externalptr> 
[16:59:42.801]   .. .. ..@ sealed    : logi TRUE
[16:59:42.801]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.801]  - attr(*, "where")=List of 2
[16:59:42.801]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:42.801]   ..$ ...          :<environment: 0x562fbba15f10> 
[16:59:42.801]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.801]  - attr(*, "resolved")= logi FALSE
[16:59:42.801]  - attr(*, "total_size")= num 405168
[16:59:42.846] Packages to be attached in all futures: [n=0] 
[16:59:42.846] getGlobalsAndPackagesXApply() ... DONE
[16:59:42.847] Number of futures (= number of chunks): 1
[16:59:42.847] Launching 1 futures (chunks) ...
[16:59:42.847] Chunk #1 of 1 ...
[16:59:42.847]  - Finding globals in 'X' for chunk #1 ...
[16:59:42.847]    + additional globals found: [n=0] 
[16:59:42.847]    + additional namespaces needed: [n=0] 
[16:59:42.847]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:42.848]  - seeds: <none>
[16:59:42.848]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:42.909] Created future:
[16:59:42.909] MultisessionFuture:
[16:59:42.909] Label: ‘future_lapply-1’
[16:59:42.909] Expression:
[16:59:42.909] {
[16:59:42.909]     do.call(function(...) {
[16:59:42.909]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:42.909]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:42.909]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:42.909]             on.exit(options(oopts), add = TRUE)
[16:59:42.909]         }
[16:59:42.909]         {
[16:59:42.909]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:42.909]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:42.909]                 ...future.FUN(...future.X_jj, ...)
[16:59:42.909]             })
[16:59:42.909]         }
[16:59:42.909]     }, args = future.call.arguments)
[16:59:42.909] }
[16:59:42.909] Lazy evaluation: FALSE
[16:59:42.909] Asynchronous evaluation: TRUE
[16:59:42.909] Local evaluation: TRUE
[16:59:42.909] Environment: R_GlobalEnv
[16:59:42.909] Capture standard output: TRUE
[16:59:42.909] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:42.909] Globals: 5 objects totaling 395.73 KiB (function ‘...future.FUN’ of 1.41 KiB, DotDotDotList ‘future.call.arguments’ of 394.27 KiB, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:42.909] Packages: <none>
[16:59:42.909] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:42.909] Resolved: FALSE
[16:59:42.909] Value: <not collected>
[16:59:42.909] Conditions captured: <none>
[16:59:42.909] Early signaling: FALSE
[16:59:42.909] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:42.909] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:42.921] Chunk #1 of 1 ... DONE
[16:59:42.921] Launching 1 futures (chunks) ... DONE
[16:59:42.921] Resolving 1 futures (chunks) ...
[16:59:42.963]  - Number of value chunks collected: 1
[16:59:42.963] Resolving 1 futures (chunks) ... DONE
[16:59:42.963] Reducing values from 1 chunks ...
[16:59:42.964]  - Number of values collected after concatenation: 1
[16:59:42.964]  - Number of values expected: 1
[16:59:42.964] Reducing values from 1 chunks ... DONE
[16:59:42.964] future_lapply() ... DONE
- future_lapply(X, ...) - 'X' containing globals ...
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
[16:59:42.966] future_lapply() ...
[16:59:42.970] Number of chunks: 2
[16:59:42.970] getGlobalsAndPackagesXApply() ...
[16:59:42.970]  - future.globals: TRUE
[16:59:42.973]  - globals found/used: [n=1] ‘FUN’
[16:59:42.973]  - needed namespaces: [n=0] 
[16:59:42.974] Finding globals ... DONE
[16:59:42.974]  - use_args: TRUE
[16:59:42.974]  - Getting '...' globals ...
[16:59:42.974]    - '...' content: [n=0] 
[16:59:42.974] List of 1
[16:59:42.974]  $ ...: list()
[16:59:42.974]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.974]  - attr(*, "where")=List of 1
[16:59:42.974]   ..$ ...:<environment: 0x562fbcb1e6d0> 
[16:59:42.974]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.974]  - attr(*, "resolved")= logi TRUE
[16:59:42.974]  - attr(*, "total_size")= num NA
[16:59:42.977]  - Getting '...' globals ... DONE
[16:59:42.977] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:42.977] List of 2
[16:59:42.977]  $ ...future.FUN:function (f)  
[16:59:42.977]  $ ...          : list()
[16:59:42.977]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:42.977]  - attr(*, "where")=List of 2
[16:59:42.977]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:42.977]   ..$ ...          :<environment: 0x562fbcb1e6d0> 
[16:59:42.977]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:42.977]  - attr(*, "resolved")= logi FALSE
[16:59:42.977]  - attr(*, "total_size")= num 1008
[16:59:42.979] Packages to be attached in all futures: [n=0] 
[16:59:42.980] getGlobalsAndPackagesXApply() ... DONE
[16:59:42.980] Number of futures (= number of chunks): 2
[16:59:42.980] Launching 2 futures (chunks) ...
[16:59:42.980] Chunk #1 of 2 ...
[16:59:42.980]  - Finding globals in 'X' for chunk #1 ...
[16:59:42.981]    + additional globals found: [n=2] ‘a’, ‘b’
[16:59:42.982]    + additional namespaces needed: [n=0] 
[16:59:42.982]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:42.982]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:42.982]  - seeds: <none>
[16:59:42.982]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:59:43.000] Created future:
[16:59:43.000] MultisessionFuture:
[16:59:43.000] Label: ‘future_lapply-1’
[16:59:43.000] Expression:
[16:59:43.000] {
[16:59:43.000]     do.call(function(...) {
[16:59:43.000]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.000]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.000]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.000]             on.exit(options(oopts), add = TRUE)
[16:59:43.000]         }
[16:59:43.000]         {
[16:59:43.000]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.000]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.000]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.000]             })
[16:59:43.000]         }
[16:59:43.000]     }, args = future.call.arguments)
[16:59:43.000] }
[16:59:43.000] Lazy evaluation: FALSE
[16:59:43.000] Asynchronous evaluation: TRUE
[16:59:43.000] Local evaluation: TRUE
[16:59:43.000] Environment: R_GlobalEnv
[16:59:43.000] Capture standard output: TRUE
[16:59:43.000] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.000] Globals: 7 objects totaling 3.48 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:59:43.000] Packages: <none>
[16:59:43.000] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.000] Resolved: FALSE
[16:59:43.000] Value: <not collected>
[16:59:43.000] Conditions captured: <none>
[16:59:43.000] Early signaling: FALSE
[16:59:43.000] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.000] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.011] Chunk #1 of 2 ... DONE
[16:59:43.012] Chunk #2 of 2 ...
[16:59:43.012]  - Finding globals in 'X' for chunk #2 ...
[16:59:43.013]    + additional globals found: [n=2] ‘a’, ‘b’
[16:59:43.014]    + additional namespaces needed: [n=1] ‘tools’
[16:59:43.014]  - Finding globals in 'X' for chunk #2 ... DONE
[16:59:43.014]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:43.014]  - seeds: <none>
[16:59:43.014]  - All globals exported: [n=7] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’, ‘a’, ‘b’
[16:59:43.032] Created future:
[16:59:43.032] MultisessionFuture:
[16:59:43.032] Label: ‘future_lapply-2’
[16:59:43.032] Expression:
[16:59:43.032] {
[16:59:43.032]     do.call(function(...) {
[16:59:43.032]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.032]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.032]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.032]             on.exit(options(oopts), add = TRUE)
[16:59:43.032]         }
[16:59:43.032]         {
[16:59:43.032]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.032]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.032]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.032]             })
[16:59:43.032]         }
[16:59:43.032]     }, args = future.call.arguments)
[16:59:43.032] }
[16:59:43.032] Lazy evaluation: FALSE
[16:59:43.032] Asynchronous evaluation: TRUE
[16:59:43.032] Local evaluation: TRUE
[16:59:43.032] Environment: R_GlobalEnv
[16:59:43.032] Capture standard output: TRUE
[16:59:43.032] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.032] Globals: 7 objects totaling 5.11 KiB (function ‘...future.FUN’ of 0.98 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.02 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes, ...)
[16:59:43.032] Packages: 1 packages (‘tools’)
[16:59:43.032] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.032] Resolved: FALSE
[16:59:43.032] Value: <not collected>
[16:59:43.032] Conditions captured: <none>
[16:59:43.032] Early signaling: FALSE
[16:59:43.032] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.032] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.044] Chunk #2 of 2 ... DONE
[16:59:43.044] Launching 2 futures (chunks) ... DONE
[16:59:43.044] Resolving 2 futures (chunks) ...
[16:59:43.088]  - Number of value chunks collected: 2
[16:59:43.088] Resolving 2 futures (chunks) ... DONE
[16:59:43.088] Reducing values from 2 chunks ...
[16:59:43.088]  - Number of values collected after concatenation: 4
[16:59:43.088]  - Number of values expected: 4
[16:59:43.088] Reducing values from 2 chunks ... DONE
[16:59:43.088] future_lapply() ... DONE
List of 4
 $ : num 84
 $ : num 10.5
 $ : num 63
 $ : int 11
- future_lapply(x, ...) - passing '...' as a global ...
List of 1
 $ z0:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
[16:59:43.091] future_lapply() ...
[16:59:43.095] Number of chunks: 1
[16:59:43.095] getGlobalsAndPackagesXApply() ...
[16:59:43.095]  - future.globals: TRUE
[16:59:43.097]  - globals found/used: [n=2] ‘FUN’, ‘future.call.arguments’
[16:59:43.097]  - needed namespaces: [n=0] 
[16:59:43.097] Finding globals ... DONE
[16:59:43.098]  - use_args: TRUE
[16:59:43.098]  - Getting '...' globals ...
[16:59:43.098]    - '...' content: [n=0] 
[16:59:43.098] List of 1
[16:59:43.098]  $ ...: list()
[16:59:43.098]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.098]  - attr(*, "where")=List of 1
[16:59:43.098]   ..$ ...:<environment: 0x562fbd0ba498> 
[16:59:43.098]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.098]  - attr(*, "resolved")= logi TRUE
[16:59:43.098]  - attr(*, "total_size")= num NA
[16:59:43.101]  - Getting '...' globals ... DONE
[16:59:43.101] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘future.call.arguments’, ‘...’
[16:59:43.101] List of 3
[16:59:43.101]  $ ...future.FUN        :function (x)  
[16:59:43.101]  $ future.call.arguments:List of 1
[16:59:43.101]   ..$ a: num 1
[16:59:43.101]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.101]  $ ...                  : list()
[16:59:43.101]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.101]  - attr(*, "where")=List of 3
[16:59:43.101]   ..$ ...future.FUN        :<environment: R_EmptyEnv> 
[16:59:43.101]   ..$ future.call.arguments:<environment: R_EmptyEnv> 
[16:59:43.101]   ..$ ...                  :<environment: 0x562fbd0ba498> 
[16:59:43.101]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.101]  - attr(*, "resolved")= logi FALSE
[16:59:43.101]  - attr(*, "total_size")= num 1272
[16:59:43.104] Packages to be attached in all futures: [n=0] 
[16:59:43.104] getGlobalsAndPackagesXApply() ... DONE
[16:59:43.105] Number of futures (= number of chunks): 1
[16:59:43.105] Launching 1 futures (chunks) ...
[16:59:43.105] Chunk #1 of 1 ...
[16:59:43.105]  - Finding globals in 'X' for chunk #1 ...
[16:59:43.105]    + additional globals found: [n=0] 
[16:59:43.105]    + additional namespaces needed: [n=0] 
[16:59:43.105]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:43.106]  - seeds: <none>
[16:59:43.106]  - All globals exported: [n=6] ‘...future.FUN’, ‘future.call.arguments’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.129] Created future:
[16:59:43.129] MultisessionFuture:
[16:59:43.129] Label: ‘future_lapply-1’
[16:59:43.129] Expression:
[16:59:43.129] {
[16:59:43.129]     do.call(function(...) {
[16:59:43.129]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.129]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.129]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.129]             on.exit(options(oopts), add = TRUE)
[16:59:43.129]         }
[16:59:43.129]         {
[16:59:43.129]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.129]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.129]                 ...future.FUN(...future.X_jj)
[16:59:43.129]             })
[16:59:43.129]         }
[16:59:43.129]     }, args = future.call.arguments)
[16:59:43.129] }
[16:59:43.129] Lazy evaluation: FALSE
[16:59:43.129] Asynchronous evaluation: TRUE
[16:59:43.129] Local evaluation: TRUE
[16:59:43.129] Environment: 0x562fbd0ba818
[16:59:43.129] Capture standard output: TRUE
[16:59:43.129] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.129] Globals: 5 objects totaling 1.30 KiB (function ‘...future.FUN’ of 1.19 KiB, DotDotDotList ‘future.call.arguments’ of 56 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:43.129] Packages: <none>
[16:59:43.129] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.129] Resolved: FALSE
[16:59:43.129] Value: <not collected>
[16:59:43.129] Conditions captured: <none>
[16:59:43.129] Early signaling: FALSE
[16:59:43.129] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.129] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.141] Chunk #1 of 1 ... DONE
[16:59:43.141] Launching 1 futures (chunks) ... DONE
[16:59:43.141] Resolving 1 futures (chunks) ...
[16:59:43.183]  - Number of value chunks collected: 1
[16:59:43.183] Resolving 1 futures (chunks) ... DONE
[16:59:43.183] Reducing values from 1 chunks ...
[16:59:43.183]  - Number of values collected after concatenation: 1
[16:59:43.183]  - Number of values expected: 1
[16:59:43.184] Reducing values from 1 chunks ... DONE
[16:59:43.184] future_lapply() ... DONE
List of 1
 $ z1:List of 1
  ..$ :List of 1
  .. ..$ a: num 1
- future_lapply(X, ...) - '{ a <- a + 1; a }' ...
[16:59:43.185] future_lapply() ...
[16:59:43.189] Number of chunks: 1
[16:59:43.189] getGlobalsAndPackagesXApply() ...
[16:59:43.189]  - future.globals: TRUE
[16:59:43.191]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:59:43.192]  - needed namespaces: [n=0] 
[16:59:43.192] Finding globals ... DONE
[16:59:43.192]  - use_args: TRUE
[16:59:43.192]  - Getting '...' globals ...
[16:59:43.192]    - '...' content: [n=0] 
[16:59:43.192] List of 1
[16:59:43.192]  $ ...: list()
[16:59:43.192]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.192]  - attr(*, "where")=List of 1
[16:59:43.192]   ..$ ...:<environment: 0x562fbbd71ca0> 
[16:59:43.192]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.192]  - attr(*, "resolved")= logi TRUE
[16:59:43.192]  - attr(*, "total_size")= num NA
[16:59:43.195]  - Getting '...' globals ... DONE
[16:59:43.195] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:59:43.195] List of 3
[16:59:43.195]  $ ...future.FUN:function (ii)  
[16:59:43.195]  $ a            : num 1
[16:59:43.195]  $ ...          : list()
[16:59:43.195]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.195]  - attr(*, "where")=List of 3
[16:59:43.195]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:43.195]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:43.195]   ..$ ...          :<environment: 0x562fbbd71ca0> 
[16:59:43.195]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.195]  - attr(*, "resolved")= logi FALSE
[16:59:43.195]  - attr(*, "total_size")= num 2984
[16:59:43.198] Packages to be attached in all futures: [n=0] 
[16:59:43.198] getGlobalsAndPackagesXApply() ... DONE
[16:59:43.198] Number of futures (= number of chunks): 1
[16:59:43.198] Launching 1 futures (chunks) ...
[16:59:43.198] Chunk #1 of 1 ...
[16:59:43.199]  - Finding globals in 'X' for chunk #1 ...
[16:59:43.199]    + additional globals found: [n=0] 
[16:59:43.199]    + additional namespaces needed: [n=0] 
[16:59:43.199]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:43.199]  - seeds: <none>
[16:59:43.199]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.217] Created future:
[16:59:43.217] MultisessionFuture:
[16:59:43.217] Label: ‘future_lapply-1’
[16:59:43.217] Expression:
[16:59:43.217] {
[16:59:43.217]     do.call(function(...) {
[16:59:43.217]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.217]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.217]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.217]             on.exit(options(oopts), add = TRUE)
[16:59:43.217]         }
[16:59:43.217]         {
[16:59:43.217]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.217]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.217]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.217]             })
[16:59:43.217]         }
[16:59:43.217]     }, args = future.call.arguments)
[16:59:43.217] }
[16:59:43.217] Lazy evaluation: FALSE
[16:59:43.217] Asynchronous evaluation: TRUE
[16:59:43.217] Local evaluation: TRUE
[16:59:43.217] Environment: R_GlobalEnv
[16:59:43.217] Capture standard output: TRUE
[16:59:43.217] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.217] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:59:43.217] Packages: <none>
[16:59:43.217] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.217] Resolved: FALSE
[16:59:43.217] Value: <not collected>
[16:59:43.217] Conditions captured: <none>
[16:59:43.217] Early signaling: FALSE
[16:59:43.217] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.217] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.228] Chunk #1 of 1 ... DONE
[16:59:43.229] Launching 1 futures (chunks) ... DONE
[16:59:43.229] Resolving 1 futures (chunks) ...
[16:59:43.271]  - Number of value chunks collected: 1
[16:59:43.271] Resolving 1 futures (chunks) ... DONE
[16:59:43.271] Reducing values from 1 chunks ...
[16:59:43.271]  - Number of values collected after concatenation: 1
[16:59:43.271]  - Number of values expected: 1
[16:59:43.272] Reducing values from 1 chunks ... DONE
[16:59:43.272] future_lapply() ... DONE
- future_lapply(X, ...) - '{ a; a <- a + 1 }' ...
[16:59:43.272] future_lapply() ...
[16:59:43.276] Number of chunks: 1
[16:59:43.276] getGlobalsAndPackagesXApply() ...
[16:59:43.276]  - future.globals: TRUE
[16:59:43.278]  - globals found/used: [n=2] ‘FUN’, ‘a’
[16:59:43.278]  - needed namespaces: [n=0] 
[16:59:43.279] Finding globals ... DONE
[16:59:43.279]  - use_args: TRUE
[16:59:43.279]  - Getting '...' globals ...
[16:59:43.279]    - '...' content: [n=0] 
[16:59:43.279] List of 1
[16:59:43.279]  $ ...: list()
[16:59:43.279]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.279]  - attr(*, "where")=List of 1
[16:59:43.279]   ..$ ...:<environment: 0x562fbba53ac8> 
[16:59:43.279]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.279]  - attr(*, "resolved")= logi TRUE
[16:59:43.279]  - attr(*, "total_size")= num NA
[16:59:43.282]  - Getting '...' globals ... DONE
[16:59:43.282] Globals to be used in all futures (chunks): [n=3] ‘...future.FUN’, ‘a’, ‘...’
[16:59:43.282] List of 3
[16:59:43.282]  $ ...future.FUN:function (ii)  
[16:59:43.282]  $ a            : num 1
[16:59:43.282]  $ ...          : list()
[16:59:43.282]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.282]  - attr(*, "where")=List of 3
[16:59:43.282]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:43.282]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:43.282]   ..$ ...          :<environment: 0x562fbba53ac8> 
[16:59:43.282]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.282]  - attr(*, "resolved")= logi FALSE
[16:59:43.282]  - attr(*, "total_size")= num 2984
[16:59:43.285] Packages to be attached in all futures: [n=0] 
[16:59:43.285] getGlobalsAndPackagesXApply() ... DONE
[16:59:43.285] Number of futures (= number of chunks): 1
[16:59:43.285] Launching 1 futures (chunks) ...
[16:59:43.285] Chunk #1 of 1 ...
[16:59:43.286]  - Finding globals in 'X' for chunk #1 ...
[16:59:43.286]    + additional globals found: [n=0] 
[16:59:43.286]    + additional namespaces needed: [n=0] 
[16:59:43.286]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:43.286]  - seeds: <none>
[16:59:43.286]  - All globals exported: [n=6] ‘...future.FUN’, ‘a’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.303] Created future:
[16:59:43.303] MultisessionFuture:
[16:59:43.303] Label: ‘future_lapply-1’
[16:59:43.303] Expression:
[16:59:43.303] {
[16:59:43.303]     do.call(function(...) {
[16:59:43.303]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.303]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.303]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.303]             on.exit(options(oopts), add = TRUE)
[16:59:43.303]         }
[16:59:43.303]         {
[16:59:43.303]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.303]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.303]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.303]             })
[16:59:43.303]         }
[16:59:43.303]     }, args = future.call.arguments)
[16:59:43.303] }
[16:59:43.303] Lazy evaluation: FALSE
[16:59:43.303] Asynchronous evaluation: TRUE
[16:59:43.303] Local evaluation: TRUE
[16:59:43.303] Environment: R_GlobalEnv
[16:59:43.303] Capture standard output: TRUE
[16:59:43.303] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.303] Globals: 6 objects totaling 2.97 KiB (function ‘...future.FUN’ of 2.86 KiB, numeric ‘a’ of 56 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:59:43.303] Packages: <none>
[16:59:43.303] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.303] Resolved: FALSE
[16:59:43.303] Value: <not collected>
[16:59:43.303] Conditions captured: <none>
[16:59:43.303] Early signaling: FALSE
[16:59:43.303] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.303] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.317] Chunk #1 of 1 ... DONE
[16:59:43.317] Launching 1 futures (chunks) ... DONE
[16:59:43.317] Resolving 1 futures (chunks) ...
[16:59:43.345]  - Number of value chunks collected: 1
[16:59:43.346] Resolving 1 futures (chunks) ... DONE
[16:59:43.346] Reducing values from 1 chunks ...
[16:59:43.346]  - Number of values collected after concatenation: 1
[16:59:43.346]  - Number of values expected: 1
[16:59:43.346] Reducing values from 1 chunks ... DONE
[16:59:43.346] future_lapply() ... DONE
- future_lapply(..., future.globals = <list>) ...
[16:59:43.346] future_lapply() ...
[16:59:43.350] Number of chunks: 1
[16:59:43.350] getGlobalsAndPackagesXApply() ...
[16:59:43.350]  - future.globals: <name-value list> with names ‘42’
[16:59:43.350]  - use_args: TRUE
[16:59:43.350]  - Getting '...' globals ...
[16:59:43.351]    - '...' content: [n=0] 
[16:59:43.351] List of 1
[16:59:43.351]  $ ...: list()
[16:59:43.351]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.351]  - attr(*, "where")=List of 1
[16:59:43.351]   ..$ ...:<environment: 0x562fbc3d6af0> 
[16:59:43.351]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.351]  - attr(*, "resolved")= logi TRUE
[16:59:43.351]  - attr(*, "total_size")= num NA
[16:59:43.353]  - Getting '...' globals ... DONE
[16:59:43.353] Globals to be used in all futures (chunks): [n=3] ‘a’, ‘...future.FUN’, ‘...’
[16:59:43.354] List of 3
[16:59:43.354]  $ a            : num 42
[16:59:43.354]  $ ...future.FUN:function (x)  
[16:59:43.354]  $ ...          : list()
[16:59:43.354]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.354]  - attr(*, "where")=List of 3
[16:59:43.354]   ..$ a            :<environment: R_EmptyEnv> 
[16:59:43.354]   ..$ ...future.FUN:<environment: R_GlobalEnv> 
[16:59:43.354]   ..$ ...          :<environment: 0x562fbc3d6af0> 
[16:59:43.354]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.354]  - attr(*, "resolved")= logi FALSE
[16:59:43.354]  - attr(*, "total_size")= num NA
[16:59:43.357] Packages to be attached in all futures: [n=0] 
[16:59:43.357] getGlobalsAndPackagesXApply() ... DONE
[16:59:43.357] Number of futures (= number of chunks): 1
[16:59:43.357] Launching 1 futures (chunks) ...
[16:59:43.357] Chunk #1 of 1 ...
[16:59:43.357]  - seeds: <none>
[16:59:43.357]  - All globals exported: [n=6] ‘a’, ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.375] Created future:
[16:59:43.375] MultisessionFuture:
[16:59:43.375] Label: ‘future_lapply-1’
[16:59:43.375] Expression:
[16:59:43.375] {
[16:59:43.375]     do.call(function(...) {
[16:59:43.375]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.375]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.375]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.375]             on.exit(options(oopts), add = TRUE)
[16:59:43.375]         }
[16:59:43.375]         {
[16:59:43.375]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.375]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.375]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.375]             })
[16:59:43.375]         }
[16:59:43.375]     }, args = future.call.arguments)
[16:59:43.375] }
[16:59:43.375] Lazy evaluation: FALSE
[16:59:43.375] Asynchronous evaluation: TRUE
[16:59:43.375] Local evaluation: TRUE
[16:59:43.375] Environment: R_GlobalEnv
[16:59:43.375] Capture standard output: TRUE
[16:59:43.375] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.375] Globals: 6 objects totaling 1.45 KiB (numeric ‘a’ of 56 bytes, function ‘...future.FUN’ of 1.34 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, ...)
[16:59:43.375] Packages: <none>
[16:59:43.375] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.375] Resolved: FALSE
[16:59:43.375] Value: <not collected>
[16:59:43.375] Conditions captured: <none>
[16:59:43.375] Early signaling: FALSE
[16:59:43.375] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.375] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.387] Chunk #1 of 1 ... DONE
[16:59:43.387] Launching 1 futures (chunks) ... DONE
[16:59:43.387] Resolving 1 futures (chunks) ...
[16:59:43.417]  - Number of value chunks collected: 1
[16:59:43.418] Resolving 1 futures (chunks) ... DONE
[16:59:43.418] Reducing values from 1 chunks ...
[16:59:43.418]  - Number of values collected after concatenation: 1
[16:59:43.418]  - Number of values expected: 1
[16:59:43.418] Reducing values from 1 chunks ... DONE
[16:59:43.418] future_lapply() ... DONE
List of 1
 $ : num 42
> 
> message("*** future_lapply() - tricky globals ... DONE")
*** future_lapply() - tricky globals ... DONE
> 
> 
> message("*** future_lapply() - missing arguments ...")
*** future_lapply() - missing arguments ...
> 
> ## Here 'abc' becomes missing, i.e. missing(abc) is TRUE
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2)
[16:59:43.419] future_lapply() ...
[16:59:43.423] Number of chunks: 2
[16:59:43.423] getGlobalsAndPackagesXApply() ...
[16:59:43.423]  - future.globals: TRUE
[16:59:43.424]  - globals found/used: [n=1] ‘FUN’
[16:59:43.425]  - needed namespaces: [n=0] 
[16:59:43.425] Finding globals ... DONE
[16:59:43.425]  - use_args: TRUE
[16:59:43.425]  - Getting '...' globals ...
[16:59:43.425]    - '...' content: [n=0] 
[16:59:43.425] List of 1
[16:59:43.425]  $ ...: list()
[16:59:43.425]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.425]  - attr(*, "where")=List of 1
[16:59:43.425]   ..$ ...:<environment: 0x562fba277220> 
[16:59:43.425]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.425]  - attr(*, "resolved")= logi TRUE
[16:59:43.425]  - attr(*, "total_size")= num NA
[16:59:43.428]  - Getting '...' globals ... DONE
[16:59:43.428] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:43.428] List of 2
[16:59:43.428]  $ ...future.FUN:function (y)  
[16:59:43.428]  $ ...          : list()
[16:59:43.428]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.428]  - attr(*, "where")=List of 2
[16:59:43.428]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:43.428]   ..$ ...          :<environment: 0x562fba277220> 
[16:59:43.428]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.428]  - attr(*, "resolved")= logi FALSE
[16:59:43.428]  - attr(*, "total_size")= num 280
[16:59:43.431] Packages to be attached in all futures: [n=0] 
[16:59:43.431] getGlobalsAndPackagesXApply() ... DONE
[16:59:43.431] Number of futures (= number of chunks): 2
[16:59:43.431] Launching 2 futures (chunks) ...
[16:59:43.431] Chunk #1 of 2 ...
[16:59:43.431]  - Finding globals in 'X' for chunk #1 ...
[16:59:43.432]    + additional globals found: [n=0] 
[16:59:43.432]    + additional namespaces needed: [n=0] 
[16:59:43.432]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:43.432]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:43.432]  - seeds: <none>
[16:59:43.432]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.449] Created future:
[16:59:43.449] MultisessionFuture:
[16:59:43.449] Label: ‘future_lapply-1’
[16:59:43.449] Expression:
[16:59:43.449] {
[16:59:43.449]     do.call(function(...) {
[16:59:43.449]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.449]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.449]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.449]             on.exit(options(oopts), add = TRUE)
[16:59:43.449]         }
[16:59:43.449]         {
[16:59:43.449]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.449]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.449]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.449]             })
[16:59:43.449]         }
[16:59:43.449]     }, args = future.call.arguments)
[16:59:43.449] }
[16:59:43.449] Lazy evaluation: FALSE
[16:59:43.449] Asynchronous evaluation: TRUE
[16:59:43.449] Local evaluation: TRUE
[16:59:43.449] Environment: 0x562fba276dc0
[16:59:43.449] Capture standard output: TRUE
[16:59:43.449] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.449] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:43.449] Packages: <none>
[16:59:43.449] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.449] Resolved: FALSE
[16:59:43.449] Value: <not collected>
[16:59:43.449] Conditions captured: <none>
[16:59:43.449] Early signaling: FALSE
[16:59:43.449] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.449] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.461] Chunk #1 of 2 ... DONE
[16:59:43.461] Chunk #2 of 2 ...
[16:59:43.461]  - Finding globals in 'X' for chunk #2 ...
[16:59:43.462]    + additional globals found: [n=0] 
[16:59:43.462]    + additional namespaces needed: [n=0] 
[16:59:43.462]  - Finding globals in 'X' for chunk #2 ... DONE
[16:59:43.462]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:43.462]  - seeds: <none>
[16:59:43.462]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.479] Created future:
[16:59:43.479] MultisessionFuture:
[16:59:43.479] Label: ‘future_lapply-2’
[16:59:43.479] Expression:
[16:59:43.479] {
[16:59:43.479]     do.call(function(...) {
[16:59:43.479]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.479]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.479]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.479]             on.exit(options(oopts), add = TRUE)
[16:59:43.479]         }
[16:59:43.479]         {
[16:59:43.479]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.479]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.479]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.479]             })
[16:59:43.479]         }
[16:59:43.479]     }, args = future.call.arguments)
[16:59:43.479] }
[16:59:43.479] Lazy evaluation: FALSE
[16:59:43.479] Asynchronous evaluation: TRUE
[16:59:43.479] Local evaluation: TRUE
[16:59:43.479] Environment: 0x562fba276dc0
[16:59:43.479] Capture standard output: TRUE
[16:59:43.479] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.479] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:43.479] Packages: <none>
[16:59:43.479] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.479] Resolved: FALSE
[16:59:43.479] Value: <not collected>
[16:59:43.479] Conditions captured: <none>
[16:59:43.479] Early signaling: FALSE
[16:59:43.479] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.479] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.490] Chunk #2 of 2 ... DONE
[16:59:43.491] Launching 2 futures (chunks) ... DONE
[16:59:43.491] Resolving 2 futures (chunks) ...
[16:59:43.521]  - Number of value chunks collected: 2
[16:59:43.521] Resolving 2 futures (chunks) ... DONE
[16:59:43.522] Reducing values from 2 chunks ...
[16:59:43.522]  - Number of values collected after concatenation: 2
[16:59:43.522]  - Number of values expected: 2
[16:59:43.522] Reducing values from 2 chunks ... DONE
[16:59:43.522] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - missing arguments ... DONE")
*** future_lapply() - missing arguments ... DONE
> 
> 
> message("*** future_lapply() - false positives ...")
*** future_lapply() - false positives ...
> 
> ## Here 'abc' becomes a promise, which fails to resolve
> ## iff 'xyz' does not exist. (Issue #161)
> suppressWarnings(rm(list = "xyz"))
> foo <- function(x, abc) future_lapply(x, FUN = function(y) y)
> y <- foo(1:2, abc = (xyz >= 3.14))
[16:59:43.522] future_lapply() ...
[16:59:43.526] Number of chunks: 2
[16:59:43.526] getGlobalsAndPackagesXApply() ...
[16:59:43.527]  - future.globals: TRUE
[16:59:43.528]  - globals found/used: [n=1] ‘FUN’
[16:59:43.528]  - needed namespaces: [n=0] 
[16:59:43.528] Finding globals ... DONE
[16:59:43.528]  - use_args: TRUE
[16:59:43.528]  - Getting '...' globals ...
[16:59:43.529]    - '...' content: [n=0] 
[16:59:43.529] List of 1
[16:59:43.529]  $ ...: list()
[16:59:43.529]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.529]  - attr(*, "where")=List of 1
[16:59:43.529]   ..$ ...:<environment: 0x562fbc4236b0> 
[16:59:43.529]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.529]  - attr(*, "resolved")= logi TRUE
[16:59:43.529]  - attr(*, "total_size")= num NA
[16:59:43.531]  - Getting '...' globals ... DONE
[16:59:43.531] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:43.532] List of 2
[16:59:43.532]  $ ...future.FUN:function (y)  
[16:59:43.532]  $ ...          : list()
[16:59:43.532]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.532]  - attr(*, "where")=List of 2
[16:59:43.532]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:43.532]   ..$ ...          :<environment: 0x562fbc4236b0> 
[16:59:43.532]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.532]  - attr(*, "resolved")= logi FALSE
[16:59:43.532]  - attr(*, "total_size")= num 280
[16:59:43.534] Packages to be attached in all futures: [n=0] 
[16:59:43.534] getGlobalsAndPackagesXApply() ... DONE
[16:59:43.534] Number of futures (= number of chunks): 2
[16:59:43.534] Launching 2 futures (chunks) ...
[16:59:43.534] Chunk #1 of 2 ...
[16:59:43.535]  - Finding globals in 'X' for chunk #1 ...
[16:59:43.535]    + additional globals found: [n=0] 
[16:59:43.535]    + additional namespaces needed: [n=0] 
[16:59:43.535]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:43.535]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:43.535]  - seeds: <none>
[16:59:43.535]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.553] Created future:
[16:59:43.553] MultisessionFuture:
[16:59:43.553] Label: ‘future_lapply-1’
[16:59:43.553] Expression:
[16:59:43.553] {
[16:59:43.553]     do.call(function(...) {
[16:59:43.553]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.553]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.553]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.553]             on.exit(options(oopts), add = TRUE)
[16:59:43.553]         }
[16:59:43.553]         {
[16:59:43.553]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.553]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.553]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.553]             })
[16:59:43.553]         }
[16:59:43.553]     }, args = future.call.arguments)
[16:59:43.553] }
[16:59:43.553] Lazy evaluation: FALSE
[16:59:43.553] Asynchronous evaluation: TRUE
[16:59:43.553] Local evaluation: TRUE
[16:59:43.553] Environment: 0x562fbc4232c0
[16:59:43.553] Capture standard output: TRUE
[16:59:43.553] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.553] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:43.553] Packages: <none>
[16:59:43.553] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.553] Resolved: FALSE
[16:59:43.553] Value: <not collected>
[16:59:43.553] Conditions captured: <none>
[16:59:43.553] Early signaling: FALSE
[16:59:43.553] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.553] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.564] Chunk #1 of 2 ... DONE
[16:59:43.564] Chunk #2 of 2 ...
[16:59:43.565]  - Finding globals in 'X' for chunk #2 ...
[16:59:43.565]    + additional globals found: [n=0] 
[16:59:43.565]    + additional namespaces needed: [n=0] 
[16:59:43.565]  - Finding globals in 'X' for chunk #2 ... DONE
[16:59:43.565]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:43.565]  - seeds: <none>
[16:59:43.565]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.582] Created future:
[16:59:43.583] MultisessionFuture:
[16:59:43.583] Label: ‘future_lapply-2’
[16:59:43.583] Expression:
[16:59:43.583] {
[16:59:43.583]     do.call(function(...) {
[16:59:43.583]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.583]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.583]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.583]             on.exit(options(oopts), add = TRUE)
[16:59:43.583]         }
[16:59:43.583]         {
[16:59:43.583]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.583]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.583]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.583]             })
[16:59:43.583]         }
[16:59:43.583]     }, args = future.call.arguments)
[16:59:43.583] }
[16:59:43.583] Lazy evaluation: FALSE
[16:59:43.583] Asynchronous evaluation: TRUE
[16:59:43.583] Local evaluation: TRUE
[16:59:43.583] Environment: 0x562fbc4232c0
[16:59:43.583] Capture standard output: TRUE
[16:59:43.583] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.583] Globals: 5 objects totaling 336 bytes (function ‘...future.FUN’ of 280 bytes, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 56 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:43.583] Packages: <none>
[16:59:43.583] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.583] Resolved: FALSE
[16:59:43.583] Value: <not collected>
[16:59:43.583] Conditions captured: <none>
[16:59:43.583] Early signaling: FALSE
[16:59:43.583] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.583] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.594] Chunk #2 of 2 ... DONE
[16:59:43.594] Launching 2 futures (chunks) ... DONE
[16:59:43.594] Resolving 2 futures (chunks) ...
[16:59:43.625]  - Number of value chunks collected: 2
[16:59:43.626] Resolving 2 futures (chunks) ... DONE
[16:59:43.626] Reducing values from 2 chunks ...
[16:59:43.626]  - Number of values collected after concatenation: 2
[16:59:43.626]  - Number of values expected: 2
[16:59:43.626] Reducing values from 2 chunks ... DONE
[16:59:43.626] future_lapply() ... DONE
> stopifnot(identical(y, as.list(1:2)))
> 
> message("*** future_lapply() - false positives ... DONE")
*** future_lapply() - false positives ... DONE
> 
> 
> message("*** future_lapply() - too large ...")
*** future_lapply() - too large ...
> 
> oMaxSize <- getOption("future.globals.maxSize")
> X <- replicate(10L, 1:100, simplify = FALSE)
> FUN <- function(x) {
+   getOption("future.globals.maxSize")
+ }
> 
> y0 <- lapply(X, FUN = FUN)
> stopifnot(all(sapply(y0, FUN = identical, oMaxSize)))
> 
> sizes <- unclass(c(FUN = object.size(FUN), X = object.size(X)))
> cat(sprintf("Baseline size of globals: %.2f KiB\n", sizes[["FUN"]] / 1024))
Baseline size of globals: 1.80 KiB
> 
> message("- true positive ...")
- true positive ...
> options(future.globals.maxSize = 1L)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = FUN)
+ }, error = identity)
[16:59:43.628] future_lapply() ...
[16:59:43.633] Number of chunks: 2
[16:59:43.633] getGlobalsAndPackagesXApply() ...
[16:59:43.633]  - future.globals: TRUE
[16:59:43.634] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> res <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> maxSize <- getOption("future.globals.maxSize")
> y <- future_lapply(X, FUN = FUN)
[16:59:43.635] future_lapply() ...
[16:59:43.638] Number of chunks: 2
[16:59:43.638] getGlobalsAndPackagesXApply() ...
[16:59:43.638]  - future.globals: TRUE
[16:59:43.640]  - globals found/used: [n=1] ‘FUN’
[16:59:43.640]  - needed namespaces: [n=0] 
[16:59:43.640] Finding globals ... DONE
[16:59:43.640]  - use_args: TRUE
[16:59:43.640]  - Getting '...' globals ...
[16:59:43.641]    - '...' content: [n=0] 
[16:59:43.641] List of 1
[16:59:43.641]  $ ...: list()
[16:59:43.641]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.641]  - attr(*, "where")=List of 1
[16:59:43.641]   ..$ ...:<environment: 0x562fbd37ad90> 
[16:59:43.641]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.641]  - attr(*, "resolved")= logi TRUE
[16:59:43.641]  - attr(*, "total_size")= num NA
[16:59:43.643]  - Getting '...' globals ... DONE
[16:59:43.644] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:43.644] List of 2
[16:59:43.644]  $ ...future.FUN:function (x)  
[16:59:43.644]  $ ...          : list()
[16:59:43.644]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.644]  - attr(*, "where")=List of 2
[16:59:43.644]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:43.644]   ..$ ...          :<environment: 0x562fbd37ad90> 
[16:59:43.644]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.644]  - attr(*, "resolved")= logi FALSE
[16:59:43.644]  - attr(*, "total_size")= num 1840
[16:59:43.648] Packages to be attached in all futures: [n=0] 
[16:59:43.648] getGlobalsAndPackagesXApply() ... DONE
[16:59:43.648] Number of futures (= number of chunks): 2
[16:59:43.649] Launching 2 futures (chunks) ...
[16:59:43.649] Chunk #1 of 2 ...
[16:59:43.649]  - Finding globals in 'X' for chunk #1 ...
[16:59:43.649]    + additional globals found: [n=0] 
[16:59:43.649]    + additional namespaces needed: [n=0] 
[16:59:43.649]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:43.649]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:43.649]  - seeds: <none>
[16:59:43.650]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.667] Created future:
[16:59:43.667] MultisessionFuture:
[16:59:43.667] Label: ‘future_lapply-1’
[16:59:43.667] Expression:
[16:59:43.667] {
[16:59:43.667]     do.call(function(...) {
[16:59:43.667]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.667]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.667]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.667]             on.exit(options(oopts), add = TRUE)
[16:59:43.667]         }
[16:59:43.667]         {
[16:59:43.667]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.667]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.667]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.667]             })
[16:59:43.667]         }
[16:59:43.667]     }, args = future.call.arguments)
[16:59:43.667] }
[16:59:43.667] Lazy evaluation: FALSE
[16:59:43.667] Asynchronous evaluation: TRUE
[16:59:43.667] Local evaluation: TRUE
[16:59:43.667] Environment: R_GlobalEnv
[16:59:43.667] Capture standard output: TRUE
[16:59:43.667] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.667] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:43.667] Packages: <none>
[16:59:43.667] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.667] Resolved: FALSE
[16:59:43.667] Value: <not collected>
[16:59:43.667] Conditions captured: <none>
[16:59:43.667] Early signaling: FALSE
[16:59:43.667] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.667] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.679] Chunk #1 of 2 ... DONE
[16:59:43.679] Chunk #2 of 2 ...
[16:59:43.679]  - Finding globals in 'X' for chunk #2 ...
[16:59:43.680]    + additional globals found: [n=0] 
[16:59:43.680]    + additional namespaces needed: [n=0] 
[16:59:43.680]  - Finding globals in 'X' for chunk #2 ... DONE
[16:59:43.680]  - Adjusted option 'future.globals.maxSize': 524288000 -> 2 * 524288000 = 1048576000 (bytes)
[16:59:43.680]  - seeds: <none>
[16:59:43.680]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.697] Created future:
[16:59:43.697] MultisessionFuture:
[16:59:43.697] Label: ‘future_lapply-2’
[16:59:43.697] Expression:
[16:59:43.697] {
[16:59:43.697]     do.call(function(...) {
[16:59:43.697]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.697]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.697]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.697]             on.exit(options(oopts), add = TRUE)
[16:59:43.697]         }
[16:59:43.697]         {
[16:59:43.697]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.697]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.697]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.697]             })
[16:59:43.697]         }
[16:59:43.697]     }, args = future.call.arguments)
[16:59:43.697] }
[16:59:43.697] Lazy evaluation: FALSE
[16:59:43.697] Asynchronous evaluation: TRUE
[16:59:43.697] Local evaluation: TRUE
[16:59:43.697] Environment: R_GlobalEnv
[16:59:43.697] Capture standard output: TRUE
[16:59:43.697] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.697] Globals: 5 objects totaling 3.98 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, NULL ‘...future.globals.maxSize’ of 0 bytes)
[16:59:43.697] Packages: <none>
[16:59:43.697] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.697] Resolved: FALSE
[16:59:43.697] Value: <not collected>
[16:59:43.697] Conditions captured: <none>
[16:59:43.697] Early signaling: FALSE
[16:59:43.697] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.697] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.709] Chunk #2 of 2 ... DONE
[16:59:43.709] Launching 2 futures (chunks) ... DONE
[16:59:43.709] Resolving 2 futures (chunks) ...
[16:59:43.741]  - Number of value chunks collected: 2
[16:59:43.742] Resolving 2 futures (chunks) ... DONE
[16:59:43.742] Reducing values from 2 chunks ...
[16:59:43.742]  - Number of values collected after concatenation: 10
[16:59:43.742]  - Number of values expected: 10
[16:59:43.742] Reducing values from 2 chunks ... DONE
[16:59:43.742] future_lapply() ... DONE
> str(y)
List of 10
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
 $ : NULL
> stopifnot(all(sapply(y, FUN = identical, oMaxSize)))
> 
> message("- approximately invariant to chunk size ...")
- approximately invariant to chunk size ...
> maxSize <- sizes[["FUN"]] + sizes[["X"]] / length(X)
> options(future.globals.maxSize = maxSize)
> 
> for (chunk.size in c(1L, 2L, 5L, 10L)) {
+   y <- future_lapply(X, FUN = FUN, future.chunk.size = chunk.size)
+   str(y)
+   stopifnot(all(unlist(y) == maxSize))
+   cat(sprintf("maxSize = %g bytes\nfuture.globals.maxSize = %g bytes\n",
+               maxSize, getOption("future.globals.maxSize")))
+   stopifnot(getOption("future.globals.maxSize") == maxSize)
+ }
[16:59:43.749] future_lapply() ...
[16:59:43.753] Number of chunks: 10
[16:59:43.753] getGlobalsAndPackagesXApply() ...
[16:59:43.754]  - future.globals: TRUE
[16:59:43.755]  - globals found/used: [n=1] ‘FUN’
[16:59:43.755]  - needed namespaces: [n=0] 
[16:59:43.755] Finding globals ... DONE
[16:59:43.756]  - use_args: TRUE
[16:59:43.756]  - Getting '...' globals ...
[16:59:43.756]    - '...' content: [n=0] 
[16:59:43.756] List of 1
[16:59:43.756]  $ ...: list()
[16:59:43.756]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.756]  - attr(*, "where")=List of 1
[16:59:43.756]   ..$ ...:<environment: 0x562fbd08ede8> 
[16:59:43.756]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.756]  - attr(*, "resolved")= logi TRUE
[16:59:43.756]  - attr(*, "total_size")= num NA
[16:59:43.759]  - Getting '...' globals ... DONE
[16:59:43.759] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:43.759] List of 2
[16:59:43.759]  $ ...future.FUN:function (x)  
[16:59:43.759]  $ ...          : list()
[16:59:43.759]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:43.759]  - attr(*, "where")=List of 2
[16:59:43.759]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:43.759]   ..$ ...          :<environment: 0x562fbd08ede8> 
[16:59:43.759]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:43.759]  - attr(*, "resolved")= logi FALSE
[16:59:43.759]  - attr(*, "total_size")= num 1840
[16:59:43.761] Packages to be attached in all futures: [n=0] 
[16:59:43.761] getGlobalsAndPackagesXApply() ... DONE
[16:59:43.762] Number of futures (= number of chunks): 10
[16:59:43.762] Launching 10 futures (chunks) ...
[16:59:43.762] Chunk #1 of 10 ...
[16:59:43.762]  - Finding globals in 'X' for chunk #1 ...
[16:59:43.762]    + additional globals found: [n=0] 
[16:59:43.762]    + additional namespaces needed: [n=0] 
[16:59:43.762]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:43.763]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:59:43.763]  - seeds: <none>
[16:59:43.763]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.780] Created future:
[16:59:43.780] MultisessionFuture:
[16:59:43.780] Label: ‘future_lapply-1’
[16:59:43.780] Expression:
[16:59:43.780] {
[16:59:43.780]     do.call(function(...) {
[16:59:43.780]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.780]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.780]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.780]             on.exit(options(oopts), add = TRUE)
[16:59:43.780]         }
[16:59:43.780]         {
[16:59:43.780]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.780]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.780]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.780]             })
[16:59:43.780]         }
[16:59:43.780]     }, args = future.call.arguments)
[16:59:43.780] }
[16:59:43.780] Lazy evaluation: FALSE
[16:59:43.780] Asynchronous evaluation: TRUE
[16:59:43.780] Local evaluation: TRUE
[16:59:43.780] Environment: R_GlobalEnv
[16:59:43.780] Capture standard output: TRUE
[16:59:43.780] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.780] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:43.780] Packages: <none>
[16:59:43.780] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.780] Resolved: FALSE
[16:59:43.780] Value: <not collected>
[16:59:43.780] Conditions captured: <none>
[16:59:43.780] Early signaling: FALSE
[16:59:43.780] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.780] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.792] Chunk #1 of 10 ... DONE
[16:59:43.792] Chunk #2 of 10 ...
[16:59:43.792]  - Finding globals in 'X' for chunk #2 ...
[16:59:43.792]    + additional globals found: [n=0] 
[16:59:43.792]    + additional namespaces needed: [n=0] 
[16:59:43.792]  - Finding globals in 'X' for chunk #2 ... DONE
[16:59:43.792]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:59:43.793]  - seeds: <none>
[16:59:43.793]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.811] Created future:
[16:59:43.811] MultisessionFuture:
[16:59:43.811] Label: ‘future_lapply-2’
[16:59:43.811] Expression:
[16:59:43.811] {
[16:59:43.811]     do.call(function(...) {
[16:59:43.811]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.811]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.811]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.811]             on.exit(options(oopts), add = TRUE)
[16:59:43.811]         }
[16:59:43.811]         {
[16:59:43.811]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.811]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.811]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.811]             })
[16:59:43.811]         }
[16:59:43.811]     }, args = future.call.arguments)
[16:59:43.811] }
[16:59:43.811] Lazy evaluation: FALSE
[16:59:43.811] Asynchronous evaluation: TRUE
[16:59:43.811] Local evaluation: TRUE
[16:59:43.811] Environment: R_GlobalEnv
[16:59:43.811] Capture standard output: TRUE
[16:59:43.811] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.811] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:43.811] Packages: <none>
[16:59:43.811] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.811] Resolved: FALSE
[16:59:43.811] Value: <not collected>
[16:59:43.811] Conditions captured: <none>
[16:59:43.811] Early signaling: FALSE
[16:59:43.811] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.811] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.823] Chunk #2 of 10 ... DONE
[16:59:43.823] Chunk #3 of 10 ...
[16:59:43.823]  - Finding globals in 'X' for chunk #3 ...
[16:59:43.824]    + additional globals found: [n=0] 
[16:59:43.824]    + additional namespaces needed: [n=0] 
[16:59:43.824]  - Finding globals in 'X' for chunk #3 ... DONE
[16:59:43.824]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:59:43.824]  - seeds: <none>
[16:59:43.824]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.851] Created future:
[16:59:43.852] MultisessionFuture:
[16:59:43.852] Label: ‘future_lapply-3’
[16:59:43.852] Expression:
[16:59:43.852] {
[16:59:43.852]     do.call(function(...) {
[16:59:43.852]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.852]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.852]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.852]             on.exit(options(oopts), add = TRUE)
[16:59:43.852]         }
[16:59:43.852]         {
[16:59:43.852]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.852]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.852]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.852]             })
[16:59:43.852]         }
[16:59:43.852]     }, args = future.call.arguments)
[16:59:43.852] }
[16:59:43.852] Lazy evaluation: FALSE
[16:59:43.852] Asynchronous evaluation: TRUE
[16:59:43.852] Local evaluation: TRUE
[16:59:43.852] Environment: R_GlobalEnv
[16:59:43.852] Capture standard output: TRUE
[16:59:43.852] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.852] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:43.852] Packages: <none>
[16:59:43.852] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.852] Resolved: FALSE
[16:59:43.852] Value: <not collected>
[16:59:43.852] Conditions captured: <none>
[16:59:43.852] Early signaling: FALSE
[16:59:43.852] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.852] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.863] Chunk #3 of 10 ... DONE
[16:59:43.863] Chunk #4 of 10 ...
[16:59:43.863]  - Finding globals in 'X' for chunk #4 ...
[16:59:43.864]    + additional globals found: [n=0] 
[16:59:43.864]    + additional namespaces needed: [n=0] 
[16:59:43.864]  - Finding globals in 'X' for chunk #4 ... DONE
[16:59:43.864]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:59:43.864]  - seeds: <none>
[16:59:43.864]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.901] Created future:
[16:59:43.901] MultisessionFuture:
[16:59:43.901] Label: ‘future_lapply-4’
[16:59:43.901] Expression:
[16:59:43.901] {
[16:59:43.901]     do.call(function(...) {
[16:59:43.901]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.901]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.901]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.901]             on.exit(options(oopts), add = TRUE)
[16:59:43.901]         }
[16:59:43.901]         {
[16:59:43.901]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.901]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.901]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.901]             })
[16:59:43.901]         }
[16:59:43.901]     }, args = future.call.arguments)
[16:59:43.901] }
[16:59:43.901] Lazy evaluation: FALSE
[16:59:43.901] Asynchronous evaluation: TRUE
[16:59:43.901] Local evaluation: TRUE
[16:59:43.901] Environment: R_GlobalEnv
[16:59:43.901] Capture standard output: TRUE
[16:59:43.901] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.901] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:43.901] Packages: <none>
[16:59:43.901] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.901] Resolved: FALSE
[16:59:43.901] Value: <not collected>
[16:59:43.901] Conditions captured: <none>
[16:59:43.901] Early signaling: FALSE
[16:59:43.901] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.901] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.913] Chunk #4 of 10 ... DONE
[16:59:43.913] Chunk #5 of 10 ...
[16:59:43.913]  - Finding globals in 'X' for chunk #5 ...
[16:59:43.913]    + additional globals found: [n=0] 
[16:59:43.913]    + additional namespaces needed: [n=0] 
[16:59:43.913]  - Finding globals in 'X' for chunk #5 ... DONE
[16:59:43.913]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:59:43.914]  - seeds: <none>
[16:59:43.914]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.941] Created future:
[16:59:43.941] MultisessionFuture:
[16:59:43.941] Label: ‘future_lapply-5’
[16:59:43.941] Expression:
[16:59:43.941] {
[16:59:43.941]     do.call(function(...) {
[16:59:43.941]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.941]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.941]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.941]             on.exit(options(oopts), add = TRUE)
[16:59:43.941]         }
[16:59:43.941]         {
[16:59:43.941]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.941]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.941]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.941]             })
[16:59:43.941]         }
[16:59:43.941]     }, args = future.call.arguments)
[16:59:43.941] }
[16:59:43.941] Lazy evaluation: FALSE
[16:59:43.941] Asynchronous evaluation: TRUE
[16:59:43.941] Local evaluation: TRUE
[16:59:43.941] Environment: R_GlobalEnv
[16:59:43.941] Capture standard output: TRUE
[16:59:43.941] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.941] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:43.941] Packages: <none>
[16:59:43.941] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.941] Resolved: FALSE
[16:59:43.941] Value: <not collected>
[16:59:43.941] Conditions captured: <none>
[16:59:43.941] Early signaling: FALSE
[16:59:43.941] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.941] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.953] Chunk #5 of 10 ... DONE
[16:59:43.953] Chunk #6 of 10 ...
[16:59:43.953]  - Finding globals in 'X' for chunk #6 ...
[16:59:43.953]    + additional globals found: [n=0] 
[16:59:43.953]    + additional namespaces needed: [n=0] 
[16:59:43.953]  - Finding globals in 'X' for chunk #6 ... DONE
[16:59:43.953]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:59:43.953]  - seeds: <none>
[16:59:43.954]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:43.981] Created future:
[16:59:43.981] MultisessionFuture:
[16:59:43.981] Label: ‘future_lapply-6’
[16:59:43.981] Expression:
[16:59:43.981] {
[16:59:43.981]     do.call(function(...) {
[16:59:43.981]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:43.981]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:43.981]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:43.981]             on.exit(options(oopts), add = TRUE)
[16:59:43.981]         }
[16:59:43.981]         {
[16:59:43.981]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:43.981]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:43.981]                 ...future.FUN(...future.X_jj, ...)
[16:59:43.981]             })
[16:59:43.981]         }
[16:59:43.981]     }, args = future.call.arguments)
[16:59:43.981] }
[16:59:43.981] Lazy evaluation: FALSE
[16:59:43.981] Asynchronous evaluation: TRUE
[16:59:43.981] Local evaluation: TRUE
[16:59:43.981] Environment: R_GlobalEnv
[16:59:43.981] Capture standard output: TRUE
[16:59:43.981] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:43.981] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:43.981] Packages: <none>
[16:59:43.981] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:43.981] Resolved: FALSE
[16:59:43.981] Value: <not collected>
[16:59:43.981] Conditions captured: <none>
[16:59:43.981] Early signaling: FALSE
[16:59:43.981] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:43.981] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:43.992] Chunk #6 of 10 ... DONE
[16:59:43.992] Chunk #7 of 10 ...
[16:59:43.992]  - Finding globals in 'X' for chunk #7 ...
[16:59:43.994]    + additional globals found: [n=0] 
[16:59:43.995]    + additional namespaces needed: [n=0] 
[16:59:43.995]  - Finding globals in 'X' for chunk #7 ... DONE
[16:59:43.995]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:59:43.995]  - seeds: <none>
[16:59:43.995]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.022] Created future:
[16:59:44.023] MultisessionFuture:
[16:59:44.023] Label: ‘future_lapply-7’
[16:59:44.023] Expression:
[16:59:44.023] {
[16:59:44.023]     do.call(function(...) {
[16:59:44.023]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.023]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.023]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.023]             on.exit(options(oopts), add = TRUE)
[16:59:44.023]         }
[16:59:44.023]         {
[16:59:44.023]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.023]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.023]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.023]             })
[16:59:44.023]         }
[16:59:44.023]     }, args = future.call.arguments)
[16:59:44.023] }
[16:59:44.023] Lazy evaluation: FALSE
[16:59:44.023] Asynchronous evaluation: TRUE
[16:59:44.023] Local evaluation: TRUE
[16:59:44.023] Environment: R_GlobalEnv
[16:59:44.023] Capture standard output: TRUE
[16:59:44.023] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.023] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.023] Packages: <none>
[16:59:44.023] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.023] Resolved: FALSE
[16:59:44.023] Value: <not collected>
[16:59:44.023] Conditions captured: <none>
[16:59:44.023] Early signaling: FALSE
[16:59:44.023] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.023] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.034] Chunk #7 of 10 ... DONE
[16:59:44.034] Chunk #8 of 10 ...
[16:59:44.034]  - Finding globals in 'X' for chunk #8 ...
[16:59:44.035]    + additional globals found: [n=0] 
[16:59:44.035]    + additional namespaces needed: [n=0] 
[16:59:44.035]  - Finding globals in 'X' for chunk #8 ... DONE
[16:59:44.035]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:59:44.035]  - seeds: <none>
[16:59:44.035]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.062] Created future:
[16:59:44.062] MultisessionFuture:
[16:59:44.062] Label: ‘future_lapply-8’
[16:59:44.062] Expression:
[16:59:44.062] {
[16:59:44.062]     do.call(function(...) {
[16:59:44.062]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.062]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.062]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.062]             on.exit(options(oopts), add = TRUE)
[16:59:44.062]         }
[16:59:44.062]         {
[16:59:44.062]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.062]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.062]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.062]             })
[16:59:44.062]         }
[16:59:44.062]     }, args = future.call.arguments)
[16:59:44.062] }
[16:59:44.062] Lazy evaluation: FALSE
[16:59:44.062] Asynchronous evaluation: TRUE
[16:59:44.062] Local evaluation: TRUE
[16:59:44.062] Environment: R_GlobalEnv
[16:59:44.062] Capture standard output: TRUE
[16:59:44.062] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.062] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.062] Packages: <none>
[16:59:44.062] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.062] Resolved: FALSE
[16:59:44.062] Value: <not collected>
[16:59:44.062] Conditions captured: <none>
[16:59:44.062] Early signaling: FALSE
[16:59:44.062] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.062] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.074] Chunk #8 of 10 ... DONE
[16:59:44.074] Chunk #9 of 10 ...
[16:59:44.074]  - Finding globals in 'X' for chunk #9 ...
[16:59:44.074]    + additional globals found: [n=0] 
[16:59:44.074]    + additional namespaces needed: [n=0] 
[16:59:44.074]  - Finding globals in 'X' for chunk #9 ... DONE
[16:59:44.075]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:59:44.075]  - seeds: <none>
[16:59:44.075]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.102] Created future:
[16:59:44.102] MultisessionFuture:
[16:59:44.102] Label: ‘future_lapply-9’
[16:59:44.102] Expression:
[16:59:44.102] {
[16:59:44.102]     do.call(function(...) {
[16:59:44.102]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.102]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.102]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.102]             on.exit(options(oopts), add = TRUE)
[16:59:44.102]         }
[16:59:44.102]         {
[16:59:44.102]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.102]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.102]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.102]             })
[16:59:44.102]         }
[16:59:44.102]     }, args = future.call.arguments)
[16:59:44.102] }
[16:59:44.102] Lazy evaluation: FALSE
[16:59:44.102] Asynchronous evaluation: TRUE
[16:59:44.102] Local evaluation: TRUE
[16:59:44.102] Environment: R_GlobalEnv
[16:59:44.102] Capture standard output: TRUE
[16:59:44.102] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.102] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.102] Packages: <none>
[16:59:44.102] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.102] Resolved: FALSE
[16:59:44.102] Value: <not collected>
[16:59:44.102] Conditions captured: <none>
[16:59:44.102] Early signaling: FALSE
[16:59:44.102] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.102] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.114] Chunk #9 of 10 ... DONE
[16:59:44.114] Chunk #10 of 10 ...
[16:59:44.114]  - Finding globals in 'X' for chunk #10 ...
[16:59:44.114]    + additional globals found: [n=0] 
[16:59:44.114]    + additional namespaces needed: [n=0] 
[16:59:44.115]  - Finding globals in 'X' for chunk #10 ... DONE
[16:59:44.115]  - Adjusted option 'future.globals.maxSize': 2306 -> 10 * 2306 = 23056 (bytes)
[16:59:44.115]  - seeds: <none>
[16:59:44.115]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.143] Created future:
[16:59:44.143] MultisessionFuture:
[16:59:44.143] Label: ‘future_lapply-10’
[16:59:44.143] Expression:
[16:59:44.143] {
[16:59:44.143]     do.call(function(...) {
[16:59:44.143]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.143]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.143]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.143]             on.exit(options(oopts), add = TRUE)
[16:59:44.143]         }
[16:59:44.143]         {
[16:59:44.143]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.143]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.143]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.143]             })
[16:59:44.143]         }
[16:59:44.143]     }, args = future.call.arguments)
[16:59:44.143] }
[16:59:44.143] Lazy evaluation: FALSE
[16:59:44.143] Asynchronous evaluation: TRUE
[16:59:44.143] Local evaluation: TRUE
[16:59:44.143] Environment: R_GlobalEnv
[16:59:44.143] Capture standard output: TRUE
[16:59:44.143] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.143] Globals: 5 objects totaling 2.29 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 448 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.143] Packages: <none>
[16:59:44.143] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.143] Resolved: FALSE
[16:59:44.143] Value: <not collected>
[16:59:44.143] Conditions captured: <none>
[16:59:44.143] Early signaling: FALSE
[16:59:44.143] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.143] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.155] Chunk #10 of 10 ... DONE
[16:59:44.155] Launching 10 futures (chunks) ... DONE
[16:59:44.155] Resolving 10 futures (chunks) ...
[16:59:44.200]  - Number of value chunks collected: 10
[16:59:44.200] Resolving 10 futures (chunks) ... DONE
[16:59:44.200] Reducing values from 10 chunks ...
[16:59:44.200]  - Number of values collected after concatenation: 10
[16:59:44.200]  - Number of values expected: 10
[16:59:44.200] Reducing values from 10 chunks ... DONE
[16:59:44.200] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:59:44.204] future_lapply() ...
[16:59:44.208] Number of chunks: 5
[16:59:44.208] getGlobalsAndPackagesXApply() ...
[16:59:44.208]  - future.globals: TRUE
[16:59:44.209]  - globals found/used: [n=1] ‘FUN’
[16:59:44.210]  - needed namespaces: [n=0] 
[16:59:44.210] Finding globals ... DONE
[16:59:44.210]  - use_args: TRUE
[16:59:44.210]  - Getting '...' globals ...
[16:59:44.210]    - '...' content: [n=0] 
[16:59:44.210] List of 1
[16:59:44.210]  $ ...: list()
[16:59:44.210]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:44.210]  - attr(*, "where")=List of 1
[16:59:44.210]   ..$ ...:<environment: 0x562fbc5c1650> 
[16:59:44.210]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:44.210]  - attr(*, "resolved")= logi TRUE
[16:59:44.210]  - attr(*, "total_size")= num NA
[16:59:44.213]  - Getting '...' globals ... DONE
[16:59:44.213] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:44.215] List of 2
[16:59:44.215]  $ ...future.FUN:function (x)  
[16:59:44.215]  $ ...          : list()
[16:59:44.215]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:44.215]  - attr(*, "where")=List of 2
[16:59:44.215]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:44.215]   ..$ ...          :<environment: 0x562fbc5c1650> 
[16:59:44.215]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:44.215]  - attr(*, "resolved")= logi FALSE
[16:59:44.215]  - attr(*, "total_size")= num 1840
[16:59:44.218] Packages to be attached in all futures: [n=0] 
[16:59:44.218] getGlobalsAndPackagesXApply() ... DONE
[16:59:44.218] Number of futures (= number of chunks): 5
[16:59:44.218] Launching 5 futures (chunks) ...
[16:59:44.218] Chunk #1 of 5 ...
[16:59:44.218]  - Finding globals in 'X' for chunk #1 ...
[16:59:44.218]    + additional globals found: [n=0] 
[16:59:44.219]    + additional namespaces needed: [n=0] 
[16:59:44.219]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:44.219]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:59:44.219]  - seeds: <none>
[16:59:44.219]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.235] Created future:
[16:59:44.235] MultisessionFuture:
[16:59:44.235] Label: ‘future_lapply-1’
[16:59:44.235] Expression:
[16:59:44.235] {
[16:59:44.235]     do.call(function(...) {
[16:59:44.235]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.235]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.235]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.235]             on.exit(options(oopts), add = TRUE)
[16:59:44.235]         }
[16:59:44.235]         {
[16:59:44.235]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.235]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.235]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.235]             })
[16:59:44.235]         }
[16:59:44.235]     }, args = future.call.arguments)
[16:59:44.235] }
[16:59:44.235] Lazy evaluation: FALSE
[16:59:44.235] Asynchronous evaluation: TRUE
[16:59:44.235] Local evaluation: TRUE
[16:59:44.235] Environment: R_GlobalEnv
[16:59:44.235] Capture standard output: TRUE
[16:59:44.235] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.235] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.235] Packages: <none>
[16:59:44.235] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.235] Resolved: FALSE
[16:59:44.235] Value: <not collected>
[16:59:44.235] Conditions captured: <none>
[16:59:44.235] Early signaling: FALSE
[16:59:44.235] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.235] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.247] Chunk #1 of 5 ... DONE
[16:59:44.247] Chunk #2 of 5 ...
[16:59:44.247]  - Finding globals in 'X' for chunk #2 ...
[16:59:44.247]    + additional globals found: [n=0] 
[16:59:44.248]    + additional namespaces needed: [n=0] 
[16:59:44.248]  - Finding globals in 'X' for chunk #2 ... DONE
[16:59:44.248]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:59:44.248]  - seeds: <none>
[16:59:44.248]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.264] Created future:
[16:59:44.264] MultisessionFuture:
[16:59:44.264] Label: ‘future_lapply-2’
[16:59:44.264] Expression:
[16:59:44.264] {
[16:59:44.264]     do.call(function(...) {
[16:59:44.264]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.264]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.264]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.264]             on.exit(options(oopts), add = TRUE)
[16:59:44.264]         }
[16:59:44.264]         {
[16:59:44.264]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.264]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.264]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.264]             })
[16:59:44.264]         }
[16:59:44.264]     }, args = future.call.arguments)
[16:59:44.264] }
[16:59:44.264] Lazy evaluation: FALSE
[16:59:44.264] Asynchronous evaluation: TRUE
[16:59:44.264] Local evaluation: TRUE
[16:59:44.264] Environment: R_GlobalEnv
[16:59:44.264] Capture standard output: TRUE
[16:59:44.264] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.264] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.264] Packages: <none>
[16:59:44.264] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.264] Resolved: FALSE
[16:59:44.264] Value: <not collected>
[16:59:44.264] Conditions captured: <none>
[16:59:44.264] Early signaling: FALSE
[16:59:44.264] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.264] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.276] Chunk #2 of 5 ... DONE
[16:59:44.276] Chunk #3 of 5 ...
[16:59:44.276]  - Finding globals in 'X' for chunk #3 ...
[16:59:44.276]    + additional globals found: [n=0] 
[16:59:44.277]    + additional namespaces needed: [n=0] 
[16:59:44.277]  - Finding globals in 'X' for chunk #3 ... DONE
[16:59:44.277]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:59:44.277]  - seeds: <none>
[16:59:44.277]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.305] Created future:
[16:59:44.305] MultisessionFuture:
[16:59:44.305] Label: ‘future_lapply-3’
[16:59:44.305] Expression:
[16:59:44.305] {
[16:59:44.305]     do.call(function(...) {
[16:59:44.305]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.305]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.305]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.305]             on.exit(options(oopts), add = TRUE)
[16:59:44.305]         }
[16:59:44.305]         {
[16:59:44.305]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.305]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.305]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.305]             })
[16:59:44.305]         }
[16:59:44.305]     }, args = future.call.arguments)
[16:59:44.305] }
[16:59:44.305] Lazy evaluation: FALSE
[16:59:44.305] Asynchronous evaluation: TRUE
[16:59:44.305] Local evaluation: TRUE
[16:59:44.305] Environment: R_GlobalEnv
[16:59:44.305] Capture standard output: TRUE
[16:59:44.305] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.305] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.305] Packages: <none>
[16:59:44.305] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.305] Resolved: FALSE
[16:59:44.305] Value: <not collected>
[16:59:44.305] Conditions captured: <none>
[16:59:44.305] Early signaling: FALSE
[16:59:44.305] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.305] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.317] Chunk #3 of 5 ... DONE
[16:59:44.317] Chunk #4 of 5 ...
[16:59:44.317]  - Finding globals in 'X' for chunk #4 ...
[16:59:44.317]    + additional globals found: [n=0] 
[16:59:44.318]    + additional namespaces needed: [n=0] 
[16:59:44.318]  - Finding globals in 'X' for chunk #4 ... DONE
[16:59:44.318]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:59:44.318]  - seeds: <none>
[16:59:44.318]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.345] Created future:
[16:59:44.346] MultisessionFuture:
[16:59:44.346] Label: ‘future_lapply-4’
[16:59:44.346] Expression:
[16:59:44.346] {
[16:59:44.346]     do.call(function(...) {
[16:59:44.346]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.346]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.346]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.346]             on.exit(options(oopts), add = TRUE)
[16:59:44.346]         }
[16:59:44.346]         {
[16:59:44.346]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.346]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.346]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.346]             })
[16:59:44.346]         }
[16:59:44.346]     }, args = future.call.arguments)
[16:59:44.346] }
[16:59:44.346] Lazy evaluation: FALSE
[16:59:44.346] Asynchronous evaluation: TRUE
[16:59:44.346] Local evaluation: TRUE
[16:59:44.346] Environment: R_GlobalEnv
[16:59:44.346] Capture standard output: TRUE
[16:59:44.346] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.346] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.346] Packages: <none>
[16:59:44.346] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.346] Resolved: FALSE
[16:59:44.346] Value: <not collected>
[16:59:44.346] Conditions captured: <none>
[16:59:44.346] Early signaling: FALSE
[16:59:44.346] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.346] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.357] Chunk #4 of 5 ... DONE
[16:59:44.357] Chunk #5 of 5 ...
[16:59:44.357]  - Finding globals in 'X' for chunk #5 ...
[16:59:44.358]    + additional globals found: [n=0] 
[16:59:44.358]    + additional namespaces needed: [n=0] 
[16:59:44.358]  - Finding globals in 'X' for chunk #5 ... DONE
[16:59:44.358]  - Adjusted option 'future.globals.maxSize': 2306 -> 5 * 2306 = 11528 (bytes)
[16:59:44.358]  - seeds: <none>
[16:59:44.358]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.385] Created future:
[16:59:44.386] MultisessionFuture:
[16:59:44.386] Label: ‘future_lapply-5’
[16:59:44.386] Expression:
[16:59:44.386] {
[16:59:44.386]     do.call(function(...) {
[16:59:44.386]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.386]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.386]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.386]             on.exit(options(oopts), add = TRUE)
[16:59:44.386]         }
[16:59:44.386]         {
[16:59:44.386]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.386]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.386]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.386]             })
[16:59:44.386]         }
[16:59:44.386]     }, args = future.call.arguments)
[16:59:44.386] }
[16:59:44.386] Lazy evaluation: FALSE
[16:59:44.386] Asynchronous evaluation: TRUE
[16:59:44.386] Local evaluation: TRUE
[16:59:44.386] Environment: R_GlobalEnv
[16:59:44.386] Capture standard output: TRUE
[16:59:44.386] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.386] Globals: 5 objects totaling 2.73 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 896 bytes, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.386] Packages: <none>
[16:59:44.386] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.386] Resolved: FALSE
[16:59:44.386] Value: <not collected>
[16:59:44.386] Conditions captured: <none>
[16:59:44.386] Early signaling: FALSE
[16:59:44.386] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.386] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.397] Chunk #5 of 5 ... DONE
[16:59:44.397] Launching 5 futures (chunks) ... DONE
[16:59:44.397] Resolving 5 futures (chunks) ...
[16:59:44.430]  - Number of value chunks collected: 5
[16:59:44.430] Resolving 5 futures (chunks) ... DONE
[16:59:44.430] Reducing values from 5 chunks ...
[16:59:44.430]  - Number of values collected after concatenation: 10
[16:59:44.430]  - Number of values expected: 10
[16:59:44.430] Reducing values from 5 chunks ... DONE
[16:59:44.430] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:59:44.436] future_lapply() ...
[16:59:44.440] Number of chunks: 2
[16:59:44.440] getGlobalsAndPackagesXApply() ...
[16:59:44.440]  - future.globals: TRUE
[16:59:44.442]  - globals found/used: [n=1] ‘FUN’
[16:59:44.442]  - needed namespaces: [n=0] 
[16:59:44.442] Finding globals ... DONE
[16:59:44.442]  - use_args: TRUE
[16:59:44.442]  - Getting '...' globals ...
[16:59:44.442]    - '...' content: [n=0] 
[16:59:44.442] List of 1
[16:59:44.442]  $ ...: list()
[16:59:44.442]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:44.442]  - attr(*, "where")=List of 1
[16:59:44.442]   ..$ ...:<environment: 0x562fbc5fa6b8> 
[16:59:44.442]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:44.442]  - attr(*, "resolved")= logi TRUE
[16:59:44.442]  - attr(*, "total_size")= num NA
[16:59:44.445]  - Getting '...' globals ... DONE
[16:59:44.445] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:44.445] List of 2
[16:59:44.445]  $ ...future.FUN:function (x)  
[16:59:44.445]  $ ...          : list()
[16:59:44.445]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:44.445]  - attr(*, "where")=List of 2
[16:59:44.445]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:44.445]   ..$ ...          :<environment: 0x562fbc5fa6b8> 
[16:59:44.445]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:44.445]  - attr(*, "resolved")= logi FALSE
[16:59:44.445]  - attr(*, "total_size")= num 1840
[16:59:44.448] Packages to be attached in all futures: [n=0] 
[16:59:44.448] getGlobalsAndPackagesXApply() ... DONE
[16:59:44.448] Number of futures (= number of chunks): 2
[16:59:44.448] Launching 2 futures (chunks) ...
[16:59:44.448] Chunk #1 of 2 ...
[16:59:44.448]  - Finding globals in 'X' for chunk #1 ...
[16:59:44.449]    + additional globals found: [n=0] 
[16:59:44.449]    + additional namespaces needed: [n=0] 
[16:59:44.449]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:44.449]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:59:44.449]  - seeds: <none>
[16:59:44.449]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.466] Created future:
[16:59:44.466] MultisessionFuture:
[16:59:44.466] Label: ‘future_lapply-1’
[16:59:44.466] Expression:
[16:59:44.466] {
[16:59:44.466]     do.call(function(...) {
[16:59:44.466]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.466]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.466]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.466]             on.exit(options(oopts), add = TRUE)
[16:59:44.466]         }
[16:59:44.466]         {
[16:59:44.466]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.466]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.466]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.466]             })
[16:59:44.466]         }
[16:59:44.466]     }, args = future.call.arguments)
[16:59:44.466] }
[16:59:44.466] Lazy evaluation: FALSE
[16:59:44.466] Asynchronous evaluation: TRUE
[16:59:44.466] Local evaluation: TRUE
[16:59:44.466] Environment: R_GlobalEnv
[16:59:44.466] Capture standard output: TRUE
[16:59:44.466] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.466] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.466] Packages: <none>
[16:59:44.466] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.466] Resolved: FALSE
[16:59:44.466] Value: <not collected>
[16:59:44.466] Conditions captured: <none>
[16:59:44.466] Early signaling: FALSE
[16:59:44.466] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.466] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.477] Chunk #1 of 2 ... DONE
[16:59:44.477] Chunk #2 of 2 ...
[16:59:44.478]  - Finding globals in 'X' for chunk #2 ...
[16:59:44.478]    + additional globals found: [n=0] 
[16:59:44.478]    + additional namespaces needed: [n=0] 
[16:59:44.478]  - Finding globals in 'X' for chunk #2 ... DONE
[16:59:44.478]  - Adjusted option 'future.globals.maxSize': 2306 -> 2 * 2306 = 4611 (bytes)
[16:59:44.478]  - seeds: <none>
[16:59:44.478]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.496] Created future:
[16:59:44.496] MultisessionFuture:
[16:59:44.496] Label: ‘future_lapply-2’
[16:59:44.496] Expression:
[16:59:44.496] {
[16:59:44.496]     do.call(function(...) {
[16:59:44.496]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.496]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.496]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.496]             on.exit(options(oopts), add = TRUE)
[16:59:44.496]         }
[16:59:44.496]         {
[16:59:44.496]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.496]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.496]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.496]             })
[16:59:44.496]         }
[16:59:44.496]     }, args = future.call.arguments)
[16:59:44.496] }
[16:59:44.496] Lazy evaluation: FALSE
[16:59:44.496] Asynchronous evaluation: TRUE
[16:59:44.496] Local evaluation: TRUE
[16:59:44.496] Environment: R_GlobalEnv
[16:59:44.496] Capture standard output: TRUE
[16:59:44.496] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.496] Globals: 5 objects totaling 4.04 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 2.19 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.496] Packages: <none>
[16:59:44.496] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.496] Resolved: FALSE
[16:59:44.496] Value: <not collected>
[16:59:44.496] Conditions captured: <none>
[16:59:44.496] Early signaling: FALSE
[16:59:44.496] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.496] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.508] Chunk #2 of 2 ... DONE
[16:59:44.508] Launching 2 futures (chunks) ... DONE
[16:59:44.508] Resolving 2 futures (chunks) ...
[16:59:44.551]  - Number of value chunks collected: 2
[16:59:44.551] Resolving 2 futures (chunks) ... DONE
[16:59:44.551] Reducing values from 2 chunks ...
[16:59:44.552]  - Number of values collected after concatenation: 10
[16:59:44.552]  - Number of values expected: 10
[16:59:44.552] Reducing values from 2 chunks ... DONE
[16:59:44.552] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
[16:59:44.555] future_lapply() ...
[16:59:44.559] Number of chunks: 1
[16:59:44.559] getGlobalsAndPackagesXApply() ...
[16:59:44.559]  - future.globals: TRUE
[16:59:44.561]  - globals found/used: [n=1] ‘FUN’
[16:59:44.561]  - needed namespaces: [n=0] 
[16:59:44.561] Finding globals ... DONE
[16:59:44.561]  - use_args: TRUE
[16:59:44.561]  - Getting '...' globals ...
[16:59:44.562]    - '...' content: [n=0] 
[16:59:44.562] List of 1
[16:59:44.562]  $ ...: list()
[16:59:44.562]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:44.562]  - attr(*, "where")=List of 1
[16:59:44.562]   ..$ ...:<environment: 0x562fbcdef480> 
[16:59:44.562]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:44.562]  - attr(*, "resolved")= logi TRUE
[16:59:44.562]  - attr(*, "total_size")= num NA
[16:59:44.564]  - Getting '...' globals ... DONE
[16:59:44.564] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:44.564] List of 2
[16:59:44.564]  $ ...future.FUN:function (x)  
[16:59:44.564]  $ ...          : list()
[16:59:44.564]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:44.564]  - attr(*, "where")=List of 2
[16:59:44.564]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:44.564]   ..$ ...          :<environment: 0x562fbcdef480> 
[16:59:44.564]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:44.564]  - attr(*, "resolved")= logi FALSE
[16:59:44.564]  - attr(*, "total_size")= num 1840
[16:59:44.567] Packages to be attached in all futures: [n=0] 
[16:59:44.567] getGlobalsAndPackagesXApply() ... DONE
[16:59:44.567] Number of futures (= number of chunks): 1
[16:59:44.567] Launching 1 futures (chunks) ...
[16:59:44.567] Chunk #1 of 1 ...
[16:59:44.568]  - Finding globals in 'X' for chunk #1 ...
[16:59:44.568]    + additional globals found: [n=0] 
[16:59:44.568]    + additional namespaces needed: [n=0] 
[16:59:44.568]  - Finding globals in 'X' for chunk #1 ... DONE
[16:59:44.568]  - seeds: <none>
[16:59:44.568]  - All globals exported: [n=5] ‘...future.FUN’, ‘...’, ‘...future.elements_ii’, ‘...future.seeds_ii’, ‘...future.globals.maxSize’
[16:59:44.587] Created future:
[16:59:44.587] MultisessionFuture:
[16:59:44.587] Label: ‘future_lapply-1’
[16:59:44.587] Expression:
[16:59:44.587] {
[16:59:44.587]     do.call(function(...) {
[16:59:44.587]         ...future.globals.maxSize.org <- getOption("future.globals.maxSize")
[16:59:44.587]         if (!identical(...future.globals.maxSize.org, ...future.globals.maxSize)) {
[16:59:44.587]             oopts <- options(future.globals.maxSize = ...future.globals.maxSize)
[16:59:44.587]             on.exit(options(oopts), add = TRUE)
[16:59:44.587]         }
[16:59:44.587]         {
[16:59:44.587]             lapply(seq_along(...future.elements_ii), FUN = function(jj) {
[16:59:44.587]                 ...future.X_jj <- ...future.elements_ii[[jj]]
[16:59:44.587]                 ...future.FUN(...future.X_jj, ...)
[16:59:44.587]             })
[16:59:44.587]         }
[16:59:44.587]     }, args = future.call.arguments)
[16:59:44.587] }
[16:59:44.587] Lazy evaluation: FALSE
[16:59:44.587] Asynchronous evaluation: TRUE
[16:59:44.587] Local evaluation: TRUE
[16:59:44.587] Environment: R_GlobalEnv
[16:59:44.587] Capture standard output: TRUE
[16:59:44.587] Capture condition classes: ‘condition’ (excluding ‘nothing’)
[16:59:44.587] Globals: 5 objects totaling 6.23 KiB (function ‘...future.FUN’ of 1.80 KiB, DotDotDotList ‘future.call.arguments’ of 0 bytes, list ‘...future.elements_ii’ of 4.38 KiB, NULL ‘...future.seeds_ii’ of 0 bytes, numeric ‘...future.globals.maxSize’ of 56 bytes)
[16:59:44.587] Packages: <none>
[16:59:44.587] L'Ecuyer-CMRG RNG seed: <none> (seed = FALSE)
[16:59:44.587] Resolved: FALSE
[16:59:44.587] Value: <not collected>
[16:59:44.587] Conditions captured: <none>
[16:59:44.587] Early signaling: FALSE
[16:59:44.587] Owner process: a871f56c-e543-b890-8142-e009877efd7a
[16:59:44.587] Class: ‘MultisessionFuture’, ‘ClusterFuture’, ‘MultiprocessFuture’, ‘Future’, ‘environment’
[16:59:44.598] Chunk #1 of 1 ... DONE
[16:59:44.598] Launching 1 futures (chunks) ... DONE
[16:59:44.598] Resolving 1 futures (chunks) ...
[16:59:44.629]  - Number of value chunks collected: 1
[16:59:44.629] Resolving 1 futures (chunks) ... DONE
[16:59:44.629] Reducing values from 1 chunks ...
[16:59:44.629]  - Number of values collected after concatenation: 10
[16:59:44.630]  - Number of values expected: 10
[16:59:44.630] Reducing values from 1 chunks ... DONE
[16:59:44.630] future_lapply() ... DONE
List of 10
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
 $ : num 2306
maxSize = 2305.6 bytes
future.globals.maxSize = 2305.6 bytes
> y <- NULL
> options(future.globals.maxSize = oMaxSize)
> 
> 
> message("*** future_lapply() - too large ... DONE")
*** future_lapply() - too large ... DONE
> 
> 
> message("*** future_lapply() - globals exceptions ...")
*** future_lapply() - globals exceptions ...
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = 42)
+ }, error = identity)
[16:59:44.633] future_lapply() ...
[16:59:44.637] Number of chunks: 1
[16:59:44.637] getGlobalsAndPackagesXApply() ...
[16:59:44.637] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = list(1))
+ }, error = identity)
[16:59:44.638] future_lapply() ...
[16:59:44.641] Number of chunks: 1
[16:59:44.641] getGlobalsAndPackagesXApply() ...
[16:59:44.641]  - future.globals: <name-value list> with names ‘1’
[16:59:44.641] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[16:59:44.642] future_lapply() ...
[16:59:44.645] Number of chunks: 1
[16:59:44.645] getGlobalsAndPackagesXApply() ...
[16:59:44.645]  - future.globals: ‘...future.FUN’
[16:59:44.645]  - use_args: TRUE
[16:59:44.645] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> res <- tryCatch({
+   y <- future_lapply(1, FUN = function(x) x, future.globals = "...future.FUN")
+ }, error = identity)
[16:59:44.645] future_lapply() ...
[16:59:44.649] Number of chunks: 1
[16:59:44.649] getGlobalsAndPackagesXApply() ...
[16:59:44.649]  - future.globals: ‘...future.FUN’
[16:59:44.649]  - use_args: TRUE
[16:59:44.649] getGlobalsAndPackagesXApply() ... DONE
> stopifnot(inherits(res, "error"))
> 
> ...future.elements_ii <- 42L
> X <- list(function() 2 * ...future.elements_ii)
> res <- tryCatch({
+   y <- future_lapply(X, FUN = function(f) f())
+ }, error = identity)
[16:59:44.650] future_lapply() ...
[16:59:44.653] Number of chunks: 1
[16:59:44.653] getGlobalsAndPackagesXApply() ...
[16:59:44.653]  - future.globals: TRUE
[16:59:44.654]  - globals found/used: [n=1] ‘FUN’
[16:59:44.655]  - needed namespaces: [n=0] 
[16:59:44.655] Finding globals ... DONE
[16:59:44.655]  - use_args: TRUE
[16:59:44.655]  - Getting '...' globals ...
[16:59:44.655]    - '...' content: [n=0] 
[16:59:44.655] List of 1
[16:59:44.655]  $ ...: list()
[16:59:44.655]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:44.655]  - attr(*, "where")=List of 1
[16:59:44.655]   ..$ ...:<environment: 0x562fba19a930> 
[16:59:44.655]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:44.655]  - attr(*, "resolved")= logi TRUE
[16:59:44.655]  - attr(*, "total_size")= num NA
[16:59:44.658]  - Getting '...' globals ... DONE
[16:59:44.658] Globals to be used in all futures (chunks): [n=2] ‘...future.FUN’, ‘...’
[16:59:44.658] List of 2
[16:59:44.658]  $ ...future.FUN:function (f)  
[16:59:44.658]  $ ...          : list()
[16:59:44.658]   ..- attr(*, "class")= chr [1:2] "DotDotDotList" "list"
[16:59:44.658]  - attr(*, "where")=List of 2
[16:59:44.658]   ..$ ...future.FUN:<environment: R_EmptyEnv> 
[16:59:44.658]   ..$ ...          :<environment: 0x562fba19a930> 
[16:59:44.658]  - attr(*, "class")= chr [1:3] "FutureGlobals" "Globals" "list"
[16:59:44.658]  - attr(*, "resolved")= logi FALSE
[16:59:44.658]  - attr(*, "total_size")= num 336
[16:59:44.661] Packages to be attached in all futures: [n=0] 
[16:59:44.661] getGlobalsAndPackagesXApply() ... DONE
[16:59:44.661] Number of futures (= number of chunks): 1
[16:59:44.661] Launching 1 futures (chunks) ...
[16:59:44.661] Chunk #1 of 1 ...
[16:59:44.661]  - Finding globals in 'X' for chunk #1 ...
[16:59:44.662]    + additional globals found: [n=1] ‘...future.elements_ii’
[16:59:44.663]    + additional namespaces needed: [n=0] 
> stopifnot(inherits(res, "error"))
> 
> message("*** future_lapply() - globals exceptions ... DONE")
*** future_lapply() - globals exceptions ... DONE
> 
> source("incl/end.R")
> 
