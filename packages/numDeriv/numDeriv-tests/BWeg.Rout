
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> if(!require("numDeriv"))stop("this test requires numDeriv.")
Loading required package: numDeriv
> Sys.info()
                                                      sysname 
                                                      "Linux" 
                                                      release 
                                           "6.8.0-48-generic" 
                                                      version 
"#48-Ubuntu SMP PREEMPT_DYNAMIC Fri Sep 27 14:04:52 UTC 2024" 
                                                     nodename 
                                               "99adafdbb12a" 
                                                      machine 
                                                     "x86_64" 
                                                        login 
                                                    "unknown" 
                                                         user 
                                                    "rstudio" 
                                               effective_user 
                                                    "rstudio" 
>   
> 
> #######################################################################
> 
> # Test gradient and hessian calculation in genD using  data for calculating 
> #   curvatures in Bates and Watts.
> #model A p329,data set 3 (table A1.3, p269) Bates & Watts (Puromycin example)
> 
> #######################################################################
>   
> 
> 
> puromycin <- function(th){
+    x <- c(0.02,0.02,0.06,0.06,0.11,0.11,0.22,0.22,0.56,0.56,1.10,1.10)
+    y <- c(76,47,97,107,123,139,159,152,191,201,207,200)
+    ( (th[1] * x)/(th[2] + x) ) - y
+   }
> 
> D.anal <- function(th){
+   # analytic derivatives. Note numerical approximation gives a very good
+   # estimate of these, but neither give D below exactly. The results are very
+   # sensitive to th, so rounding error in the reported value of th could explain
+   # the difference. But more likely th is correct and D has been rounded for
+   # publication - and the analytic D with published th seems to work best.
+   # th = c(212.70188549 ,  0.06410027) is the nls est of th for BW published D.
+   x <- c(0.02,0.02,0.06,0.06,0.11,0.11,0.22,0.22,0.56,0.56,1.10,1.10)
+   y <- c(76,47,97,107,123,139,159,152,191,201,207,200)
+   cbind(x/(th[2]+x), -th[1]*x/(th[2]+x)^2, 0, -x/(th[2]+x)^2, 2*th[1]*x/(th[2]+x)^3)
+  }
> 
> # D matrix from p235. This may be useful for rough comparisons, but rounding
> # used for publication introduces substantial errors. check D.anal1 - D.BW
> D.BW <- t(matrix(c(
+ 0.237812, -601.458, 0, -2.82773, 14303.4,
+ 0.237812, -601.458, 0, -2.82773, 14303.4,
+ 0.483481, -828.658, 0, -3.89590, 13354.7,
+ 0.483481, -828.658, 0, -3.89590, 13354.7,
+ 0.631821, -771.903, 0, -3.62907, 8867.4,
+ 0.631821, -771.903, 0, -3.62907, 8867.4,
+ 0.774375, -579.759, 0, -2.72571, 4081.4,
+ 0.774375, -579.759, 0, -2.72571, 4081.4,
+ 0.897292, -305.807, 0, -1.43774,  980.0,
+ 0.897292, -305.807, 0, -1.43774,  980.0,
+ 0.944936, -172.655, 0, -0.81173,  296.6,
+ 0.944936, -172.655, 0, -0.81173,  296.6),   5,12))
> 
> cat("\nanalytic D:\n")

analytic D:
> print( D.anal <- D.anal(c(212.7000, 0.0641)), digits=16)
                    [,1]               [,2] [,3]                [,4]
 [1,] 0.2378121284185493 -601.4582605781859    0 -2.8277304211480296
 [2,] 0.2378121284185493 -601.4582605781859    0 -2.8277304211480296
 [3,] 0.4834810636583400 -828.6577134579284    0 -3.8958989819366638
 [4,] 0.4834810636583400 -828.6577134579284    0 -3.8958989819366638
 [5,] 0.6318207926479035 -771.9028293866115    0 -3.6290683092929550
 [6,] 0.6318207926479035 -771.9028293866115    0 -3.6290683092929550
 [7,] 0.7743752199929602 -579.7592724128920    0 -2.7257135515415705
 [8,] 0.7743752199929602 -579.7592724128920    0 -2.7257135515415705
 [9,] 0.8972921006248998 -305.8068094903319    0 -1.4377377032925807
[10,] 0.8972921006248998 -305.8068094903319    0 -1.4377377032925807
[11,] 0.9449360020616785 -172.6551736436036    0 -0.8117309527202804
[12,] 0.9449360020616785 -172.6551736436036    0 -0.8117309527202804
                     [,5]
 [1,] 14303.4069103016827
 [2,] 14303.4069103016827
 [3,] 13354.6770903775723
 [4,] 13354.6770903775723
 [5,]  8867.3501365492411
 [6,]  8867.3501365492411
 [7,]  4081.3746737971974
 [8,]  4081.3746737971974
 [9,]   979.9929802606373
[10,]   979.9929802606373
[11,]   296.6328900328213
[12,]   296.6328900328213
> 
> 
> cat("\n********** note the results here are better with d=0.01 ********\n")

********** note the results here are better with d=0.01 ********
> cat("\n**********    in both relative and absolute terms.      ********\n")

**********    in both relative and absolute terms.      ********
> 
> cat("\nnumerical D:\n")

numerical D:
> print( D.calc <- genD(puromycin,c(212.7000, 0.0641), method.args=list(d=0.01)),
+       digits=16) 
$D
                    [,1]               [,2]                   [,3]
 [1,] 0.2378121284185477 -601.4582605781601  1.455964067610916e-13
 [2,] 0.2378121284185477 -601.4582605781601  1.455964067610916e-13
 [3,] 0.4834810636583228 -828.6577134579915 -4.727974818167451e-14
 [4,] 0.4834810636583228 -828.6577134579915 -4.727974818167451e-14
 [5,] 0.6318207926479518 -771.9028293867373  5.339912503786565e-13
 [6,] 0.6318207926479518 -771.9028293867373  5.339912503786565e-13
 [7,] 0.7743752199929665 -579.7592724128276 -2.215961200865884e-18
 [8,] 0.7743752199929665 -579.7592724128276 -2.215961200865884e-18
 [9,] 0.8972921006248310 -305.8068094903045  4.690968266112990e-14
[10,] 0.8972921006248310 -305.8068094903045  4.690968266112990e-14
[11,] 0.9449360020616904 -172.6551736435478  5.339912503786565e-13
[12,] 0.9449360020616904 -172.6551736435478  5.339912503786565e-13
                     [,4]                [,5]
 [1,] -2.8277304211582113 14303.4069104892242
 [2,] -2.8277304211582113 14303.4069104892242
 [3,] -3.8958989814770248 13354.6770916984806
 [4,] -3.8958989814770248 13354.6770916984806
 [5,] -3.6290683114097981  8867.3501452073524
 [6,] -3.6290683114097981  8867.3501452073524
 [7,] -2.7257135514685134  4081.3746718807161
 [8,] -2.7257135514685134  4081.3746718807161
 [9,] -1.4377377028764460   979.9929782692627
[10,] -1.4377377028764460   979.9929782692627
[11,] -0.8117309546727866   296.6328968268606
[12,] -0.8117309546727866   296.6328968268606

$p
[1] 2

$f0
 [1] -25.4173602853745635   3.5826397146254365   5.8364222401289112
 [4]  -4.1635777598710888  11.3882825962090521  -4.6117174037909479
 [7]   5.7096092925026198  12.7096092925026198  -0.1459701970838125
[10] -10.1459701970838125  -6.0121123614810017   0.9878876385189983

$func
function (th) 
{
    x <- c(0.02, 0.02, 0.06, 0.06, 0.11, 0.11, 0.22, 0.22, 0.56, 
        0.56, 1.1, 1.1)
    y <- c(76, 47, 97, 107, 123, 139, 159, 152, 191, 201, 207, 
        200)
    ((th[1] * x)/(th[2] + x)) - y
}
<bytecode: 0x56262731a900>

$x
[1] 212.7000   0.0641

$d
[1] 0.01

$method
[1] "Richardson"

$method.args
$method.args$eps
[1] 1e-04

$method.args$d
[1] 0.01

$method.args$zero.tol
[1] 1.781029417119017e-05

$method.args$r
[1] 4

$method.args$v
[1] 2


attr(,"class")
[1] "Darray"
> 
> # increasing r does not always help
> #D.calc <- genD(puromycin,c(212.7000, 0.0641), r=10)#compares to 0.01 below
> #D.calc <- genD(puromycin,c(212.7000, 0.0641), d=0.001)
> 
> 
> cat("\ndiff. between analytic and numerical D:\n")

diff. between analytic and numerical D:
> print( D.calc$D - D.anal, digits=16)
                        [,1]                   [,2]                   [,3]
 [1,] -1.665334536937735e-15  2.580691216280684e-11  1.455964067610916e-13
 [2,] -1.665334536937735e-15  2.580691216280684e-11  1.455964067610916e-13
 [3,] -1.726396803292118e-14 -6.309619493549690e-11 -4.727974818167451e-14
 [4,] -1.726396803292118e-14 -6.309619493549690e-11 -4.727974818167451e-14
 [5,]  4.829470157119431e-14 -1.257376425201073e-10  5.339912503786565e-13
 [6,]  4.829470157119431e-14 -1.257376425201073e-10  5.339912503786565e-13
 [7,]  6.328271240363392e-15  6.434675015043467e-11 -2.215961200865884e-18
 [8,]  6.328271240363392e-15  6.434675015043467e-11 -2.215961200865884e-18
 [9,] -6.883382752675971e-14  2.734168447204866e-11  4.690968266112990e-14
[10,] -6.883382752675971e-14  2.734168447204866e-11  4.690968266112990e-14
[11,]  1.187938636348917e-14  5.582023732131347e-11  5.339912503786565e-13
[12,]  1.187938636348917e-14  5.582023732131347e-11  5.339912503786565e-13
                        [,4]                   [,5]
 [1,] -1.018163331423239e-11  1.875414454843849e-07
 [2,] -1.018163331423239e-11  1.875414454843849e-07
 [3,]  4.596389935329626e-10  1.320908268098719e-06
 [4,]  4.596389935329626e-10  1.320908268098719e-06
 [5,] -2.116843145216762e-09  8.658111255499534e-06
 [6,] -2.116843145216762e-09  8.658111255499534e-06
 [7,]  7.305711591243380e-11 -1.916481323860353e-06
 [8,]  7.305711591243380e-11 -1.916481323860353e-06
 [9,]  4.161346822684209e-10 -1.991374574572546e-06
[10,]  4.161346822684209e-10 -1.991374574572546e-06
[11,] -1.952506156754907e-09  6.794039336455171e-06
[12,] -1.952506156754907e-09  6.794039336455171e-06
> 
> cat("\nmax. abs. diff. between analtic and numerical D:\n")

max. abs. diff. between analtic and numerical D:
> print( max(abs(D.calc$D - D.anal)), digits=16)
[1] 8.658111255499534e-06
> 
> # These are better tests except for 0 column, so add an epsilon
> cat("\nrelative diff. between numerical D and analytic D (plus epsilon):\n")

relative diff. between numerical D and analytic D (plus epsilon):
> print(z <- (D.calc$D - D.anal) / (D.anal + 1e-4), digits=16)
                        [,1]                   [,2]                   [,3]
 [1,] -6.999788316835946e-15 -4.290724418469686e-14  1.455964067610916e-09
 [2,] -6.999788316835946e-15 -4.290724418469686e-14  1.455964067610916e-09
 [3,] -3.570025654502992e-14  7.614266002118901e-14 -4.727974818167451e-10
 [4,] -3.570025654502992e-14  7.614266002118901e-14 -4.727974818167451e-10
 [5,]  7.642524527295207e-14  1.628931181782763e-13  5.339912503786565e-09
 [6,]  7.642524527295207e-14  1.628931181782763e-13  5.339912503786565e-09
 [7,]  8.171044181918325e-15 -1.109887574225532e-13 -2.215961200865884e-14
 [8,]  8.171044181918325e-15 -1.109887574225532e-13 -2.215961200865884e-14
 [9,] -7.670429400796732e-14 -8.940838648575520e-14  4.690968266112990e-10
[10,] -7.670429400796732e-14 -8.940838648575520e-14  4.690968266112990e-10
[11,]  1.257030032461542e-14 -3.233049347657062e-13  5.339912503786565e-09
[12,]  1.257030032461542e-14 -3.233049347657062e-13  5.339912503786565e-09
                        [,4]                   [,5]
 [1,]  3.600765233703562e-12  1.311166251154796e-11
 [2,]  3.600765233703562e-12  1.311166251154796e-11
 [3,] -1.179832418623583e-10  9.890978638184320e-11
 [4,] -1.179832418623583e-10  9.890978638184320e-11
 [5,]  5.833181678098464e-10  9.764034378401713e-10
 [6,]  5.833181678098464e-10  9.764034378401713e-10
 [7,] -2.680391571692681e-11 -4.695675918233090e-10
 [8,] -2.680391571692681e-11 -4.695675918233090e-10
 [9,] -2.894572682083667e-10 -2.032029220086864e-09
[10,] -2.894572682083667e-10 -2.032029220086864e-09
[11,]  2.405657583918952e-09  2.290385616145877e-08
[12,]  2.405657583918952e-09  2.290385616145877e-08
> #  d=0.0001 [12,] 1.184044172787111e-04 7.451545953037876e-03
> #  d=0.01   [12,] 1.593395089728741e-08  2.814629092064831e-07
> 
> 
> cat("\nmax. abs. relative diff. between analtic and numerical D:")

max. abs. relative diff. between analtic and numerical D:> print( max(abs(z)), digits=16)
[1] 2.290385616145877e-08
> 
> if(max(abs(z)) > 1e-6)  stop("BW test FAILED")
> 
> 
