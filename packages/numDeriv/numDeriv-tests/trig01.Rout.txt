
R version 4.4.0 (2024-04-24) -- "Puppy Cup"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> if(!require("numDeriv"))stop("this test requires numDeriv.")
Loading required package: numDeriv
> 
> ###################################################################
> # 3 test functions to test the accuracy of numerical derivatives
> #  in "numDeriv" package written by Paul Gilbert
> #  Author:  Ravi Varadhan
> #  March 27, 2006
> ###################################################################
> options(digits=12)
> 
> 
> ###################################################################
> #         asin test
> ###################################################################
> func1 <- function(x){asin(x)}
> 
> x <- c(0.9,0.99,0.999)
> exact <- 1/sqrt(1 - x^2)
> 
> # With d = 0.0001
> print(g.calcS <- grad(func1, x,method.args=list(d=0.0001)))
[1]  2.29415733871  7.08881205004 22.36627204226
> rel.err <- g.calcS/exact - 1
> cbind(x, g.calcS, exact, rel.err)
         x        g.calcS          exact            rel.err
[1,] 0.900  2.29415733871  2.29415733871  1.65578661893e-12
[2,] 0.990  7.08881205004  7.08881205008 -6.68065602838e-12
[3,] 0.999 22.36627204226 22.36627204213  5.73763259126e-12
> if(any(rel.err > 1e-10)) stop("trig01 test 1 FAILED")
> 
> 
> ###################################################################
> #         sin test
> ###################################################################
> func2 <- function(x){sin(1/x)}
> 
> x <- c(0.1,0.01,0.001,0.0001)
> exact <- cos(1/x) * (-1/x^2)
> 
> # With d = 0.0001
> print(g.calcS <- grad(func2, x,method.args=list(d=0.0001)))
[1]  8.39071529064e+01 -8.62318872282e+03 -5.62379076285e+05  9.52155367631e+07
> 
> rel.err <- g.calcS/exact - 1
> cbind(x, g.calcS, exact, rel.err)
         x            g.calcS              exact            rel.err
[1,] 1e-01  8.39071529064e+01  8.39071529076e+01 -1.42841294348e-11
[2,] 1e-02 -8.62318872282e+03 -8.62318872288e+03 -6.34825525481e-12
[3,] 1e-03 -5.62379076285e+05 -5.62379076291e+05 -1.09325881681e-11
[4,] 1e-04  9.52155367631e+07  9.52155368259e+07 -6.59137522341e-10
> if(any(rel.err > 1e-10)) stop("trig02 test 1 FAILED")
> 
> 
> 
> ###################################################################
> #         power test
> ###################################################################
> func3 <- function(x){(x-100)^2 + 1.e-06 * (x - 300)^3}
> 
> x <- c(100.001,300.001)
> exact <- 2*(x-100) + 3.e-06*(x-300)^2
> 
> # With d = 0.0001
> print(g.calcS <- grad(func3, x,method.args=list(d=0.0001)))
[1]   0.1219988 400.0020000
> 
> rel.err <- g.calcS/exact - 1
> cbind(x, g.calcS, exact, rel.err)
           x     g.calcS            exact            rel.err
[1,] 100.001   0.1219988   0.121998800003 -2.73010503093e-11
[2,] 300.001 400.0020000 400.002000000003  1.77635683940e-13
> if(any(rel.err > 1e-10)) stop("trig03 test 1 FAILED")
> 
